Daniel Watzenig 
Martin Horn   Editors
Automated
Driving
Safer and More Eﬃ   cient Future DrivingAutomated DrivingDaniel Watzenig • Martin Horn
Editors
Automated Driving
Safer and More Efﬁcient Future Driving
123Editors
Daniel Watzenig
Virtual Vehicle Research Center
and Graz University of Technology
Institute of Electrical Measurement
and Measurement Signal Processing
Graz, AustriaMartin Horn
Institute of Automation and ControlGraz University of TechnologyGraz, Austria
ISBN 978-3-319-31893-6 ISBN 978-3-319-31895-0 (eBook)
DOI 10.1007/978-3-319-31895-0
Library of Congress Control Number: 2016949638
© Springer International P ublishing Switzerland 2017
This work is subject to copyright. All rights are rese rved by the Publisher, whether the whole or part of
the material is concerned, speciﬁcally the rights of tra nslation, reprinting, reuse of illustrations, recitation,
broadcasting, reproduction on microﬁlms or in any oth er physical way, and transmission or information
storage and retrieval, electronic adaptation, com puter software, or by similar or dissimilar methodology
now known or hereafter developed.The use of general descriptive names, registered names, trademarks, service marks, etc. in this publication
does not imply, even in the absence of a speciﬁc statement, that such names are exempt from the relevant
protective laws and regulations an d therefore free for general use.
The publisher, the authors and the editors are safe t o assume that the advice and information in this book
are believed to be true and accurate at the date of pub lication. Neither the publisher nor the authors or
the editors give a warranty, express or implied, with respect to the material contained herein or for anyerrors or omissions that may have been made.
Printed on acid-free paperThis Springer imprint is published by Springer Nature
The registered company is Springer Int ernational Publishing AG SwitzerlandForeword
Automation of processes and products is a key step into next generation of our
economy. Due to the high economic impact of transportation industry and especiallyof the automotive sector, automated driving and all related ingredients act asstrong technology drivers for many other a pplication domains. Therefore, this book
with a comprehensive treatment of the relevant elements is very helpful for theadvancement of the domain itself, but will also help to spread the technologicaland procedural essentials towards other applications.
Automation of vehicles is enabled by digitization, which means by the pervasive
penetration of interconnected digital technology into our products and systems. Thisallows us to provide better integration, achieve higher performance, and providethe required intelligence and communication to the environment, especially to thehuman user.
In aeronautic systems, a high degree of automation already exists and has a
certain track record, ranging from many assi stance systems up to fully automated
aircrafts, including all phases of operation, from taxiing to take-off, cruising, andlanding. Sense and avoid is implemented, but based on well-established proceduralrules and safety margins. Further on the participants (pilots) are well trained andsubject to regular checks. Automotive automation could learn a lot from this
profound source of experience, but it has to adapt to its own requirements andoperational conditions: The distances are much shorter, the reaction time is veryshort, and the analysis of the environmental situation is much more complex.
New technologies will gain relevance in the automated vehicles: Software will
play a key role, especially in embedded real-time systems. Smart components andsubsystems will exchange huge amounts of data, on board of the vehicle, andalso with the infrastructure. We will need communication links with high levels ofavailability and high immunity against unde sired penetration from outside. Thus,
safety and security will become mutually dependent couples. High performancecomputing capacities will be needed to process the incoming information and drivethe decisions to control the vehicle in a safe way. Despite all this high tech, thehuman user shall always understand what is going on and have the chance to controlthe system as ultima ratio decider.
vvi Foreword
Mastering this chain of new technologies will be a key enabler for families
of products in many other domains. This book will provide the reader withconsiderations and key insight how to ach ieve the different steps. Therefore, we
have to thank the editors and the authors for this comprehensive work!
Heinrich Daembkes
Vice President at Air bus Defence and Space
Former Vice President at Daimler Resear ch Centre for High Frequency Electronics
President of the ARTEMIS Industry AssociationProfessor at the University of UlmPreface
Automated vehicle technology has the potential to be a game changer on the
roads, altering the face of motoring as we experience it today. Many beneﬁts areexpected, ranging from improved safety, reduced congestion, lower stress for caroccupants, social inclusion, lower emissions, and better road utilization due tooptimal integration of private and public transport.
Over the last decade, vehicle automation h as attracted consid erable attention
of the public, governments, the scientiﬁc community, and the industry around theworld, mainly driven by the evolution of d river assistance and active safety. Many
cars sold today are already capable of some level of automation while higherautomated prototype vehicles are continuously tested on public roads, especiallyin the United States, Europe, and Japan. Automated driving technology has arrivedrapidly on the market, and the future deployment is expected to accelerate over the
next years. As a matter of fact, most of the core technologies required for fullyautonomous driving (SAE level 5) are available today, many are mature, and someare already on the way being deployed in commercially available vehicles.
During the last three years, public aut horities from many countries presented
action and innovation plans to facilitate th e development and stepwise introduction
of automated vehicles. Those plans cover actions for a multitude of technical andnon-technical aspects that need to be taken i nto account. In particular, road safety is
expected to substantially improve with vehicle automation since more than 90 % ofthe crashes involve human errors. However, most often driving involves no crashes.The ultimate safety test for automated vehicles will have to point out how well theycan replicate the crash-free performance of human drivers especially at the level ofpartial and conditional automation within mixed trafﬁc.
In order to move towards a signiﬁcant marke t penetration of automated vehicles,
different technological conﬁgurations have to be considered. Most of the state-of-practice vehicles and prototypes rely on in-vehicle sensor platforms and require littledigital infrastructure communication, while a greater connectivity between vehiclesand their infrastructure is identiﬁed to be beneﬁcial. This entails the development ofcommon communication protocols, encrypted security standards, and investment in
new types of infrastructure or upgrading existing ones. Nevertheless, both models
viiviii Preface
require accurate digital representations of their environment at any time, for any
weather condition, and in any trafﬁc situation.
Beyond the technical issues, several action items for faster introduction of
automated vehicles have to be solved by the governments in order to ensure thefull compatibility with the public expectations regard ing legal responsibility, safety,
and privacy. Authorities have to create the legal framework to remove liability traps,to encourage test regions, to review long-term infrastructure investments, to provideopen access, and to set up legal frameworks for inter-car communication.
The challenging technical topics still to be solved and the constant endeavours
around the world to drive this exciting technology forward have motivated thecreation of this book. In order to get a balanced view on the state of development, theeditors have invited authors from different stakeholders including public authorities,car manufacturers, suppliers, and research organizations. Within this book, thestate of practice and the state of the art of automated driving building blocks areextensively reviewed and future trends are envisioned. The book encompasses theimportance of control engineering, recen t advances in environment sensing and
perception, in-vehicle architectures, and dependable power computing as well asactive and functional safety in automated driving. Furthermore, we have put a strongfocus on the validation and testing of automated driving functions. A sampling ofrelevant industrially driven research proj ects and industrial initiatives concludes the
book.
We strongly believe that this book on automated driving provides an overview
of current and emerging technical challenges in that ﬁeld and gives deep insightsinto industrial demands. We hope that the reader will be inspired by the differenttechnical articles, selected project summaries, and introductions of renownednational and European initiatives.
Finally, we would like to express our sincere appreciation and gratitude to all
authors and co-authors, who made the publication of this book possible. We aregrateful to Silvia Schilgerius at Springer for her professionalism and support.
Graz, Austria Martin Horn
Daniel WatzenigContents
Part I Introduction
1 Introduction to Automated Driving ...................................... 3
Daniel Watzenig and Martin Horn
2 Privacy and Security in Autonomous Vehicles .......................... 17
Patrick Pype, Gerardo Daalderop, Eva Schulz-Kamm,
Eckhard Walters, and Maximilian von Grafenstein
3 Automated Driving from the View of Technical Standards ............ 29
Stephanie Grubmüller, Jiri Plihal, and Pavel Nedoma
Part II The Importance of Control for Automated Driving
4 Survey on Control Schemes for Automated Driving on Highways .... 43
Astrid Rupp and Michael Stolz
5 Path Tracking for Automated Driving: A Tutorial
on Control System Formulations and Ongoing Research .............. 71
Aldo Sorniotti, Phil Barber, and Stefano De Pinto
6 Vehicle Reference Lane Calculation for Autonomous
Vehicle Guidance Control .................................................. 141
Werner Kober, Richard Huber, and Ralf Oberfell
Part III Advances in Environment Sensing, Sensor Fusion,
and Perception
7 The Role of Multisensor Environmental Perception
for Automated Driving ..................................................... 161
Robin Schubert and Marcus Obst
ixx Contents
8 Galileo-Based Advanced Driver Assistance Systems: Key
Components and Development ............................................ 183
Dirk Abel, Bassam Alrifaee, Frank-Josef Heßeler,
Matthias Hoppe, and Matthias Reiter
9 Digital Maps for Driving Assistance Systems
and Autonomous Driving .................................................. 201
Alexandre Armand, Javier Ibanez-Guzman,
and Clément Zinoune
10 Radar Sensors in Cars ..................................................... 245
Holger H. Meinel and Wolfgang Bösch
Part IV In-Vehicle Architectures and Dependable Power
Computing
11 System Architecture and Safety Requirements for
Automated Driving ......................................................... 265
Jan Becker, Michael Helmle, and Oliver Pink
12 Advanced System-Level De sign for Automated Driving ............... 285
Jan Micha Borrmann, Sebastian Ottlik, Alexander Viehl,
Oliver Bringmann, and Wolfgang Rosenstiel
13 Systems Engineering and Architecting for Intelligent
Autonomous Systems ....................................................... 313
Sagar Behere and Martin Törngren
14 Open Dependable Power Computing Platform
for Automated Driving ..................................................... 353
Andrea Leitner, Tilman Ochs, Lukas Bulwahn,
and Daniel Watzenig
Part V Active and Functional Safety in Automated Driving
15 Active Safety Towards Highly Automated Driving ..................... 371
Klaus Kompass, Markus Schratter, and Thomas Schaller
16 Functional Safety of Automated Driving Systems: Does
ISO 26262 Meet the Challenges? .......................................... 387
Helmut Martin, Kurt Tschabuschnig, Olof Bridal,
and Daniel Watzenig
Part VI Validation and Testing of Automated Driving
Functions
17 The New Role of Road Testing for the Safety Validation
of Automated Vehicles ...................................................... 419
Walther Wachenfeld and Hermann WinnerContents xi
18 Validation of Highly Automated Safe and Secure Systems ............ 437
Michael Paulweber
19 Testing and Validating Tactical Lane Change Behavior
Planning for Automated Driving .......................................... 451
Simon Ulbrich, Fabian Schuldt, Kai Homeier,
Michaela Steinhoff, Till Menzel, Jens Krause,
and Markus Maurer
20 Safety Performance Assessment of Assisted
and Automated Driving in Trafﬁc: Simulation as
Knowledge Synthesis ....................................................... 473
Thomas Helmer, Klaus Kompaß, Lei Wang,
Thomas Kühbeck, and Ronald Kates
21 From Controllability to Safety in Use: Safety Assessment
of Driver Assistance Systems .............................................. 495
Alexander Huesmann, Mehdi Farid, and Elke Muhrer
22 Testing Autonomous and Highly Conﬁgurable Systems:
Challenges and Feasible Solutions ........................................ 519
Franz Wotawa
Part VII A Sampling of Automated Driving Research
Projects and Initiatives
European and National Projects
23 AdaptIVe: Automated Driving Applications
and Technologies for Intelligent Vehicles ................................ 535
Aria Etemad
24 When Autonomous Vehicles Are Introduced on a Larger
Scale in the Road Transport System: The Drive Me Project .......... 541
Trent Victor, Marcus Rothoff, Erik Coelingh,
Anders Ödblom, and Klaas Burgdorf
25 Functional Safety and Evolvable Architectures for Autonomy ........ 547
Rolf Johansson, Jonas Nilsson, Carl Bergenhem,
Sagar Behere, Jörgen Tryggvesson, Stig Ursing,
Andreas Söderberg, Martin Törngren, and Fredrik Warg
26 Challenges for Automated Cooperative Driving: The
AutoNet2030 Approach .................................................... 561
Marcus Obst, Ali Marjovi, Milos Vasic,
Iñaki Navarro, Alcherio Martinoli, Angelos Amditis,
Panagiotis Pantazopoulos, Ignacio Llatser,
Arnaud de La Fortelle, and Xiangjun Qianxii Contents
27 Architecture and Safety for Autonomous Heavy
Vehicles: ARCHER ......................................................... 571
Viktor Kaznov, Johan Svahn, Per Roos, Fredrik Asplund,
Sagar Behere, and Martin Törngren
28 Affordable Safe and Secure Mobility Evolution ........................ 583
Alexander Viehl, Udo Gleich, and Hendrik Post
29 UFO: Ultraﬂat Overrunable Robot for Experimental
ADAS Testing ............................................................... 589
Hermann Steffan, Christian Ellersdorfer, Andreas Moser,
and Julian Simader
30 Intelligent Transport Systems: The Trials Making Smart
Mobility a Reality ........................................................... 595
Patrick Pype, Gerardo Daalderop, Eva Schulz-Kamm,
Eckhard Walters, Gert Blom, and Sasha Westermann
European and National Initiatives
31 A Sampling of Automated Driving Research Projects
and Initiatives (EC Funded, National) ................................... 601
ARTEMIS Industry Association
32 ERTRAC: The European Road Transport Research
Advisory Council ........................................................... 607
Josef Affenzeller
33 SafeTRANS: Safety in Transportation Systems ......................... 611
Jürgen Niehaus
34 A3PS: Austrian Association for Advanced Propulsion Systems ....... 617
Wolfgang Kriegler and Stefan WinterContributors
Dirk Abel Institute of Automatic Control RWTH Aachen University, Aachen,
Germany
Josef Affenzeller A VL List GmbH, Graz, Austria
Bassam Alrifaee Institute of Automatic Control RWTH Aachen University,
Aachen, Germany
Angelos Amditis Institute of Communications and Computer Systems, Athens,
Greece
Aria Etemad V olkswagen AG, Wolfsburg, Germany
Alexandre Armand Renault S.A.S., Technocentre de Guyancourt, Research
Department, France
Fredrik Asplund KTH Royal Institute of Technology, Stockholm, Sweden
Phil Barber Jaguar Land Rover, Coventry, UK
Jan Becker Robert Bosch LLC, Palo Alto, CA, USA
Sagar Behere KTH Royal Institute of Technology, Stockholm, Sweden
Carl Bergenhem Qamcom Research and Technology, Gothenburg, Sweden
Gert Blom City of Helmond, Helmond, Netherlands
Jan Micha Borrmann FZI Research Center for Information Technology, Karl-
sruhe, Germany
Wolfgang Bösch TU Graz, Graz, Austria
Olof Bridal VOLVO Group Trucks Technology, Gothenburg, Sweden
Oliver Bringmann Wilhelm-Schickard-Institute for Computer Science, University
of Tübingen, Tübingen, Germany
Lukas Bulwahn Lukas Bulwahn, BMW AG, Munich, Germany
xiiixiv Contributors
Klaas Burgdorf V olvo Car Group, Gothenburg, Sweden
Erik Coelingh V olvo Car Group, Gothenburg, Sweden
Gerardo Daalderop NXP Semiconductors, Leuven, Belgium
Stefano De Pinto University of Surrey, Guildford, UK
Arnaud de La Fortelle Centre for Robotics, MINES ParisTech—PSL Research
University, Paris, France
Christian Ellersdorfer Institute of Vehicle Safety, Graz University of Technology,
Graz, Austria
Mehdi Farid BMW AG, Munich, Germany
Udo Gleich Daimler AG, Ulm, Germany
Stephanie Grubmüller VIRTUAL VEHICLE Research Center, Graz, Austria
Thomas Helmer BMW AG, Munich, Germany
Michael Helmle Robert Bosch GmbH, Gerlingen-Schillerhöhe, Germany
Frank-Josef Heßeler Institute of Automatic Control RWTH Aachen University,
Aachen, Germany
Kai Homeier V olkswagen Group Research, Wolfsburg, Germany
Matthias Hoppe Institute of Automatic Control RWTH Aachen University,
Aachen, Germany
Martin Horn Institute of Automation and Contro l, Graz University of Technology,
Graz, Austria
Richard Huber Kober Engineering Deutschland GmbH, Stuttgart, Germany
Alexander Huesmann BMW AG, Munich, Germany
Javier Ibanez-Guzman Renault, Boulogne-Billancourt, France
Rolf Johansson SP Technical Research Institute of Sweden, Borås, Sweden
Ronald Kates REK Consulting, Otterﬁng, Germany
Viktor Kaznov Scania CV AB, Södertälje, Sweden
Werner Kober Kober Engineering GmbH, Ilz, Austria
Klaus Kompass BMW Group, Munich, Germany
Jens Krause V olkswagen Group Research, Wolfsburg, Germany
Wolfgang Kriegler Austrian Association for Advanced Propulsion Systems,
Vienna, Austria
Thomas Kühbeck BMW AG, Munich, GermanyContributors xv
Andrea Leitner Virtual Vehicle Research Center, Graz, Austria
Ignacio Llatser Technische Universität Dresden, Dresden, Germany
Ali Marjovi École Polytechnique Fédérale de La usanne, Lausanne, Switzerland
Helmut Martin Virtual Vehicle Research Center, Graz, Austria
Alcherio Martinoli École Polytechnique Fédéra le de Lausanne, Lausanne,
Switzerland
Markus Maurer Institute of Control Engineering, Technische Universität Braun-
schweig, Braunschweig, Germany
Holger H. Meinel Daimler AG, Ulm, Germany
Till Menzel Institute of Control Engineering, Technische Universität Braun-
schweig, Braunschweig, Germany
Andreas Moser Dr. Steffan Datentechnik, Linz, Austria
Elke Muhrer BMW AG, Munich, Germany
Iñaki Navarro École Polytechnique Fédérale de La usanne, Lausanne, Switzerland
Pavel Nedoma ŠKODA AUTO a.s., Mladá Boleslav, Czech Republic
Jürgen Niehaus SafeTRANS, Oldenburg, Germany
Jonas Nilsson V olvo Car Corporation, Gothenburg, Sweden
Ralf Oberfell Daimler AG, Stuttgart, Germany
Marcus Obst BASELABS GmbH, Chemnitz, Germany
Tilman Ochs BMW AG, Munich, Germany
Anders Ödblom V olvo Car Group, Gothenburg, Sweden
Sebastian Ottlik FZI Research Center for Information Technology, Karlsruhe,
Germany
Panagiotis Pantazopoulos Institute of Communications and Computer Systems,
Athens, Greece
Michael Paulweber A VL List GmbH, Graz, Germany
Oliver Pink Robert Bosch GmbH, Gerlingen-Schillerhöhe, Germany
Jiri Plihal ÚTIA A V ˇCR, v.v.i., Praha 8, Czech Republic
Hendrik Post Robert Bosch GmbH, Gerlingen-Schillerhöhe, Germany
Patrick Pype NXP Semiconductors, Leuven, Belgium
Xiangjun Qian Centre for Robotics, MINES Paris Tech—PSL Research Univer-
sity, Paris, Francexvi Contributors
Matthias Reiter Institute of Automatic Control RWTH Aachen University,
Aachen, Germany
Per Roos Scania CV AB, Södertälje, Sweden
Wolfgang Rosenstiel Wilhelm-Schickard-Institute for Computer Science, Univer-
sity of Tübingen, Tübingen, Germany
Marcus Rothoff V olvo Car Group, Gothenburg, Sweden
Astrid Rupp Institute of Automation and Contro l, Graz University of Technology,
Graz, Austria
Thomas Schaller BMW Group, Munich, Germany
Markus Schratter Virtual Vehicle Research Center, Graz, Austria
Robin Schubert BASELABS GmbH, Chemnitz, Germany
Fabian Schuldt Institute of Control Engineering, Technische Universität Braun-
schweig, Braunschweig, Germany
Eva Schulz-Kamm NXP Semiconductors, Leuven, Belgium
Julian Simader Dr. Steffan Datentechnik, Linz, Austria
Andreas Söderberg SP Technical Research Institute of Sweden, Borås, Sweden
Aldo Sorniotti University of Surrey, Guildford, UK
Hermann Steffan Institute of Vehicle Safety, Graz University of Technology,
Graz, Austria
Michaela Steinhoff IA V GmbH, Berlin, Germany
Michael Stolz VIRTUAL VEHICLE Research Center, Graz, Austria
Johan Svahn Scania CV AB, Södertälje, Sweden
Martin Törngren KTH Royal Institute of Technology, Stockholm, Sweden
Jörgen Tryggvesson Comentor, Gothenburg, Sweden
Kurt Tschabuschnig Magna Steyr Engineering AG & Co KG, Graz, Austria
Simon Ulbrich Institute of Control Engineering, Technische Universität Braun-
schweig, Braunschweig, Germany
Stig Ursing Semcon, Gothenburg, Sweden
Milos Vasic École Polytechnique Fédérale de La usanne, Lausanne, Switzerland
Trent Victor V olvo Car Group, Gothenburg, Sweden
Alexander Viehl FZI Research Center for Information Technology, Karlsruhe,
GermanyContributors xvii
Maximilian von Grafenstein Alexander von Humboldt Institute für Internet und
Gesellschaft, Berlin, Germany
Walther Wachenfeld Institute of Automotive Engineering at TU Darmstadt,
Darmstadt, Germany
Eckhard Walters NXP Semiconductors, Leuven, Belgium
Lei Wang BMW AG, Munich, Germany
Fredrik Warg SP Technical Research Institute of Sweden, Borås, Sweden
Daniel Watzenig Virtual Vehicle Research Center and Graz University of Technol-
ogy, Institute of Electrical Measurement and Measurement Signal Processing, Graz,Austria
Sasha Westermann Hamburg Port Authorities, Hamburg, Germany
Hermann Winner Institute of Automotive Engineering at TU Darmstadt, Darm-
stadt, Germany
Stefan Winter Austrian Association for Advanced Propulsion Systems, Vienna,
Austria
Franz Wotawa Institute for Software Technology, Technische Universität Graz,
Graz, Austria
Clément Zinoune Renault, Boulogne-Billancourt, FrancePart I
IntroductionChapter 1
Introduction to Automated Driving
Daniel Watzenig and Martin Horn
1.1 Introduction
Innovation and action plans of public authorities (see, e.g., www.gov.uk ) around the
world aim to clear the way for a stepwise introduction of automated vehicles. The
plans comprise a number of aspects like standardization, testing, safety, or in-vehicle
technology. It is expected that automated driving will [ 1].
 Improve safety by reducing human driving errors
 Signiﬁcantly contribute to the optimization of trafﬁc ﬂow
 Help to reduce fuel consumption and CO 2emissions
 Enhance the mobility of elderly people and unconﬁdent drivers
Several forecasts predict a limited availability of automated driving functions in
2020 (partial and conditional a utomation) and a wide av ailability by 2040 including
high and full automation [ 2–4]; see Sect. 1.2Today’s advanced driver assistance
systems (ADAS) like Automatic Cruise Control (ACC), Lane Departure Warning
(LDW), or Pedestrian Detection (PD) will form the backbone of tomorrow’s
mobility. Vehicles will communicate with each other and with infrastructure [ 5].
Vehicle-to-Vehicle (V2V) communication allows vehicles to exchange relevant
information like lo cal trafﬁc data (e.g., nearby accidents) and about their driving
intention. Vehicle-to-Infrastructure (V2I) communication will be used to optimize
the road network usage and thereby helps to reduce environmental pollution. The
D. Watzenig (/envelopeback)
Virtual Vehicle Research Center and Graz U niversity of T echnology, I nstitute of Electrical
Measurement and Measurement Signal Processing, Graz, Austria
e-mail: daniel.watzenig@v2c2.at
M. Horn
Institute of Automation and C ontrol, Graz University of Technology, Graz, Austria
e-mail: martin.horn@tugraz.at
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_134 D. Watzenig and M. Horn
role allocation between human drivers a nd automated driving systems in this
scenario is speciﬁed by the six levels of driving automation (see www.sae.org )
This chapter is organ ized as follows: Sect. 1.2brieﬂy introduces the different
levels of automation as deﬁned by SAE J3016 [ 6]. The three layers specifying
the key technologies of automate d vehicles are outlined in Sect. 1.3. Section 1.4
summarizes the research challenges, whic h have to be mastered in order to enable
automated driving; Sect. 1.5concludes the chapter and gives an overview of the
topics covered by the book.
1.2 Levels of Automation
Figure 1.1brieﬂy summarizes the levels of automation according to the deﬁnitions
of SAE J3016 [ 6]. They span from no automation tofull automation . The table
gives a narrative deﬁnition of the respective levels as well as responsibilities
(steering, monitoring, fallback scenario) and speciﬁes minimum requirements. The
term “system” in this context refers to the respective driver assistance or automated
driving system. It should be noted that warning and momentary intervention systems
are excluded as they have no impact on the driver’s role in performing the driving
task. Furthermore, the table shows the correspondence between the levels of the
German Federal Highway Research Institute (BASt) and those of the US National
Highway Trafﬁc Safety Administration (NHTSA) in its “Preliminary Statement of
Policy Concerning Automated Vehicles” in 2013.
Between levels 2 (“Partial Automation”) and 3 (“Conditional Automation”) is
a key distinction as in the latter case the system performs the entire dynamic
driving task (execution of steer ing, acceleration, deceleration, and monitoring of
environment).
Fig. 1.1 Summary of levels of driving automation for on-road vehicles [ 6]1 Introduction to Automated Driving 5
Table 1.1 Current and future systems/functions for vehicle automation [ 1–4,7]
Level of
automation
Current and future vehicle automation systems and
functions
Market
introduction
0
 Lane change assist (LCA)
 Available
0
 Lane departure warning (LDW)
 Available
0
 Front collision warning (FCW)
 Available
0
 Park distance control (PDC)
 Available
1
 Adaptive cruise control (ACC)
 Available
1
 Park assist (PA)
 2016
1
 Lane keeping assist (LKA)
 Available
2
 Park assistance
 Available
2
 Trafﬁc jam assist
 2016
3
 Trafﬁc jam chauffeur
 2017
3
 Motorway chauffeur (MWC)
 2019
4
 Highway pilot
 2020C
4
 Piloted parking
 2020C
5
 Robot taxi (fully automated private vehicle)
 2030C
In contrast to level 4 (“High Automation”), the driver is expected to be ready for
taking over control (within a predeﬁned time period) at all times in level 3.
Table 1.1gives a brief overview of already introduced driver assistance systems
(for both passenger and commercial vehicles) and of systems which are on the way
to enter the market. For an in-depth discussion and analysis of the different driver
assistance systems and automated driving functions listed below, the following
supplementary readings are recommended: [ 8–12].
1.2.1 Scenarios and Impact of Automation Levels 2–5
According to [ 7]
Level 2: Partial Automation
 Improved driving comfort (driver is actively engaged)
 Increased safety is expected
 Increase in energy efﬁciency and trafﬁc throughput (if cooperative)
 Scenario: highways with limite d access, trafﬁc jam assistant
Level 3: Conditional Automation
 Improved comfort and convenience
 Impact on safety strongly depends on ability to retake control in emergency
conditions
 Increase in energy efﬁciency and trafﬁc throughput (if cooperative)
 Scenario: trafﬁc jam chau ffeur, highway chauffeur6 D. Watzenig and M. Horn
Level 4: High Automation
 Drastically improved driving comfort
 Increased safety improvement due to automatic transition to minimal risk
conditions
 Further increase in energy efﬁciency and trafﬁc throughput due to close-coupled
platooning (cooperative)
 Scenario: trucks on dedicat ed truck lanes, automated valet parking, highway pilot
Level 5: Full Automation
 Ultimate comfort and convenience
 Efﬁciency gains in energy and road network usage
 Scenario: electronic chauffeur service, driverless urban goods pickup, and deliv-
ery service
1.3 Building Blocks for Automated Driving: Key
Technologies
The building blocks for automated driving are shown in Fig. 1.2. They constitute
three layers covering vehicle control (layer 1), sensing (layer 2), and processing and
decision-making (layer 3).
Vehicles capable of (highly) automated driving are controlled agents integrating
environment perception and modeling, localization and map generation, path
planning, and decision-making; see Fig. 1.3.
The block “Environment Perception and Modeling” provides a real-time model
of the surrounding environment. The required data is collected from the environment
Fig. 1.2 Building blocks for automated driving1 Introduction to Automated Driving 7
Fig. 1.3 Environment perception and modeling based on multi-sensor fusion [ 13]
Fig. 1.4 Control structure for path planning and decision-making based on [ 13]
sensors like cameras, radar, lidar, or u ltrasonic sensors. From the gained data
original data features are extracted such as lane edges, lane markings, trafﬁc signs,
and vehicle types (passenger, commercial :::). Semantic objects are recognized
using classiﬁers, and scenarios, driving context, and vehicle positions can be
computed.
The blocks “Localization and Map Building” symbolize the vehicle’s ability
to generate a global map via combination o f local maps, global information, and
data from environment models. In the context of automated driving, the term
“Localization” refers to the estimation of road geometries or of the vehicle position
with respect to roads in known or unknown maps.
The block “Path Planning and Decision-Making” guarantees that the vehicle is
operated in accordance with the requirements to be met such as safety and legal
aspects. The purpose of the three blocks making up “Path Planning and Decision-
Making” is to ﬁnd an optimal (in the sense of safety, speed, distance, energy saving)
path in the road space from an initial position to the desired destination while avoid-
ing collisions. Figure 1.4illustrates the principal structure of these three blocks. It
includes a strategic component (global path planning, e.g., navigation), a tactical
component (e.g., lane selection), and a reactive component (l ocal path planning,
e.g., obstacle avoidance). Decision-making consists of behavioral reasoning and8 D. Watzenig and M. Horn
Fig. 1.5 Building blocks of automated driving illustrating the interaction between environment,
vehicle, and driver (especially for SAE level 3 and 4)
adaptive mission planning by incorporating new observations and by generating and
implementing new rules.
Finally, vehicle automation requires lateral and longitudinal control of motion
with respect to the desired objectives and c onstraints. This task is reﬂected by the
block labeled “Vehicle Motion Control” in Fig. 1.3.
Putting it all together, the overall vehicle architecture to enable automated driving
which includes additional control blocks, new sensors, and advanced human–
machine interaction (HMI) can be envisioned as shown in Fig. 1.5. The blue boxes
indicate new and emerging technology bricks—compared to conventional driving—
but also those ﬁelds of action where advances are strongly required and expected.
1.4 Enabling Automated Driving: The Research Challenges
Over the last two decades, automated dr iving has been a challenging research
topic. However, despite tremendous improvements in sensor technology, pattern
recognition techniques, robust signal processing, control system design, compu-
tational power (multi-core and many-co re technology), communication bandwidth
(Ethernet:::), V2X, and other system technology areas, market introduction of a
fully automated vehicle that is capable of unsupervised driving in an unstructured
environment still remains a long-term goa l. Even for structured environments,1 Introduction to Automated Driving 9
Fig. 1.6 Overview of the maturity of different automated driving functions according to the SAE
levels [ 17]. Currently, SAE level 2 functions are still limited [The current UN Regulation No. 79
(Steering equipment) allows only corrective steering (lateral assistance) above 10 km/h. Due to
that, steering capabilities of today’s level 2 functions is still limited]
further research is needed to exploit the full potential of road transport automation.
In order to be accepted by drivers and oth er stakeholders, automated vehicles
must be reliable and signiﬁcantly safer than today’s driving baseline. A couple of
roadmaps for automated road transport has been released by different stakeholders
over the last 2 years giving a comprehensive view on the proposed way forward
[2–4,14–16].
As the technology for automated driving becomes more and more advanced, the
research focus is shifting towards the e merging issues for their implementation.
It is common sense from the industrial point of view that automated driving
will be introduced following a stepwise approach. Figure 1.6illustrates that the
maturity of automated driving functions at low speeds in a structured environment
is already quite high while high speed maneuvers in an unstructured and complex
environment—ultimately fu lly automated driving—is still facing many technologi-
cal (and legal) challenges.
Figure 1.7classiﬁes the automated driving roadmap in midterm (3–6 years)
and long-term (7–12 years and beyond) challenges in alignment with the SAE
automation levels. The typical approach to enter the market consists of three steps:
technological research (long-term relevant), followed by piloting, ﬁeld operational
tests, and large-scale demonstrators (midterm scenarios) and completed by indus-
trialization (market introduction). It is worth mentioning that commercial vehicles
follow different roadmaps since other use cases have priority (e.g., platooning).
In the following, we give an overview of ﬁelds of action that have to be addressed
in order to succeed in terms of technol ogy readiness and public acceptance1:
1Without raising a claim of completeness.10 D. Watzenig and M. Horn
Fig. 1.7 Overview of the classiﬁcation of midterm (development, industrial research) and long-
term (applied and fundamental research) challenges [ 17]
1.4.1 Demonstrating Safety, Reliability, and Robustness
Automated vehicles by nature rely on sensing, planning, reasoning, and acting
(or re-acting). A suite of vehicle sensors based on different sensing modalities
(radar, lidar, camera, ultrasonic, GPS :::) along with external sources (V2X) and
detailed digital maps gather raw data of the vehicle environment, driving situation,
and ambient conditions. Sophisticated algorithms interpret the data, process it, and
convert it to commands for the actuators (steering, braking). Within this complex
chain of sensing–processing–controlling–act uating, several types of failures can
occur and have to be avoided:
 Sensors fail to recognize and respond to a h azard (false negative), e.g., the vehicle
should brake but it does not (in terms of an emergency braking system).
 Sensors detect and respond to a nonexistent event (false positive), e.g., the vehicle
brakes without any reason.
 System performance is degraded due to inoperable sensors or the vehicle is
completely inoperable.
Consequently, there is a strong need for an independent and reproducible
validation of automated vehicles. Without a traceable demonstration of the maturity
(technological readiness), reliability, and safety, the societal acceptance will lack.
Reliable and safe enough means rare enough, i. e., the failure probability rate should
be less than 10–n/h. If somehow an adequate sample size ncan be argued—which is
currently not the case—then appropriate safety and reliability can be demonstrated
by driving (testing) in the order of 10nh. For n>5, this becomes effectively
infeasible since effort and related costs increase tremendously.1 Introduction to Automated Driving 11
As a result and based on current fail-sa fe and fault-tolerant architectures,
automated driving needs further explorations in order to ensure a safe and fail-
operational driving (concept of redundancy). For that, we need to:
 Evaluate failure modes and their impact.
 Investigate the enhanced capabilities that can self-detect, self-adapt, self-learn,
and predict failures/situations in an evolving trafﬁc scenario.
 Explore what additional requirements m ight be needed for fail-operational
driving in terms of software, hardware, V2X communication, advanced HMI :::
 Determine required safety levels (update the ISO26262 regarding fail-operational
systems).
 Develop methodologies for testing to dem onstrate safety and reliability (mixed
trafﬁc should have midterm priority ). Recent publications pointed out that
approximately 100 million road driving kilometers are required to prove that
automated vehicles are as safe as manually driven ones [ 18].
 Provide standardized and certiﬁed test pr ocedures and test environments for fail-
operational vehicles for any ambient condition (trafﬁc and weather).
Furthermore, automated driving has to be considered a self-learning and adapting
system based on ﬁeld operational tests in order to enhance the number of relevant
scenarios and to dynamically extend the list of requirements. This feedback loop of
real world data will support agile development and agile validation of automated
driving functions and increases safety and reliability. A set of basic scenarios and
related parameters for each level auf au tomation should be deﬁned in accordance
with certiﬁcation bodies across countries.
1.4.2 Demonstrating Security and Privacy
Consumers expect privacy and security in their cars. Consequently, the collection,
processing, and linking of data have to be in accordance to the laws of privacy.
At present, a lot of personalized data is alr eady collected via navigation systems,
smartphones, or during vehicle maintenance. Automated vehicles are capable of
recording and providing large amounts of data that might assist crash investigations
and accident reconstructions. Such data i s of high relevance for improving active
safety systems and system reliability but also for resolving liability issues. Existing
accident data bases such as the GIDAS pro ject (German in-de pth accident study)
should be updated continuously and extended by automated driving information
(SAE level classiﬁcation of involved vehicles, driver/automated mode :::).
Furthermore, cyber security (vulnerability to hacking) has to be considered in
order to avoid that the vehicle or driver lose control due to hacking attacks. Car man-
ufacturers and their suppliers are in agreement that V2I and V2V communication,
i.e., communication protocols, have to be developed with security embedded along
the entire development phase (typical auto motive v-cycle). Recent investigations
show that nearly all modern vehicles have some sort of wireless connection that12 D. Watzenig and M. Horn
could potentially be used by hackers to remotely access their critical systems [ 19].
In addition to security weaknesses, many car companies are collecting detailed
location data from their cars and often use unsecure transmission paths.
1.4.3 Dependable Power Computing
In order to fully deploy the opportunities of next generation ADAS technology,
greater on-board computing power based o n multi-core and many-core technology
is strongly required. Approximately, 1 GB of data will need to be processed each
second in the real-time operating system of the vehicle. This cognitive data will need
to be analyzed and mined fast enough that decisions can be made and vehicle actions
can be performed. The vehicle has to react to changes in the environment, i.e., adapt
itself to evolving scenarios, in less than a second based on a range of variables
such as vehicle speed, road, and weather conditions. Furthermore, the vehicle will
need to account for unpredictable behavior of vulnerable road users and other cars
while in the city and to gauge the ﬂow of trafﬁc, e.g., to merge onto a motorway.
The current automotive software archit ecture (AUTOSAR) for electronic control
units which has primarily been developed for vehicle control functions is facing
its limits when it comes to real-time cognitive data processing. The AUTOSAR
development cooperation is well aware of that and has already taken action. The
AUTOSAR Adaptive Platform (conﬁgurable and adaptive runtime environment
layer) is currently under development, mainly driven by BMW, Daimler, Renault,
Continental, and Bosch and will be available on midterm scale. Edge computing
(networked and distributed computing) will also play an important role in the future.
Nevertheless, there is also a strong need for hardware standardization (“plug and
play”) and service-oriented architectures.
1.4.4 Human Factor (SAE Level 3/4)
It is still an open question how much time is needed for the driver to reengage.
Currently, the range of 5–10 s is considered depending on the vehicle speed.
As a major requirement, taking back control must happen safely and seamlessly
with minimal risk for vehicle occupants and road users. Research has also to be
undertaken for the vehicle–driver interface and related communication methods in
order to ensure a safe transition between automated and non-automated mode. This
includes overriding strategies, i.e., the driver can always override the automated
driving mode and regain control. Driver awareness also plays an important role
since an increased driver distraction and loss of skills due to reduced driver tasks and
experience is expected. Consequently, driver training in particular for SAE level 3
and 4 vehicles will have to be deliberated. In this context, the development of human1 Introduction to Automated Driving 13
factor software tools for testing and evaluating driver and vehicle performance for
different SAE levels will be essential.
1.4.5 Environment Modeling and Perception
Perceiving the vehicle environment in real -time and in a very accurate and reliable
manner as well as adapting to evolving s cenarios is seen as one of the key enablers
for automated driving. Along with an increased robustness of sensors, severalresearch ﬁelds can be identiﬁed including
 Reliable image processing and decision-making (object recognition, tracking,
classiﬁcation, interpretation)
 Accurate road representation and positioning (strongly relying on high resolution
digital maps)
 Advanced sensor fusion technologies Common and standardized architectures Quality assessment including functional safety of both (embedded) software and
hardware
 Plausibility checking, mon itoring, onboard diagnosis, and sensor failure detec-
tion
Furthermore, a couple of research questions has to be answered rather quickly
since the vehicle intelligence (in particular traceable decision-making required forSAE levels 3–5) heavily depends on environment modeling and virtualization:
 Capturing of artifacts of the vehicle envir onment (trafﬁc situation) and required
conﬁdence level
 Prediction of the situation (trafﬁc) evolvement Integrity of such models Dealing with uncertain information
1.4.6 Vehicle Control and Actuation
Vehicle automation directly relates to f ail-operational control and actuation (redun-
dancy in hardware and software). Recent adv ances in in-vehicle co mputation enable
to run more sophisticated, model-based, and robust control algorithms in real-timeand onboard. The core of an automated veh icle is its intelligence (path planning,
path tracking, prediction, reasoning, decision-making, and control) embedded in aﬂexible and re-conﬁgurable architecture. Although control theory and algorithmsare well developed, advances are still needed. These include:
 Controllability of the execution of planned maneuvers at any time and always
maintaining fail-operational behavior of the vehicle14 D. Watzenig and M. Horn
 Integration and management of uncertainties (e.g., map-based uncertainties)
 Dealing with sensor insufﬁciency and rel ated misinterpreta tions (sensor false
positive)
 Dealing with sparse data in case of unreliable sensor data
 Dealing with big data in real-time
 Cooperative control and planning (i nteraction with other road users)
 Interaction with digital infrastructure
 Driver–vehicle interaction
1.4.7 Digital Infrastructure
Currently, almost all car manufacturers worldwide have released research prototypes
at different SAE levels. Even though it is well understood and agreed that the
embedding in a digital infrastructure is inevitable (V2X and X2V communica-
tion), a common development roadmap is still not existing. Vehicle research and
infrastructure research follow parallel paths ; however, joining forces will also drive
innovations forward. From the infrastructure point of view, several topics have to be
addressed [ 16]:
 Trafﬁc management in particular within urban environments (informative vs.
inﬂuencing systems).
 Digital infrastructure (e.g., 50 M bit/s by 2018 in Germany, nationwide)
 Data backbone, cloud data, and cloud computing (fog computing, i.e., several
clouds with handover depending on driving route)
 Standards for intelligent roads
 Interaction of vehicles and their infrastructure
– Open-source data cloud for geographic and mobility data, digital radio board
(Germany: DAB Cto retrieve detailed and locally precise data in real-time)
– Swarm intelligence
– High-precision digital maps (from the infrastructure point of view)
– Intelligent communication to trafﬁc lights, trafﬁc signs, signaling
 Standardization of IT security
 Privacy (collection, processing, linki ng of data) according to data privacy laws
 Legal constraints (international and national frameworks, approval of vehicles,
technical maintenance and monitoring, driver training)
All of the above-mentioned ﬁelds of activity require further investigations to
exploit the potential and be neﬁts in order to ensure a safe, reliable, acceptable,
and understandable (to the driver and other stakeholders), and secure behavior of
the automated vehicle embedded in its intelligent environment at all times. Along
with the technological advances, progress l egislation, liability, and insurance are
obligatory and urgently need ed (for details see, e.g., [ 8,20–22]).1 Introduction to Automated Driving 15
1.5 Conclusion
This introductory chapter gives a brief overview of the current state-of-the-art of
automated driving according to the SAE J 3016 levels of automation and based on
different recently published roadmaps. We also discuss and list relevant midterm
and long-term development steps and innovation ﬁelds as well as related researchchallenges to be faced in order to foster societal acceptance of automated roadtransport. The following and carefully selected articles of this book will givean in-depth analysis of the currently most relevant technological topics from theperspective of the industry but also from renowned research institutions. Thedifferent chapters cover recent advances in environment sensing, sensor fusion,perception, decision-making, and predictive control methods for path planning andtracking. Furthermore, the increasing importance of in-vehicle architectures andembedded power computing is addressed. A major part of the book is dedicated tothe demonstration and assessment of reliability and functional safety of automatedvehicles along with security requirements. A sampling of ongoing collaborativeEuropean research projects and European initiatives ﬁnally reﬂects the strongEuropean movement to automated driving.
References
1. Tech.AD, in Annual Conference on Automated Driving, Conference Proceedings , Berlin, Feb
2015
2. Automated Driving Roadmap, European Road Transport Research Advisory Council
(ERTRAC) (2015)
3. Roadmap on Smart Systems For Automated Driving, European Technology Platform on Smart
Systems Integration (EPoSS) (2015)
4. iMobility Forum, Auto mation in Road Transport, version 1.0, May 2013
5. NHTSA and US Department of Transportation, US Department of Transportation Announces
Decision to Move Forward with Vehicle-to-Vehicle Communication Technology for LightVehicles (2014)
6. SAE, Taxonomy and Deﬁnitions for Terms Rela ted to On-Road Motor V ehicle Automated
Driving Systems, J3016, SAE International Standard (2014)
7. S.E. Shladover, Road Vehicle Automation: Reality, Hype And Policy Implications, California
PATH Program, University of California, Berkeley, 9 Apr 2015
8. M. Maurer, J.C. Gerdes, B. Lenz, H. Winner, Autonomes Fahren—Tec hnische, Rec htliche und
Gesellschaftliche Aspekte (Springer Vieweg, Heidelberg, 2015) (German) (Open Access)
9. N. Bizon, L. Dascalescu, N.M. Tabatabaei, Autonomous Vehicles (Nova Science Publishers,
New York, 2014)
10. H. Cheng, Autonomous Intelligent Vehicles—Theory, Algorithms, and Implementation
(Springer, Heidelberg, 2011)
11. U. Oezguener, T. Acarman, K. Redmill, Autonomous Ground Vehicles (Artech House, Boston,
2011)
12. H. Winner, S. Hakuli, G. Wolf, Handbuch Fahrerassistenzsysteme , 2nd edn (Vieweg-Teubner,
Wiesbaden, 2012) (German)
13. J. Becker, Driver Assistance and Automated Driving, Lecture, ME302, Stanford University,
USA16 D. Watzenig and M. Horn
14. 2020 Roadmap, European New Car Assessment Programme (EURO NCAP) Jun 2014
15. J. Carlson, ADAS Evolving: New Developments in Hardware and Software on the Road to
Autonomous Driving, HIS Automotive, Spring Media Brieﬁng, Detroit, 19 Mar 2015
16. German Federal Government, Strategie Automatisiertes und Vernetztes Fahren, Strategic
Paper, Jun 2015
17. International Organization of Motor Vehicle Manufacturers, ITS/AD-04-14, Berlin, Jun 201518. H. Winner, W. Wachenfeld, Absicherung Automatischen Fahrens, 6. FAS Tagung, Munich,
Nov 2013
19. A. Greenberg, Markey Car Security Report, Feb 201520. R.K. Jurgen, Autonomous Vehicles for Safer Driving (SAE International, Warrendale, 2013)
21. G. Meyer, S. Beiker, Road Vehicle Automation . Lecture Notes in Mobility (Springer, Heidel-
berg, 2014)
22. G. Meyer, S. Beiker, Road Vehicle Automation 2 . Lecture Notes in Mobility (Springer,
Heidelberg, 2015)Chapter 2
Privacy and Security in Autonomous Vehicles
Patrick Pype, Gerardo Daalderop, Eva Schulz-Kamm,
Eckhard Walters, and Maximilian von Grafenstein
2.1 Introduction and Deﬁnition of Terminology
Since the early 1920s, people have envisioned cars 1 day driving them, free of
human intervention. We have now reached a point where the technology exists to
make this a reality. In less than 10 years, we can expect to see autonomous vehicles
on our roads, fundamentally changing what it means to drive. While the technical
challenges of getting a car to navigate on its own have been largely addressed, that
is not the only criteria required for success.
No autonomous driving program will ever make it out of trial phase unless issues
surrounding privacy, safety, and security have been addressed. In this chapter, we use
the term “safety” for the correct system functioning of the car and the protection of
the people in the car, mainly to ensure avo idance of car and/or trafﬁc accidents. The
term “privacy” is about the protection of a person and his/her behavior, meaning
that he/she is able to control the risks for his or her rights to privacy, freedom, or
equality caused by the processing of data related to him or her. The term “security”
deﬁnes a situation where the integrity, conﬁdentiality, and availability of data are
guaranteed. Security particularly serves here, referring to the sum of measures
taken, to ensure safety and privacy in its meaning described before. Therefore, a
holistic development view on security, safety, and privacy is required, as they are all
interacting, and cannot be seen completely independent.
P. Pype (/envelopeback)  G. Daalderop  E. Schulz-Kamm  E. Walters
NXP Semiconductors, Leuven, Belgium
e-mail: patrick.pype@nxp.com
M. von Grafenstein
Alexander von Humboldt Institute für Internet und Gesellschaft, Berlin, Germany
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_21718 P. Pype et al.
Consumers, governments, and businesses need to be assured that autonomous
vehicles are safe from hacks, viruses, and o ther malicious elements that could cause
widespread damage. Just a serious incident with one vehicle may be enough to
ensure that autonomous vehicles never make it to our roads, so technologists must
be sure that what they have created is safe and secure.
Privacy is also front of mind for consumers. Concern about what data is being
collected on individuals and how it is being used, is widespread, particularly relating
to new technology. The autonomous cars of tomorrow will have to take these serious
concerns into account and use data in a way that is useful, but not damaging to
individuals. Guardedness will be even more a strong differentiator for OEMs to get
a competitive advantage in the sharing economies of the future.
2.2 Principles of Autonomous Driving
2.2.1 Technological Principles
From a technological perspective, driverless cars will be enabled by connectivity,
raising the necessity to achieve the next level of performance and reliability in
security, safety, privacy protection, and trafﬁc efﬁciency.
This will be achieved through the design and development of next-generation
automotive components, subsystems, and connected platform architectures. All of
these must be based on the followi ng critical-trust principles:
1. Secure maintenance of safety, comfor t, productivity, and mobility services in a
privacy conserving way.
2. Health management (monitoring and upgrading).
3. Open platform principles and archit ectures utilizing trusted components and
trusted intra and extra vehicular networks, including seamless cooperation of
different communication paradigms and h igh data rate sensor networking, e.g.,
using Automotive Ethernet.
4. Trusted cloud services for diagnostics, prognostics, and the monitoring and
upgrading of security, functionality, and reliability.
5. All highlighting the need for security, privacy frameworks, and implementations
on the basis of security and privacy by design, as well as “need to know”
principles.
This is illustrated in Fig. 2.1, where security is seen to be a system-property
spanning from components to cloud solutions. It is to be noted that for some of the
components physical security is essential (so protection to side-channel attacks and
physical reverse engineering), since trustworthiness of the services and information
provided by complete infrastructure solutions can be at stake. This is for example
the case with the V2X communication subsystems which are based on public key
security infrastructures.2 Privacy and Security in Autonomous Vehicles 19
Fig. 2.1 The vehicle and its components, integrated in the Internet-of-Things, including security
requirements
2.2.2 Data Principles
Legal uncertainty with regard to security and privacy currently disadvantages
Europe’s ability to take the lead for inte lligent, connected, or autonomous driving
solutions. Therefore, Europe should take a proactive role in deﬁning and implement-
ing a strategy how to create impetus for a secure and privacy respecting Internet of
Things (IoT), supporting this with leading state-of-the-art technology solutions.
The aim is to facilitate auto motive IoT components and subsystems to seamlessly
work together across the various connectivity standards and compiling big data on
their operations, including:
 Vehicle-to-Anything (V2X)/802.11p Wireless
 Radar
 Radio and Satellite Broadcast
 Automotive Telematics Onboard Unit Platforms
This also applies the concept of data gove rnance, referring to the needs of private
companies for immaterial property rights a nd business secrets as well as of citizens
for privacy and safety, providing a best rule of access to data. In doing so, we must
focus on three data principles:
Security by Design— All devices connected to the IoT shall be protected
via ensuring the devices and communication are intrinsically secure, achieved
through a.o. incorporating secure coding and encrypted communications.
P r i v a c yb yD e s i g n — Privacy is safeguarded not only by normative expectations
such as by law but already on the infrastructural technological level.20 P. Pype et al.
Need to Know Principle— Each connected entity can only communicate data to
the IoT that is absolutely relevant for its core application. Further to the privacy-by-design principle, the access is granted by the entities, be it a person or acompany, having the co rresponding access rights.
2.3 Status of What Exists Today
Different systems and networks within the car have different vulnerabilities and
attack points. They therefore require diff erent levels of security. In some cases,
software security may be sufﬁcient, but other cases require much stronger tamperproof security solutions. Similarly, solutions like intrusion detection systems andauthentication of messages and secure ﬁrmware over-the-air updates can provide acomprehensive protection system. Physical security at component level is neededin order to protect against advanced side-channel attacks and physical reverseengineering.
As more vehicles leverage V2X to elim inate accidents, ease congestion, and
reduce emissions, they are creating new challenges for the industry. With more carscommunicating wirelessly, vehicles are now opening up gateways for car systemsto be accessed and manipulated.
Hackers are able to use these communications channels to gain direct control of
cars and as a result wreak potential havoc on the roadways and even create massaccidents. For example, causing multiple cars to brake suddenly can cause a massaccident. It is therefore critical that vehicles are able to detect malicious data suchas viruses or intrusions and authenticate incoming messages.
In the past year, several leading automotive manufacturers have fallen victim
to connected car hacks. In summer 2015, two security experts hacked into a JeepCherokee via its internet-connected ente rtainment system. As a result, they were
able to cut the vehicle’s transmission, bringing it to a grinding halt on a busyAmerican highway—all from the comfort of t heir sofa. A month later, researchers
at the Usenix security conference demonstrated how they could access criticalfunctions of a Corvette through a wirelessly connected device commonly used fortracking by insurers and trucking ﬂeets.
Despite these risks, vulnerability to hacking is not sufﬁciently covered in the
main automotive industry standards. ISO26262, for example, only determinesAutomotive Safety Integrity levels for passenger cars and light utility vehicles basedon the reduction of systematic failures caused by human error and random failurescaused by factors such as aging or thermal wear-out.
Leading automotive manufacturers such as Ford, GM, Nissan, Mazda, Honda,
VW, Audi, Daimler, Hyundai Motor, and Kia are now cooperating to drive commonsecurity approaches and standards. For example, the CAMP consortium (CrashAvoidance Metrics Partnership consortium) in America has been set up to builda secure system in cooperation with the U.S. Department of Transportation. CAMPhas already spent several years research ing and testing a variety of security2 Privacy and Security in Autonomous Vehicles 21
solutions. Similar initiatives are the Car 2 Car Communication Consortium (C2CC)
and the C-ITS Advisory Group in Europe and the ITS Connect Promotion Con-sortium in Japan. Regarding privacy requirements, there are similar initiatives. Forexample, members of the German Union of Automobile Industry (VDA) providedfor data protection principles for connected cars. These privacy-by-design principles
shall ensure safe and transparent processing of personal data in order to meet legalresponsibility and the customers’ trust.
Though connected vehicles are still a long way from mass adoption, the
recent hacking incidents are an important lesson for the automotive industry. They
highlight that there needs to be a solid foundation of security, privacy, and trustto fully take advantage of innovations in connected and self-d riving vehicles. A
large part of this relies on the entire eco system coming together, manufacturers,
technology suppliers, regulators, etc., to make sure that the physical and digitalsafety of drivers is prioritized, so vehicles will be robust enough to stand up tohacking attempts and any further abuse of data.
2.4 Future Expectations for Autonomous Driving
The transformation towards autonomous driving is already well underway, thanks toseveral features of automated driving (adaptive cruise control, lane-warning, etc.).Over the next few years, the car as we kno w will transform from a simple mode of
transport to a personalized mobile information hub—fully connected to the outsideworld.
Innovations are already helping to create a more enjoyable, customized driving
experience for consumers as well as making driving safer and more enjoyable. Butthis is just the beginning. Let’s take a glimpse of what the future of driving lookslike and how privacy and security will work in the age of the autonomous car.
One of the biggest changes brought on by autonomous driving will be the shift
from car ownership to a share/rental m odel. Already car sharing schemes like
DriveNow, Car2Go, or ZipCar are changing urban driving habits to a more pay-by-use model. This trend will accelerate as autonomous driving becomes morecommonplace. Cars will be able to be booked in advance from a provider oravailable on demand via smartphone (or wearable) apps. The autonomous car willdrive directly to the customer’s house and wait outside. One can think about “ubertaxis” without driver. It will be important to ensure that only the approved driverhas access to the autonomous vehicle. Solu tions in place today, like RFID tags for
example, will be able to securely identify users via their smartphone.22 P. Pype et al.
With the advent of mass car sharing comes enhanced risk of data being mistak-
enly shared between users. The autonomous car sharing schemes of tomorrow willuse data collected about users to enhance their experience. Data will be stored on:
– Recent or favorite destinations
– Personal details on the user, including payment details– Preferences relating to seating, temperature, music, etc.
This data also awakens the interests of many further parties such as insurance
companies or providers of commercial products and services. Insurance companiesare able, for example, to adapt the insurance policies to the personal driving behaviorof drivers. Providers of commercial products and services will increasingly seek toadvertise their offers based on the locatio n and personal preferences of the drivers.
Securing and protecting this personal data will be vital to maintaining consumer
trust, as proven by several high proﬁle incidents of data theft/loss. UK Internetprovider TalkTalk, for example, suffered huge reputational and ﬁnancial damagefollowing a cyber attack in which customers personal details were stolen.
Autonomous vehicles will travel on the roads using a complex system of radar
and V2X technologies which gather information about its surroundings, providingthe onboard computers with an image of obstacles or dangers the driverless systemmust avoid.
The cars will know the route and automatically stream onto the motorway
to “platoon”—hooking themselves to another group of cars heading in the samedirection. Safe speed and distance is maintained via the onboard V2X technology.As well as communicating with vehicles around it, the device also speaks to otherconnected infrastructure.
These “communications” are enabled by V2X resulting in ad hoc data exchange
networks between the vehicle and environment—in other words, independent, self-organizing networks of mobile users.
As with any other wireless network, communication is exposed to security risks
that must be guarded against in order to prevent access from hackers and other
potential threats. To do this, ﬁrstly the quality and integrity of data has to be ensured.Intelligent vehicles must be able to detect whether data has been altered and falsiﬁedfor any reason when collected or transmitted. Wrong or defective data can block theapplications on which they are based or render them ineffective—in the worst casebecoming a genuine safety risk.
For instance, if inaccurate data misleads a vehicle into inco rrectly recognizing
the speed of the vehicle driving ahead of it, there could be fatal consequences.
So mechanisms need to be in tegrated that can detect bad data, remove it from the
communication circuit, or destroy it entirely. Automotive solutions will encrypt,authenticate, and secure data at a chip lev el. Using a set of security keys, the car can
determine if the data really originates from a speciﬁc, trustworthy vehicle.
The same principle applies to other devi ces and services, which the vehicle may
interact with. For example, there is no reason why the autonomous cars shouldnot be able to interact with a café en route, making orders and sending paymentsin advance. Maintaining a secure connection will be essential to safeguard the2 Privacy and Security in Autonomous Vehicles 23
reputations of both the vendor and the car manufacturer. Service providers as well
as consumers will not buy into a system unless they are conﬁdent it is secure and
privacy preserving.
2.5 Building Social Trust
We have already mentioned the importance of consumer trust, but it is worth looking
at in greater depth as it is vital to the future of autonomous vehicles. The world is
becoming an increasingly networked pl ace. From billboards to bus stops, lamppost
to cars and roads, infrastructure is beco ming smarter and more connected. Many
people feel scared or at least insecure about the consequences. Is the technology
reliable? What happens with my data? Companies and legislators have to face up to
these concerns.
According to the latest surveys, half of all Internet users do not regard their data
as secure on the Internet. For businesses, customer trust and revocation of trust are
important elements of business models.
No matter how well the technology works, without consumer trust it will never
achieve widespread adoption. This is especially true in case of autonomous cars.
The technical challenges of driving will eventually be solved but the much harder
task of convincing drivers to let go of the wheel will take longer. Without trust, there
is no or very slow market uptake.
Figure 2.2shows the concerns of new-car buyers regarding data privacy and
hacking.
To build trust, customers need to be actively kept in the loop. They have to be able
to understand the potential security vulne rabilities in the car an d also understand
how they are protected. This approach al so beneﬁts companies because strong
security is a real cost factor. People w ill not be willing to pay for good security
if they don’t understand how it is beneﬁting them. But if the awareness is raised,
they will appreciate activities ensuring strong security even at higher costs.
Another important element to build trust is ensuring people and companies have
complete sovereignty over their risks resulting from the processing of personal data.
Connected cars and the entire Internet of Things will only be trusted if the data
involved is solely used for the value added purposes offered to the consumer in
a most transparent way. Furthermore, a pplying data minimization, i.e., by only
collecting data that is really needed for t he application, and nothing else, may
increase people’s trust.
This requires absolute certainty in kno wing which other devices have access to
data and transparency about what they are using it for. They also need to be reassured
that data is only accessed when necessary. For example, health records may be kept
in autonomous cars in case of an accident bu t only emergency services should have
access to these, not any other non-medical party.24 P. Pype et al.
New-car buyers are broadly concerned about data privacy and the
possibility of hacking when it comes to car connectivity.
% of new-car buyers that (strongly) agree with the statement 
I am reluctant to use car-related
connected services because I want
to keep my privacy
51
45
37
21
Germany
Source: McKinsey’s Connected Car Consumer Survey, 2014US Brazil China Germany US Brazil China59 59
4353
54
37øøI am afraid that people can hack
into my car and manipulate it
(eg, the braking system) if the car
is connected to the Internet
Fig. 2.2 Concerns of new-car buyers regarding data privacy and hacking
In a sharing economy consumers eventually acting as “prosumers,” who are
offering mobility services themselves, hold even more inﬂuence and power. So
companies will very quickly learn that t hey can only be successful with a new deal
approach based on cooperation. Ultimatel y consumers will decide more freely and
volatile which trusted company they give their money to. In the end, only ethical
and secure companies will survive.
When it comes to improving security, cross-industry and international collabora-
tion is essential, all involved players need to be engaged for best-in-class solutions.
By adhering to the aforementioned autonomous driving principles many of these
issues can be overcome and trust can be built and maintained.
2.6 Impact on Industry
Maintaining privacy and security in autonomous vehicles is a complex issue that
requires the support and cooperation of several industries in the complete value
chain from semiconductor companies to TIER1’s and OEMs. When considering the
implications of onboard connectivity, the need for security, a nd the possibility of
cars driving themselves, it becomes clear that a cooperation is needed comprising
the industry in the value chain, universities and research institutes. NXP Semicon-
ductors and the Alexander von Humboldt Institute have started initiatives in this2 Privacy and Security in Autonomous Vehicles 25
ﬁeld and are engaging with other partners to work towards complete solutions. In
addition, other interest groups need to be actively involved, as, e.g., governments,insurance companies, and consumer groups (as, e.g., ADAC, ANWB, Touring, etc.).
Currently, a gap exists between governments and technology companies. This
stems from a fundamental difference in ho w they traditionally operate. Governments
are used to sharing information with the g eneral public and being collaborative and
open when it comes to new projects that have the potential to affect the lives of cityresidents. For democratic governments transparency is vital and they are very usedto being held to account.
On the other hand, technology companies have a much more guarded approach
to working. They come from a background where secrecy is essential to protectingrisky R&D investments, valuable know-how, and sensitive intellectual property.They only unveil their solutions—even only partially—when they are ready tobring them to the market, as opposed to government projects which are generallytransparent from the start and invite fo r active participation and feedback.
These systemic and cultural differe nces can cause friction between the two
parties, and this slows down the development of a potentially joint innovation projectlike autonomous vehicles, which is reliant on the two working together. Ultimately
without the government collaboration, autonomous vehicles can’t be approved foruse on the road so a new way of working needs to be established that suits bothparties. They must enter into a deliberative process where the outcomes are jointstrategies and memorandums, which include both, the technological and socialaspects of autonomous driving.
Self-driving vehicles will also have big implications for the insurance industry.
Today, car insurance is set up to protect drivers ﬁnancially after an involvement in anaccident, as a result of their own error or s omeone else’s. The advent of autonomous
driving changes this model c ompletely. Firstly, road t rafﬁc accidents should be
almost eliminated completely so the risk of drivers and passengers will virtuallynearly disappear. As the human element comes out of the equation, question marksalso remain around liability.
Insurance companies will likely have to shift liability from consumers to
manufacturers, which has already been seen considering V olvo saying that it will
accept full responsibility for driverless car crashes. They will also have to look moreinto pay-as-you-drive models for insuring cars. Ultimately insur ance companies will
need to change their business model and in order to do this, they will need to workwith the government and manufacturers to develop best practices. Without sufﬁcientinsurance measures in place, autonomous driving will falter.
There needs to be a change of thinking and a new coordinated approach
between governments, technology companies, and insurers. If all three partiescollaborate to create joint strategies, which encompass technological and socialaspects, autonomous vehicles can be on the market in just few years.26 P. Pype et al.
2.7 Next Steps
Security, privacy, and issues around consumer trust are the biggest hurdles to
overcome autonomous driving. Ultimately, consumers need to trust this technology
with not only their lives but also the lives of their families.
In order for this trust to be built, the entire ecosystem must come together, man-
ufacturers, technology suppliers, governments, and insurers to take the followingsteps.
1.Multi-stakeholder dialogue
Establish a coherent multi-stakeholder d ialogue including representatives of
end-user interests (e.g., data protection authorities and/or consumer protectionorganizations) in order to develop solutions that respect societal needs andexpectations regarding access to data.
These groups should be used in order to gain broad acceptance for privacy
and security by design measures, which fully addresses the concerns of theindividuals with regard to privacy and security of data and assets, as well asthe organizations.
2.Establish global principles and standards
The second step is to build on the dialogue to establish a condensed set ofimplementable principles and standards of security and privacy by design.
They need to be applied to all areas including design, organizational struc-
tures, and international legislative requirements. A global consensus will alsoneed to be reached on reliable certiﬁcation p rocesses and trust providing privacy
policies.
3.Develop modular system solutions
Establish architectures and prototypes of system-within-systems solutions thataddress critical security and privacy by design with the following features:
(a) User-selectable opt-in conﬁguration modes
(b) Based upon interoperable, modular principles (software/hardware) with
standard interfaces
(c) Automotive certiﬁed with built-in privacy-preserving features that restrict
access to data
(d) Allowing separation of systems for cost-effective multi-vendor component
sourcing
Separation of systems also protects against hacks that target different, less
critical areas of the car in order to reach more essential components. E.g.,targeting the digital radio to affect the highly safety critical braking system.
4.Next Gen secure components
Develop next generation components with inherent privacy protection and secureauthentication comparable to current banking standards.2 Privacy and Security in Autonomous Vehicles 27
These secure components will combine high performance with the latest
security principles to maintain protection over its lifecycle, mitigating impact ofsoftware attacks, fault attacks side channel attacks, and physical attacks includingphysical reverse engineering. The components and software will be ﬂexible andopen, to an extent, to ensure that they can be easily updated and upgraded.
5.Impactful applications
Important to the entire process will be to demonstrate and communicate thecapabilities of the system solutions and the security and privacy by designsolution strategies through a number of societal and business use cases.
Through this process, seals of “quality and trust” can be developed for
certiﬁed secure solutions.
2.8 Conclusions
Based on recent car hacking i ncidents, all stakeholders in the car industry have
become aware that security and privacy protection become more and more impor-
tant in cars, which are integrated in the Internet-of-Things and/or which areautonomously driving. This will require the inclusion of security elements andprivacy protect features from components to electronic systems and the completecar architecture. Furthermore, a close cooperation between all stakeholders involvedin the value chain must be strengthened, including the interaction with the citizens,through a multi-stakeholder dialogue. Finally, it is also of crucial importance forall parties to work together towards a social trust model in the evolution fromcommunicating cars to fully autonomous cars.Chapter 3
Automated Driving from the View of Technical
Standards
Stephanie Grubmüller, Jiri Plihal, and Pavel Nedoma
3.1 Introduction
Nowadays, assisted driving systems such as Adaptive Cruise Control (ACC) are
state-of-the-art. If activated by the driver, these systems support the driver in speciﬁc
driving situations and control either the longitudinal or lateral vehicle movement.
In case of an unstable behavior of the system, a high availability of the driver
is needed to take over control. Automated driving systems allow the driver to be
absent from the active driving task for a certain duration of time. These systems
control the vehicle’s longitudinal and lateral movement simultaneously. The degree
of automation of a driving function ranges from partial automation and permanent
supervising by the driver to full automation and no supervising activity by the driver
[1].
The ﬁrst partially automated functions are expected to be introduced into day-
to-day trafﬁc by 2016 [ 2]. These functions require data from outside the vehicle,
which leads to the term of connected driving. Improving trafﬁc information for
each trafﬁc participant, for automated vehi cles, real-time Vehicle-to-Vehicle (V2V)
communication and Vehicle-to-Infrastructure (V2I) communication are mandatory
[3]. The further development of automated and connected driving raise new
requirements to guarantee a safe system in respect to the reconsideration of the
S. Grubmüller (/envelopeback)
VIRTUAL VEHICLE Research Center, Inffeldgasse 21a/II, 8010 Graz, Austria
e-mail: Stephanie.Grubmueller@v2c2.at
J. Plihal
ÚTIA A V ˇCR, v.v.i., Pod Vodárenskou v ˇeží 4, 182 08 Praha 8, Czech Republic
e-mail: j.plihal@volny.cz
P. Nedoma
ŠKODA AUTO a.s., V. Klementa 869, 293 60 Mladá Boleslav, Czech Republic
e-mail: Pavel.Nedoma@skoda-auto.cz
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_32930 S. Grubmüller et al.
technical realization of a vehicle’s subsystem as well as consideration of appropriate
data sources and communication. This leads to the adoption or establishment of
vehicle-related or communication-related technical standards. Infrastructure and
vehicles equipped with high-quality data communication components combined
with the positive cooperation between the automotive industry, researchers, and
the government will result in competent backgrounds for the intended innovation,
development, and use of self-driving cars.
This chapter gives an overview of different Standard Developing Organizations
(SDOs) related to the automotive domain and automated driving. The levels
of automation of different standards are introduced. Finally, the future steps of
standardization and requirements on the vehicle systems and environment are
summarized.
3.2 Standard Developing Organizations
SDOs are deﬁned by [ 4] as: “SDOs include professional societies, industry, and
trade associations and membership organ izations who develop standards within
their area of expertise. They may develop standards with their own members or in
cooperation with other SDOs and interested parties.” There are mainly the following
SDOs related to automated driving systems:
– International Organization for Standardization1(ISO) consists of a network of
national standards bodies which represents ISO in their countries. The central
secretariat is located in Geneva, Switzer land. Regarding automated driving, two
Technical Committees (TC) are of interest:
 ISO/TC204 (WG1, WG 3, WG9, WG14, WG16, WG18)
 ISO/TC22 (SC03, SC32, SC33, SC39)
– European Telecommunications Standard Institute2(ETSI) is recognized as a
European Standards Organization by the European Union and produces globally-
applicable Information and Communications Technologies (ICT)
– Society of Automotive Engineers (SAE) International3is an American United
States (US)-based professional associa tion and standards organization focused
on various transport industries such as a utomotive, aerospace, and commercial
vehicles.
– European Committee for Standardization4(CEN) brings together the national
standardization bodies of 33 European countries.
1http://www.iso.org
2http://www.etsi.org
3http://www.sae.org
4https://www.cen.eu/3 Automated Driving from the View of Technical Standards 31
– Institute of Electrical and Electronics Engineers5(IEEE) is the world’s largest
technical professional association located in the USA.
The key international legislation relating to road safety is based on the two
treaties: First, “The Vienna Convention on Road Trafﬁc,” and second “The Vienna
Convention on Road Signs and Signals.” Both were signed by 73 parties in Vienna
in 1968.
3.3 Standard Developing Organizations
Depending on the standards, different scales of levels of automation of on-road
vehicles exist. The automatic functions w ill be increased step-by-step and will need
to be tested in practice.
In Fig. 3.1all levels of automation according to the SAE J3016 [ 5] standard
are given. The scale of the SAE level ranges from level 0, which indicates the
full-time performance by the human driver, to level 5, which deﬁnes the full-time
performance by an automated driving system. At lower levels, like levels 0–2, the
driver is the main actor and is responsible for making decisions and monitoring
Fig. 3.1 Levels of automation according to SAE J3016 [ 5], Copyright © 2014 SAE International
5https://www.ieee.org32 S. Grubmüller et al.
Fig. 3.2 Levels of automation deﬁned by the different standards according to SAE J306 [ 5], BASt
working group “Legal Consequences of an Increase of Vehicle Automation” [ 7], and NHTSA [ 8]
the system all the time while driving. At level 2 the driver is responsible for
handing over control of the vehicle guidance in case of a fault. For higher levels of
automation, such as levels 3–5, the system will monitor the driving environment and
with increasing levels the number of functionalities and decision-making processes
adopted by the system grows.
For levels 0–2 the driver’s attention lies fully on the driving task. If a fault occurs,
the human driver will have to react with in a second. At level 3 the reaction time of
the human driver increases up to several seconds. Finally, for automation levels 4
and 5 the vehicle reacts independently durin g the driving task and the reaction time
of the human driver is extended to several minutes [ 6]. With respect to international
standards of automated driving, J306 is the major standard.
Figure 3.2shows the correspondence between the SAE levels and the levels of
automation developed by the Germany Federal Highway Research Institute6(BASt)
and those described by the US National Highway Trafﬁc Safety Administration7
(NHTSA) [ 5]. The NHTSA standard integrates the high and full automation of the
SAE standard in one level, whereas the BASt standard deﬁnes ﬁve levels and the
last level is equivalent to Level 4 of the SAE standard.
3.4 Standard Developing Organizations
The introduction of a set of driving functions and increasing automation level
requires a set of speciﬁcations and requirements depending on whether the vehicle
system and/or the communication between the vehicle and other vehicles or the
infrastructure are affected. These speciﬁ cations are not standardized at the moment.
As a consequence, an adaption of all rela ted technical standards is needed. Two
6http://www.bast.de
7http://www.nhtsa.gov/3 Automated Driving from the View of Technical Standards 33
categories of technical standards may be distinguished: (1) vehicle-related, (2)
communication-related.
3.4.1 Vehicle-Related Standards
In [1], an expectation of the introduction of highly automated functions on
Germany’s market is given. The Trafﬁc Ja m Pilot is expected to be deployed to the
market ﬁrst, followed by the Highway Pilot. In trafﬁc congestion driving situations,
the Trafﬁc Jam Pilot will provide automated vehicle guidance. The Highway Pilot
will be the extension of the Trafﬁc Jam Pilot for higher velocities. Both will
be restricted to highway-like environments at ﬁrst. The authors emphasize that a
more complex environment, as in urban areas, demands higher requirements on
perception, situation recognition, and decision making than automated driving in
a well-deﬁned environment, as, e.g., a freeway. Consequently, whether it is an urban
or highway scenario, the adaption or expansion of the vehicle system’s architecture
by new requirements compromises the vehicle safety. In case an unforeseen event
occurs or the system boundaries are reached, the system will be responsible for
switching into a safe state and handling the situation. This scenario will raise
additional software requirements.
Besides, in case of a hardware fault, the system must guarantee safe operation
despite the reduction in functionality. Hence, new requirements on the hardware
components of the vehicle system will also appear [ 9]. Different use cases have to
be covered by the automated functionality ; for example, special weather conditions
such as snowfall, as mentioned in [ 10], can cause a limited sight of the sensors,
which leads to a decision-making based on the surroundings as to how the system
needs to behave.
The functional safety standard ISO 26262 [ 11], published in 2011, offers a
general approach for the development of E/E systems. The aforementioned use
cases regarding automated driving are not currently covered by the functional safety
standard ISO26262. The next version of the standard will be published in 2018. At
the moment, the inclusion of the automated driving topic in the standard is under
discussion. Concerning the safety of automated functionalities in on-road vehicles,
new standards for speciﬁcation and arch itecture are needed as shown by the use
cases in this section.
3.4.2 Communication-Related Standards
Over the years, a range of Intelligent Transport Systems (ITS) will support the
driver and ﬁnally the system in performing the driving task. ITS covers Advanced
Driver Assistant Systems (ADAS), in-vehicle information systems, and roadside34 S. Grubmüller et al.
Fig. 3.3 Illustration of relation of connected, autonomous automated vehicles and cooperative
automated vehicles according to [ 2]
telematics [ 12]. The basis for an ITS are three main technologies: (1) information,
(2) communication, and (3) satellite technology.
Autonomous automated vehicles operate isolated from other vehicles and use
only satellite data, internal sensors, and radars for guidance of the vehicle, as shown
in Fig. 3.3. Without any wireless V2C or V2I, also called V2X, communication
technology, the functionalities of the aut onomous automated vehicle are limited.
This kind of vehicle needs vehicle-based standards. On the other hand, connected
vehicles provide such data communication but do not offer any automated function-
ality. In case a decision regarding the automated guidance of the vehicle is made
on the vehicle’s sensor data and data provided from outside, the system is called
connected or cooperative automated vehicle.
In [3] is stated that V2V data communication improves the trafﬁc information of
each trafﬁc participant consid erably. As an example, pr eceding vehicles are able to
inform following vehicles about trafﬁc jams in real time. If an automated function
is activated, the vehicle can adapt its velo city precisely. Furthermore, due to the V2I
data exchange, the automated function is able to align the guidance of the vehicle
based on data provided by surrounding information, such as velocity limitations
or lighting signals. A cooperative system has the potential to increase the trafﬁc
efﬁciency, enhance the trafﬁc safety, and decrease emissions.
Starting from the year 2014, Fig. 3.4shows an expectation of the gradual devel-
opment from connected to cooperative vehicles, from lower levels of automation,
and ﬁnally to fully cooperative automated vehicles in urban areas by 2030. The
ongoing deployment of ADAS, like automated parking or adaptive cruise control,
will improve the degree of automation.
On highways, the behavior and diversity of the trafﬁc participants as well as the
road course provide good conditions for aut omated driving, as mentioned in Chap.
15. Since highway scenarios are easier to predi ct, full automation for that use case is
predicted to be available sooner. The driving situation in urban areas is unpredictable3 Automated Driving from the View of Technical Standards 35
Fig. 3.4 Future development of automated and cooperative systems [ 2]
due to different trafﬁc participants, intersections, etc. [ 13,14]. Deploying automated
driving in urban areas, the system will need to be extended, for example with an
advanced perception syste m, trafﬁc rules interpreter, and a decision system [ 15].
As a result, [ 3] deﬁned ﬁelds of action to deploy cooperative automated driving
in Germany. Three of them are important concerning standardization: infrastructure,
IT security and data privacy, as well as legislation.
Infrastructure Cooperative driving requires high-speed data transmission. There-
fore, sensors on, e.g., buildings which return trafﬁc information need to be updated.
Germany’s government demands a comprehensive broadband basic supply of at
least 50 Mbit/s by 2018. Furthermore, new s tandards for the digitalization of the
federal road network need to be developed.
In [2], the author deals with deploying automated driving on roads in the
Netherlands and the new demands on the infrastructure. He divides the requirements
into two categories: (1) physical elements and (2) digital data.
1.Physical elements of the existing road infrastructure which have to be modiﬁed
or extended:
– Roads and road markings: Each type of road, e.g., highway and urban road,
needs to be clearly deﬁned and marked.
– Signs and trafﬁc management systems: All signs and trafﬁc lights are required
to be on-line due to the usage of determination of possible acceleration,
deceleration, and maximum sp eed of the automated vehicle.36 S. Grubmüller et al.
– Depending on the scenario, level of automation, and design choices, additional
infrastructure is needed. For example:
 Separate lanes, (parking) areas
 Supporting systems, signage, markings, trafﬁc lights, barriers, magnetic
markers for speed controlling and lane keeping, etc.
 Different construction requirements (different wear and tear)
2.Digital data : Infrastructure systems available at the moment are used for trafﬁc
monitoring and managemen t, e.g., cameras and radar s. Currently, the main V2I
applications are based on GPS and mobile phone signals [ 16]. In the next few
years, sensors on infrastructure and in vehicles will become data sources.
Therefore, the digital information is separated into static and dynamic data:
– Static data is deﬁned by data that is constant over a long period of time, like
information about streets and intersections.
– Dynamic data varies over a short period of time, like trafﬁc data. An effective
real-time data transmission between sender and receiver is mandatory.
IT Security Increasing automation and connec tion of vehicles is a reason for the
increase in the amount of data. Unprotected access to this data may inﬂuence the
vehicle safety in a bad way. As an example, fake messages produced during a
cyber attack could cause severe damage, which is why data encoding is important.
Automobile manufacturers and tier 1 suppliers must ensure secure data encryption
and communication. Validation by externa l organizations and a certain certiﬁcation
of the systems have to be considered. Hence, initiatives for cyber security for cars
already exist [ 17]:
 ETSI TS 102 941:2012—ITS; Security; Trust and Privacy Management
 SAE J3061: Cybersecurity Guidebook for Cyber-Physical Automotive Systems
 Information Technology-Promotion Agency (IPA), Japan: Approaches for Vehi-
cle Information Security
These standards do not, however, consider automated driving. Further, how IT
security could affect functional safety is not considered, either. It is necessary to
extend the ISO 26262 as a result of the increase of digital data in automated and
connected vehicles. Moreover, an impr ovement and concretization of IT security
and encryption standards need to be coordinated permanently.
Privacy Regarding data processing, generation, and linking techniques for data, it
will be required that anonymization be employed more and more. The policy of data
privacy must always be followed.
Legislation Concerning international legislation, the Vienna Convention implies
that only a human being is able to act as a driver. That article must be extended to
treat the system driver as the equivalent of a human driver. Also, the increase in the
maximum velocity for automated driving up to 130 km/h is mandatory. Additionally,
in national legislation, trafﬁc laws need to be adapted to enable automated driving.3 Automated Driving from the View of Technical Standards 37
Fig. 3.5 ITS station reference architecture [ 18]
From the government point of view, the four ﬁelds of action give a rough
overview of future work in respect to data transmission and legislation. From the
technical point of view, communication systems need to be determined.
The ITS system focuses on the vehicula r communication. A reference architec-
ture of an ITS station is supported by ISO 21217:2014 [ 18]a n ds h o w nF i g . 3.5.
The author in [ 19] compares different ITS standardization referring to the
vehicular communication. Standards have been developed in parallel in the USA
and Europe. They are commonly named C-ITS [ 20] in Europe and Dedicated
Short Range Communication (DSRC) [ 21] in the USA, both relying on the WiFi
standard IEEE 802.11. There are signiﬁcan t similarities between both, whereas an
ITS communication in Japan operates at a different frequency (700 MHz). In the
area of C-ITS, in Europe, ETSI and CEN with their TCs ITS and 278, in strong
cooperation with ISO TC 204, are the major SDOs. In the USA, the main SDOs
are IEEE and SAE with their working groups IEEE 802.11 Wireless LAN and
SAE 1609 DSRC. DSRC combines IEEE 802.11 and 1609 standards, which is also38 S. Grubmüller et al.
known as Wireless Access for Vehicular Environment (W A VE). The core standards
for DSRC are SAE J2736 and IEEE 1609 and 802.11. The core standards for C-ITS
are listed as ETSI TS 103 175, 102 687, 102 724, 102 941, 103 097, 102 539, EN
302 663, and 302 636 and for the CEN/ISO TS 19 321 and 19091. The release 1 of
standards for vehicular communication was published in 2014.
Regarding automated driving, both C-ITS and DSRC have to be extended.
Concerning V2X communication, release 1 supports up to the level of partial
automation. High aggregate information is transmitted. For higher levels of automa-
tion, sensor data with focus on latency, data rate, and reliability have to be
considered, as well. Furthermore, data is sent out to all participants in close
environments. Regarding cooperative maneuvering, numbers of vehicles may align
the next maneuvers (e.g., for lane mergi ng). Also, future systems, such as the 5G
cellular system, need to be taken into account in future standards.
Concerning road management, the ISO 14825 [ 22] speciﬁes data models for
geographic databases for ITS applications. The next version GDF5.1 will support
automated driving systems.
3.5 Road Map of Automation and Future Standardization
The ISO/TC204 WG14 is responsible for ITS—vehicle/roadway warning and
control systems. The latest outcome was presented in Hangzhou in April 2015
[23]. The acceptance of particular steps regar ding automated driving in the different
regions is shown in [ 23]. A forecast of deploying automated driving and related ITS
in the USA, Europe, and Japan is shown.
It is expected that Europe and Japan’s development in that ﬁeld will be driven
more by automobile manufacturers and tier 1 suppliers than in the USA, where a
regulatory process has been initiated [ 20].
Regarding the EU, serious deployment of V2I communication is demanded as
a basis for the Highway Pilot. That syst em of automation level 3 is expected to be
on the market by 2020 and fully automated driving functions, such as the Auto
Pilot, by 2025. In contrast, the USA gives only a forecast of level 2 systems,
which are expected by General Motors by the beginning of 2017. The whole V2X
communication will be available in the middle of 2019, as also expected in Europe.
Japan expects the deployment of level 3 automation on roads with intersections by
the middle of 2019.
The ISO TC204/WG14 prepared an expectation of the introduction of automated
driving functions and the related V2X communication on the international market.
According to that plan, ﬁrst level 3 functions will be deployed by 2017, the
Highway Pilot by 2019. Therefore, these expectations are mandatory for future
standardization of ISO/TC204 and other SDOs. It represents when standards are
needed, namely before relevant s ystems are seriously deployed.3 Automated Driving from the View of Technical Standards 39
References
1. O. Pink et al., Automated driving on public roads: Experiences in real trafﬁc, in
it – Information Technology 2015, 57(4), 223–230, (De Gruyter Oldenbourg, 2015).
doi:10.1515 /itit-2015-0010
2. T. Alkim, Infrastructure Requirements for Automated Driving Systems. Presentation presented
at the ISO/TC204, Hangzhou, 23 Apr 2015
3. Bundesministerium für Verkehr und digitale Infrastruktur, Strategie automatisiertes und
vernetztes Fahren: Leitanbieter bleiben, Leitmarkt werden, Regelbetrieb einleiten (2015),
https://www.bmvi.de/SharedDocs/DE/Publikationen/StB/broschuere-strategie-automatisiertes-
vernetztes-fahren.pdf?__blob=publicationFile . Accessed 9 Nov 2015
4. ANSI American National Standards Institute, www.StandardsPortal.org a resource for global
trade (2015), http://www.standardsportal.org/usa_en/resources/glossary.aspx . Accessed 24
Aug 2015
5. SAE International On-Road Automated Vehicle Standards Committee, Standard J3016: Taxon-
omy and Deﬁnitions for Terms Related to On-Road Motor Vehicle Automated Driving Systems
(2014)
6. J. Dokic et al., European Roadmap Smart Systems for Automated Driving. EPoSS: European
Technology Platform on Smart Systems Integration (2015), http://www.smart-systems-inte
gration.org/public/documents/publications/EPoSSRoadmap_Smart Systems for Automated
Driving_V2_April 2015.pdf . Accessed 9 Nov 2015
7. T.M. Gasser et al., Legal Consequences of an Increase in Vehicle Automation (2012),
http://bast.opus. hbz-nrw.de/vo lltexte/ 2013/723/pdf/Legal_consequen ces_of_an_increase_in_
vehicle_automation.pdf . Accessed 20 Nov 2015
8. National Highway Trafﬁc Safety Administration, National Highway Trafﬁc Safety Administra-
tion (2013), http://www.nhtsa.gov/staticﬁles/rulemaking/pdf/Automated_Vehicles_Policy.pdf .
Accessed 20 Nov 2015
9. M. Helmle et al., Transient System Safety and Architectural Requirement for Partly Highly
Automated Driving Functions, in Electric & Electronic Systems in Hybrid and Electric Vehicles
and Electrical Energy Management (2014)
10. J. Becker, M. Helmle, Architecture and system safety requirements for automated driving, in
Road Vehicle Automation 2 , ed. by G. Meyer, S. Beiker. Lecture Notes in Mobility, vol. 2
(Springer, Cham, 2015), pp. 37–48
11. International Organization for Standardization, Road Vehicles—Functional Safety. ISO 26262,
2011 (2011)
12. T. Vaa, Modelling Driver Behaviour on Basis of Emotions and Feelings: Intelligent Transport
Systems And Behavioural Adaptations, in Modelling Driver Behaviour in Automotive Envi-
ronments , ed. by P.C. Cacciabue (Springer, London, 2007), pp. 208–232
13. M. Campbell et al., Autonomous driving in urban environments: Approaches, lessons
and challenges. Philos. Trans. R. Soc. Math. Phys. Eng. Sci. 1928 , 4649–4672 (2010).
doi:10.1098/rsta.2010.0110
14. J. Levinson et al., Towards Fully Autonomous Driving: Systems and Algorithms, in Intelligent
Vehicles Symposium (IV) , KIT Germany, Baden-Baden, 5–9 Jun 2011
15. M. Czubenko, Z. Kowalczuk, A. Ordys, Autonom ous Driver Based on an I ntelligent System
of Decision-Making, in Cognitive Computation [Online]. Accessed 26 Aug 2015
16. M. Van Schijndel-deNooij et al., Deﬁnition of N ecessary Vehicle and Infrastructure Systems
for Automated Driving, Study Report (2011), http://vra-net.e u/wp-content/ uploads /2014/12/
SMART_2010-0064-study-report-ﬁnal_V1-2.pdf . Accessed 27 Aug 2015
17. E. Schoitsch, Approaches Towards Safe and Secure Mixed-Criticality Systems, in Functional
Safety Community , Graz, 15 June 2015
18. International Organization for Standardization, Intelligent Transport Systems—
Communications Access for Land Mobiles (CALM)—Architecture. ISO 21217, 2014
(2014)40 S. Grubmüller et al.
19. A. Festag, Standards for vehicular communication—From IEEE 802.11p to 5G. Elektrotechnik
Informationstechnik 132(7), 409–416 (2015). doi: 10.1007/s00502-015-0343-0
20. A. Festag, Cooperative inte lligent trans port systems (C-ITS) standards in Europe. IEEE
Commun. Mag. 12(52), 166–172 (2014)
21. J.B. Kenney, Dedicated short-range communications (DSRC) standards in the United States.
Proc. IEEE 99(7), 1162–1182 (2011)
22. International Organization for Standardization, Intelligent Transport Systems—Geographic
Data Files (GDF)—GDF5.0. ISO 14825, 2011 (2011)
23. M. Misumi, ISO TC204/WG14 Near Term Standardization Items . Presentation presented at the
ISO/TC204 WG14 Meeting, Hangzhou, Apr 2015
24. United Nations, 19. Convention on Road Trafﬁc, in United Treaty Collection. United Nations
Conference on Road Trafﬁc—Chapter XI. Transport and Communications B. Road Trafﬁc,
Vienna (1968), https://treaties.un.org/doc/Tr eaties/1977/ 05/19770524%2000-13% 20AM/Ch_
XI_B_19.pdf . Accessed 9 Nov 2015
25. United Nations, 20. Convention on road signs and trafﬁc, in United Treaty Collection.
United Nations Conference on Road Trafﬁc—Chapter XI. Transport and Communications B.
Road Trafﬁc, Vienna (1968), https://treaties. un.org/doc/Trea ties/1978/06/ 19780606%2000-35
%20AM/Ch_XI_B_20.pdf . Accessed 9 Nov 2015Part II
The Importance of Control
for Automated DrivingChapter 4
Survey on Control Schemes for Automated
Driving on Highways
Astrid Rupp and Michael Stolz
4.1 Introduction
Over the past two decades, autonomous drivin g has attracted the attention of several
research groups. The main goal of the control design for automated or autonomous
vehicles is an increased safety by mean s of reduced accidents. Moreover, trafﬁc
utilization and energy efﬁciency are considered as additional control objectives.
An early publication on control issues on automated highway systems has been
published in [ 34]. Much research has been conducted and many vehicles have
been equipped with automated driver assistance functions since that time. Adaptive
cruise control (ACC), which controls the longitudinal vehicle speed with respect
to a target vehicle or a desired velocity, is widely used in common cars. Lane
keeping assist (LKA) and lane departure wa rning are available lateral assistance
functions. The assistance is achieved by active steering and braking. In contrast,
the warning functions only alert the driver by giving haptic or acoustic signals. A
major topic of recent years is a lane change assist (LCA) function. This function
must compute and track a safe and comfortable trajectory for the lane change
maneuver. The combination of the mentioned functions yields advanced assistance
functions for highway driving, e.g., the combination of ACC and LKA allows the
vehicle to drive highly automated in its own lane. Adding a function capable of
lane changes results in the so-called Motorway Chauffeur or Highway Chauffeur.
Another highly automated assistance function responsible for efﬁcient and safe
driving is platooning. A platoon consists of several vehicles driving with a closer
A. Rupp (/envelopeback)
Institute of Automation and C ontrol, Graz University of Technology, Graz, Austria
e-mail: astrid.rupp@tugraz.at
M. Stolz
VIRTUAL VEHICLE Research Center, Graz, Austria
e-mail: michael.stolz@v2c2.at
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_44344 A. Rupp and M. Stolz
headway for trafﬁc congestion relief. The ﬁrst vehicle is the leader and may be
controlled by a human driver, the following vehicles track this leader autonomously.
The control task of a highly automated vehicle is to drive safely and efﬁciently
from one point to another while avoiding obstacles and infeasible maneuvers.
This task is usually divided into three sublevels [ 91]: ﬁrst, the mission planning
level computes the shortest or best path from point A to point B. The second level
constitutes the behavioral planning, which is the decision unit of the vehicle. This
level is responsible for processing environment data and computing the possible
lanes and goal points for the local motion planner. Motion planning is the third
and lowest level. It computes the best tra jectory based on the information from the
behavioral planner. The tracking controller takes care of tracking this trajectory and
is the focus of this work.
This survey is organized as follows: the remainder of Sect. 4.1states the
mathematical problem of tracking a trajectory on a highway with a highly auto-
mated vehicle. Sections 4.2–4.6treat the controller design using different control
techniques, namely fuzzy control Sect. 4.2, linear state feedback control Sect. 4.3,
sliding mode control Sect. 4.4, model predictive control Sect. 4.5, and other con-
cepts Sect. 4.6. In Sect. 4.7, tracking controllers implemented in autonomous vehicle
prototypes are brieﬂy discussed. A comparison is performed in Sect. 4.8, analyzing
the performance of some of the presented controllers and ﬁnally, an outlook is given.
4.1.1 Problem Statement
To reduce complexity of the control tasks during highway driving, the dynamics of
a highly automated vehicle is usually divided into longitudinal and lateral motion.
The longitudinal behavior is often modeled by a simple ﬁrst order system, while the
lateral behavior is of a more complex nature. There are two common models for the
lateral dynamics: the kinematic bicycle m odel and the dynamic bicycle model. Both
are summarized brieﬂy in this section, for details, refer to [ 74]o r[ 83].
The simple kinematic bicycle model assumes left and right wheels being
collapsed into single wheels at the cente r of the front and rear axle. The wheels
are assumed to have no lateral slip and only the front wheel is steerable. These
assumptions are fulﬁlled for low driving speeds and the model can be used in case
of zero velocity. Figure 4.1shows the kinematic bicycle model.
This single track model can be written as
2
4Px
Py
P/DC23
5D2
4cos./DC2/
sin./DC2/
L/NUL1tan.ı/3
5v; (4.1)4 Survey on Control Schemes for Automated Driving on Highways 45
Fig. 4.1 Kinematic bicycle model with the heading /DC2, the steering angle ı, and the global
coordinates of the rear wheels x;y. The wheels are connected by a shaft of length L. The velocity
vector at the center of the rear wheels is v
Fig. 4.2 Dynamic bicycle model, which considers forces acting at the wheels: Fx;fandFy;fare
the longitudinal and lateral forces of the front wheel, Fx;randFy;rdescribe the forces acting on the
rear wheel. The slip angles of the center of gravity (CG) and the wheels are denoted by ˇ,˛r,a n d
˛f
where the input variables vandıare the longitudinal velocity of the rear wheel and
the steering angle. Symbols x;yare the global coordinates and /DC2is the heading of
the car with respect to the global x axis.
The dynamic bicycle model includes wheel slipping effects due to lateral forces
on the vehicle (Fig. 4.2).46 A. Rupp and M. Stolz
The nonlinear dynamic bicycle model is given by the relations
PvyD/NULcf˛fcos.ı//NULcr˛r
m/NULvxr;PrD/NULlfcf˛fcos.ı/Clrcr˛r
Iz(4.2)
at the center of gravity, where vxandvyare the velocities in a vehicle local
coordinate system in longitudinal and lateral direction. Symbol rdenotes the yaw
rate. The coefﬁcients cicorrespond to the cornering stiffness and ˛ito the slip angle
of the wheels, i2ff;rg.mdenotes the vehicle mass and Izits yaw inertia. lfand
lrare the distances from the wheels to the center of gravity. Applying small angle
assumptions, a linearized state-space description can be formulated as
2
664Py
Ry
P/DC2
R/DC23
775D2
6664010 0
0/NULcfCcr
mvx0/NULvx/NULcflf/NULcrlr
mvx
000 1
0/NULcflf/NULcrlr
Izvx0/NULcfl2
f/NULcrl2
r
Izvx3
77752
664y
Py
/DC2
P/DC23
775C2
66640
cf
m
0
cflf
Iz3
7775ı; (4.3)
which is of the linear form PzDAzCbufor constant velocity vx. For many tracking
tasks, a reformulation in path and/or error coordinates is advantageous. For more
detail, see [ 74,83].
An important prerequisite for these tracking tasks is a trajectory generation. The
following subsection tackles one way to g enerate such reference trajectories.
4.1.2 Trajectory Generation
For automated driving, trajectory genera tion is essential for maneuvering safely and
efﬁciently on a highway or in urban scenar ios. In contrast to the basic assistance
functions such as ACC and LKA, which can be executed without reference
trajectory (they have other references, i.e ., target vehicles or target lanes), LCA
requires a smooth path in order to guarantee a safe lane change.
A survey on trajectory generation can be found in [ 28]. One can distinguish
between two main areas where tra jectory generation arises:
1. Robotics: in the navigation task of robots in known or unknown environments,
grids are usually used to decompose the sensor data with information of obstacle-
free and obstacle-occupied space into cells. Neighboring cells are connected
by weighted edges and a graph is constructed with the initial condition as
starting node. A graph-based algorithm is then applied to ﬁnd the path with the
lowest cost from the starting point to an end point. This path consists of several
segments that are tracked one after another, which yields non-smooth behavior. A
smoothing algorithm thus needs to be applied for the use in autonomous driving,
in order to avoid discontinuities in trajectories.4 Survey on Control Schemes for Automated Driving on Highways 47
The involved kinematics and dynamics of the system are ignored by most
algorithms, which may result in infeasible solutions for motorway driving.
Another drawback of these approaches is the memory storage required for
building the graph and the necessity of post-smoothing. Moreover, the lanes of
the highway are typically available in the form of “drive corridors” from sensor
fusion, which makes the search for a possible path unnecessary.
2. Control theory: optimal theory is used to ﬁnd trajectories of a dynamical system
that minimize a given cost functio n given an initial condition and an end
condition. The dynamics of the system is taken into account explicitly, the
generated solutions are feasible with respect to the model. Obstacles can be
considered by formulating constraints or by rejecting trajectories that result in
collisions.
The control theory domain offers several possibilities to deal with the trajectory
generation task. Polynomial approaches or model predictive control (MPC) are
employed in many publications, e.g., [ 46,96]a n d[ 18]. Since the polynomial
approach is simple and very popular, its main points are described in brief below.
4.1.2.1 Polynomial Approach
One common straightforward approach for lane changing trajectories is the calcula-
tion of ﬁfth order polynomials, since they can establish smooth transitions between
the vehicle’s actual and desired ﬁnal positions. In most cases, the lateral behavior
is deﬁned by the polynomial and the longitudinal trajectories are chosen based on
simpler methods.
Assuming constant longitudinal velocity for simplicity, the lateral trajectory
generation process consists of three main steps:
1. End point deﬁnition:
In order to avoid obstacles and to allow efﬁcient driving, a set of end positions
on the road is deﬁned as goals of the local trajectories, as described, for instance,
in [91]. The lane centers of the possible lanes are typically included. Additionally,
other end points may be considered for safety purposes, e.g., if a truck overlaps
the lane markings slightly, the vehicle shall keep a safe distance and prefer
driving more on the far side of the lane (but still in the lane). This non-centered
driving when adjacent to large trafﬁc par ticipants also resembles human driving
strategy.
2. Generation of trajectories:
Given initial and end conditions for position, velocity, and acceleration, one
can choose a ﬁfth order polynomial in order to minimize a cost function consist-
ing of the lateral jerk, which is the third time derivative of the position. The initial
conditions are provided by sensor data or observers, while the end conditions are
chosen as desired. As described, e.g., in [ 41], the coefﬁcients of the polynomials
can be computed based on this problem formulation and the trajectories from
the starting point to each end point are g enerated. Changing the cost function48 A. Rupp and M. Stolz
results in a different computation of the coefﬁcients of the polynomial. Since
each generated trajectory is evaluated by another cost function, several aspects
such as safety and efﬁciency can be incorporated in the last step.
3. Evaluation of trajectories:
The best choice in respect to a speciﬁc cost function is selected from the set
of generated trajectories. The cost function typically includes obstacle avoidance,
choice of lane, and lateral position in the desired lane, among others. Obstacle
avoidance is certainly the crucial task in this step. If a trajectory causes a
collision, it is rejected by setting the cost to inﬁnity. A prediction of the ego-
vehicle and all obstacles is thus needed. If no collision is detected, the cost can be
computed based on the distance, given, e.g., by an ellipsoid around the obstacle
as in [ 41]. For the other cost components, the trajectory is evaluated at certain
time stamps with respect to certain aspects, e.g.,
 desired lane (deﬁned by the driver, default is the rightmost lane in Europe)
 lateral position in current lane
 jerk and/or acceleration
 desired longitudinal velocity
 stationarity
Finally, all cost components are summed up and the trajectory with the least
cost is chosen. However, this may result in high-frequency switching if the
computation is executed at every time step. A ﬁlter can be added in order to
ensure smooth and efﬁcient behavior.
In many trajectory generation approaches, the longitudinal behavior is not con-
stant but deﬁned by the so-called velocity proﬁle. This proﬁle allows combinations
of constant velocities, acceleration or decel eration, or other ﬁxed functions of time
to be taken into consideration. The evaluation process is then executed based on this
velocity, see, e.g., [ 56]. Other approaches consider the generation of longitudinal
and lateral behavior simultaneously, e.g., [ 100].
The output of the trajectory planning algorithm is the references x.t/;y.t/;/DC2.t/;
/DC4.t/,w h e r e t2Œt0;tf/c141and/DC4denotes the path’s curvature. Tracking of these reference
trajectories is a control objective and is described in the next section.
4.1.3 Control Concepts
Controlling a vehicle’s motion is a crucial task for advanced driving assistance
functions. In the context of a highly automated vehicle many control tasks need to
be considered: e.g., lateral stability control and driving at the limits for collision
avoidance. The focus in this survey, however, lies on comfortable driving on
highways only. In order to concentrate on control approaches it is additionally
assumed that a smooth and feasible reference trajectory is available and that the4 Survey on Control Schemes for Automated Driving on Highways 49
vehicle is able to track this in respect to dynamic constraints such as maximum
steering angle and maximum steering rate.
In the subsequent comparison of the different approaches that will be sum-
marized below, important requirements from the implementation perspective are
introduced. We pay special attention in the discussion that follows to the following
controller properties:
 real-time capability: the control law must be executed on an embedded control
unit within a deﬁned and guaranteed calculation time.
 parametrization: tuning of parameters should be straightforward.
 structure (speciﬁc vs. general): the controller should work on different vehicles.
 robustness: since parameter uncertainties exist such as unknown load or road
surfaces, and external disturbances such as side wind force and inclination of
road, robust performance must be ensured.
 nonlinearities/dependence on vehicle speed: the controller must work from 0(in
the event of trafﬁc jams) to at least 130 km/h.
These requirements typically result in a two degree of freedom controller consisting
of a feed-forward term based on the referen ce trajectory, and a feedback controller
responsible for disturbance rejection. Not all approaches will satisfy the require-
ments stated above. Nevertheless, some approaches can be used for simulation
purposes only.
In some control concepts, the so-called look-ahead distance (LAD) is introduced
in order to improve controller performance. Not the actual position with respect to
the reference, but the position a certain distance ahead is considered for the control
task. The choice of this distance is not a trivial matter: by choosing a greater value,
the vehicle tends to cut corners, which is not desirable. However, for greater values
of LAD robustness and smoother behavior can be achieved.
There are many different control schemes that are applied to the tracking task. In
this survey, we want to highlight the beneﬁ ts and drawback of these schemes. Before
listing previous work, a short introduction to the different controllers is given.
4.1.3.1 PID Control
The PID controller is a simple control law which takes into account the error variable
(P as “proportional”), the integral (I as “integral”), and the derivative of the error
variable (D as “derivative”) see, e.g., [ 2]. Various adjustment rules exist for the
parameters of such controllers, e.g., [ 69]. The control law in time-domain is given
by
u.t/Dkpe.t/CkiZt
t0e./FS/d/FSCkdd
dte.t/: (4.4)
The parameters kp,ki,kdcan either be ﬁxed or computed by a scheme called
“gain scheduling,” which updates the para meters based on the velocity or other50 A. Rupp and M. Stolz
scheduling variables. An ideal PID cont roller cannot be implemented in reality,
therefore the derivative part is replaced by a DT1-transfer function in practice.
The main advantage of this controller is its generic applicability, i.e., it is not
necessary to know the mathematical model of the plant. However, the integral part
may be troublesome, and the D-part of the controller may be sensitive to noise in
measurement. In many cases, this simple controller can be outperformed by other
control approaches.
4.1.3.2 Fuzzy Control
This heuristic scheme has been introduced in [ 35] and is similar to a PID controller
since it employs the error, its integral, and derivative. Fuzzy control is usually
applied in systems where no mathematical model is known or where models are
difﬁcult to obtain. It is thus possible to use the controller for nonlinear dynamics
and multiple-input multiple-output system s. The input variables are transformed
into linguistic variables by using membership functions. The output of the controller
is chosen based on fuzzy rules which take an “if-then”-like form. Such a rule can be
designed as
if“lateral position error” is left then “steering” is right.
In this case, “lateral position error” is the linguistic input variable and “steer-
ing” the output variable. Tuning of the membership functions for these variables
is done manually during driving tests. The controller acts in a manner similar
to human behavior, because of the human-like rules. However, the tuning is not
straightforward, and stability analysis is hardly possible without mathematical
models. Moreover, depending on the number of variables, the rules can become
unmanageable.
4.1.3.3 Neural Networks
Artiﬁcial neural networks have ﬁrst been investigated for vehicle dynamic control
in [73]. They are typically represented by a system of interconnected neurons, where
each connection is assigned a certain weight that is tuned based on training data or
on-line. This procedure results in an adaptive net that is capable of learning. The
network can be taught to imitate driver reaction if the driver makes an allowance
for a speciﬁc training phase. A controller is designed based on the model to emerge
from this. The main drawbacks of this appr oach are the need for training data and
the fact that no explanation for failure can be given.4 Survey on Control Schemes for Automated Driving on Highways 51
4.1.3.4 Linear Quadratic Regulator
The linear quadratic regulator (LQR) uses a linear plant model and optimal control
theory to obtain an optimal state feedback controller as described, for instance,
in [50]. The control input uis computed by the relation u.t/D/NUL kTx.t/,w h e r e
x2Rnis the states of the system and k2Rnis computed in such a manner that the
cost function
JŒu/c141DZ1
0.xTQxCuTRu/dt (4.5)
is minimized with respect to an inﬁnite time horizon. In contrast to the already
mentioned control structures, this approach needs the information of a plant model
in advance and actual signals of all states during operation. Since this is not given
by default, a state observer needs to be implemented.
4.1.3.5 Feedback Linearization
Feedback linearization is a common technique rendering the closed loop system
linear with the help of nonlinear compensation, see [ 33,49]. Flatness-based
approaches are closely related to this linearization, for further details, refer to [ 53].
4.1.3.6 Sliding Mode Control
The sliding mode control (SMC) approach relies on a variable structure controller
and is robust with respect to a speciﬁc class of modeling uncertainties and external
disturbances [ 20]. It consists of two main design parts: in a ﬁrst step, a desired
dynamics is deﬁned by the so-called sliding variable, e.g., sDPeC/NAKe,w h i c h
ensures for sD0that the error econverges to 0 in ﬁnite time, with the weighting
factor/NAK. In the second step, a controller is deﬁned so that this desired dynamics is
obtained, for example, PsD/NUL ksign.s/with the control parameter k. This switching
law may generate chattering in the control input, which can be prevented by
using higher-order SMC. A well-known second-order sliding mode controller is the
“super-twisting algorithm,” [ 52]. A downside of this approach is that it is derived
in continuous-time, but its discrete-time behavior strongly depends on the sampling
frequency [ 62].
4.1.3.7 Model Predictive Control
At each time step an internal model is used to predict the system behavior over
a predeﬁned horizon, where an optimal control input sequence is generated that
minimizes a certain cost function. This approach allows the consideration of52 A. Rupp and M. Stolz
different types of constraints for states and inputs, which is a major advantage of
MPC. The main disadvantage is the high computational complexity, which is the
reason for its scarce utilization in real-time applications. Additionally, there is need
for an explicit model for prediction, and external inputs and disturbances need to be
known fairly accurately in advance for the entire prediction horizon [ 6]. A simpliﬁed
MPC formulation similar to the one derived in [ 14] can be represented by
min
u0jt;:::;uNc/NUL1jtNp/NUL1X
kD0xT
kjtQxkjtCNc/NUL1X
kD0uT
kjtRukjt
subject to xkC1jtDAxkjtCBukjt;kD0;1;:::; Np/NUL1;
xmin
kC1jt/DC4xkC1jt/DC4xmax
kC1jt;kD0;1;:::; Np/NUL1;
umin/DC4ukjt/DC4umax; kD0;1;:::; Nc/NUL1;
ukD0; Nc/DC4k/DC4Np;(4.6)
where Ncis the control horizon, Npthe prediction horizon, Nc/DC4Np,a n d xmin
kC1jt,
xmax
kC1jt,umin,umaxthe constraints for states and input, respectively. The subscript
kC1jtdenotes the value of the variable kC1steps ahead of the current time t.
4.1.3.8 H 1Control
This robust approach attempts to control a plant affected by modeling uncertainties
and parameter variations [ 82,102]. An optimization problem needs to be solved
once, minimizing the so-called H1-norm of a particular transfer function Tof the
control system. The transfer function Tis deﬁned by the control objective (noise
rejection, tracking, etc.), the plant, additional uncertainty models, weighting transfer
functions, and the feedback control matrix, which is the optimization parameter. For
a stable single-input-single-output system, the H1-norm is the largest value of the
frequency response magnitude . For a stable multi-input-multi-output system it is the
largest singular value N/ESCacross all frequencies !
kTk1WDsup
!2RN/ESCŒT.j!//c141: (4.7)
The advantages are inherent robust stability and robust performance. Depending
on the approach (choice of weighting/shaping transfer functions), this design may
result in dynamic controllers of high order, which are complex to realize in practice.4 Survey on Control Schemes for Automated Driving on Highways 53
4.1.4 Partitioning the Problem
The control design of automated vehicles can be partitioned into the following
tasks:
(a) Longitudinal control:
A common approach to control the longitudinal behavior is to divide the
controller level into an inner loop for throttle and brake control, and an outer
loop for velocity or acceleration tracki ng. This approach is exploited in many
of the listed publications, for an introduction, see [ 74].
There are typically two ﬁelds of research: the ﬁrst one tackles the ACC
functionality, where a desired velocity is to be maintained or a target is to be
followed at a safe distance. In [ 43], safety issues in real world contexts and
vehicles equipped with ACC in 2003 are discussed. Since the control task of the
ACC is more or less completed, we refer to a review on earlier works on ACC
in [8].
The second ﬁeld deals with platooning, where a leader vehicle shall be
followed by the other vehicles. A survey on platooning can be found in [ 6].
With the assumption of communication between the vehicles in the platoon, the
so-called cooperative ACC (CACC) arises, as treated in [ 81].
(b) Lateral control:
For comfortable automated driving, the central lateral control tasks are lane
keeping and lane changing. From a control point of view, the main difference
of these two functions is that the LKA tries to keep the vehicle in the middle
of the lane, i.e., a stabilization task, while LCA tries to follow a reference
trajectory computed by another entity (t rajectory planning) , which corresponds
to a tracking task. In publications from the late 1990s, e.g., [ 38,68], magnetic
strips are considered to allow localization of the vehicle. In the California PATH
program, the lateral sensing system consisted of magnetic markers embedded
along the road center line and two sets of magnetometers installed under the
front and rear bumpers of the vehicle, see, for example, [ 40]. At the present time
the algorithms are either vision-based [ 87] or GPS-based [ 45,64]. However, the
control task for lateral control stays the s ame: minimize the lateral displacement
and the angular error with respect to the reference trajectory (either lane center
or polynomial).
(c) Combined control:
Assistance functions for both longitudinal and lateral motion are in general
more complex than the control strategies discussed so far. The separate design
of the steering angle happens mostly under the assumption that the velocity is
constant. This of course is not always the case and may lead to problems. For
example, at higher speeds, a smaller steer ing angle is needed for the same lateral
displacement at a certain LAD. However, many publications handle the steering
and the velocity inputs separately, using the current velocity of the vehicle in
the lateral control design.54 A. Rupp and M. Stolz
The control techniques described in the next sections are partitioned according
to problems (a)–(c).
4.2 Fuzzy Control
(a) In [ 63], a fuzzy controller for throttle and brake control is proposed for a
combination of ACC and Stop&Go. Car-following behavior based on fuzzy
control is also discussed in [ 101]a n di n[ 90], where the latter proved stability
based on the so-called linear matrix inequalities (LMI) conditions.
The longitudinal controller is implemented by a neuro-fuzzy controller
in [13]. The output layer is updated on-line via a gradient algorithm. According
to the authors, an attractive feature of this method is that it does not require
training data or the vehicle longitudinal dynamic model. Simulations show
that in comparison to a PID controller, the neuro-fuzzy controller exhibits
a smoother performance and hence prov ides a more comfortable feeling for
passengers onboard. In thesis [ 11], more details on this approach can be found.
The authors of [ 72] introduced a fuzzy control strategy for CACC in order to
achieve human-like driving behavior in a cooperative environment and produce
satisfactory results.
(b) In [ 12], lateral control is conducted via fuzzy PD control. A generic algorithm
method is used to optimize the parameters of the fuzzy controller.
A comparison of a fuzzy controller and a control law derived by using
the nonlinear kinematics model with a Lyapunov function has been published
in [58]. The fuzzy controller demonstr ates effective performance.
A simple lane change fuzzy controller with four rules is presented in [ 64],
where two different control strategies are designed: one for straight road driving,
the other one for lane change maneuvers. Simulations indicate that the switching
between the controllers is smooth and the overtaking maneuver can be executed
similar to human performance.
In [71], a cascade architecture for latera l control has been presented. The
low-level is governed by a discrete PID controller. The high-level is governed
through fuzzy logic, which computes desired steering and angular speed for the
PID controller. This control architecture gives good results for different vehicle
speeds and curves. The high-level output signals are smoothed out by the lower
level PID controller, which avoids undesi rable oscillations of the steering wheel
that could be particularly dangerous at higher speeds.
A genetic algorithm has been applied to adjust a fuzzy controller automati-
cally in [ 70], which overcomes the tuning problem of the fuzzy control scheme.
In [93], two controllers based on fuzzy logic are designed for the lateral offset
and angle error, respectively. The speed of the vehicle is taken into account and
the two outputs are ﬁnally weighted and summed up to obtain the steering wheel
angle for the actuator.4 Survey on Control Schemes for Automated Driving on Highways 55
4.3 Linear State Feedback Control
(b) The lateral dynamics is controlled by using LQR design for the state feedback
controller in [ 74]. A feed-forward term is computed considering the road
curvature. A similar LQR approach inco rporating constraints on the steering
angle has been discussed in [ 48].
In [40], an output-feedback controller has been derived by the LQR method
when only position feedback is available, preserving certain robustness proper-
ties such as phase margin and gain margin.
In [87], lane keeping performance on a curved road is improved by adding
the integral of the lateral offset error to the state feedback controller. The authors
implement a multi-rate Kalman Filter for state estimation in order to allow the
LQR controller to operate at the fast update rate of the microprocessor. This
multi-rate control scheme can reduce the inter-sample ripples in the yaw rate.
Bilinear matrix inequality (BMI) optimization is presented in [ 7] to compute
a state feedback controller, which is cap able of lane keeping as well as obstacle
avoidance assistance.
4.4 Sliding Mode Control
(a) In [ 75], a sliding mode-based longitudinal control design for platoons is
presented using a time-variant LAD. Similarly, a sliding mode controller
for platooning with wireless communication is demonstrated in [ 74]. The
experiments indicate that the spacing performance and ride quality are superior
to human driving skills.
Cruise and longitudinal tracking control of vehicles are considered in [ 24]
and [ 25]. The ﬁrst publication exploited suitably designed observers for SMC.
The second presented an additional collision avoidance functionality.
SMC for hybrid electric vehicles has been applied for cruise control in [ 27].
The authors claim that this approach yields good performance, especially when
compared to a PID controller.
The authors of [ 98] focus on a sliding mode controller for platooning due to
its robustness to parameter uncertainties and external disturbances.
(b) In [ 1], the ﬁrst sliding mode controller for steering a city bus has been published.
The author introduced the so-called Ackermann-model for vehicle steering,
which is used quite extensively. The sliding mode approach is extended in [ 38]
to a chatter-free performance for automated highway systems. In thesis [ 39],
loop shaping, H1control, and SMC for lateral mo tion on a tractor semi-trailer
are compared. It is shown that the performance of the controllers strongly
depends on the choice of the LAD. The robustness of a sliding mode controller
has also been mentioned by Hatipoglu et al. [ 31], where lane changing and
lane keeping maneuvers are impleme nted as different modes. Sliding mode56 A. Rupp and M. Stolz
controllers for trajectory tracking or path tracking can also be found in [ 84–86].
In these papers, the lateral displacem ent and the heading error of the vehicle
are combined in the sliding manifold for the steering input. This combination
demands that both variables converge and have been implemented using the
kinematic bicycle model as well as four-wheel steering vehicles. In [ 32], active
front steering and dynamic stability contro l are coordinated. For the steering
functionality, a sliding surface for yaw rate tracking is employed. The dynamic
stability control is developed independently for emergency maneuvers. A rule-
based integration scheme using a fuzzy membership function chooses between
the two subsystems. The authors state that this integrated approach leads to
improved vehicle stability.
In [88], lateral dynamics are controlled by a super-twisting controller, which
is robust to time-varying speed, curvature, and parameter uncertainties, while
chattering is avoided. A terminal sliding mode method based on a look-ahead
scheme has been presented in [ 99]. An adaptive algorithm is used to tune the
controller parameters.
A sliding mode controller is compared in [ 16] to a driver-model-based
controller, which consists of a PI cont roller with LAD. Two sliding surfaces
are designed: one for the lateral displacement and one for the heading error.
Since only one control input is available, these two sliding surfaces are then
combined to one sliding variable. Th e SMC achieves higher accuracy in path
tracking, but needs a larger steering input. With a saturation on the steering
angle, both controllers yield similar perfo rmance. It is also demonstrated that a
SMC using preview control does not outperform the conventional SMC.
(c) In [ 30], a sliding mode controller is implemented by the super-twisting algo-
rithm for the tracking problem of a car-like system called “Robucar.” The
derived control laws are of discontinuous type and may lead to discontinuous
velocities in practice. This difﬁculty is overcome by taking into account the
actuator dynamics. The approach works well for the robot, but needs to be
adapted for autonomous vehicles.
In thesis [ 21], an integrated high-level control for longitudinal and lateral
dynamics has been introduced. A higher-dimensional sliding surface is chosen
to compute the reference for the low-level controller. In the higher level, the
dynamics of the longitudinal and lateral control are coupled, whereas the low-
level control treats the dynamics separately. A simple PI controller is used in
the feedback loop, a feed-forward block is in charge of compensating for the
estimated disturbances.
Discrete-time and continuous-time sliding mode controllers have been inves-
tigated in [ 19] on a four-wheel-robot. The work points out that the discrete-time
controller has a lower longitudinal error, while the continuous-time controller
has a lower lateral error.
The authors of [ 97] tested a sliding mode based control on the autonomous
vehicle “Kuafu-II,” where the driving control system integrates both the lon-
gitudinal and lateral controllers. The longitudinal controller is designed as
a main speed controller and a space c ontroller for obstacle avoidance. The4 Survey on Control Schemes for Automated Driving on Highways 57
parameters of the speed controller a re computed by an adaptive law, while
the space controller is implemented as PI controller with gain scheduling. For
low velocities, the lateral controller will use Stanley’s law that is discussed in
Sect. 4.7and published in [ 89]. In higher speed ranges, the controller switches
to a sliding mode controller in ord er to improve tracking accuracy.
4.5 Model Predictive Control
The main advantage of the MPC approach is the possibility for explicitly han-
dling constraints. Moreover, the control design for nonlinear models or combined
dynamics is easier than with multiple-input mu ltiple-output control schemes. Since
MPC is able to consider highly dynamical systems, many lateral controllers are
also combined with longitudinal control. The controllers from the lateral control (b)
are thus moved to the combined problem (c). The main drawback has long been
the computational complexity, which is why a computation time is stated in many
publications. Efﬁcient solvers exist, however, that make use of MPC in real-time
applications possible. A little more computation time is not critical, especially in
comfortable scenario. Due to the constraint handling, many publications on MPC
also treat collision avoidance maneuvers. In these maneuvers, driving at the limits
occurs and constraints become active, which induces longer computation times.
However, the collision avoidance maneuvers are practically “built-in,” which is a
very nice property of this control scheme.
(a) Early works using MPC for ACC control tasks have been presented in [ 5]
and [ 17]. In [ 55], an MPC strategy has been used for ACC. A low-level con-
troller compensates for vehicle dynamics and tracks the desired trajectory. The
high-level MPC minimizes a quadratic cost function that consists of minimal
tracking error, low fuel consumption, an d accordance with driver dynamic car-
following characteristics. Driver longitudinal ride comfort, driver permissible
tracking range, and rear-end safety are f ormulated as linear constraints which
are softened to avoid computational infeasibility.
In [79], a nonlinear MPC approach is investigated using only one control
loop (instead of an inner and outer control loop). The overall model is
augmented in order to combine distance and speed tracking control.
(c) In [ 9], a nonlinear model predictive approach (NLMPC) is described, where
its performance is checked for a double-lane change maneuver on snow. The
performance depends on the horizons of the control scheme and the vehicle
speed. The computation time has been in vestigated using the NPSOL software
package and is given for inactive constraints by 0.1 to 0.3 s, for active constraints
by0:1to 1.6 s. An extension of this work that examines side wind rejection has
been published in [ 47], with an average NPSOL computational time 0.13 s, and
in the worst case 0.38 s.58 A. Rupp and M. Stolz
In [23], another extension has been proposed for combined braking and
steering, where a linear time-varyin g (LTV) MPC is recast into a quadratic
program. The performance is enhan ced when compared to steering only.
NLMPC has also been applied in [ 3]. Additionally, a cruise speed-proﬁle
generator is responsible for adapting the cruise speed at lateral maneuvers. The
proposed control law allows the consideration of variable longitudinal speed
and sliding during lateral maneuver s. The same author presented a nonlinear
longitudinal control strategy considering powertrain dynamics in [ 4]. A control
architecture is introduced which combines the steering and the longitudinal
controllers so as to ensure the simultaneous control of longitudinal and lateral
motions.
In [51], the authors aim to reduce the computational complexity of the
MPC approach. An approximate explicit MPC scheme is demonstrated, where
suboptimal controls are used with its computation time being drastically
reduced and its accuracy being signiﬁ cantly improved. The authors generate
grid points to build nodal state paramete r vectors in the state space, for which
optimal solutions are to be computed off-line. The nodal state parameter vectors
construct polytopes, for which equivalent suboptimal feedback control gains are
computed off-line.
Automated lane change maneuvers have also been treated in [ 67], where
the longitudinal and the lateral control is handled by two loosely coupled low
complexity quadratic programs.
In [57], an LTV-MPC using sparse clothoid- based path description is imple-
mented. Only a few waypoints are computed to represent the road, which makes
the cost function minimization more efﬁcient by allowing larger prediction
distances.
4.6 Other Concepts
(b) The so-called H2control design for lane keeping has been presented in [ 80].
LQG and H1have been investigated by Eom et al. [ 22], where it has been
shown that H1is more robust and produces lower control input.
Low energy consumption is accomplished by H2control in [ 42]. Addition-
ally, a H1controller for disturbance rejection is employed. A switching control
for the two subsystems was designed for further improving system performance.
In [66], an adaptive output-feedback controller called “self-tuning regulator”
is demonstrated. Adaption laws with the so-called parameter reduction are
stated. All vehicle parameters are considered unknown and therefore this
approach can be realized for a wide variety of vehicles. It is also robust
to variations on curvature and lateral wind. The main disadvantage of this
approach is the high computational complexity, as has been pointed out in [ 83].
The self-tuning regulat or has been compared to H1control, fuzzy control,
a n daPc o n t r o l l e ri n[ 15]. Three different situations are simulated in order to4 Survey on Control Schemes for Automated Driving on Highways 59
investigate the robustness of the approaches: ﬁrst, the road friction coefﬁcient
is varied. The P controller produces the largest error while the self-tuning
regulator has the best response. Second, the longitudinal speed is changed.
Similar performances as in the ﬁrst case h ave been observed. Third, lateral wind
is introduced as disturbance. The P contro l is less affected by the wind force than
the other controllers. The authors state that the self-tuning regulator is one with
the best performance, at least from a simulation point of view. However, it is
also the most complicated to be implemented.
The authors of [ 59] propose an active front steering control based on the yaw
rate tracking error. They use two PID control loops, where one loop tracks the
yaw rate reference signal that is gener ated by the other. Seven control gains
and the LAD must be chosen, where the design parameters are tuned through
numerical optimization.
In [44], a steering control algorithm that does not depend on vehicle
parameters has been presented. The steering angle is computed in such a manner
that a desired yaw rate can be tracked and adapts the corresponding gain in order
to compensate the yaw rate error. This control law can be applied for any vehicle
without any information on vehicle parameters. However, real-time experiments
for automated driving have not yet been tested by the authors.
(c) In one of the earlier publications on autonomous driving [ 68], an H1based
lane keeping controller has been investigated that works for both curved and
straight highway sections without knowledge of the radius of the road curvature.
Another early approach [ 10] applies a gain scheduled P controller for active
safety systems.
The authors of [ 45] propose a steering controller based on ﬁnite preview
optimal control, which is basically an LQR controller plus feed-forward term.
The speed controller is designed as a simple proportional control and the desired
speed is set so that the lateral acceleration stays below a predeﬁned value.
This controller in combination with the steering controller signiﬁcantly reduces
lateral acceleration when compared to constant speed.
In [37], a longitudinal control via PID controller and a lateral control
viaH1loop shaping have been published. The authors employed a feed-
forward term for curvature dependence and also drew attention to the high
computational burden this involved. The same research group published an
adaptive backstepping approach in [ 36], using the yaw rate as virtual input.
The controller is robust with respect to parameter variation in the matrix Aof
the dynamic bicycle model ( 4.3). However, variations in the input vector bhave
not been investigated.
Backstepping is also mentioned in [ 29], where a simple trajectory planning
algorithm for the lane change maneuver is presented and the tracking controller
produces satisfactory performance. Coupled longitudinal and lateral backstep-
ping control with a control robustiﬁcation is discussed in [ 65].
Another backstepping-based approach has been studied in [ 95], where
the authors consider forward and backward driving. A feedback law with
orientation control has been investigated mainly for backward driving, since60 A. Rupp and M. Stolz
forward driving is improved when using a feedback law without this orientation
control. The same author also describes exact input-output-linearization in his
thesis [ 94], where the nonlinear transformation yields two linear decoupled
systems that are stabilized by simple state feedback controllers. The exact
linearization shows good performance at higher speeds, while the backstepping-
based approaches have smooth behavior also in the starting and stopping pro-
cesses, since the singularities at standstill are avoided by velocity-independent
feedback gains.
A modular approach has been presented in [ 77]. A dynamic feed-forward
term is computed using a model of the system with a state feedback controller
and a pre-ﬁlter. A simple P controller for lateral displacement and angular error
is combined with a disturb ance observer that provides steady-state accuracy.
Gain scheduling for the controller parameters depending on the velocity is
proposed. A lookup table is obtained using a parameter space approach by the
so-called gamma and beta stability, as also described in [ 92].
Flatness-based control for nonlinear vehicle dynamics has been proposed
in [26]. A nonlinear bicycle model is used and a ﬂat output is derived. Given the
desired trajectory of the ﬂat output, the tracking controller computes the control
input for the nonlinear state feedback control block. This block then generates
the steering and velocity for the vehicl e. The performance has been shown for a
lane change maneuver.
In [60]a n d[ 61], lateral and longitudinal controllers are combined to perform
some coupled maneuvers, such as stop-and-go control with obstacle avoidance
and lane change maneuvers. A ﬂatness-based controller computes steering
and velocity for the nonlinear bicycle model. Since derivatives of reference
and measured vehicle signals are needed in these computations, an algebraic
nonlinear estimation is introduced for t he numerical differentiation of the
signals. The results indicate good performance even under sudden and sharp
maneuvers.
The authors of [ 76] compare a simple kinematic controller consisting of
a feed-forward term plus P controller with a ﬂatness-based control approach.
This approach combines a ﬂatness-ba sed feed-forward control with an LQR
feedback control. Disturbances can be rejected in both cases, but the simple
approach has higher overshoot and the ﬂatness-based approach is faster.
The main drawback of the ﬂatness-based strategy is that it needs additional
information from the vehicle, speciﬁcally the side-slip angle and the yaw rate.
4.7 Autonomous Vehicles
This section brieﬂy lists the control structures demonstrated on autonomous vehicle
prototypes. The control schemes are primarily standard approaches, since the focus
has been on environment perception or trajectory planning.4 Survey on Control Schemes for Automated Driving on Highways 61
The team of Stanford [ 89] implemented the velocity and steering controllers
separately for its vehicle “Stanley” at the DARPA Grand Challenge. The velocity
control is implemented as a PI controller, while the steering angle is computed by a
nonlinear feedback function of the cross-tr ack error, which is known as the “Stanley
method.” The performance of this controller degrades seriously at higher speeds, as
also mentioned in [ 83].
The controller of “Junior” consists of an MPC strategy with a PID block [ 54].
The feed-forward term has to be tuned speci ﬁcally for the vehicle. Longitudinal
control for “Leonie” has been presented in [ 78]. The work introduces the so-called
Grip Value, which is an indicator for potential changes of road conditions and is
applied as an additional input to the controller.
In [103], research on the autonomous vehicle “Bertha” has been published.
A Luenberger observer is designed to estimate the lateral displacement and its
derivative with respect to time. The lateral control consists of a feed-forward part for
the desired yaw rate that is based on the road curvature at a look-ahead point, and a
feedback component realized by a PI controller. Then, an inverse single-track model
is used to compute the desired steering angle. An additional observer is responsible
for the offset compensation of the steerin g angle in order to obtain steady-state
accuracy.
4.8 Comparison
A comparison of control approaches has been conducted in [ 83], where different
driving courses have been simulated with a maximum velocity of 20 m/s. The
Stanley method [ 89] has been tested and the authors observed that it is not robust to
a rapid lane change maneuver for collision avoidance. However, it is well suited for
standard driving maneuvers. Optimal control is proposed using LQR, LQR with
feed-forward term, and preview contro l. LQR alone fails the rapid lane change
maneuver entirely at higher speed since information about the path is not included.
The optimal control with feed-forward t erm considers curvature and speed, and
therefore improves performance. Optimal preview control combines the optimal
control with road information, which gives the best performance for highways at
(almost) constant speed. The survey demonstrates that depending on the maneuver
and the vehicle speed, the contro llers show different performance.
In addition to the comparison in the literature a simple example of a highway
overtaking maneuver is simulated, using different controllers for lane keeping.
4.8.1 Simulation Example
The simulated overtaking maneuver is e xecuted on a curved road (road radius
RD1930 m). The longitudinal velocity of the ego-vehicle is vxD120km/h62 A. Rupp and M. Stolz
0 50 100 150 200 250 300 35001020
xin myin m
Fig. 4.3 Overtaking maneuver on a curved road at high speeds ( vxD120km/h). The driven
trajectory of the ego-vehicle is depicted by the thick black line
−30 300.51center left right
−0.6 −0.30 0 .3 0.600.51center left right
−0.2 −0.10 0 .10 .200.51center left right(c)(a) (b)
Fig. 4.4 Membership functions of the input and output variables of the fuzzy controller. ( a) Input
lateral error, ( b) input angular error, ( c) output steering
while the speed of the other vehicle is 75 km/h. The maneuver is illustrated in
Fig.4.3, marking the ego-vehicle in red and its overtaking trajectory in black. For
control and simulation a dynamical bicycle model has been used with the following
parameters mD1564 kg,crDcfD140000 Nm/rad, lfD1:268 m,lrD1:620 m,
IzD2230 kgm2.
Tuning of the controllers has been done in simulation runs with the nominal plant
leading to approximately the same maximum steering angle jıj<ı maxD0:03 rad.
The parameters of the different cont rollers have been chosen as follows:
The gain of the Stanley method is kD5, the LQR matrices are QDdiag.1;0/,
RD1. The super-twisting algorithm of the sliding mode controller has the gains
k1D0:2,k2D0:0005 . The sliding variables are deﬁned by siDPeiC/NAKiei,i2fy;/DC2g
with/NAKyD5and/NAK/DC2D1. The weight for the combined sliding variable sDsyC/NAKs/DC2
is/NAKD0:1. The membership functions of the fuzzy controller are shown in Fig. 4.4.
The four rules were deﬁned according to [ 64]. Note that the membership functions
have been found by trial and error and also that the tuning was time-consuming.
For the MPC controller, the matrix Qand input weight Rare the same as in the
LQR cost function. The input constraint has been set to ımaxD0:03 rad, and the
control horizon to NcD30with a sampling rate TcD0:01 s.4 Survey on Control Schemes for Automated Driving on Highways 63
02468 1 0 1 2 1 4−0.4−0.200.20.4
tin seyin mStanley
LQR
SMC
Fuzzy
MPC
Fig. 4.5 Lateral errors of the different control schemes during an overtaking maneuver on a curved
road
0 2 4 6 8 10 12 14−0.0500.05
tin seθin radStanley
LQR
SMC
Fuzzy
MPC
Fig. 4.6 Angular errors of the different control schemes during an overtaking maneuver on a
curved road
02468 1 0 1 2 1 4−0.0200.02
tin sδin radStanley
LQR
SMC
Fuzzy
MPC
Fig. 4.7 Steering angle of the different control schemes during an overtaking maneuver on a
curved road
The lateral displacements of the diffe rent controllers are depicted in Fig. 4.5.
SMC exhibits the smoothest lateral errors while tracking the dynamic parts of the
trajectory, and the LQR approach has the largest error. However, the angular error
of the LQR approach has no overshoot as illustrated in Fig. 4.6.
The computed steering angle is shown in Fig. 4.7. As expected, SMC applies
higher input values, which has also been observed in [ 16]. The Stanley method
exhibits the smoothest performance.
To sum up, the Stanley method is distinguished by its simplicity and smooth per-
formance during standard driving scenarios. The LQR exhibits low computational64 A. Rupp and M. Stolz
complexity, robustness, and simple parameter tuning. SMC is a very robust con-
troller, but its discrete-time performance has to be checked. MPC has a high
computational complexity, but good perfo rmance and has the ability to handle con-
straints and include collision avoidance, which make this approach very appealing.
For this reason applications based on MPC-algorithms to solve automated driving
assistance tasks efﬁciently are still subject to intensive research.
4.9 Outlook
The latest research trends on control in automated driving can be partitioned into
two main research areas, namely
 MPC and efﬁcient solvers, e.g., [ 14,57], due to its capability of dynamics and
constraint consideration,
 CACC and coordinated maneuvers utilizing information from other trafﬁc part-
ners, e.g., [ 81,92], due to the ongoing research on inter-vehicle communication.
When using communication for information exchange between trafﬁc partners,
networked control strategies may be exploited to improve the overall trafﬁc
performance, see, e.g., [ 6]. Moreover, automated driving in urban areas poses new
challenges: intersections and other trafﬁc participants such as bicyclists and tractors
need to be considered and pedestrian safet y must be ensured. These topics have been
investigated recently and will be of intere st in the future. The authors look forward
to improvements and new challenges in these ﬁelds.
References
1. J. Ackermann, J. Guldner, W. Sienel, R. Steinhauser, V. Utkin, Linear and nonlinear controller
design for robust automatic steering. IEEE Trans. Control Syst. Technol. 3(1), 132–143
(1995)
2. K.J. Astrom, PID Controllers: Theory, Design and Tuning (Instrument Society of America,
Research Triangle Park, 1995)
3. R. Attia, R. Orjuela, M. Basset, Coupled longit udinal and lateral control strategy improving
lateral stability for a utonomous vehicle, in 2012 American Control Conference (ACC) (2012),
pp. 6509–6514
4. R. Attia, R. Orjuela, M. Basset, Combined l ongitudinal and lateral control for automated
vehicle guidance. Veh. Syst. Dyn. 52(2), 261–279 (2014)
5. V.L. Bageshwar, W.L. Garrard, R. Rajamani, Model predictive control of transitional
maneuvers for adaptive cruise control vehicles. IEEE Trans. Veh. Technol. 53(5), 1573–1585
(2004)
6. L. Baskar, B. De Schutter, J. Hellendoorn, Z. Papp, Trafﬁc control and intelligent vehicle
highway systems: a survey. IET Intell. Transp. Syst. 5(1), 38–52 (2011)
7. A. Benine-Neto, S. Scalzi, S. Mammar, M. Netto, Dynamic controller for lane keeping
and obstacle avoidance assistance system, in 2010 13th International IEEE Conference on
Intelligent Transportation Systems (ITSC) (2010), pp. 1363–13684 Survey on Control Schemes for Automated Driving on Highways 65
8. S. Björnander, L. Grunske, Adaptive cruise controllers - a literature review. Technical
Rep. C4-01 TR M50, Faculty of Information and Communications Technologies, SwinburneUniversity of Technology, Australia, 2008
9. F. Borrelli, P. Falcone, T. Keviczky, J. Asgari, MPC-based approach to active steering for
autonomous vehicle systems. Int. J. Veh. Auton. Syst. 3(2), 265–291 (2005)
10. A. Broggi, M. Bertozzi, A. Fascioli, C.G.L. Bianco, A. Piazzi, The ARGO autonomous
vehicle’s vision and control systems. Int. J. Intell. Control Syst. 3(4), 409–441 (1999)
11. L. Cai, Novel algorithms for longitudinal and lateral control for application in autonomous
vehicles. PhD thesis, The Hong Kong Polytechnic University, 2003
12. L. Cai, A.B. Rad, W. Chan, K. Cai, A robust fuzzy PD controller for automatic steering
control of autonomous vehicles, in The 12th IEEE International Conference on Fuzzy Systems
(FUZZ) , vol. 1 (IEEE, 2003), pp. 549–554
13. L. Cai, A.B. Rad, W. Chan, A n intelligent longit udinal controller for application in
semiautonomous vehicles. IEEE Trans. Ind. Electron. 57(4), 1487–1497 (2010)
14. A. Carvalho, S. Lefévre, G. Schildbach, J . Kong, F. Borre lli, Automated driving: the role
of forecasts and uncertainty - a control perspective. Eur. J. Control 24, 14–32 (2015); SI:
{ECC15European} Control Conference
15. S. Chaib, M.S. Netto, S. Mammar, H
1, adaptive PID and fuzzy control: a comparison of
controllers for vehicle lane keeping, in 2004 IEEE Intelligent Vehicles Symposium (2004),
pp. 139–144
16. J.M. Choi, S. Lui, J.K. Hedrick, Human driver model and sliding mode control - road tracking
capability of the vehicle model, in Proceedings of the 2015 European Control Conference
(ECC) (2015), pp. 2137–2142
17. D. Corona, M. Lazar, B. De Schutter, M. Heemels, A hybrid MPC approach to the design
of a smart adaptive cruise controller, in 2006 IEEE Computer Aided Control System Design,
2006 IEEE International Sympos ium on Intelligent Control (2006), pp. 231–236
18. A. Dotlinger, F. Larcher, R.M. Kennel, Robust receding horizon based trajectory planning,
in2014 IEEE/ASME International Conference on Advanced Intelligent Mechatronics (AIM)
(IEEE, 2014), pp. 845–851
19. B. Dumitrascu, A. Filipescu, V . Minzu, A. V oda, E. Minca, Discrete-time sliding-mode
control of four driving-steering wheels autonomous vehicle, in Proceedings of the 30th
Chinese Control Conference (2011), pp. 3620–3625
20. C. Edwards, S. Spurgeon, Sliding Mode Control: Theory and Applications (CRC Press, Boca
Raton, 1998)
21. T. Eigel, Integrierte Längs- und Querführung von Personenkraftwagen mittels Sliding-Mode-
Regelung. Ph.D. thesis, Technische Universität Carolo-Wilhelmina zu Braunschweig, 2010
22. S. Eom, E. Kim, T. Shin, M. Lee, F. Harashima, The robust controller design for lateral
control of vehicles, in 2003 IEEE/ASME International Conf erence on Advanced Intelligent
Mechatronics (AIM) , vol. 1 (IEEE, 2003), pp. 570–573
23. P. Falcone, F. Borrelli, J. Asgari, H.E. Tseng, D. Hrovat, A model predictive control approach
for combined braking and steering in autonomous vehicles, in Mediterranean Conference on
Control & Automation (MED) (IEEE, 2007), pp. 1–6
24. A. Ferrara, P. Pisu, Minimum sensor second-order sliding mode longitudinal control of
passenger vehicles. IEEE Trans. Intell. Transp. Syst. 5(1), 20–32 (2004)
25. A. Ferrara, C. Vecchio, Second order sliding mode control of vehicles with distributed
collision avoidance capabilities. Mechatronics 19(4), 471–477 (2009)
26. S. Fuchshumer, K. Schlach er, T. Rittensc hober, Nonlin ear vehicle dynamics control - a
ﬂatness based approach, in 44th IEEE Conference on Decision and Control, 2005 and 2005
European Control Conference. CDC-ECC’05 (IEEE, 2005), pp. 6492–6497
27. B. Ganji, A.Z. Kouzani, S.Y. Khoo, M. Shams-Zahraei, Adaptive cruise control of a HEV
using sliding mode control. Expert Syst. Appl. 41(2), 607–615 (2014)
28. C. Goerzen, Z. Kong, B. Mettler, A survey of motion planning algorithms from the perspective
of autonomous UA V guidance. J. Intell. Robot. Syst. 57(1–4), 65–100 (2010)66 A. Rupp and M. Stolz
29. L. Guo, P. Ge, M. Yue, Y. Zhao, Lane changing trajectory planning and tracking controller
design for intellig ent vehicle running on curved road. Math. Probl. Eng. 2014 , 1–9 (2014)
30. F. Hamerlain, K. Achour, T. Floquet, W. Perr uquetti, Traject ory tracking of a car-like robot
using second order sliding mode control, in European Control Conference (ECC) (IEEE,
2007), pp. 4932–4936
31. C. Hatipoglu, U. Ozguner, K.A. Redmill, Automated lane cha nge controller design. IEEE
Trans. Intell. Transp. Syst. 4(1), 13–22 (2003)
32. J. He, D.A. Crolla, M.C. Levesley, W.J. Manning, Coordination of active steering, driveline,
and braking for integrated vehicle dynamics control. Proc. Inst. Mech. Eng. D J. Automob.Eng. 220(10), 1401–1420 (2006)
33. J.K. Hedrick, A. Girard , Controllability and observa bility of nonlinear systems, in Control
of Nonlinear Dynamic Systems: Theory and Applications (University of California, Berkeley,
2005)
34. J.K. Hedrick, M. Tomizuka, P. Varaiya, Control issues in automated highway systems. IEEE
Control Syst. 14(6), 21–32 (1994)
35. T. Hessburg, M. Tomizuka, Fuzzy logic control for lateral vehicle guidance. IEEE Control.
Syst. 14(4), 55–63 (1994)
36. S. Hima, S. Glaser, A. Chaibet, B. Vanholme, Controller design for trajectory tracking of
autonomous passenger vehicles, in 2011 14th Internati onal IEEE Conferen ce on Intelligent
Transportation Systems (ITSC) (IEEE, 2011), pp. 1459–1464
37. S. Hima, B. Lusseti, B. Vanholme, S. Glaser, S. Mammar, Trajectory tracking for highly
automated passenger vehicles, in International Federation of Automatic Control (IFAC) World
Congress (2011), pp. 12958–12963
38. P. Hingwe, M. Tomizuka, Experimental evaluation of a chatter free sliding mode control for
lateral control in AHS, in Proceedings of the 1997 American Control Conference (ACC) ,
vol. 5 (1997), pp. 3365–3369
39. P. Hingwe, J. Wang, M. Tai, M. Tomizuka, Lateral Control of Heavy Duty Vehicles for
Automated Highway System: Experimental Study on a Tractor Semi-Trailer (California
Partners for Advanced Transit and Highways (PATH), Berkeley, 2000)
40. T. Hsiao, M. Tomizuka, Design of position feedback controllers for vehicle lateral motion, in
American Control Conference (ACC) (IEEE, 2006), pp. 6
41. R. Hult, Tabar, R.S., Path planning for highly automated vehicles. Master’s thesis, Chalmers
University of Technology, Gothenburg, 2013
42. C. Hwang, S. Han, L. Chang, Trajectory tracking of car-like mobile robots using mixed h
2/h1
decentralized variable structure control, in IEEE International Conference on Mechatronics
(IEEE, 2005), pp. 520–525
43. H.M. Jagtman, E. Wiersma, Driving with adaptive cruise control in the real world, in
Improving Safety by Linking Research with Safety Policy and Management, Proceedings ofthe 16th ICTCT Workshop (2003)
44. C. Jung, H. Kim, Y. Son, K. Lee, K. Yi, Parameter adaptive steering control for autonomous
driving, in 2014 IEEE 17th Interna tional Conference on Intelligent Transportation Systems
(ITSC) (2014), pp. 1462–1467
45. J. Kang, R. Hindiyeh, S. Moon, J.C. Gerdes, K. Yi, Design and testing of a controller for
autonomous vehicle path tracking using GPS/INS sensors, in Proceedings of the 17th IFAC
World Congress (2008), pp. 6–11
46. A. Kelly, B. Nagy, Reactive nonholonomic trajectory generation via parametric optimal
control. Int. J. Robot. Res. 22(7–8), 583–601 (2003)
47. T. Keviczky, P. Falcone, F. Borrelli, J. Asgari, D. Hrovat, Predictive control approach to
autonomous vehicle steering, in American Control Conference (ACC) (IEEE, 2006), pp.
4670–4675
48. D. Kim, J. Kang, K. Yi, Control strategy for high-speed autonomous driving in structured
road, in 2011 14th Interna tional IEEE Conference on Inte lligent Transportation Systems
(ITSC) (IEEE, 2011), pp. 186–1914 Survey on Control Schemes for Automated Driving on Highways 67
49. J. Kosecka, R. Blasi, C.J. Taylor, J. Malik, A comparative study of vision-based lateral control
strategies for autonomous highway driving. Int. J. Robot. Res. 18(5), 442–453 (1999)
50. E. Lavretsky, K.A. Wise, Optimal control and the linear quadratic regulator, in Robust and
Adaptive Control . Advanced Textbooks in Control and Signal Processing (Springer, London,
2013), pp. 27–50
51. S. Lee, C. Chung, Multilevel appr oximate model predictive control and its application to
autonomous vehicle active steering, in 2013 IEEE 52nd Annual Conference on Decision and
Control (CDC) (2013), pp. 5746–5751
52. A. Levant, Sliding order and sliding accuracy in sliding mode control. Int. J. Control. 58(6),
1247–1263 (1993)
53. J. Levine, Analysis and Control of Nonlinear Systems: A Flatness-based Approach (Springer
Science and Business Media, Berlin, 2009)
54. J. Levinson, J. Askeland, J. Becker, J. Dolson, D. Held, S. Kammel, J.Z. Kolter, D. Langer,
O. Pink, V. Pratt, M. Sokolsky, G. Stanek, D. Stavens, A. Teichman, M. Werling, S. Thrun,Towards fully autonomous driving: systems and algorithms, in 2011 IEEE Intellig ent Vehicles
Symposium (IV) (2011), pp. 163–168
55. S. Li, K. Li, R. Rajamani, J. Wang, Model predictive multi-objective vehicular adaptive cruise
control. IEEE Trans. Control Syst. Technol. 19(3), 556–566 (2011)
56. X. Li, Z. Sun, Q. Zhu, D. Liu, A uniﬁed approach to local trajectory planning and control
for autonomous driving along a reference path, in 2014 IEEE International Conference on
Mechatronics and Automation (ICMA) (2014), pp. 1716–1721
57. P.F. Lima, M. Trincavelli, J. Mårtensson, B. Wahlberg, Clothoid-based model predictive
control for autonomous driving, in Proceedings of the 2015 European Control Conference
(ECC) (2015), pp. 2988–2995
58. E. Maalouf, M. Saad, H. Saliah, A higher level path tracking controller for a four-wheel
differentially steered mobile robot. Robot. Auton. Syst. 54(1), 23–33 (2006)
59. R. Marino, S. Scalzi, M. Netto, Nested PID steering control for lane keeping in autonomous
vehicles. Control Eng. Pract. 19(12), 1459–1467 (2011)
60. L. Menhour, B. D’Andréa-Novel, C. Boussard, M. Fliess, H. Mounier, Algebraic nonlinear
estimation and ﬂatness-based lateral/longitudinal control for automotive vehicles, in 2011
14th International I EEE Conference on Intelligent T ransportation Systems (ITSC) (IEEE,
2011), pp. 463–468
61. L. Menhour, B. d’Andréa Novel, M. Fliess, H. Mounier, Coupled nonlinear vehicle control:
ﬂatness-based setting with algebraic estimation techniques. Control Eng. Pract. 22, 135–146
(2014)
62. G. Monsees, Discrete-time sliding mode control. TU Delft, Delft University of Technology,
2002
63. J. Naranjo, J. Reviejo, C. González, R. Garca Rosa, T. de Pedro, A throttle and brake fuzzy
controller: towards the automatic car, in EUROCAST , ed. by R. Moreno-Daz, F. Pichler.
Lecture Notes in Computer Science, vol. 2809 (Springer, New York, 2003), pp. 291–301
64. J. Naranjo, C. Gonzalez, R. Garca, T. de Pedro, Lane-change fuzzy control in autonomous
vehicles for the overtaking maneuver. IEEE Trans. Intell. Transp. Syst. 9(3), 438–450 (2008)
65. L. Nehaoua, L. Nouveliere, Backstepping based approach for the combined longitudinal-
lateral vehicle control, in 2012 IEEE Intelligent Vehicles Symposium (IV) (2012), pp. 395–400
66. M.S. Netto, S. Chaib, S. Mammar, Lateral adaptive control for vehicle lane keeping, in
Proceedings of the 2004 American Control Conference (ACC) , vol. 3 (2004), pp. 2693–2698
67. J. Nilsson, M. Brunnström, E. Coelingh, J. Fredriksson, Longitudinal and lateral control for
automated lane change maneuvers, in Proceedings of the 2015 American Control Conference
(ACC) (2015), pp. 1399–1404
68. R.T. O’Brien, P.A. Iglesias, T.J. Urban, Vehicle lateral control for automated highway
systems. IEEE Trans. Control Syst. Technol. 4(3), 266–273 (1996)
69. A. O’Dwyer, Handbook Of PI And PID Controller Tuning Rules , 3rd edn. (Imperial College
Press, London, 2009)68 A. Rupp and M. Stolz
70. E. Onieva, J.E. Naranjo, V . Milanés, J. Alonso, R. García, J. Pérez, Automatic lateral control
for unmanned vehicles via genetic algorithms. Appl. Soft Comput. 11(1), 1303–1309 (2011)
71. J. Pérez, V. Milanés, E. Onieva, Cascade architecture for lateral control in autonomous
vehicles. IEEE Trans. Intell. Transp. Syst. 12(1), 73–82 (2011)
72. J. Pérez, V . Milanés, J. Godo y, J. Villagra, E. Onieva, Cooperative controllers for highways
based on human experience. Expert Syst. Appl. 40(4), 1024–1033 (2013)
73. D.A. Pomerleau, Neural networks for intelligent vehicles, in Proceedings of IEEE Conference
on Intelligent Vehicles (1993), pp. 19–24
74. R. Rajamani, Vehicle Dynamics and Control . Mechanical Engineering Series (Springer
Science, New York, 2006)
75. R. Rajamani, H. Tan, B.K. Law, W. Zhang, Demonstration of integrated longitudinal and
lateral control for the operation of automated vehicles in platoons. IEEE Trans. Control Syst.Technol. 8(4), 695–708 (2000)
76. T. Raste, S. Lüke, A. Eckert, Automated driving, technical approach with motion control
architecture. at-Automatisierungstechnik 63(3), 191–201 (2015)
77. Ch. Rathgeber, F. Winkler, D. Odenthal, S. Muller, Lateral trajectory tracking control for
autonomous vehicles, in 2014 European Control Conference (ECC) (IEEE, 2014), pp. 1024–
1029
78. A. Reschka, J. Bohmer, F. Saust, B. Lichte, M. Maurer, Safe, dynamic and comfortable
longitudinal control for an autonomous vehicle, in 2012 IEEE Intelligent Vehicles Symposium
(IV)(IEEE, 2012), pp. 346–351
79. P. Shakouri, A. Ordys, M.R. Askari, Adaptive cruise control with stop and go function using
the state-dependent nonlinear model predictive control approach. {ISA} Trans. 51(5), 622–
631 (2012)
80. M. Shimakage, S. Satoh, K. Uenuma, H. Mouri, Design of lane-keeping control with steering
torque input. JSAE Rev. 23(3), 317–323 (2002)
81. S.E. Shladover, Recent international activity in cooperative vehicle-highway automation
systems. Technical Report FHWA-HRT-12-033, Federal Highway Administration, 2012
82. S. Skogestad, I. Postlethwaite, Multivariable Fee dback Control: Analysis and Design ,v o l .2
(Wiley, New York, 2007)
83. J.M. Snider, Automatic steering methods for autonomous automobile path tracking. Technical
Report CMU-RITR-09-08, Robo tics Institute, P ittsbur gh, 2009
84. R. Solea, U. Nunes, Trajectory planning with velocity planner for fully-automated passenger
vehicles, in 2006 IEEE Intelligent Tr ansportation Systems Conference (ITSC) (2006), pp.
474–480
85. R. Solea, U. Nunes, Trajectory planning and sliding-mode control based trajectory-tracking
for cybercars. Integr. Comput. Aided Eng. 14(1), 33–47 (2007)
86. R. Solea, A. Filipescu, V . Mînzu, S. Filipescu, Sliding-mode trajectory-tracking control for
a four-wheel-steering vehicle, in 2010 8th IEEE International Conference on Control and
Automation (ICCA) (IEEE, 2010), pp. 382–387
87. Y .S. Son, W. Kim, S.-H. Lee, C.C. Chung, Robust multi-rate c ontrol scheme with predictive
virtual lanes for lane-keeping system of autonomous highway driving. IEEE Trans. Veh.Technol. 64(8), 3378–3391 (2015)
88. G. Tagne, R. Talj, A. Charara, Higher-order sliding mode control for lateral dynamics
of autonomous vehicles, with experimental validation, in 2013 IEEE Intellig ent Vehicles
Symposium (IV) (IEEE, 2013), pp. 678–683
89. S. Thrun, M. Montemerlo, H. Dahlkamp, D. Stavens, A. Aron, J. Diebel, P. Fong, J. Gale,
M. Halpenny, G. Hoffmann, K. Lau, C. Oakley, M. Palatucci, V. Pratt, P. Stang, S. Strohband,C. Dupont, L. Jendrossek, C. Koelen, C. Markey, C. Rummel, J. van Niekerk, E. Jensen,P. Alessandrini, G. Bradski, B. Davies, S . Ettinger, A. Kaehler, A. Neﬁan, P. Mahoney,
Stanley: the robot that won the DARPA grand challenge: research articles. J. Intell. Robot.Syst. 23(9), 661–692 (2006)
90. P.F. Toulotte, S. Delprat, T.M. Guerra, Longitudinal and lateral control for automatic vehicle
following, in Vehicle Power and Propulsion Conference (2006), pp. 1–64 Survey on Control Schemes for Automated Driving on Highways 69
91. C. Urmson, J. Anhalt, H. Bae, J.A. Bagnell, C.R. Baker, R.E. Bittner, T. Brown, M. N. Clark,
M. Darms, D. Demitrish, J.M. Dolan, D. Duggins, D. Ferguson, T. Galatali, C.M. Geyer,M. Gittleman, S. Harba ugh, M. Hebert, T. Howard, S. Kolski, M. Likhachev, B. Litkouhi,
A. Kelly, M. McNaughton, N. Miller, J. Nickolaou, K. Peterson, B. Pilnick, R. Rajkumar,
P. Rybski, V. Sadekar, B. Salesky, Y. Seo, S. Singh, J.M. Snider, J.C. Struble, A. Stentz,M. Taylor, W. Whittaker, Z. Wolkowicki, W. Z hang, and J. Ziglar, Autonomous driving in
urban environments: boss and the urban challenge. J. Field Robot. 25(8), 425–466 (2008);
Special Issue on the 2007 DARPA Urban Challenge, Part I
92. M. Walter, N. Nitzsche, D. Odenthal, S. Muller, Lateral vehicle guidance control for
autonomous and cooperative driving, in 2014 European Control Conference (ECC) (IEEE,
2014), pp. 2667–2672
93. X. Wang, M. Fu, Y. Yang, H. Ma, Lateral control of autonomous vehicles based on fuzzy
logic, in 2013 25th Chinese Control and Decision Conference (CCDC) (2013), pp. 237–242
94. M. Werling, Ein neues Konzept für die Trajektoriengenerierung und -stabilisierung in
zeitkritischen Verkehrsszenarien. Ph.D. thesi s, Karlsruher Ins titut für T echnologie, Germany,
2011
95. M. Werling, L. Gröll, G. Bretthauer, Invariant trajectory tracking with a full-size autonomous
road vehicle. IEEE Trans. Robot. 26(4), 758–765 (2010)
96. W. Xu, J. Dolan, A real-time motion planner with trajectory optimization for autonomous
vehicles, in Proceedings of the International Conference on Robotics and Automation (2012),
pp. 2061–2067
97. L. Xu, Y. Wang, H. Sun, J. Xin, N. Zheng, Design and implementation of driving control
system for autonomous vehicle, in 2014 IEEE 17th Inter national Conference on Intelligent
Transportation Systems (ITSC) (2014), pp. 22–28
98. Y. Ying, T. Mei, Y. Song, Y. Liu, A sliding mode control approach to longitudinal control
of vehicles in a platoon, in 2014 IEEE International Conference on Mechatronics and
Automation (ICMA) (2014), pp. 1509–1514
99. J. Zhang, D. Ren, Lateral control of vehicle for lane keeping in intelligent transportation
systems, in International Conference on Intelligent H uman-Machine Systems and Cybernetics
(IHMSC) , vol. 1 (IEEE, 2009), pp. 446–450
100. S. Zhang, W. Deng, Q. Zhao, H. Sun, B. Litkouhi, Dynamic trajectory planning for
vehicle autonomous driving, in 2013 IEEE International Conference on Systems, Man, and
Cybernetics (SMC) (IEEE, 2013), pp. 4161–4166
101. P. Zheng, M. McDonald, Application of fuzzy systems in the car-following behaviour
analysis, in Fuzzy Systems and Knowledge Discovery , ed. by L. Wang, Y. Jin. Lecture Notes
in Computer Science, vol. 3613 (Springer, Berlin Heidelberg, 2005), pp. 782–791
102. K. Zhou, J.C. Doyle, K. Glover, Robust and Optimal Control (Feher/Prentice Hall
Digital/Prentice Hall, Upper Saddle River, 1996)
103. J. Ziegler, P. Bender, M. Schreiber, H. Late gahn, T. Strauss, C. Stiller, T. Da ng, U. Franke,
N. Appenrodt, C.G. Keller, E. Kaus, R.G. Herrtwich, C. Rabe, D. Pfeiffer, F. Lindner, F. Stein,F. Erbs, M. Enzweiler, C. Knöppel, J. Hipp, M. Haueis, M. Trepte, C. Brenk, A. Tamke,M. Ghanaat, M. Braun, A. Joos, H. Fritz, H. Mock, M. Hein, E. Zeeb, Making Bertha drive -an autonomous journey on a historic route. IEEE Intell. Transp. Syst. Mag. 6(2), 8–20 (2014)Chapter 5
Path Tracking for Automated Driving:
A Tutorial on Control System Formulations
and Ongoing Research
Aldo Sorniotti, Phil Barber, and Stefano De Pinto
Nomenclature
The superscript “*” is used to indicate the complex conjugate transpose.
a: front semi-wheelbase
a: longitudinal distance between the center of gravity
and the front end of the vehicle
ax,ax,max: longitudinal accelerati on, maximum longitudinal
acceleration
ay: lateral acceleration
A,B,C,D,E: generic state-space formulation matrices
Ar,Br,Cr: state-space matrices for path proﬁle modeling
Av,Bv,Cv,Dv: state-space matrices for vehicle modeling
A0,B0: state-space matrices for modeling the tracking
dynamics at the centers of percussion
b: rear semi-wheelbase
b: longitudinal distance between the center of gravity
and the rear end of the vehicle
bı: multiplicative factor of steering angle in the yaw
acceleration error formula tion used for backstep-
ping control design
B1,B2,B3: matrices of the state-space single-track model for-
mulation
A. Sorniotti (/envelopeback)  S. De Pinto
University of Surrey, Guildford, UK
e-mail: a.sorniotti@surrey.ac.uk
P. Barber
Jaguar Land Rover, Coventry, UK
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_57172 A. Sorniotti et al.
B: box used in the formulation of the tube-based
model predictive controller
c: h a l fo fv e h i c l ew i d t h
cCOP,f,cCOP,r: coefﬁcients used in the deﬁnition of the sliding
variables for the front and rear centers of percus-
sion
c: constant gain for sliding mode controller
Cf,Cr,: front and rear cornering stiffnesses
Cf;/SYNc0,Cr;/SYNc0: front and rear cornering s tiffnesses for the nominal
tire-road friction coefﬁcient /SYNc0D1
Cˇ,C ,C/c129 ,C/DC4: coefﬁcients used for backstepping controller
design
C1,C2: controller formulations 1 and 2
d: distance from the summit of the bend
dmin k;t: minimum distance between the vehicle and the
obstacle points calculated at time tand associated
with the time kwithin the tracking horizon
dk,t,j: distance between the vehicle and the obstacle point
jcalculated at time tand associated with the time
kwithin the tracking horizon
d1,d2: denominators of controller formulations C1andC2
e,ek: error, discretised error
Dr: damping ratio
D(sL): denominator of the transfer function
fa: function expressing the system dynamics
fdt
sk;t;/SYNck;t: system model function for the coordinate sk,tand
the tire road friction coefﬁcient /SYNck;tcalculated at
time tand associated with the time kwithin the
tracking horizon
Fb,l,Fb,r: braking forces on the left-hand and right-hand
sides of the vehicle
Fy,f,Fy,r: lateral forces at the front and rear axles
FFB
y;f,FFB
y;r: feedback contribution to the reference lateral
forces on the front and rear axles
FFFW
y;f,FFFW
y;r: feedforward contribution to the lateral forces on
the front and rear axles
FTOT
y;f: sum of the feedforward and feedback contributions
to the lateral forces on the front axle
g: gravity
gx,PP,gy,PP,gx,S,gy,S: longitudinal and lateral coordinates of the goal
points according to the pure pursuit and Stanley
path tracking methods
g(/CAN): nonlinear term within the model formulation for
the robust tube-based controller design5 Path Tracking for Automated Driving: A Tutorial on Control System ... 73
Gc: compensator of actuator dynamics
GH,eMH,eNH: matrices used for the coprime factorization of the
nominal plant within the H1controller design
GH/c129,/c129MH,/c129NH: matrices used for the coprime factorization of the
perturbed plant within the H1controller design
Gld: virtual sensor look-ahead ﬁlter
h: function for obtaining the outputs starting from the
inputs
hp: generic parameter considered in the parameter
space approach
h’: matrix for modeling the disturbances
H,}: polytopes used in the deﬁnitions of Pontryagin
difference and Minkowski sum
HC,HP: control horizon, prediction horizon
H: set of parameters in the parameters space approach
i: imaginary unit
Iz: yaw moment of inertia
J: cost function for optimal control
Jobsk;t: cost function at time tand associated with the time
kto the predicted distance between the vehicle and
the obstacle
J1,J2: tracking performance criteria
k: discretization step number or step time
kc,kint: controller gain and integrator to keep the steady-
state tracking error small
kch: control gain of the chained-form controller used
for calculating k1CC,k2CC,a n d k3CC
kd: multiplicative factor of the state vector in the
discontinuous control law
kD: derivative gain
kDD:g a i n u s e d i n t h e P I D D2controller
kI:i n t e g r a l g a i n
kLK: control gain in the feedback force contribution on
the rear axle, FFB
y;r
kP: proportional gain
kPP: tuning gain of the pure pursuit algorithm
kS: tuning gain of the Stanley method
kw1,kw2,k/CANe: gains used in the optimal preview steering control
law
kU: understeer gradient
kP : multiplicative factor of P 
k/c129yCG: multiplicative factor of /c129yCG
k/c129yld: multiplicative factor of /c129yld
k/c129 ,k/c129P : multiplicative factor of the heading error, multi-
plicative factor of the yaw rate error74 A. Sorniotti et al.
k/c129 ,w,k/c129P ;w,k/c129y,w: multiplicative factors of the scalar errors
/c129 w;/c129P w;/c129ywin the linear quadratic regulator
with preview
k/c129 ,w,k/c129P ;w,k/c129y,w: gains of the preview controller, to be multiplied by
the weighted values of the heading angle error, yawrate error and lateral displacement error
k
1CC,k2CC,k3CC: gains of the chained controller
k1LC;k2LC;k3LC;k4LC: gains of the limit cornering controller
k1LQ;k2LQ;k3LQ;k4LQ: gains of the linear quadratic controller
K: rate of decay of /c129yld
Kd: gain multiplying /c129yld
KLC: linear quadric matrix gain of the limit cornering
controller
KLQ: matrix gain of the linear quadratic regulator
KLQP: matrix gain of the linear quadratic regulator with
preview
KOBS: collision weight
l: wheelbase
ld: look-ahead distance
L: vehicle wheelbase
LLipschitz : Lipschitz constant
LLyapunov : Lyapunov function
m: vehicle mass
M: constant big enough to disregard obstacles that do
not lie within the vehicle line of sight
MCOP,f,MCOP,r: gains to provide robustness against the variation of
cornering stiffness
Mu: tuning parameter of the sliding mode controller
Mz: yaw moment
n: counter
n1,n2: numerators of controller formulations C1andC2
N: matrix of the Riccati equation for linear quadratic
regulator design
p: characteristic polynomial
pxk;t;j,pyk;t;j: coordinates of the j-th point of the obstacle in the
body frame, calculated at time tand associated
with the time kwithin the tracking horizon
pXt;j,pYt;j: coordinates of the j-th point of the obstacle in the
inertial frame at time t
PL: Lyapunov matrix
Pt,j: j-th point of the obstacle in the inertial frame at
time t5 Path Tracking for Automated Driving: A Tutorial on Control System ... 75
P1,P2: transfer functions calculated from a linear single-
track model of the system, used in the feedforward
contributionıFFW,1
bq: observer output
q/c129ay,q/c129yld,q/c129 ,qi: parameters of the ﬁlters of the frequency-shaped
linear quadratic controller
q1,q2,q3,q4: extreme operating points for the /c128-stability con-
troller
Q,R: weighting matrices of the cost function formula-
tion
Reach f.S;W/: one-step robust reachable set from a given set of
states.S/
r: input of the model reference system obtained by
scaling the input of the desired trajectory generator
Rtr: trajectory radius
s,Ps: trajectory coordinate and its time derivative
sL: Laplace operator
S: matrix of the Riccati equation for linear quadratic
regulator design
t: time
tld: time corresponding to the look-ahead distance (at
the current vehicle speed)
tr: time delay due to the driver’s reaction
td: time delay
t1,t2: initial and ﬁnal time values
T: matrix describing the dynamics of the system con-
sidering the center of percussion
Tb,lf,Tb,rf,Tb,lr,Tb,rr: braking torques of the left front, right front, left
rear, and right rear wheels
Ti: time constant of the ﬁrst order ﬁlter in the deriva-
tive term of the PID controller’ and delete the
existing line
Ts: sampling time
u: input vector in the state-space formulation
u: vector of the front and rear steering angles
uk,
uk,buk.ek/: control law, nominal controller, and state feedback
control action used in the robust tube-based model
predictive controller
u1,u2: control outputs of the chained controller
U,
U: polyhedra used in the tube-based model predictive
control constraints
v,vx,vy,vmax: vehicle speed, longitudinal and lateral components
of vehicle speed, maximum speed
vk;t: speed of the vehicle at time kpredicted at time t
Pvy;path;CG: time derivative of the lateral velocity of the path76 A. Sorniotti et al.
v0: speed at which the four-wheel-steering controller
changes the sign of the steering angle of the rearaxle (transition from opposite signs to the samesigns of the front and rear steering angles)
V
1,V2: vehicle dynamics transfer functions
w: system disturbance
Qw: element of eW
Wd;WP : weighting function adopted in the backstepping
steering control law
W: polyhedron used in the robust tube-based model
predictive control constraints
eW: Minkowski sum of the two polytopes WandB
x,h: elements of the polytopes used in the deﬁnition of
Pontryagin difference and Minkowski sum
xCOP f,xCOP r: coordinates of the front and rear centers of percus-
sion
xP: longitudinal position of a generic point P in the
vehicle reference system
Pxref: reference longitudinal speed
xv,yv: vehicle positions in the tracking coordinates
X,Y: coordinates in the inertial reference system
Xr,Yr;PXr,PYr: positions and velocities of the rear wheel according
to the inertial reference system
y,yk: output and discrete output of the state-space for-
mulation
yri: disturbance in the form of white noise in the linear
quadratic regulator with preview
Ryld: lateral acceleration at the look-ahead distance ld
Ryref: reference lateral acceleration
Yref: reference lateral position in the inertial frame
z: complex number used in the z-transform represen-
tation
z1,z2,z3,z4: augmented states for modelling the ﬁlter dynamics
zMPC,zMPCref : system outputs and references in the model predic-
tive controller
Z,Z1: subset of „, minimal robust positively invariant set
˛: half of the angular extension of the circular arc
deﬁned by the pure pursuit algorithm
˛r: slip angle of the rear axle
˛ref,f: reference slip angle of the front axle
˛FFW
f,˛FFW
r: reference values of the feedforward contributions
to the front and rear slip angles
˛1,˛2: functions of the states, reference path and steering
wheel input in the chained controller
˛1,ST,˛2,ST: tuning constants of the super-twisting controller5 Path Tracking for Automated Driving: A Tutorial on Control System ... 77
ˇ,ˇSS: vehicle sideslip angle, steady-state vehicle sideslip
angle
ˇx,f,ˇy,f,ˇr: normalized longitudinal force on the front axle,
normalized lateral force on the front axle, normal-ized longitudinal force on the rear axle
/CR: sensitivity parameter for LQR design
/c128,@/c128: desired region for locating the poles of the closed-
loop system, with the corresponding boundary
ı;Pı: steering angle and its time derivative. In the case
of absence of any subscript, this notation refers tothe front axle. In the case of a four-wheel-steeringvehicle, the subscript ‘ f’ is used to indicate the
front steering angle and the subscript ‘ r’i su s e d
to indicate the rear steering angle. The additionalsubscript ‘ ss’ is used to indicate steady-state con-
ditions
ı
eq: equivalent steering angle in the super-twisting slid-
ing mode formulation
ıFB,LC,1 ,ıFB,LC,2 ,ıFB,LC,3 : feedback steering angle contributions according to
different formulations of the path tracking con-trollers for limit cornering
ı
FFW,LC : feedforward steering angl e contribution according
to the path tracking controller for limit cornering
ıFFW,1 ,ıFFW,2 ,ıFFW,3 : feedforward contributions to the reference steering
angle according to different formulations
ımin,ımax: minimum steering angle, maximum steering angle
ıST,ıST,1,ıST,2: steering angle contribution of the super-twisting
controller, consisting of the contributions ıST,1and
ıST,2
Pıyf: steering rate contributio n depending on the lateral
deviation error at the front end of the vehicle
PıP : steering rate contribution depending on vehicle
yaw rate
/c129ay: difference between the reference and the actual
lateral acceleration
/c129u: control input variation
/c129Ut: optimization vector at time t
/c129y,/c129Py,/c129Ry: lateral position error and its ﬁrst and second time
derivatives. They can be calculated at the front axle(hence the subscript “f” ), at the rear axle (hence
the subscript “r”), at the vehicle center of gravity(hence the subscript “CG”), or at any other pointalong the longitudinal axis of the vehicle reference78 A. Sorniotti et al.
system (e.g., at the center of percussion or at the
look-ahead distance)
/c129yCG,SS : steady-state value of /c129yCG
/c129Yrms,/c129Ymax: root mean square error on vehicle lateral position,
maximum error on the vehicle lateral position
/c129ımin,/c129ımax: minimum and maximum variation of the steering
angle
/c129 ,/c129P ,/c129R : yaw angle (i.e., heading) error and its ﬁrst and
second time derivatives. They can be calculated
with respect to the referen ce path at the front axle
(hence the subscript “f” ), at the rear axle (hence
the subscript “r”), at the vehicle center of gravity
(hence the subscript “CG”), or at any other point
on the longitudinal axis of the vehicle reference
system (e.g., at the centers of percussion)
/c129 CG,SS : steady-state value of the yaw angle error
/c129 rms,/c129 max: root mean square error on the yaw angle, maxi-
mum error on the yaw angle
/c129 w;/c129P w;/c129yw: scalar values of the weighted average of the head-
ing errors and lateral position error along the
preview distance
": small number
E: subset of „containing f0g
/SI,/SImax: stability margin and maximum stability margin
within the H1controller design
/CAN,/CANref: state vector, reference state vector
/CANaugm.: augmented state vector for the frequency-shaped
linear quadratic controller
/CANk,
/CANk: discrete state vector and predicted state vector
/CANvk: discrete state vector used for describing the vehicle
system in the tracking coordinates
„,
„: polyhedra used in the tube-based model predictive
control constraints
/DC1r: corrective coefﬁcient o f the rear axle cornering
stiffness
/DC4,b/DC4: path curvature and its estimated value. They can
be calculated at the front axle (hence the subscript
“f”), at the rear axle (hence the subscript “r”), or at
any other point along the longitudinal axis of the
vehicle reference system (e.g., the front and rear
centers of percussion)
/DC4’: derivative of the path curvature with respect to the
trajectory coordinate
/NAK: sliding mode lateral position gain5 Path Tracking for Automated Driving: A Tutorial on Control System ... 79
/NAK/c129ay,/NAK/c129yld,/NAK/c129 : parameters of the ﬁlters of the frequency-shaped
linear quadratic controller
/SYNc: tire-road friction coefﬁcient
/SYNf,/SYNr: parameters for avoiding chattering in the sliding
mode controller
/ESC,/ESCf,/ESCr: sliding variable, front sliding variable and rear
sliding variable
/ESCL: real part of the hyperbola in sL-plane
/ESCL0: parameter of the hyperbola in sL-plane
/FS: integration variable
/RSr: road camber angle
 ;P ;R : vehicle yaw angle and its time derivatives
 path,P path: yaw angle corresponding to the reference path and
its time derivative. They can be calculated on a
point of the reference trajectory corresponding to
the vehicle center of gravity (hence  path,CG and
P path;CG), the front axle (hence  path,f andP path;f),
the rear axle (hence  path,r andP path;r), or any other
location on the longitudinal axis of the vehicle
reference system (e.g., at the front bumper)
 ref,P ref,R ref: reference yaw angle and its ﬁrst and second time
derivatives
!C: pulsation
!f,!r: angular speeds of the front and rear wheels
!lf!rf!lr!rr: angular speeds of the left front, right front, left rear
and right rear wheels
!L: imaginary part of the hyperbola in sL-plane
!L0: parameter of the hyperbola in sL-plane
/TAB: Pontryagin difference of two polytopesL: Minkowski sum of two polytopes
5.1 Introduction
In automated driving system architectur es (see the classiﬁcation according to [ 1]),
three layers can be typically deﬁned [ 2]:
(i) The perception layer, aimed at detecting the conditions of the environment
surrounding the vehicle, e.g., by identifying the appropriate lane and the
presence of obstacles on the track;
(ii) The reference generation layer, provi ding the reference signals, e.g., in the
form of the reference trajectory to be followed by the vehicle, based on the
inputs from the perception layer;80 A. Sorniotti et al.
(iii) The control layer, deﬁning the commands required for ensuring the track-
ing performance of the reference tr ajectory. These commands are usually
expressed in terms of reference steering angles (usually on the front axle only)
and traction/braking torques.
This chapter focuses on the control layer and, in particular, the steering control
for autonomous driving, also deﬁned as path tracking control. The foundations of
path tracking control for autonomous driving date back to well-known theoretical
and experimental studies on robotic systems and driver modeling, detailed in several
papers and textbooks (e.g., see the driver model descriptions in [ 3–9]). Moreover,
automated driving experiments with different controllers have been conducted since
the 1950s and 1960s, by using inductive cables or magnetic markers embedded in
roadways to indicate the reference path [ 10,11].
This contribution presents a survey of the main control techniques and formula-
tions adopted to ensure that the automatically driven vehicles follow the reference
trajectory, including analysis of extreme maneuvering conditions. The discussion
will be based on a selection of different control structures, at increasing levels
of complexity and performance. The focus will be on whether complex steering
controllers are actually beneﬁcial to autonomous driving. This is an important
point, considering that Stanley and Sandstorm, the vehicles that obtained the
ﬁrst two places at the DARPA Grand C hallenge (2004–2005), used very simple
steering control laws based on kinematic vehicle models. In contrast to this,
Boss, the autonomous vehicle winning the DARPA Urban Challenge (2007), was
characterized by a far more advanced model predictive control strategy [ 12–15].
The main formulas for the different steering control structures will be concisely
provided as a tutorial on the control system implementations, so that the reader can
actually appreciate the characteristics of each formulation, and ultimately refer to
the original papers in the case of speciﬁc interest. Also, the main simulation and
experimental results obtaine d through the implementation of each control structure
will be reported and critically analyzed.
The chapter is organized as follows:
 Section 5.2 presents path tracking methods based on simple geometric rela-
tionships, and a chained controller relying on a vehicle kinematic model, i.e.,
developed under the approximation of zero slip angles on the front and rear tires.
 The ﬁrst part of Sect. 5.3 deals with conventional feedback controllers designed
with a simpliﬁed dynamic model of the vehicle system, i.e., the well-known
linear single-track vehicle model. The second half of Sect. 5.3 discusses relatively
simple optimal control formulations, e.g., linear quadratic regulators, without
and with feedforward contributions, and including the concept of preview in
their most advanced declination. The layout of Sects. 5.2 and 5.3 mostly follows
the guideline of a very relevant previous survey work [ 16], dating back to
2009, which critically assessed path tr acking control methods through vehicle
simulations with the software package CarSim.
 Section 5.4 discusses a couple of sliding mode formulations, one of them
based on the important concept of cen ter of percussion, and brieﬂy mentions5 Path Tracking for Automated Driving: A Tutorial on Control System ... 81
other examples of path tracking controllers, e.g., based on H1control and
backstepping control.
 Section 5.5 presents in detail the latest developments in the subject area, through
a selection of examples of advanced controllers (i.e., path tracking controllers
for autonomous racing and model predict ive controllers) from recently published
papers, including critical analysis of their speciﬁc beneﬁts.
 Section 5.6 provides concluding remarks and ideas for future research on the
subject.
5.2 Methods Based on Geometric and Kinematic
Relationships
5.2.1 Pure Pursuit Method
The most basic path tracking method is represented by the pure pursuit formula,
derived by geometrically calculating the cu rvature of a circular arc (describing an
angle 2˛in a top view of the single-track model of the system, see Fig. 5.1)t h a t
connects the rear axle location to the goa l point on the reference trajectory and
by applying the well-known Ackerman steering formula, 1/( Rtrı)D1/L. The goal
point has coordinates ( gx,PP,gy,PP) and is located at a look-ahead distance ldon the
reference trajectory, measured from the r ear axle. This brings a reference steering
angleı(t) equal to:
ı.t/Dtan/NUL1/DC22Lsin˛
ld/DC3
Dtan/NUL1/DC22Lsin˛
kPPvx.t//DC3
(5.1)
It can be shown that the resulting curvature is /DC4D1=RtrD/NUL
2/c129yld/SOH
=l2
d,i . e . ,
this controller acts like a proportional controller, with gain 2=l2
d, on the error /c129yld,
deﬁned as the lateral distance between the x-axis of the vehicle reference system
and the goal point ( gx,PP,gy,PP)i nF i g . 5.1. As shown in the right term of Eq. ( 5.1),
the look-ahead distance ldis often scaled as a function of vehicle speed, vx(t), i.e.,
ld(t)DkPPvx(t). In general, low values of ldresult in high precision tracking and
low stability. As Eq. ( 5.1) is based on vehicle kinematics, it can generate signiﬁcant
tracking errors, caused by the absence of c onsideration of the vehicle sideslip.
5.2.2 Stanley Method
Another geometry-based path tracking method is the Stanley method, usually more
suitable for medium-high speed driving conditions than the pure pursuit method and
adopted by the Stanford University’s entry (called Stanley) to the DARPA Grand82 A. Sorniotti et al.
path
circular arc
Fig. 5.1 Geometric construction for the derivation of the pure pursuit method (adapted from [ 16])
Challenge. According to this method (see Fig. 5.2), the steering angle consists of: (i)
a component equal to the heading error (i.e., the yaw angle error), /c129 fD /NUL path;f,
where path,f is measured at the goal point ( gx,S,gy,S) on the reference path; and (ii)
a term based on the lateral distance error at the front axle, /c129yf(or any other point
in the front part of the vehicle), ensuring that the intended trajectory intersects the
target path at an approximated distance /c158x(t)/kSfrom the front axle, with kSbeing
the tuning parameter of the controller:
ı.t/D/c129 f.t/Ctan/NUL1/DC2kS/c129yf.t/
vx.t//DC3
(5.2)
Many other variants of geometric path tracking methods can be found in the
literature. For example, Wit [ 18] proposes a vector pursuit path tracking method
(for speciﬁc details refer directly to [ 18]).
5.2.3 Chained Controller Based on Vehicle Kinematics
Similarly to the previous controllers, the chained controller formulation in [ 17]
(see also [ 19,20]) is based on the single-track model of vehicle kinematics, i.e.,
considering zero slip angles for the front and rear tires. In particular, the hypotheses
a r et h a t( s e eF i g . 5.2): (i) the rear wheels move along a direction with angle  
(i.e., the yaw angle) with respect to the X-axis of the inertial reference system; (ii)
the front wheels move along a direction with an angle  /NULı(where the signs are
according to the conventions in [ 17]) with respect to the same X-axis; and (iii) a5 Path Tracking for Automated Driving: A Tutorial on Control System ... 83
path
CG
Fig. 5.2 Geometric construction for the derivation of the Stanley method (adapted from [ 16,17])
simple kinematic relationship between yaw rate and steering wheel angle is valid,
i.e.,P Dvtan.ı/= L. Under (i)–(iii), the kinematic model of the vehicle in matrix
form is:
2
664PXr
PYr
P 
Pı3
775D2
664cos. /
sin. /
tan.ı/
L
03
775vC2
6640
0
0
13
775Pı (5.3)
By expressing the kinematic model in path coordinates, with sbeing the
trajectory coordinate and /DC4its curvature, the model formulation becomes:
2
664Ps
/c129Pyr
/c129P r
Pı3
775D2
6664cos./c129 r/
1/NUL/c129Pyr/DC4.s/
sin./c129 r/
tan.ı/
L/NUL/DC4.s/cos./c129 r/
1/NUL/c129Pyr/DC4.s/
03
7775vC2
6640
0
0
13
775Pı (5.4)
with/c129 rD /NUL path;r. Through an appropriate transformation of the system
coordinates (the general formulation of the coordinate transformation and the theory
are reported in [ 17]a n d[ 19,20]), it is possible to express this system into a typical84 A. Sorniotti et al.
two-input chained form with the following structure:
8
ˆˆ<
ˆˆ:P/CAN1Du1
P/CAN2D/CAN3u1
P/CAN3D/CAN4u1
P/CAN4Du2(5.5)
where the change of coordinates is:
8
ˆˆˆˆˆˆˆˆ<
ˆˆˆˆˆˆˆˆ:/CAN1Ds
/CAN2D/c129yr
/CAN3D.1/NUL/c129yr/DC4.s//tan./c129 r/
/CAN4D/NUL/DC40.s//c129yrtan./c129 r/C
/NUL/DC4.s/.1/NUL/c129yr/DC4.s//1Csin2./c129 r/
cos2./c129 r/C
C.1/NUL/c129yr/DC4.s//2tan.ı/
Lcos3./c129 r/(5.6)
and the input transformation is:
(
vD1/NUL/c129yr/DC4.s/
cos./c129 r/u1
PıD˛2.u2/NUL˛1u1/(5.7)
with˛1D@/CAN4
@sC@/CAN4
@/c129yr.1/NUL/c129yr/DC4.s//tan./c129 / C@/CAN4
@/c129 /DC2
tan.ı/.1/NUL/c129yr/DC4.s//
Lcos./c129 //NUL/DC4.s//DC3
and˛2DLcos3./c129 /cos2.•/
.1/NUL/c129yr/DC4.s//2. The controller design in chained systems is carried out
in two phases. According to [ 16], “the ﬁrst phase assumes that one control input
is given, while the additional input is used to stabilize the remaining sub-vector of
the system states. The second phase simply consists of specifying the ﬁrst control
input so as to guarantee convergence while ma intaining stability.” In practical terms,
if vehicle speed vis imposed, from Eq. ( 5.7) it is possible to calculate u1,a n d
then the steering input is a function of both u1andu2,w h e r e u2depends on u1.
In the proposed two-input chained structure for path tracking, the two controllers
are designed so that for any piecewise-continuous, bounded, and strictly positive (or
negative) u1,u2is expressed as:
u2./CAN2;/CAN3;/CAN4;t/D/NULk1CCju1.t/j/CAN2/NULk2CCu1.t//CAN3/NULk3CCju1.t/j/CAN4 (5.8)
De Luca et al. [ 17] suggest imposing k1CCDk3
ch,k2CCD3k2
ch,k3CCD3kch,
so that the control system tuning consists of selecting a single gain. The main (and
possibly only) beneﬁt of this convolute control formulation is that its straightforward
extension allows the automated control of articulated vehicles, including vehicle
systems with multiple trailers.5 Path Tracking for Automated Driving: A Tutorial on Control System ... 85
5.3 Methods Based on Conventional Feedback Controllers
and Simpliﬁed Vehicl e Dynamics Models
5.3.1 Simple Feedback Formulations
A signiﬁcant body of literature adopts sim ple feedback control structures, such
as proportional integral derivative (PID) controllers, to solve the steering control
problem for autonomous vehicles. These feedback controllers are usually designed
starting from simpliﬁed models of the s ystem dynamics, accounting for the fact
that the actual vehicle behavior is different from the one predicted by a geometric
model, because of (i) the slip angles on the front and rear tires, generally different
among the two axles, with the subsequent vehicle understeer gradient in steady-
state conditions [ 21] and (ii) vehicle inertia in transient conditions, providing second
order yaw dynamics, with variable equivalent stiffness and damping characteristics
as functions of vehicle speed [ 22,23].
On the one hand, the relatively weak link b etween the basic feedback formula-
tions and the respective linearized dynamic models used for control system design,
and also the signiﬁcant level of approximation of these models, do not automatically
guarantee improved performance for all driving conditions with respect to the
algorithms based on the system geometry alone, presented in Sect. 5.2. On the
other hand, despite the existence of multiple state-of-the-art contributions focused
on advanced control techniques, e.g., based on model predictive control, relatively
simple feedback controllers for path tracking can provide good performance for
a variety of operating conditions, if carefully tuned. For example, the ARGO
autonomous vehicle prototype developed by the team of Prof. Broggi of the
University of Parma was characterized by a proportional (P) controller for steering
control [ 24,25]. Even in a recent paper [ 26] authored by the investigators of the
European Union FP7 V-Charge project, the path tracking controller is based on
a simple proportional controller, with an advanced algorithm for the reference
path generation, using an optimization considering the current vehicle position
with respect to equivalent electric ﬁeld lines. The following paragraphs provide
an overview of some relatively simple control structures designed through linear
single-track vehicle models.
Already in the 1960s in Japan [ 10,27], experiments were conducted on a path
tracking controller based on a Proportional Derivative (PD) structure on the lateral
displacement error between the reference pa th and the actual path of the vehicle, and
a P controller on the yaw angle error. The two contributions were summed together
to provideı. The yaw angle error contribution allowed an improvement in tracking
performance with respect to the path deviation feedback contribution alone. This is
further conﬁrmed in a more recent paper by Nissan [ 28], in which a PD controller
exclusively based on lateral position erro r is designed through pole placement, with
clear issues in the results, caused by the effects of yaw rate and yaw angle, not
addressed by the position error controller.86 A. Sorniotti et al.
Fig. 5.3 Output feedback path tracking control system based on the lateral displacement error
measured at the front bumper (adapted from [ 29])
More systematically, [ 29] critically examines the limitations of pure output
feedback on the lateral vehicle displacem ent error measured at the front bumper,
/c129yldD1
s2
L/NUL
Ryld/NULRyref/SOH
(Fig. 5.3). This was the control practice (dictated by
necessity) in the initial look-down automate d driving system implementations based
on devices installed on the road and not based on vision systems implemented on
the vehicle, intrinsically allowing look-ahead path tracking control.
The analysis of [ 29] is based on the lateral acceleration and yaw rate frequency
response characteristics for a steering wheel input, obtained from the equations of
the linear single-track vehicle model, with the lateral acceleration being considered
at a distance ldin front of the vehicle. In [ 29],ldis used to indicate both the
installation position of the lateral displ acement error sensor and a virtual look-ahead
distance.
The transfer functions of vehicle response (i.e., V1.sL/DP .sL/=ı. sL/and
V2.sL/DRyld.sL/=ı. sL/) are characterized by the same second order denominator,
i.e.,D.sL/DIzmv2s2
LCv˚
Iz.CfCCr/Cm/NUL
Cfa2CCrb2/SOH/TAB
sLCmv2.Crb/NULCfa/C
CfCrl2, with the corresponding damping coefﬁcient being a decreasing function of
vehicle speed. In [ 29], the effect of the tire-road friction coefﬁcient is modeled by
imposing CfDCf;/SYNc0/SYNcandCrDCr;/SYNc0/SYNc, which, according to the authors of this
chapter, can be the object of discussions. T he lateral acceleration transfer function
has a second order numerator, while the yaw rate transfer function has a ﬁrst order
numerator. In formulas:
V1.sL/DP .sL/
ı.sL/DCfamv2sLCCfCrLv
D.sL/(5.9)
V2.sL/DRyld.sL/
ı.sL/DCfv2.mal dCIz/s2
LCCfCrLv.ldCb/sLCCfCrLv2
D.sL/
(5.10)5 Path Tracking for Automated Driving: A Tutorial on Control System ... 87
Variation of speed Variation of road adhesion
frequency [Hz]
frequency [Hz]frequency [Hz]50
40
30——v(sL )[dB ] 2
50
0
–50(v(sL )) [deg] 260
40
200.10.40.71
0
10–110010110–1100101
10–1100101——v(sL )[dB ] 2
frequency [Hz]100
0
–100
–200
10–1100101ang
(v(sL )) [deg] 2 angV
40m/smc = 1 mc = 1
mc 30m/s
20m/s
10m/s
0.10.40.71
20m/s
30m/s
40m/sV10m/sV=40m/s
Fig. 5.4 Bode plots of V2(sL) for a lateral displacement sensor location on the front bumper (i.e.,
ldD1.96 m) (from [ 29])
Equations ( 5.9)a n d( 5.10) are the essential plant transfer functions to be consid-
ered for linear path tracking control design in the frequency domain. The inclusion
of the transfer function of the speciﬁc steering actuator is also recommended by
the authors of this chapter for any path tracking control design activity, consistently
with the practice of many sources in the literature, some of them indicating a typical
actuation bandwidth of 5–10 Hz.
Figure 5.4shows the Bode plots of V2(sL) for different vehicle speeds and tire-
road friction conditions. In particular: (i) the natural mode of vehicle dynamics is
negligible for low speed but signiﬁcant for high speed; (ii) the frequency of the
natural mode is almost independent of speed, but decreases as a function of the
friction coefﬁcient; (iii) the steady-state gain depends on both vand/SYNc(the latter
is true especially at high speed); (iv) the high-frequency gain depends on /SYNcbut not
onv; and (v) the contribution of yaw motion t o lateral acceleration diminishes by
the inverse of vehicle speed, in favor of the sideslip contribution.
According to [ 29], realistic control system speciﬁcations should be in terms of
maximum lateral displacement error at any vehicle speed and robust behavior for
0.5/DC4/SYNc/DC41. The variations of /SYNccan happen very quickly; therefore, the same
controller must be capable of providing robustness for the indicated range of friction
conditions. For very low friction values, i.e., for /SYNc/DC40.5, it is expected that the
longitudinal controller imposes much lower values of vehicle speed than in normal
friction conditions. The important conclusion of the analysis in [ 29] is that for88 A. Sorniotti et al.
relatively high vehicle speeds look-down controllers are not sufﬁcient to meet the
expected performance requirements.
As a consequence, [ 29] proposes:
(i) A feedforward steering contribution b ased on the reference path curvature;
(ii) Feedback control of vehicle absolute motion, i.e., control of yaw rate and
lateral acceleration;
(iii) Modiﬁcation of the system zeros in Eq. ( 5.10) by increasing the look-ahead
distance ld, which can be done even in look-down systems by having two
position error sensors, installed at the front and rear bumpers.
With respect to (iii), Fig. 5.5shows the increase of the damping ratio of the
numerator of the transfer function in Eq. ( 5.10) as a function of ld, for different
velocities and /SYNcD0.5. The zero pair in the numerator of Eq. ( 5.10) determines
“the undershoot in Fig. 5.4between 1 Hz and 2 Hz and the distribution of phase
lag/lead in this frequency range. Conversely, prescribing a ﬁxed maximum phase
lag:::yields look-ahead require ments for different speeds,” which is outlined
in Fig. 5.6, i.e., the look-ahead distance should be an increasing function of
vehicle speed. Section 5.5 will show that the most recent path tracking controllers,
speciﬁcally implemented for high latera l acceleration conditions, actually include
the combination of (i)–(iii).
Hsu and Tomizuka [ 30] extend the general analysis of [ 29] to include the speci-
ﬁcities of vision-based control systems. In particular, the main conclusions are that
(i) Look-ahead distance enhances stability bu t increases the error and decreases the
closed-loop bandwidth; (ii) Higher vehicle speed increases the cross-over frequency
and reduces stability; (iii) The time delays caused by the vision system decrease
Damping ratio [-]
Look-ahead distance 
Fig. 5.5 Damping ratio of the numerator of the transfer function in Eq. ( 5.10) as a function of ld,
for different velocities and /SYNcD0.5 (from [ 29])5 Path Tracking for Automated Driving: A Tutorial on Control System ... 89
Look-ahead distance 0 deg phase lag
15 deg phase lag
30 deg phase 
lag
Vehicle speed 45 deg phase 
lag
Fig. 5.6 Look-ahead distance ( ld) requirements for prescribed maximum phase lag for different
velocities and /SYNcD0.5 (from [ 29])
Lateral deviation 
Fig. 5.7 Deﬁnition of the look-ahead distance and path deviation (adapted from [ 31])
stability, through a reductio n of the phase margin and equivalent effect of the
right-hand-plane zeros appearing in the loop transfer function. Hsu and Tomizuka
[30] propose a path tracking controller, consisting of a feedforward contribution of
the formıFFW;1D/NUL P/NUL1
1.sL/P2.sL/etdsL/DC4.sL/(with P1(sL)D/c129yCG(sL)/ı(sL)a n d
P2(sL)D/c129yCG(sL)//DC4(sL) being calculated from a linear single-track model of the
system), and a PID feedback contribution o n the lateral displacement error, receiving
/c129yCGas input, with kPD/NUL0:01,kID0,kDD/NUL0:0074 andTiD0.0001.
Consistently with the conclusions of [ 29,30], Tachibana et al. [ 31] propose a PD
controller on the lateral position error at the look-ahead distance ld, i.e., the position
error at a single point in front of the vehicle is monitored, assuming that the heading
angle of the vehicle does not change with distance (Fig. 5.7). The control law in
discretized form is:
ıkDkP.ld;v//c129 yld;kCkD/NUL
/c129yld;k/NUL/c129yld;k/NUL1/SOH
(5.11)90 A. Sorniotti et al.
Fig. 5.8 The path tracking control structure proposed in [ 32] (adapted from the original paper)
Vehicle experiments showed that the control gains had to be varied as functions
of vehicle speed and that at 50 km/h optimal look-ahead distances are in the range of
20 m, in the case of a curved trajectory, and 2 5 m, for a straight reference trajectory.
In [32], based on the Japanese Ministry of Construction Automated Highways
System (AHS) project (1995–1996), the path tracking controller (Fig. 5.8) consists
of a PID controller on /c129yCG, whose output is summed to that of a PI controller on
/c129yld, and to a feedforward contribution of the form:
ıFFW;2D/NUL
1CkUv2/SOHL
Rtr(5.12)
The feedforward contribution accounts for the steady-state vehicle understeer
and brings a reduction of the maximum value of /c129yCGfrom about 110 cm (with
the feedback contribution only) to about 40 cm (with the feedback and feedforward
contributions) during the case study tests. The comment of the authors of [ 32]i s
that the feedforward contribution allows achieving a good compromise between
stability and tracking char acteristics, without large gains of the feedback part.
Interestingly, very recent papers by Pro f. Gerdes of Stanford University reach
the same conclusion, and the respective controllers signiﬁcantly rely on nonlinear
feedforward contributions (see Sect. 5.5). A similar combination of feedforward
and feedback contributions was adopted fo r the anticollision system developed
during the PRORETA research project, with in a collaboration between Darmstadt
University of Technology and Continental [ 33].
Marino et al. [ 34] propose a PID control architecture with two nested control
blocks. The outer one calculates the reference yaw rate starting from the lateral
position error, while the inner loop calculates the reference steering angle in order
to track the reference yaw rate. According to the authors of [ 34], this architecture
allows “to design standard PID controls in a m ulti-variable context.” Singular values
analysis is used to assess the robustness of the controller with respect to the variation5 Path Tracking for Automated Driving: A Tutorial on Control System ... 91
of the main vehicle parameters. The simulation results show improved performance
with respect to a model predictive driver model. The experiments on a Peugeot 307
prototype vehicle conﬁrmed the adequate performance of the controller in normal
driving conditions (i.e., for relativel y low values of lateral acceleration).
Simple feedback formulations with constant gains can be designed to provide the
required level of robustness for normal operating conditions. For example, [ 35]i s
an important study, focused on the design of a linear controller for an automated
bus, with the main speciﬁcations being: (i) jıj/DC440 deg; (ii)ˇˇˇPıˇˇˇ/DC423 deg/s; (iii)
lateral displacement error not exceeding 0 .15 m in transient conditions and 0.02 m
in steady state; (iv) lateral acceleration not exceeding 2 m/s2for passenger comfort
with an ultimate limit of 4 m/s2for preventing vehicle rollover; and (v) a natural
frequency of the lateral motion not exceeding 1.2 Hz.
The control system is designed through a linear single-track vehicle model, under
the hypothesis of a lateral displacement sensor located on the front end of the
vehicle, measuring the distance from the reference road path. The steering controller
has the following formulation, where the beneﬁt of the yaw rate-related contribution
kP P is discussed in [ 35] through root-locus analysis:
PıDPıyfCPıP DPıyf/NULkP P (5.13)
The ﬁxed controller design must be robust with respect to the variation of vehicle
mass (very signiﬁcant for a bus) and speed. In particular, the controller must provide
stability for the four design points indicated in Fig. 5.9. The contribution Pıyfis
designed from the frequency domain analysis. In the Laplace domain, Pıyf.sL/is
deﬁned as
Pıyf.sL/D!3
CkDDs2
LCkDsLCkPCkI=sL
/NUL
s2
LC2Dr!CsLC!2
C/SOH
.sLC!C//c129yf.sL/ (5.14)
which, according to the authors of [ 35–37], is a PIDD2controller. This control
structure was already recommended for hi gh-speed path tracking by the authors of
[29].
Fig. 5.9 Vehicle operating
domain (adapted from [ 35])
32
9.9592 A. Sorniotti et al.
A parameter space approach is used for the design of the compensator in Eq.
(5.14). This method allows “to determine the set of parameters H, for which the
characteristic polynomial p(sL,hp),hp2H, is stable. The plant is robustly stable
if the operating domain is entirely contained in the set of stable parameters.” For
the speciﬁc problem, Hurwitz stability is not considered sufﬁcient. A hyperbola in
thesL-plane is used to provide the required p erformance characteristics, i.e., the
eigenvalues of the closed-loop system should lie in the region /c128on the left of the
boundary@/c128deﬁned as:
@/c128D(
sLD/ESCLCi!Lj/DC2/ESCL
/ESCL0/DC32
/NUL/DC2!L
!L0/DC32
D1;/ESC L/DC4/NUL/ESCL0)
(5.15)
Values of/ESCL0equal to 0.12 and 0.35 are selected, respectively, for low and high
velocities, with!L0
/ESCL0D5. The/c128-stability boundaries for each of the four extreme
operating points ( q1,q2,q3,q4)i nF i g . 5.9are calculated, resulting in four /c128-stable
regions. The intersection of the stable regions is the set of controllers stabilizing the
four considered plants (e.g., see Fig. 5.10).
The initial selection of the controller parameters [ kDDkDkPkI] was further reﬁned
in a simulation-based optimization procedure minimizing tracking performance
criteria such as:
J1DZt2
t1/c129yf2dt;J2Dmax
tj/c129yfj (5.16)
A similar control design methodology, using the concept of /c128-stability, is
presented in [ 37], this time based on the control of the errors of the front and
tail lateral positions, instead of the front position and yaw rate. The option of a
feedforward steering angle considering dynamic curvature preview was included in
0.8
0.7
-stable
region0.6kDD
kD0.5
0.4
2.5 5.0 7.5 10.0 12.5 15.0Γ
Fig. 5.10 Set of/c128-stabilizing controllers for !CD100, DrD0.5,kID3a n d kPD10 (from [ 35])5 Path Tracking for Automated Driving: A Tutorial on Control System ... 93
the controller, which was validated with experimental tests in collaboration with the
Californian PATH (Partners for Advanced Transportation Technology) center.
Another very relevant study [ 38], including experiments, assessed the perfor-
mance of an automated Fiat Brava 1600 ELX. The control system design was
based on the commonly used single-track vehicle model (the detailed formulation is
provided in the following lines), together with the transfer function of the steering
actuator.
S i m i l a r l yt o[ 35], the objective was to design ﬁxed controllers (e.g., without any
form of gain scheduling), capable of robustly stabilizing the plant for: (i) vranging
between 60 km/h and 130 km/h; (ii) mranging between 1226 kg and 1626 kg; (iii)
Izranging between 1900 kgm2and 2520 kgm2; and (iv) CfandCrranging between
51 kN/rad and 69 kN/rad, and between 81.6 kN/rad and 110.4 kN/rad, respec-
tively. The performance speciﬁcations included j/c129yCGj/DC40.2 m, jvy(t)j/DC41.5 m/s,
j/c129ayj/DC43.3 m/s2, and consideration of the steering actuator saturation.
Based on previous experimental analyses of human drivers [ 39] showing that
the steering wheel action is applied “on the basis of the distance between the
lane and the longitudinal axis of the car at a look-ahead point, ” the controller
in [38] uses feedback output on /c129yldD/c129yCGC/c129ypath;ld, with ldD11.5 m. The
controller is designed through classical loop-shaping techniques. In particular,
two controllers, C1(z)Dn1(z)/d1(z)a n d C2(z)Dn2(z)/d2(z), were experimentally
assessed, with numerical values of the controller parameters, in descending powers
ofz, given by:
n1DŒ/NUL7:844;30:82; /NUL47:37;35:51; /NUL13:24;2:388; /NUL0:2273/c141
d1DŒ1;/NUL4:92;10:06; /NUL10:96;6:703; /NUL2:181;0:2949/c141
n2DŒ/NUL7:837;29:03; /NUL44:6;33:43; /NUL12:46;2:2; /NUL0:2138/c141
d2DŒ1;/NUL4:937;10:13; /NUL11:07;6:794; /NUL2:218;0:3008/c141(5.17)
The values of the gains are reported here for a quick implementation of the
controller and reproduction of the results. C1(z) was designed with the purpose of
providing good tracking performance, while C2(z) was speciﬁcally aimed at ride
comfort. C1(z)a n d C2(z) were assessed along a curve with 1000 m radius followed
by a straight section, at vD100 km/h. The tracking performance results are in
Figs. 5.11 and5.12, which show that C2(z) provokes higher amplitude and lower
frequency oscillations of the lateral offset between the path and the vehicle center
of gravity. Overall, the test drivers provided a better assessment for C2(z), which
demonstrates the extreme importance of the human factor in the evaluation of path
tracking algorithms.
Tan et al. [ 40] includes a wide set of experimental results obtained during public
demonstrations at various sites and in very different operating conditions, ranging
from docking to high speeds and relatively high lateral accelera tions. The control
system design is based on a simple but reliable controller, with the following form:
ıD/NULkc.v/Gc.sL/.kint.sL//c129yCld.v/Gld.sL//c129 / (5.18)94 A. Sorniotti et al.
Fig. 5.11 Example of/c129yCG(t) with the controller C1(z) (from [ 38])
Fig. 5.12 Example of/c129yCG(t) with the controller C2(z) (from [ 38])
where the measured inputs are /c129yand/c129 . The tuning of the controller is carried
out through a linear vehicle model, including roll dynamics. This peculiar (and
interesting) choice is justiﬁed by the fact that a good match between the model
and the experimental results is achievable, in the case of a comfort-oriented tuning
of the vehicle suspension system, only through the inclusion of the roll dynamics
and actuator dynamics in the model for control system design.
The formal design speciﬁcations are: (i) the maximization of the gain margin
(with the requirement of being > 2) an d phase margin (with a requirement of
being > 50 deg) on the open-loop transfer function through the optimal selection5 Path Tracking for Automated Driving: A Tutorial on Control System ... 95
of the gain kc(v) and the preview distance ld(v) and (ii) to guarantee that the lateral
displacement deviation of the closed-loop system shall not exceed a given threshold
(reported in Fig. 5.13)f o ra1m / s2step input of the reference road acceleration.
In the control structure, Gc(sL) mainly compensates for the actuator dynamics
and consists of a low-frequency integrator a nd high-frequency roll-off, “to reduce
the effects of the steady-state tracking bias and the unwanted excitation of the high-
frequency unmodeled actuator dynamics. Gld.sL/is made of a high-frequency roll-
off portion and a mid-frequency lead-lag ﬁlter to limit the look-ahead ampliﬁcation
and to provide extra look-ahead between 0.5 and 2 Hz.” In formulas:
Gc.sL/D25/EM. sLC0:5/EM/
.sLC0:02/EM/. sLC25/EM/(5.19)
Gld.sL/D20/EM. sLC0:4/EM/
.sLC0:8/EM/. sLC10/EM/(5.20)
kint(sL) is an integrator to keep the steady- state tracking error small. The main
controller parameters and performance i ndicators based on the linear model of the
system are reported in Fig. 5.13. Interestingly, kc(v)a n d ld(v) do not signiﬁcantly
change between 15 m/s and 30 m/s, while they are signiﬁcantly different especially
at low speed.
The comprehensive set of experimental results, collected on eight vehicle
demonstrators including different number of passengers (from 0 to 4), shows: (i)
0.1 m maximum tracking error for highway driving up to 100 mph with standard
deviation of less than 5 cm; (ii) 0.2 m maximum error in transient conditions for
0.5 g maneuvering; (iii) sharp curve tracking with less than 3 cm error; (iv) low
speed precision docking with less than 1 cm error; and (v) smooth steering actions,
i.e., the passengers feel no observable oscillations.
Based on these experimental proofs and also on the other references mentioned
so far, the conclusion of this section is that in the absence of uncertainty and
02468100.5
0.4
0.3
0.2
0.1
0
51 0 1 5 20 25 30 35 40 0 5 10 15 20 25 30 35 40Phase margin > 50; gain  margin >2Controller
gain  kcLook-ahead
distance  ld  [m]
Tracking errors   [m]
Maximum transient error
Vehicle speed  υ  [m /  s ] Vehicle speed  υ  [m /  s ]00.511.52
0 5 10 15 20 25 30 35 401/ (sL  (sL )V (sL)C(sL )) A+2
Fig. 5.13 Optimal controller parameters and performance indicators (from [ 40])96 A. Sorniotti et al.
signiﬁcant disturbances in th e road scenario, simple, co nventional, reliable, and
easily tunable control structures with appropriate gain scheduling are sufﬁcient
for providing good performance in all operating conditions, and are actually
recommended by the authors of this chapter for vehicle implementation.
5.3.2 Linear Quadratic Regulators
5.3.2.1 Basic Linear Quadratic Formulation
This subsection focuses on the basic mathematical formulation of linear quadratic
regulator (LQR) control structures for path tracking. LQRs for path tracking are
based on the state-space formulation of the system dynamics. The main building
block is represented by the well-known single-track model of the vehicle [ 4,21,
22], already used in the previous subsection, with a linear model of the tires,
parameterized by their cornering stiffness, and adopting the lateral slip velocity of
the vehicle center of gravity, vy, and the yaw rate, P , as system states. This model
is suitable for describing ve hicle dynamics at moderate lateral acceleration levels
with respect to the available tire-road friction conditions, and at small longitudinal
accelerations/decelerations (its equations are actually derived for the condition of
constant speed). In formulas:
/DC4Pvy
R /NAK
D"
/NUL2.CfCCr/
mvx2bCr/NULaCf
mvx/NULvx
2bCr/NULaCf
Izvx/NUL2.a2CfCb2Cr/
Izvx#/DC4vy
P /NAK
C"
2Cf
m2aCf
Iz#
ı (5.21)
The single-track vehicle model has to be expressed in the states relevant to the
implementation of the path tracking controller. The following control variables are
usually deﬁned (minor variations are prese nt in the different papers and reports):
(i) the lateral position error, /c129yCG, i.e., the length of the segment perpendicular
to the symmetry plane of the vehicle and connecting the center of gravity with
the corresponding point on the reference path (see Fig. 5.2, according to [ 16]).
In some of the papers, the distance is measured along a segment perpendicular to
the reference path, rather than perpendicular to the vehicle symmetry plane (i.e., a
reference system aligned with the road is adopted) and (ii) the heading angle error,
/c129 CGD /NUL path;CG(indicated in Fig. 5.2). The controller formulation would
not signiﬁcantly change if the errors were measured from any other point (different
from the center of gravity) located on the longitudinal axis of the vehicle reference
system or the road reference system (e.g., in front of the vehicle, in order to generate
a basic preview effect).
By considering the approximated system kinematics, it is /c129RyCGD/NUL
PvyCvxP /SOH
/NUL
Pvy;path;CG.s/DPvyCvx/NULP /NULP path;CG.s//SOH
DPvyCvx/c129P CGand/c129PyCGDvyCvx/c129 CG.
Equation ( 5.21) can be transformed into the path coordinates, thus obtaining the
state-space formulation directly applicab le to the path tracking LQR control system5 Path Tracking for Automated Driving: A Tutorial on Control System ... 97
design:
2
664/c129PyCG
/c129RyCG
/c129P CG
/c129R CG3
775D2
666401
0/NUL2.CfCCr/
mvx00
2CfCCr
mvx2bCr/NULaCf
mvx
00
02bCr/NULaCf
Izvx01
2aCf/NULbCr
Iz/NUL2.a2CfCb2Cr/
Izvx3
77752
664/c129yCG
/c129PyCG
/c129 CG
/c129P CG3
775C2
66640
2Cf
m
0
2aCf
Iz3
7775ı
C2
66640
2bCr/NULaCf
mvx/NULvx
0
/NUL2.a2CfCb2Cr/
Izvx3
7775P path;CG.s/C2
6640
0
0
/NUL13
775R path;CG.s/
(5.22)
which corresponds to the canonical form:
P/CANDA/CANCB1ıCB2P path;CG.s/CB3R path;CG.s/ (5.23)
where/CAND/STX
/c129yCG/c129PyCG/c129 CG/c129P CG/ETXT, and the steering angle ıis the control
output. The term in Eqs. ( 5.22)a n d( 5.23) including the reference yaw acceleration,
R path;CG.s/, is usually neglected in the literature. The term B2P path;CGrepresents a
disturbance within the control system design.
The system is controllable as the controllability matrix [ B1AB1A2B1A3B1]
has full rank. The LQR formulation for path tracking is normally based on state
feedback regulation, i.e., on the control of the lateral position and velocity errors at
the center of gravity, and the control of the heading angle and heading rate errors,
with all references set to 0. This means that ıD/NULKLQ/CAND/NULk1LQ/c129yCG/NULk2LQ/c129PyCG/NUL
k3LQ/c129 CG/NULk4LQ/c129P CG. The LQR controller minimizes the following quadratic cost
function J:
JDZ1
0/NUL/CANTQ/CANCuTRu/SOHdt (5.24)
where the diagonal 4 /STX4 weighting matrix Qis selected to deﬁne the relative
importance of the tracking performance for the different states of the system, while
the weighting factor Rdeﬁnes the relative importance of control effort and tracking
performance. The gain KLQcan be designed through the well-known algebraic
Riccati equation [ 41]. In formulas:
KLQDR/NUL1BT
1S (5.25)
ATS/NULSA/NUL/NUL
SBT
1CN/SOH
R/NUL1BT
1SCQD0 (5.26)98 A. Sorniotti et al.
0.3
0.2
0.1
0
01 2 34 5
(sec)3
2
1
0
1
10
20
–20001234
012345501 2 34 5
(sec)
(sec)
(sec)101
PDPD
Experimental data Simulation data01 2 34 5
(sec)
–20020
PD
01 2 34 5
(sec)Lateral
displacement [m]
Lateral
displacement [m]Yaw angle [deg]
Yaw angle [deg]angle [deg]Steering
wheel
angle [deg]Steering
wheelLargerLargergg
Fig. 5.14 Comparison of PD and LQR controllers for different values of the parameter /CRof the
LQR (from [ 28])
thus bringing the following closed-loop formulation of the controlled system
dynamics:
P/CAND/NUL
A/NULB1KLQ/SOH
/CANCB2P path;CG.s/ (5.27)
The continuous form of the LQR path tracking controller was presented here.
The continuous system in Eq. ( 5.27) can be easily subject to discretization for the
design of a discrete LQR controller.
An LQR implementation was experimentally assessed by Nissan in [ 28]a n d
compared with the performance provided by the PD controller on the lateral position
error mentioned in Sect. 5.3.1. The tests (Fig. 5.14) were conducted at 80 km/h and
consisted of a step change of 20 cm in the lateral coordinate of the target path.
The study included a sensitivity analysis as a function of /CRDQ(1, 1)/ R, i.e., the
ratio between the lateral deviation weighting and the control effort weighting in Eq.
(5.24).
When commenting their experimental and simulation results, the authors of [ 28]
state that “with PD control, large overshoot occurred when response was improved
and the system became more susceptible to noi se. This made it impossible to set the
control constants at larger values.” In any case, the same authors observe that the
model for LQR design exhibits “large modeling errors on the curved segments of5 Path Tracking for Automated Driving: A Tutorial on Control System ... 99
the test road, making it unable to track th e path accurately on curves.” A possible
solution to this limitation is to adopt a feedforward contribution based on road
curvature, which will be discussed in the next subsection. The alternative proposed
in [28] is a Kalman ﬁlter based on the vehicle motion equations, combined with
a curvature approximation model. The output of the Kalman ﬁlter is the curvature
estimation,b/DC4, which is used as a state variable in the augmented LQR scheme.
5.3.2.2 Linear Quadratic Regulator with Feedforward Contribution
The feedback LQR formulation of the controller can be enhanced through a
feedforward contribution, aimed at canceling the steady-state lateral position error
of the center of gravity, which is a problem especially in the case of curved paths.
Hence, the control output and closed-loop system dynamics assume the following
shape:
ıD/NULKLQ/CANCıFFW;3 (5.28)
P/CAND/NUL
A/NULB1KLQ/SOH
/CANCB1ıFFW;3CB2P path;CG.s/ (5.29)
By manipulating Eq. ( 5.29), it is possible to obtain the analytical expression of
the steady-state errors of the controlled system. By imposing /c129yCG,SS D0 and under
the hypothesis of a constant radius trajectory, it is:
ıFFW;3DL
RtrC/DC2mb
2Cf/NULma
2Cr/DC3ay
LCk3LQ/c129 CG;SSDL
RtrCkUayCk3LQ/c129 CG;SS
(5.30)
where the resulting steady-state value of the heading error becomes:
/c129 CG;SSD/NULb
RtrCa
2CrLmv2
x
Rtr(5.31)
The important conclusion is that /c129 CG,SS is not controllable through the
feedforward contribution of the steerin g angle, if this is aimed at achieving
/c129yCG,SS D0.
From a practical viewpoint, as the yaw dynamics of the vehicle are strongly
dependent on vehicle speed, i.e., yaw damping is a decreasing function of vehicle
speed, a careful scheduling of the feedb ack controller gains is also required as
a function of vx, in order to provide consistent tr acking performance at different
vehicle speeds, as alread y discussed in Sect. 5.3.1.100 A. Sorniotti et al.
5.3.2.3 Linear Quadratic Regulator with Preview
The LQR formulations in the previous sections can be signiﬁcantly enhanced
through a preview scheme, i.e., by augmenting the system to include the future
proﬁle of the reference path. To this pur pose, the reference path is discretized,
and a vector with its lateral coordinates is progressively updated at each time step.
The vehicle system model in the tracking coordinates (Eq. 5.22) can be discretized
as:
/SUB/CANvkC1DAvk/CANvkCBvkık
yvkDCvkxvkCDvkık(5.32)
The future reference path proﬁle, represented by the vector yrkC1, is modeled as:
yrkC1DArkyrkCBrkyrik
ArkD2
666666666401
0000
10/SOH/SOH/SOH0
/SOH/SOH/SOH0
::::::
::::::::::::
::::::::::::
:::0
00
000/SOH/SOH/SOH
0/SOH/SOH/SOH/SOH/SOH/SOH1
/SOH/SOH/SOH03
7777777775;BrkD2
6666640
0
0
:::
13
777775(5.33)
The reference lateral position of the vehicle is located into a register that is
progressively updated at each time step. yriis considered as a disturbance in the
form of a white noise.
The discretized model of the vehicle system, including the reference position
coordinates, can be expressed as the combination of the models in Eqs. ( 5.32)a n d
(5.33):
/SUB/CANkC1DA/CANkCBıkCEyrik
ykDC/CANkCDık(5.34)
with augmented state vector /CANkDŒ/CANvkyrk/c141T(see [ 16] for the details regarding
the formulation of the different matrices). The state feedback control law becomes
ukD/NULKLQP/CANk, where the states related to the future values of the lateral coordinates
of the road have an effect on the control action. The control gain matrix KLQPcan
be calculated by using the well-known LQR discrete formulation and the respective
Riccati equation.
It is interesting to observe that the path tracking control formulation deriving
from Eq. ( 5.34), presented in [ 16], is very similar to the driver model with preview in
[5] (originally not conceived for automated d riving), based on the reference steering
angleıDk/c129 /c129 Ck/c129yCG/c129yCGCPn
kD1/c129yk, where the index krefers to points
located in front of the vehicle. Actually, the formulation in Eq. ( 5.34) is identical to5 Path Tracking for Automated Driving: A Tutorial on Control System ... 101
the motorbike driver model in [ 7]. An extension of the linear quadratic formulation
with preview could be based on the driver model in [ 8], which is an enhancement
of the driver model in [ 5], with consideration of the future heading angle errors and
their time derivatives, to give ıDk/c129 ;w/c129 wCk/c129P ;w/c129P wCk/c129y;w/c129yw.I nt h i s
case, the errors /c129 w,/c129P w,a n d/c129yware scalar variables, calculated as the linear
combination of the errors at different points k.
5.3.2.4 Frequency-Shaped Linear Quadratic Control
A relevant contribution to the science of LQR path tracking control was provided
by Peng and Tomizuka in the PATH framework in the 1990s [ 42–44]. Their
frequency-shaped linear quadratic controller is based on the linear equations of
the system, according to the formulation in Eqs. ( 5.21)a n d( 5.22). The output is
represented by the lateral deviation measured by a sensor located in the front part
of the vehicle. The main advantages of the frequency-shaped LQR formulation with
respect to conventional LQR control are: ( i) the robustness on measurement noise
at high frequencies and (ii) the possibility of including ride quality explicitly in the
performance index (which is very important, as pointed out in some of the references
including actual experimental tests and not only computer simulations).
The adopted performance indicator is:
JD1
2/EMZ1
/NUL1"
/c129a/ETX
y.j!L/q2
/c129ay
1C/NAK2
/c129ay!2
L/c129ay.j!L/C/c129y/ETX
CG.j!L/q2
/c129yld
1C/NAK2
/c129yld!2
L
/STX/c129yCG.j!L/C/c129P /ETX.j!L/q2
/c129 
1C/NAK2
/c129 !2
L/c129P .j!L/
C/c129y/ETX
ld.j!L/q2
i
.j!L/2/c129yld.j!L/Cı/ETX.j!L/Rı.j!L//NAK
d!L
(5.35)
where/c129ayis the difference between the r eference and the actual lateral
acceleration. The coefﬁcients q/c129ayand/NAK/c129ayare chosen to provide the expected
ride quality, while the coefﬁcients of the other three terms are selected to provide
responsiveness to the road curvature and robustness with respect to the measurement
noise. The disturbance term in the vehicle model, B2P path(i.e., the effect of the
curvature, see Eq. ( 5.27)), is previewed with a preview time tld.
The problem is solved as a conventional linear quadratic controller after aug-
menting the system state variables with the states z1,:::,z4corresponding to
the four ﬁlters in Eq. (5.35), so that the augmented state vector is /CANT
augm:D/STX
/c129yCG/c129PyCG/c129 /c129 P z1z2z3z4/ETX
. The minimization of Jrequires the knowledge of
the disturbance, i.e., P path, from the current time to inﬁnity. As this is not practically
possible, an exponential decay of the c urvature-related disturbance w(t)D1//DC4(t)
beyond the preview region is assumed. Th e resulting optimal preview steering102 A. Sorniotti et al.
control law is expressed by:
ıD/NULk/CANe/CANaugm:CZtld
0kw1.ld/w.tC/FS/d/FSCkw2w.tCtld/ (5.36)
where the ﬁrst term is the state feedb ack controller, and the second and third
terms are the preview control terms.
5.4 Other Control Structures for Path Tracking
and Remarks
The controllers discussed in Sects. 5.2 and 5.3 are only an arbitrary selection of the
very wide literature on the subject. This section presents an overview of the variety
of less conventional control structures used for path tracking control.
5.4.1 Sliding Mode Controllers
Many papers (e.g., [ 35]a n d[ 45,46]) present sliding mode controllers for path
tracking. Utkin in [ 35] proposes a relatively simple ﬁrst order sliding mode control
structure (Fig. 5.15), resulting in a yaw control law of the form:
PıD/NULMusgn./ESC/ (5.37)
where the sliding variable, /ESC,i sg i v e nb y/ESCDc/c129P C/c129R , with/c129P DP /NULP ref.
As a consequence, the sliding variable is a function of P ,R ,P refandR ref.T h e
reference yaw rate is based on the lateral position error, having a time derivative
/c129PyldDv.ˇC/c129 / CldP . According to traditiona l feedback linearization, P ref
Fig. 5.15 Nonlinear controller structure with observer (adapted from [ 35])5 Path Tracking for Automated Driving: A Tutorial on Control System ... 103
can be expressed as:
P refD/NUL1
ldŒv.ˇ C/c129 / CK/c129yld/c141 (5.38)
with Kdetermining the rate of decay of /c129yld. In order to estimate the term bqD
v.ˇC/c129 / , a dynamic observer (Observer 1 in Fig. 5.15) is implemented. As /c129R 
is not directly measured but is necessary for t he computation of the sliding variable,
the time derivative of /c129P is computed through a robust observer (Observer 2 in
Fig.5.15), as a simple differentiator would imply a signiﬁcant risk of chattering. The
comparison of the performance of this sliding mode formulation with the continuous
controller discussed in Eqs. ( 5.13)–(5.16), carried out in [ 35], does not allow clear
conclusions.
Particularly relevant, also considerin g the recent experimental developments at
Stanford University to be discussed in Sect. 5.5, is the sliding mode path tracking
controller developed in [ 46], for a four-wheel-steerin g vehicle, according to the
strong tradition of Japanese vehicle engineering in four-wheel-steering systems. The
controller is based on the important concept of centers of percussion of the front
and rear axles. The centers of percussion (COPs) are located on the symmetry plane
of the vehicle. Their longitudinal position with respect to the center of gravity is
deﬁned by (see also Fig. 5.16):
jxCOP;fjDIz
mb;jxCOP;rjDIz
ma(5.39)
The four-wheel-steering vehicle layout of [ 46] allows the independent control of
two variables, i.e., in the speciﬁc case the lateral position errors at the front and rear
centers of percussion, respectively, /c129yCOP,f and/c129yCOP,r.
The relationship between the vehicle st ate variables and the time derivatives of
the lateral position errors at the centers of percussion is:
/SUB/c129PyCOP;fD/NUL/STXv.ˇC/c129 COP;f/CjxCOP;fjP /ETX
/c129PyCOP;rD/NUL/STX
v.ˇC/c129 COP;r//NULjxCOP;rjP /ETX (5.40)
This means that the state vector /CAND/STX
ˇP /ETXTof a linear single-track vehicle
model similar to that reported in Eq. ( 5.21) can be expressed as a function of
/c129PyCOPDŒ/c129PyCOP;f/c129PyCOP;r/c141Tand/c129 COPD[/c129 COP,f/c129 COP,r]T:
/CANDT/c129PyCOPCvT/c129 COP (5.41)
The substitution of Eq. ( 5.41) into the single-track vehicle model equations leads
to the following tracking position dyna mics at the centers of percussion:
/c129RyCOPDA0/c129PyCOPCB0
uCvA0/c129 COPCvP path;COPCh0w (5.42)104 A. Sorniotti et al.
Target
path
Fig. 5.16 Vehicle model for four-wheel-steering path tracking based on the centers of percussion
(adapted from [ 46]). The sign convention is the one in [ 46]
where P path;COPD/STXP path;COP;fP path;COP;r/ETXTis the vector formulation of the
time derivatives of the target path head ing angles at the front and rear centers of
percussion.
With a proper selection of the feedback controller conﬁguration and by imposing
that the two control points are the centers of percussion of the vehicle, Eq. ( 5.42)
simpliﬁes into the form:
/c129RyCOPDB0
uCvP path;COPCh0w (5.43)
where:
B0D/DC4/NUL2CfL
mb0
0/NUL2CrL
ma/NAK
(5.44)
The diagonal matrix B0very importantly indicates that the position tracking
problems at the front and rear centers of percussion are decoupled. Hence, each
center of percussion path deviation can be independently controlled by the front
and rear steering angles. As a consequence, the control laws for the front and rear
axles can be separately designed, as single-input single-output controllers. This
means that the lateral displacement dynami cs of the front center of percussion are
independent from the lateral force of the r ear tires, while the lat eral displacement5 Path Tracking for Automated Driving: A Tutorial on Control System ... 105
dynamics of the rear center of percussion are independent from the lateral force of
the front tires. A different selection of the longitudinal position of the control points
would imply the design of a multivariable controller.
In the speciﬁc case of [ 46], the resulting sliding mode control laws have the
following shape:
(
ıfDˇCa
vP CcCOP;f
/DC4COP;f/c129PyCOP;fCMCOP;fsgn./ESCf/
ırDˇ/NULb
vP CcCOP;r
/DC4COP;r/c129PyCOP;rCMCOP;rsgn./ESCr/(5.45)
with the sliding variables /ESCfand/ESCrdeﬁned as/ESCiDcCOP;i/c129yCOP;iC/c129PyCOP;i, with
iDf,r. The formulation in Eq. ( 5.45) requires an estimation of sideslip angle, while
P and/c129PyCOP;ican be easily measured or estimated . The sliding mode formulation
of the speciﬁc paper is designed, thr ough the appropriate deﬁnition of the gains,
MCOP,f andMCOP,r, to provide robustness against the variations of cornering stiffness
and target path radius, and cross-wind disturbances. In order to prevent chattering,
the following approximation of the discontinuous part of the control law is
used:
sgn./ESCi/Šsin/DC2
tan/NUL1/DC2/ESCi
/SYNi/DC3/DC3
;/SYNi>0. iDf;r/ (5.46)
The resulting steady-state values of the front and rear steering angles, ıf,ssand
ır,SS, are given by:
8
<
:ıf;SSD˙1
Rtr/DLE
a/NULa/NULb
2mabIzCmbv2
2CfL/DC1
ır;SSD˙1
Rtr/DLE
/NULb/NULa/NULb
2mabIzCmav2
2CrL/DC1 (5.47)
In practice, the sign of ır,SSchanges at the vehicle speed v0(about 55 km/h for the
case study vehicle of [ 46]), i.e., at low speeds the rear wheels steer in counterphase
with respect to the front wheels, while the opposite happens for v>v0.
v0Ds
2Crl
ma/DC2
bCa/NULb
2mabIz/DC3
(5.48)
The four-wheel-steering controller b ased on the COP concept was validated
through CarSim simulations of a cross-wind disturbance situation. Figure 5.17
reports a sample of the simulation results, showing that the maximum deviations at
the front and rear control points of the four -wheel-steering veh icle are not inﬂuenced
by vehicle velocity, while the rear path deviation of the two-wheel-steering vehicle
used as a term of comparison increases at exponential rate.
Overall, the main beneﬁt of sliding mode control is the low-complexity of the
resulting control law (see Eqs. (5.37) and (5.45)), however: (1) “it needs knowledge
about the bounds of the disturbances and uncertainties in advance” [ 47]; (2) “it is
not robust outside the sliding surface” [ 47]; and (3) it can present chattering.106 A. Sorniotti et al.
Fig. 5.17 Example of validation results of the controller in [ 46], in terms of maximum path
deviations at the front (indicated as “ep” in the ﬁgure) and rear (indicated as “eq” in the ﬁgure)
centers of percussion. From left to right: /SYNcD0.3,0.5,0.85. Upper: two-wheel-steering vehicle,
lower: four-wheel-steering vehicle
In order to alleviate (3), Tagne et al. [ 48] adopted and experimentally validated a
super-twisting algorithm of the form ıDıSTCıeq,w h e r eıSTis the super-twisting
contribution:
ıSTDıST;1CıST;2;/SUBıST;1D/NUL˛1;STj/ESCj0:5sign./ESC/
PıST;2D/NUL˛2;STsign./ESC/(5.49)
with/ESCD/c129PyCGC/NAK/c129yCG. The equivalent term corresponding to P/ESCD0is
calculated starting from the equations of the single-track model of the system and is
given by:
ıeqDCfCCr
CfˇCaCf/NULbCr
CfvxP Cmv2
x
Cf/DC4/NULm/NAK
Cf/c129PyCG (5.50)
[49,50] are other useful references in the area of sliding mode control applied
to automated driving. The recent paper [ 47] presents and experimentally validates,
including comparison with the super-twisting algorithm of Eqs. ( 5.49)a n d( 5.50),
a path tracking controller based on the the ory of immersion and invariance, where
the target dynamics for the system are selected during the control design phase,
similarly to sliding mode control. The main beneﬁts with respect to sliding mode
control are that: (i) “the manifold does not necessarily have to be reached”; (ii) it
allows more ﬂexibility in the s election of the target dynamics; and (iii) “it avoids the
use of a discontinuous term in the control law.”
In the area of control structures with discontinuous control action, [ 51]
experimentally demonstrates a nonlinear controller (in practice a sliding mode5 Path Tracking for Automated Driving: A Tutorial on Control System ... 107
controller including saturation functions, even if it is not explicitly called in
this way in the original paper), based on the lateral offset at a look-ahead
point (estimated by a Kalman ﬁlter, together with its time derivative) and
t h ey a wa n g l ee r r o r .[ 52] presents a discontinuous control law of the form
ıD/NUL.jkd/CANjCjrj/sign/NUL
bTPL./CAN/NUL/CANref//SOH
, generated through model-reference
control and a Lyapunov approach, with simulation results showing signiﬁcant
chattering, unacceptable for a r eal vehicle implementation.
5.4.2 Other Control Structures
Many other path tracking controllers were implemented in the literature, covering
most of the control structure options.
For example, O’Brien et al. [ 53] discuss an H1controller based on the
theory of loop-shaping [ 54,55], with the purpose of providing robustness with
respect to the variation of the plant par ameters. Given a plant with a co-prime
factorization GHDeM/NUL1
HeNH[54,55], the perturbed plant is expressed as GH/c129D/NULeMHC/c129MH/SOH/NUL1/NULeNHC/c129NH/SOH
,w h e r e k/c129MH/c129NHk1</SI formulates the fact that
the actual plant can be different from the nominal plant. The purpose of the H1
optimization is to ﬁnd a controller stabilizing the system and maximizing the value
of/SI.T h ev a l u eo f /SImaxrepresents a measure of the stability margin (i.e., the so-called
robust stability margin) for the nominal system to perturbations in the co-prime
factorization of the plant. The pap er assesses the performance of the H1controller
through simulations with a basic 3-degree-of-freedom vehicle model, including
robustness analysis with respect to varying speeds, icy roads, and wind gusts. As
the controller is based on two inputs (i.e., the lateral displacement error and yaw
angle error) and produces one output, a si ngular value decomposition analysis [ 55]
would allow discussing its functional controllability. A more recent second example
ofH1controller implementation and experi mental demonstration on a prototype
vehicle is included in [ 56].
Shin and Joo [ 57] present a backstepping controller design (see [ 58]f o rt h e
theory of backstepping), based on a linear single-track vehicle model, in this case
with the following states: (i) sideslip angle; (ii) yaw rate; (iii) the difference between
the actual and reference yaw angles, /c129 D /NUL ref; and (iv) the vehicle offset from
the center of the lane, /c129yld. In particular, in the model for control system design, the
equation of/c129Pyldis/c129PyldDv.ˇC/c129 / CldP . Hence, the reference yaw rate is
deﬁned as
P refD/NULv.ˇC/c129 / CKd/c129yld
ld(5.51)
By deﬁning/c129P DP /NULP refand substituting into the equation of /c129Pyld, the lateral
displacement error dynamics are described by /c129PyldD/NUL Kd/c129yldCld/c129P .A f t e r
differentiation of /c129P with respect to time and re-substitution into the single-track108 A. Sorniotti et al.
model equations, the yaw rate error dynamics are given by Eq. ( 5.52), based on the
expressions of the coefﬁcients Cˇ,CP ,C/c129 ,C/DC4,a n d bı.
/c129R DCˇˇCCP P CC/c129 /c129 /NULC/DC4/DC4Cbıı
CˇD/NUL2CfC2Cr
mCvkdCld2Crb/NUL2Cfa
Iz
ld
CP Dv/DLE
/NUL1C2Crb/NUL2Cfa
mv2/DC1
CvCKdld/NULld2Crb2/NUL2Cfa2
Izv
ld
C Dkdv
ldC/DC4Dv2
ldbıD2Cfa
IzC2Cf
ldm(5.52)
The steering control law is then chosen as:
ıD1
bı"
/NUL/DLE
CˇˇCCP P CC/c129 /c129 /NULC/DC4/DC4/DC1
/NULWdld
WP /c129yld/NULkP P #
(5.53)
which brings the following yaw rate error dynamics: /c129R D/NUL kP P /NULWdld
WP /c129yld.
The term kP P in Eq. ( 5.53) is used to decouple the lateral displacement and yaw
rate error dynamics. The stability of the cont roller can be demonstrated through the
Lyapunov function LLyapunov D1
2/DLE
Wd/c129y2
ldCWP /c129P 2/DC1
.
The controller was assessed in relativel y low lateral acceleration conditions,
through experimental tests with a vehicle prototype (a Hyundai sedan) on a proving
ground consisting of a straight section with a length of about 1.2 km and a curved
section with a radius of 260 m. Interestingly, the experimental analysis included the
comparison of the lateral offset of the veh icle trajectory with re spect to the reference
one for the cases of human driving and autonomous driving. In general, the proposed
controller “has the properties of deviating outwards in the lane during curve entry
and inwards during curve exit, similar to the human driver. This can be reduced by
adjusting the look-ahead distance to vary proportionally to the vehicle speed and by
tuning the feedforward gain related to the curvature” [ 57].
Many papers (e.g., [ 59–62]) present fuzzy logic-based controllers for vehicle
path tracking control. Given the general caution with respect to fuzzy control still
present in industry (e.g., because of the lack of formal proof of stab ility), this chapter
will not report the detailed descriptions of the available fuzzy implementations.
The only note is that Naranjo et al. [ 62] include experimental results (on a Citroen
Berlingo) with a fuzzy controller based on a real-time kinematic differential global
positioning system, used as the main sensor for vehicle positioning.
5.4.3 Remarks
Unluckily, apart from [ 16], assessing geometric controllers and different LQR
formulations on a CarSim vehicle model (see Table 5.1summarizing the main5 Path Tracking for Automated Driving: A Tutorial on Control System ... 109Table 5.1 Comparison of a selection of the path tracking controller formulations discussed so far (adapted from [ 16])
Tracking method
Robustness to
disturbances
 Path requirements
 Cutting Corners
 Overshooting
 Steady state error
Suitable
applications
Pure pursuit
 Good
 None within reason
 Signiﬁcant as speed
increases
Moderate as speed
increases
Signiﬁcant as speed
increases
Slow driving and/or
on discontinuous
paths
Stanley
 Fair
 Continuous
curvature
No
 Moderate as speed
increases
Signiﬁcant as speed
increases
Smooth highway
driving and/or
parking maneuvers
Kinematic (chained
controller)
Poor
 Continuous through
second derivative of
curvature
No
 Moderate as speed
increases,
signiﬁcant during
rapidly changing
curvature
Signiﬁcant as speed
increases
Smooth parking
maneuvers
LQR with
feedforward
Poor
 Continuous
curvature
No
 Signiﬁcant during
rapidly/changing
curvature
Minimal until much
higher speeds
S m o o t hh i g hs p e e d
urban driving at
speed
LQR with preview
 Fair
 None within reason
 Moderate in rapidly
changing curvature
and/or speed
Moderate in rapidly
changing curvature
and/or speed
Minimal until much
higher speeds
Highway driving at
relatively constant
speed
110 A. Sorniotti et al.
conclusions of that study), there is limited a vailable literature objectively comparing
the performance of the different path tracking controllers discussed so far in this
chapter.
[63] is an exception, presenting a simulation-based comparison of four con-
trollers, i.e., a self-tuning regulator (for the details, see [ 64]), an H1controller, a
fuzzy logic controller, and a P controller (of the form ıDk/c129 /c129 Ck/c129yld/c129yld). The
assessment includes consideration of the effects of curvature, wind, and variations
of vehicle speed and tire-road friction coe fﬁcients, along the simulated test track
circuit at Satory – Versailles, France. The model used for the comparison is a simple
linear single-track vehicle model, with a limited level of realism. The comparison
shows that the self-tuning controller provides the best performance, followed by
theH1controller and the fuzzy logic controller, which are approximately at the
same level (even if the authors of [ 63] mention that fuzzy control is generally less
reliable than a conventional controller), and ﬁnally by the proportional controller.
However, this important analysis would require further development and level of
detail.
5.5 Recent Advances in Path Tracking Control
The conclusion of the comparative study of different path tracking controllers in [ 16]
(see Table 5.1), dating back to 2009, was that the expected evolution of the science of
path tracking control would have been in the directions of (a) controllers combining
different structures and formulations depending on the operating condition of the
vehicle, in order to provide consistently reliable automated driving and (b) model
predictive controllers, for autonomous driving even in extreme conditions, for
example, at high lateral accelerations.
Based on the literature discussed so far, it is evident that there are already
extensive experimental demonstrations of gain scheduled controllers capable of
simultaneously providing the required vehicle tracking response for a wide range
of speeds and lateral accelerations, and very precise maneuverability in docking
conditions. In particular, [ 40] explicitly mentions that with the speciﬁc experi-
mentally validated path tracking controller, based on linear control theory and
implemented with realistic vehicle actuators, there is no need for multiple control
structures, in order to achieve consistently reliable and comfortable path tracking
behavior. On the other hand, the very recent paper [ 65] still includes kinematic
model-based controllers in the analysis and considers them useful in low-speed
conditions. Nevertheless, given results such as those in [ 40], the authors of this
chapter do not consider the development of heterogeneous control structures to
be a priority or major obstacle for the development of the automated driving
agenda.5 Path Tracking for Automated Driving: A Tutorial on Control System ... 111
Two main trends can be observed in the recent research in the subject area of
path tracking control:
(i) Development of path tracking controllers characterized by the capability of
controlling the vehicle at its cornering limit, for example, even at lateral
accelerations of 9.5 m/s2(e.g., for automated car racing).
(ii) Progressive increase of the level of sophistication of the implemented control
structures, with particular focus on model predictive control, now extensively
implemented in simulation and preliminarily demonstrated at the experimental
level (which conﬁrms the conclusion of [ 16]).
The following subsections describe exam ples of recently published path tracking
controllers, with concise critical analyses and discussions.
5.5.1 Advanced Feedforward and Feedback Controllers
for Limit Cornering
Important recent contributions in the area of p ath tracking control, mainly developed
at Stanford University, are aimed at achie ving high path tracking performance at the
cornering limit of th e vehicle, e.g., at lateral acceleration levels up to 9.5 m/s2in high
friction conditions (which represents the cornering limit for a typical passenger car),
or for extreme combined corn ering and braking/traction [ 66–70]. Particular focus is
on the development of feedforward steerin g formulations, allowing a relaxation of
the speciﬁcations of the feedback part of the controller and a reduction of the issues
related to the effect of measurement disturbances.
For example, Kritayakirana and Gerdes [ 67] present and experimentally validate
a feedforward/feedback steering controller f or a two-wheel-steering vehicle, based
on the path tracking control of the front cen ter of percussion (COP), already deﬁned
in Eq. ( 5.39). By considering /c129P CGDP /NULP path;CGDP /NUL/DC4Psand the yaw moment
balance equation of a single-track vehicle model, the time derivative of /c129P CG(i.e.,
the yaw acceleration error) is:
/c129R CGDR /NUL/DC4Rs/NULP/DC4PsDaFy;f/NULbFy;r
Iz/NUL/DC4Rs/NULP/DC4Ps (5.54)
The lateral position error at a generic point Palong the x-axis of the vehicle
reference system is given by: /c129yPD/c129yCGCxPsin/c129 CGand its acceleration /c129RyP
is approximated with:
/c129RyPDFy;fCFy;r
m/NULvx/DC4PsCxPaFy;f/NULbFy;r
Iz/NULxP./DC4RsCP/DC4Ps/ (5.55)
The issue is that the steering actuator can command the front tire force, but it
does not have any direct control over the rear tire force, which, thus, represents a
disturbance in Eq. ( 5.55). However, by imposing xPDxCOP,f and hence thatFy;r
mC112 A. Sorniotti et al.
xCOP;f/NULbFy;r
IzD0,E q .( 5.55) can be simpliﬁed into:
/c129RyCOP;fDFy;fCFy;r
m/NULvx/DC4PsCxCOP;faFy;f/NULbFy;r
Iz/NULxCOP;f./DC4RsCP/DC4Ps/
DL
bFy;f
m/NULvx/DC4Ps/NULxCOP;f./DC4RsCP/DC4Ps/(5.56)
The rear tire force is thus eliminated from t he equation of the lateral acceleration
error at the control point, which now depends only on Fy,f, directly controllable
through the steering input. The conclusion, similar to the outcome of the analysis in
[46] referred to a four-wheel-steering vehicle, is that at the front COP the effect of
the rear tire forces on the lateral position error dynamics can be neglected.
The feedforward contribution of the steering controller in [ 67] has the purpose
of eliminating the dynamics of the lateral acceleration error, i.e., it can be obtained
by imposing/c129RyCOP;fD0in Eq. ( 5.56). Hence, the feedforward lateral force on the
front axle, FFFW
y;f, is given by:
FFFW
y;fDmb
L.vx/DC4PsCxCOP;f./DC4RsCP/DC4Ps// (5.57)
Eq. ( 5.57) allows ideal tracking performance, independently from the rear lateral
tire force contribution, provided that the terms related to the reference path can be
accurately estimated. By substituting Eq. ( 5.57) into the yaw moment error equation
and introducing the feedback part of the control force on the front axle, FFB
y;f,s u c h
that the total control force is FTOT
y;fDFFFW
y;fCFFB
y;f, the system dynamics become:
(
/c129R CGDa
IzFFB
y;fCvx
L/DC4Ps/NULb
IzFy;r/NULb
L./DC4RsCP/DC4Ps/
/c129RyCOP;fDL
bFFB
y;f
m(5.58)
Through the termsvx
L/DC4Ps/NULb
L./DC4RsCP/DC4Ps/,E q .( 5.58) shows that the disturbance
caused by the curvature cannot be eliminated from the yaw tracking equation,
unless an independent actuator controlling t he rear tire force is adopted (as already
proposed in [ 46]).
The objective of the feedback part of the controller in [ 67,68] is to provide path
tracking and yaw stability even when the rear tires are saturated, while the scenario
in which the front tires are saturated is not considered. Note that passenger cars
are usually characterized by an understeering behavior for vehicle safety, i.e., the
absolute value of the front slip angles is normally larger than the absolute value of
the rear slip angles, and the front lateral forces saturate ﬁrst.
During the design of the feedback controller, the nonlinear behavior of the
rear tires is considered through the model proposed in [ 69], according to which
Fy;rD/NUL2/DC1rCr˛r, with/DC1r(0/DC4/DC1r/DC41) being a monotonically decreasing function
of the absolute value of the rear slip angle. By substituting the control variables5 Path Tracking for Automated Driving: A Tutorial on Control System ... 113
into the expression of ˛r/EMvy/NULbP 
vx,i ti s˛r/EM/c129PyCOP;f/NUL.bCxCOP;f//c129P CG/NULvx/c129 CG/NULb/DC4Ps
vx.B y
including this formulation into the expression for Fy,rand then into the equations of
the single-track vehicle model in path coordinates (see also Eq. ( 5.22)), the state-
space formulation of the system is obtained, including the effect of the feedforward
controller.
The feedback contribution of the front lateral force is then expressed as a full-
state feedback controller:
FFB
y;fD/NULKLC/CAND/NULk1LC/c129yCOP;f/NULk2LC/c129PyCOP;f/NULk3LC/c129 CG/NULk4LC/c129P CG(5.59)
By substituting Eq. ( 5.59) into the state-space formulation, the closed-loop
system equations can be used for control system design:
2
664/c129PyCG
/c129RyCG
/c129P CG
/c129R CG3
775D2
666401 0 0
/NULk1LCL
bm/NULk2LCL
bm/NULk3LCL
bm/NULk4LCL
bm
00 0 1
/NULk1LCa
Iz/NULk2LCa
IzC2b/DC1rCr
Izvx/NULk3LCa
Iz/NUL2b/DC1rCr
Iz/NULk4LCa
Iz/NUL2.bCxCOP/b/DC1rCr
Izvx3
7775
/STX2
664/c129yCG
/c129PyCG
/c129 CG
/c129P CG3
775C2
66640
0
0
vx/DC4Ps
L/NULb
L./DC4RsCP/DC4Ps//NUL2b2/DC1rCr/DC4Ps
Izvx3
7775
(5.60)
In the speciﬁc controller of [ 67], it is k2LCD0. In particular, FFB
y;fof Eq. ( 5.59)
is manipulated to become FFB
y;fD/NUL kLK/NUL
/c129yCOP;fC.ld/NULa//c129 CG/SOH
/NULk/c129P /c129P CG,
where clearly the control point of the feedback part of the controller is not
located at the front center of percussion any more. During the control system
implementation, the following values are adopted: kLKD4000 N/m, ldD20 m and
k/c129P D9500 Ns/rad. The stability of the control system at the cornering limit is
demonstrated through Lyapunov method applied to Eq. ( 5.60), without considering
the disturbance from the curvature (which does not affect stability). Detailed tuning
criteria of the feedback control gains are reported in [ 71].
Starting from the previous formulations of the reference front lateral force, FTOT
y;f,
the Fiala tire model for pure cornering conditions is used to obtain the reference
slip angle on the front axle, ˛ref,f. Then, based on the measured vehicle yaw rate
and estimated sideslip angle, the reference steering angle ıfor the front axle is
calculated, based on the kinematic relationship ı/EMˇCaP 
vx/NUL˛ref;f. In practice,
these steps can introduce signiﬁcant errors in the process, in the absence of very
accurate state estimation.
A more recent paper of the same research group [ 70] presents a further develop-
ment of the controller discussed so far, as the experimental tests show a suboptimal
tracking performance of th e controller based on Eqs. ( 5.57)a n d( 5.59) above
7m / s2of lateral acceleration. The authors s uggest considering a simpliﬁcation of114 A. Sorniotti et al.
the feedforward contribution in Eq. ( 5.57), by imposing xCOP f./DC4RsCP/DC4Ps/D0and
PsDvx, in order to reduce vehicle response oscillations and increase damping. As a
consequence, the feedforward values of the lateral force at the front and rear axles
simply become:
(
FFFW
y;fDmb
Lv2
x/DC4
FFFW
y;rDma
Lv2
x/DC4(5.61)
which are the steady-state values of lat eral force in cornering at the reference
lateral acceleration v2
x/DC4.F r o m FFFW
y;fandFFFW
y;r, it is possible to calculate ˛FFW
f
and˛FFW
r, which are the corresponding slip angles. The new expression of the
feedforward steering angle is:
ıFFW;LCDL/DC4/NUL˛FFW
fC˛FFW
r (5.62)
which is the well-known equation of vehicle response in steady-state cornering
conditions. The main challenge is to actually implement the controller and state
estimators computing the correct values of ˛FFW
fand˛FFW
r.
In [70], the feedback control law of Eq. ( 5.59) is simpliﬁed into the proportional
controller:
ıFB;LC;1D/NULkP./c129yCGCld/c129 CG/ (5.63)
The overall control law is, thus, given by ıDıFFW,LC CıFB,LC,1 . The steady-
state response of the system as a function of vis reported in Fig. 5.18, at lateral
accelerations of 3 m/s2and 7 m/s2, where for the ﬁrst case the calculation is based
on a linear vehicle model and for the latter it is based on a nonlinear model.
Since the controller is aimed at eliminating a weighted sum of /c129yCGand/c129 CG,
the feedback part of the controller actually tries to reduce /c129yld, while the steady-
state values of /c129yCGand/c129 CGare nonzero. From a physical viewpoint, this is the
situation corresponding to Fig. 5.19a. An important observation from Fig. 5.18 is
that the steady-state value of path deviation is close to zero for vehicle speeds of
17 m/s and 20 m/s, depending on the considered vehicle model. This means that at
these speeds the velocity vector at the center of gravity is tangent to the path and
/c129 CG/EM/NULˇ(see Fig. 5.19b).
A new form of look-ahead feedback control law is suggested, with the aim of
constantly keeping the vehicle in the operating condition of Fig. 5.19b:
ıFB;LC;2D/NULkP./c129yCGCld./c129 CGCˇ// (5.64)
With this control law, the steady-state error /c129yCGis signiﬁcantly reduced (i.e.,
it is ideally zero when including the feed forward contribution according to Eq.
(5.62)); however, the system is now characterized by reduced stability margins,
with respect to the feedback control law of Eq. ( 5.63). This is evident through5 Path Tracking for Automated Driving: A Tutorial on Control System ... 115
Fig. 5.18 Steady-state path tracking error /c129yCG, sideslip angle ˇ, and heading deviation /c129 CG
as a function of vehicle speed (from [ 70])
(a) (b)
Fig. 5.19 (a) Steady-state cornering when the vehicle has lateral position error at the center of
gravity but no look-ahead error; ( b) Steady-state cornering with zero lateral deviation at the center
of gravity, which requires the velocity vector to be tangent to the path, i.e., /c129 CGD/NULˇ(from
[70])116 A. Sorniotti et al.
Fig. 5.20 Root-locus
analysis for the controllers
corresponding to Eqs. ( 5.62)
and ( 5.63) (“Lookahead FB”
in the ﬁgure) and Eqs. ( 5.62)
and ( 5.64) (“Lookahead Cˇ”
in the ﬁgure), for vehicle
speeds varying from 5 m/s to
25 m/s (from [ 70])
the root-locus analysis of Fig. 5.20, comparing the systems governed by the
same feedforward control law (Eq. 5.62), and the feedback laws corresponding to
Eqs. ( 5.63)a n d( 5.64). For example, at 25 m/s the closed-loop steering response
with Eq. ( 5.63) is well damped, with a damping ratio of 0.9, while in the
same conditions the damping ratio is only 0.2 with the feedback control of
Eq. ( 5.64).
In order to prevent the stability issu es of path tracking enforced through
feedback, Kapanja and Gerdes [ 70] ﬁnally propose to eliminate the sideslip-related
feedback contribution from Eq. ( 5.64). Nevertheless, the zero displacement error
condition (corresponding to /c129 CGD/NULˇ) is incorporated into the feedback
contribution by using ˇSS(i.e., the expected steady-state value of sideslip angle)
instead of the estimated ˇ. Hence, Eq. ( 5.64) becomes:
ıFB;LC;3D/NULkP./c129yCGCld./c129 CGCˇSS//
D/NULkP/NUL
/c129yCGCld/NUL
/c129 CGC˛FFW
rCb/DC4/SOH/SOH (5.65)5 Path Tracking for Automated Driving: A Tutorial on Control System ... 117
Fig. 5.21 Performance comparison between: (i) the controller corresponding to Eqs. ( 5.62)a n d
(5.65), “With Sideslip FFW” in the legend; and (ii) the controller corresponding to Eqs. ( 5.62)a n d
(5.63), “Original Controller” in the legend (from [ 70])
Actually, the sideslip contribution of Eq. ( 5.65), i.e., /NULkPld/NUL
˛FFW
rCb/DC4/SOH
,i sn o w
a feedforward term.
Vehicle experiments with an autonomous Audi TTS were executed at the
Thunderhill Raceway Park, in order to compare the performance of (i) the controller
corresponding to Eqs. ( 5.62)a n d( 5.65) and (ii) the controller corresponding to
Eqs. ( 5.62)a n d( 5.63). The experimental results, reported in Figs. 5.21 and5.22,
show that controller (i) implies signiﬁcantly improved path tracking. In any case,
the whole approach needs further developments, as the feedforward contribution is
sensitive to system uncertainty (e.g., tire-road friction conditions), which is much
more important in the case of a vehicle ope rating on a real road rather than on a race
track.118 A. Sorniotti et al.
Fig. 5.22 Performance comparison, in terms of probability distribution of /c129yCG, between: (i) the
controller corresponding to Eqs. ( 5.62)a n d( 5.65), “With Sideslip FFW” in the legend; and (ii) the
controller corresponding to Eqs. ( 5.62)a n d( 5.63), “Baseline Controller” in the legend (from [ 70])
5.5.2 Model Predictive Control
With respect to the path tracking formulations discussed in the previous sections,
model predictive control [ 72–74] brings the following beneﬁts:
 Inclusion of constraints on inputs and states;
 Systematic approach to the control problem, with the possibility of considering
multiple actuators and models at different levels of complexity within the same
control design framework;
 Enhanced tracking performance at medium -high lateral accelerations and during
emergency conditions, depending on the complexity level of the selected model
for control system design.
Extensive literature provides simulation and experimental results of model
predictive control applications for path tracking. For example, one of the ﬁrst
attempts is presented in [ 75], with a path tracking model predictive controller based
on a single-track vehicle model. This adopts a nonlinear tire model with constant5 Path Tracking for Automated Driving: A Tutorial on Control System ... 119
cornering stiffness and lateral force saturation at the value corresponding to the
estimated tire-road friction coefﬁcient.
Falcone et al. [ 76] discuss and compare three model predictive control formula-
tions. The ﬁrst one (here called Controller A) is based on a nonlinear single-track
vehicle model. This considers constant vertical load on the front and rear axles and
uses Pacejka magic formula [ 77], under the hypothesis of zero longitudinal slip ratio
(i.e., pure cornering conditions). The model is expressed in the form:
/CANkC1Dfdt
s.k/;/SYN.k/./CANk;/c129uk/ (5.66a)
ukDuk/NUL1C/c129uk (5.66b)
The system output is zMPC kDŒ kyk/c141T. The cost function to be minimized is:
J./CANt;/c129Ut/DHPX
nD1/CR/CRzMPC kCn/NULzMPC ref;kCn/CR/CR2
QCHc/NUL1X
nD0k/c129ukCnk2
R (5.67)
The ﬁrst contribution,PHP
nD1/CR/CRzMPC kCn/NULzMPC ref;kCn/CR/CR2
Q, relates to the tracking
performance of the system ( zMPCref is the vector of the reference signals), while
the second contribution,PHc/NUL1
nD0k/c129ukCnk2
R, considers the control effort. Similarly to
the case of the linear quadratic regulator, the parameters of QandRcan be tuned
to deﬁne the performance of the model predictive controller, i.e., the variables that
need to be tracked with higher precision, and the relative weight between tracking
performance and control effort. At each time step, the following ﬁnite horizon
optimal control problem is solved:
arg min
/c129UJ./CANt;/c129Ut/;(5.68a)
s.t.
/CANkC1;tDfdt
sk;t;/SYNck;t./CANk;t;/c129uk;t/ (5.68b)
zMPC k;tDh./CANk;t/ (5.68c)
/SYNck;tD/SYNct;t;sk;tDst;t;kDt;:::; tCHP (5.68d)
ımin/DC4uk;t/DC4ımax (5.68e)
/c129ımin/DC4/c129uk;t/DC4/c129ımax (5.68f)120 A. Sorniotti et al.
uk;tDuk/NUL1;tC/c129uk;t;kDt;:::; tCHC/NUL1 (5.68g)
/c129uk;tD0;kDtCHC;:::; tCHP (5.68h)
/CANt;tD/CAN.t/ (5.68i)
The optimization vector at time tis/c129UtDŒ/c129ut;t:::/c129 utCHC/NUL1;t/c141TIHPandHC
denote the prediction and control horizons, respectively. The solution of problem
(5.68) implies a nonlinear optimization, with a very signiﬁcant computational
burden. The optimization of Controller A is solved through the commercial NPSOL
software package [ 78].
Falcone et al. [ 76] present only experiments at low vehicle speed with the
controller based on the nonlinear model in the form of Eq. (5.66a) and the
optimization problem (5.68), i.e., Contro ller A. In fact, as speed increases, larger
prediction and control horizons are required “in order to stabilize the vehicle along
the path.” This implies more evaluations of the objective function and increased
size of the optimization problem, which becomes unpractical. As a consequence,
Falcone et al. [ 76] also discuss an alternative formulation, Controller B, based
on the linearization of the system at each time step, around the current operating
point. This procedure signiﬁcantly decreases the computational complexity of
the optimization problem, even if additional calculations are required for system
linearization at each time step. In the case of Controller B, the model output vector is
zMPC kD/STX
 kP kyk/ETXT. In Controller B, tire slip angle variation is an additional output
that is constrained (through a soft constraint and a slack variable) but not tracked.
Controllers A and B were assessed in double lane change tests through simula-
tions and experiments. Controller parameters have a signiﬁcant effect on the control
system performance; therefore, th e main parameter values used in [ 76] are reported
for completeness:
 Controller A: TsD0.05 s, HPD7,HCD3,ıminD/NUL10deg,ımaxD10 deg,
/c129ıminD/NUL1:5deg,/c129ımaxD1.5 deg,/SYNcD0.3,QD/DC4500 0
07 5/NAK
,RD150;
 Controller B: TsD0.05 s, HPD25,HCD10,ıminD/NUL10deg,ımaxD10
deg,/c129ıminD/NUL0:85 deg,/c129ımaxD0.85 deg,/SYNcD0.3, QD2
4200 0 0
01 00
00 1 03
5,
RD5*1 04.
Finally, Falcone et al. [ 76] include a simpliﬁed version of Controller B, here
called Controller C, with HCD1, allowing a further reduction of the computational
load for implementation on actual automot ive control hardware (in this case, the set
of required calculations at each time step can be predicted a priori).5 Path Tracking for Automated Driving: A Tutorial on Control System ... 121
Table 5.2 Maximum computation times for Controller A and Controller B during lane change
tests at different vehicle speeds (from [ 76])
v[m/s]
 Controller A [s]
 Controller B [s]
10
 0.15 ( HPD7,HCD2)
 0.03 ( HPD7,HCD3)
15
 0.35 ( HPD10,HCD4)
 0.03 ( HPD10,HCD4)
17
 1.3 (HPD10,HCD7)
 0.03 ( HPD10,HCD10)
Fig. 5.23 Experimental results with Controller B at 21.5 m/s entry speed. From the top: lateral
position, yaw angle, and yaw rate (from [ 76])
Table 5.2compares the maximum computa tion times of Controller A and
Controller B during a lane change maneuver in low friction conditions. Clearly,
with the control hardware available in [ 76], it is not possible to run Controller A for
vehicle speeds larger than 10 m/s. Figures 5.23 and5.24 show vehicle performance
with Controller B during the double lane change test executed at 21.5 m/s. The
control action is characterized by signiﬁcant chattering. The authors of [ 76] state
that this aspect is not critical, as the vehicle cornering dynamics act as a ﬁlter, and,
therefore, the vehicle passengers do not perceive the oscillations.
Tables 5.3and5.4report the main tracking performance indicators during the
tests, for different vehicle speeds, respectively, for Controller B and Controller
C. According to [ 76], “Controller C performs slightly worse than Controller B;”
nevertheless, “it is able to stabilize the vehicle at high speed.”
In [79], the same research group presents a model predictive controller (here
called Controller D) based on a four-wheel vehicle model including wheel and tire
dynamics. As a consequence, the state vector of the model for control system design122 A. Sorniotti et al.
Fig. 5.24 Experimental results with Controller B at 21.5 m/s entry speed. From the top: front
steering angle, change in front steering angle, and front tire slip angle (from [ 76])
Table 5.3 Performance indicators (i.e., tracking errors) for Controller B for double lane change
tests at different initial speeds (from [ 76])
v[m/s]
/SYNc
/c129 rms[deg]
/c129Yrms[m]
/c129 max[deg]
/c129Ymax[m]
10
 0.3
 0.53
 1.28/STX10/NUL2
8.21
 0.8
15
 0.3
 1.172
 4.64/STX10/NUL2
14.71
 2.51
19
 0.3
 1.23
 7.51/STX10/NUL2
16.38
 3.10
21.5
 0.25
 1.81
 1.11/STX10/NUL1
19.02
 2.97
Table 5.4 Performance indicators (i.e., tracking errors for Controller C for double lane change
tests at different initial speeds (from [ 76])
v[m/s]
/SYNc
/c129 rms[deg]
/c129Yrms[m]
/c129 max[deg]
/c129Ymax[m]
10
 0.2
 9.52/STX10/NUL1
5.77/STX10/NUL2
13.12
 3.28
17
 0.25
 8.28/STX10/NUL1
2.90/STX10/NUL2
12.26
 1.81
21
 0.2
 1.037
 7.66/STX10/NUL2
12.49
 3.20
is/CAND/STX
Pyvx P YX!lf!rf!lr!rr/ETXT. The tires are modeled through the magic
formula, this time including consideration of the interaction between longitudinal
and lateral forces. However, the vehicle model considers a constant vertical load
on each tire, which is a substantial limitation, as the load transfers induced by
longitudinal and lateral accelerations are an important cause of nonlinearity and
variation of the understeer characteristic.5 Path Tracking for Automated Driving: A Tutorial on Control System ... 123
The main beneﬁt is that Controller D allows systematic and concurrent control
of the steering angle and the individual friction brake torques (and potentially the
drivetrain torque as well). This feature is an important point for actual vehicles
including stability control systems based on independent caliper pressure control.
Therefore, the control output vector for Controller D is uD[ıTb,lfTb,rfTb,lrTb,rr]T.
As the controller was tested for a lane change maneuver only, the traction torque is
not considered in uwithin [ 79].
Controller D provides better performance in extreme conditions than a controller
(here called Controller E) based on a nonlin ear single-track vehicle model, in which
the control output is represented by uD[ıMz]T[79]. In Controller E, heuristics
are adopted (within a low-level controller) to calculate the individual friction brake
torques required to generate the reference yaw moment, Mz, output by the model
predictive controller. The simulation results show that lane change tests can be
executed at a higher initial vehicle speed with Controller D than with Controller E.
However, the authors admit that the duration of the simulation runs with Controller
D was about 15 min, and, therefore, they did not have the time to ﬁne tune the
parameters of Controller D. This justiﬁes the simulation results for Controller D
(e.g., see Fig. 5.25), showing signiﬁcant vibrations of the control action, which
requires further investigations in the opinion of the authors of this chapter. Falcone
et al. [ 79] also include experimental results with Controller F, which is based on the
linearized model used for Controller D (i.e., the model with four vehicle corners),
where the linearizations are carried out online, around the current operating point of
the vehicle. The resulting controller can, thus, run online with a ﬁxed step size of 50
ms on the control hardware available in [ 79].
Yin et al. [ 80] propose a model predictive controller, Controller G, for an
autonomous electric vehicle with individually controlled drivetrains, with a for-
mulation very similar to that of Controller F of [ 79]. The controller is based on
a linearized vehicle model including the four vehicle corners, where the reference
steering angle and the four slip ratios are the control outputs. This means that a low-
level controller is used to calculate the individual wheel torques required to achieve
the reference longitudinal slips. In practice, this is very difﬁcult to implement
Fig. 5.25 Performance of Controller D at an entry speed of 14 m/s (from [ 79])124 A. Sorniotti et al.
because of the approximations in the slip ra tio estimation during normal driving.
Slip ratio estimation is much easier in extreme conditions, i.e., when the absolute
values of the slip ratios are larger and the conventional traction control and antilock
braking systems are usually activated. The beneﬁt of Controller G is that it allows the
control of the traction torque during autonomous driving, without the requirement
of two separate controllers for steering and longitudinal tracking.
S i m i l a r l yt o[ 79], Attia et al. [ 81] present a nonlinear model predictive con-
troller, Controller H, based on a model coupling the longitudinal and lateral
vehicle dynamics. The model for control synthesis is a discretized single-track
vehicle model, including the degrees of freedom corresponding to the longitudinal
and lateral displacements of the center o f gravity, the vehicle yaw motion, and
the equivalent front and rear wheel dynamics. Therefore, the state vector is
/CAND/STX
vxvy P ! f!rXY/ETXT. The main model nonlinearity is represented by the
Burckhardt tire model. The model predictive controller is responsible for the
steering angle demand only. The longitudinal vehicle dynamics are exclusively
used for considering the interaction between longitudinal and lateral tire forces;
in fact, the wheel torque demand is controlled by an independent controller based
on Lyapunov approach. The paper does not report the details of the numerical
aspects related to the algorithm implementation and online optimization, apart that
the considered sample time is TSD10 ms.
Controller H includes some consideration of the interactions between longitu-
dinal and lateral control. In fact, an excessive level of vehicle speed reference can
originate problems in terms of lateral dyna mics, as “no active lateral stabilization is
considered in the control design.” In this respect, the reference vehicle speed of the
longitudinal controller can be saturated based on the expected road curvature and
the estimated tire-road friction coefﬁcien t, according to the following formulations
proposed in [ 82,83]:
vmaxDr
g/SYNc
/DC4(5.69)
vmaxDs
g
/DC4/DC2/RSrC/SYNc
1/NUL/RSr/SYNc/DC3
(5.70)
Also, according to the US National Highway Trafﬁc Safety Administration
(NHTSA) [ 83], the longitudinal acceleration to b ring vehicle speed to the maximum
value speciﬁed in Eq. ( 5.70) should be limited to:
ax;maxDv2/NULv2
max
2.d/NULtrv/(5.71)
Criteria (5.69)–(5.71) are easily applicable for reference speed generation; how-
ever, safety-critical conditions could happen, for example, caused by an erroneous
friction coefﬁcient estimation, thus determining higher reference speed proﬁle than5 Path Tracking for Automated Driving: A Tutorial on Control System ... 125
the one compatible with the actual friction limits. In these situations, the stability
control system of the vehicle is expected to intervene and overrule the inputs
of the autonomous driving controller, as it happens in normal humanly driven
passenger cars. Nevertheless, the authors of [ 81] report a couple of sideslip-related
stability criteria (from [ 84,85]), mentioned as relevant to automated driving, without
clearly specifying how to organically incl ude them within their automated steering
controller:
ˇˇˇˇ1
24PˇC4
24ˇˇˇˇˇ/DC41 (5.72)
ˇ/DC410deg/NUL7degv2
.40m=s/2(5.73)
The performance of Controller H was assessed through simulations with a
nonlinear vehicle dynamics model developed by the same authors, along a highway
exit scenario. The results (Fig. 5.26) show a lateral position error not exceeding 6 cm
and a heading angle error not exceeding 4 deg.
Fig. 5.26 Combined longitudinal and lateral control test with Controller H: ( a) real-world road;
(b) reference and vehicle trajectories; ( c) tracking errors; and ( d) reference speed tracking
(simulation results from [ 81])126 A. Sorniotti et al.
The previous contributions discuss model predictive controllers without any
speciﬁc feature aimed at providing system robustness. Nevertheless, the presented
model predictive controllers guarantee enhanced tracking performance in nominal
conditions, i.e., when the model used by the controller provides a good ﬁt with
the actual plant. To the purpose of conjugating excellent tracking performance in
nominal conditions and robustness, recent c ontributions are focused on robust model
predictive control [ 65]. For example, Gao et al. [ 86] discuss a robust tube-based
model predictive controller (Controller I, for the theory refer to [ 87–89]), conceived
with the speciﬁc purpose of relatively low computational load.
The controller is based on a system model formulation of the form:
/CANkC1DA/CANkCg./CANk/CBukCwk (5.74)
with/CANk2„,uk2U,wk2W. Equation ( 5.74) is derived starting from a single-track
vehicle model, including the longitudinal force balance equation of the system. The
path tracking controller is based on the lat eral displacement error at the front center
of percussion to eliminate the rear latera l tire forces from the lateral displacement
error equation. The state vector is /CAND/STX
PyCOP;fPxCOP;fP /c129 /c129 yCGs/ETXT, and the input
vector (i.e., the output of the controller) is uD[ˇx,fˇy,fˇr]T.ˇx,fandˇy,fare the
normalized longitudinal and lateral forces on the front wheels, which are controlled
through the drivetrain/friction brakes and the steering system, respectively. ˇris the
normalized longitudinal force on the rear axle. A linear model is used for the lateral
force of the rear axle. Essentially, the model in Eq. ( 5.74) includes a linear term,
A/CANkCBuk, a small (under the hypotheses of the discussion in [ 86]) nonlinear term,
g(/CANk), and a disturbance term, wk.
The control action consists of two contributions: (i) a nominal control input for
the nominal system, i.e., the system in Eq. ( 5.74) under the hypothesis of zero
disturbance and (ii) a state feedback controller acting on the error, ekD/CANk/NUL
/CANk,
between the actual state of the system and the predicted state of the nominal system.
The nominal system is deﬁned as the system with the nominal control input and zero
disturbance sequence. As a consequence, the control law has the following shape:
ukD
ukCbu.ek/ (5.75)
where
 ukis the nominal controller and bu.ek/is the state feedback control action.
In the speciﬁc case, the stabilizing feedback contribution is based on a linear
quadratic regulator: bu.ek/DKLQ/DLE
/CANk/NUL
/CANk/DC1
. In practice, in [ 86], the linear part
of the dynamics is separated into two contributions, the ﬁrst one including the
longitudinal dynamics and the second one including the lateral dynamics.
In general, the error dynamics are given by
ekC1DAekCBbu.ek/C/DLE
g./CANk//NULg/DLE
/CANk/DC1/DC1
Cwk (5.76)5 Path Tracking for Automated Driving: A Tutorial on Control System ... 127
Yu et al. [ 87] demonstrated that if Zis a robust positively invariant set of
the error system in Eq. ( 5.76) with control law buand if/CANk2n
/CANkoLZ,t h e n
/CANkCi2n
/CANkCioLZfor all i> 0 and all admissible disturbance sequences wkCi2W
(see Appendix for the deﬁnitions of invariant set and Minkowski sum,L). This
means that if the system states start close to the nominal state, then the control law
in Eq. ( 5.75) will keep the system trajectory within the robust positively invariant
setZcentered at the predicted nominal states. This statement also suggests that
“if a feasible solution can be found for the nominal system subject to the tightened
constraints
„D„/TABZand
UDU/TABbu.Z/, then the control law” in Eq. ( 5.75) “will
ensure constraint satisfaction for the controlled uncertain system” (see Appendix for
the deﬁnition of Pontryagin difference, /TAB).
In general, the controller and invariant set pair are very difﬁcult to calcu-
late, unless the nonlinear term in Eq. ( 5.76) is small, i.e., kg./CAN1//NULg./CAN2/k2/DC4
LLipschitz k/CAN1/NUL/CAN2k2;8/CAN1;/CAN22„,w h e r e LLipschitz is the Lipschitz constant of the
nonlinear term. Under this hypothesis, the system in Eq. ( 5.76) can be rewritten as
ekC1DAekCBbu.ek/Cewk (5.77)
withewk2/CAN
WDWLB.E/,w h e r e
B.E/D/SUB
x2Rnjkxk1/DC4LLipschitz.„/max
e2Ekek2/ESC
(5.78)
For this case, [ 86] provides an algorithm for the computation of the minimal
positively invariant set Z(see Appendix for the deﬁnition) associated with the linear
quadratic regulator gain KLQapplied to the system deﬁned by AandB. In the actual
calculations of [ 86], as the system was split into its longitudinal and lateral dynamics
contributions, the respective invaria nt sets were calculated separately.
From a practical viewpoint, the robust model predictive control system design
procedure reduces to the following relatively simple steps:
(i) Formulation of the model equations according to the structure of Eq. ( 5.76).
(ii) Off-line computation of the linear quadratic regulator gain matrix KLQ(for an
inﬁnite horizon) based on the linear part of the system model.
(iii) Off-line estimatio n of the bounded disturbance w. This can be carried out by
comparing the one-step prediction of the model in Eq. ( 5.76), discretized at
50 ms in [ 86], with the measured vehicle states. For example, in [ 86]as i m p l e
bound (i.e., [0.2 0.2 0.2 0.005 0.05 0.05]) is used “to conservatively estimate
the disturbance bound” on the system state prediction.
(iv) Off-line computation of Zthrough the algorithm in [ 86], starting from W.
(v) Online computation of the nominal control action through conventional non-
linear model predictive control methods (e.g., see Eq. (5.68)), e.g., by solving
the optimization with the NPSOL tool.
(vi) Online computation of ukD
ukCbu.ek/D
ukCKLQek.128 A. Sorniotti et al.
The robust formulation in [ 86] is simply a linear quadratic regulator coupled with
an implicit model predictive controller, with an additional algorithm to calculate the
invariant set. The calculation of Zis beneﬁcial to know and consider the expected
boundaries of the states, i.e., the projection of the bounds of the robust invariant set,
Proj.Z/, while the controller is running (hence the concept of tube-based model
predictive control).
Gao et al. [ 86] report simulation results of obstacle avoidance maneuvers,
including introduction of random bounded disturbances with uniform distribution
into the simulation model, and comparison of the performance of the robust
controller, ukD
ukCbu.ek/, with the performance of the nominal controller,
 uk
(the difference is evident in Figs. 5.27 and5.28). Also, Gao et al. [ 86] include
experimental results, such as multiple obstacle avoidance tests carried out on a
surface with a tire-road friction coefﬁcient /SYNcD0.1, while the controller is set for
/SYNcD0.3 (Figs. 5.29 and5.30).
In addition to the tube-based model predictive controller, Carvalho et al. [ 65]a l s o
suggest time-varying stochastic model predictive control for dealing with system
Fig. 5.27 Simulation results: trajectory of the nominal model predictive controller under a random
external disturbance (from [ 86])
Fig. 5.28 Simulation results: trajectory of the robust model predictive controller under a random
external disturbance (from [ 86])5 Path Tracking for Automated Driving: A Tutorial on Control System ... 129
Fig. 5.29 Control commands during an experimental multiple obstacle avoidance test (from [ 86])
Fig. 5.30 Experimental vehicle trajectory on an ice track during the same test as for Fig. 5.29
(from [ 86])
uncertainty. The theory and an example of application to the automated driving
problem are provided in [ 90,91].
Another interesting example of comparison of control structures for path tracking
based on model predictive control in uncertain conditions is included in [ 92], dealing
with the problem of obstacle avoidance on a slippery road. The paper supposes
that the reference generation layer (see the introduction of this chapter) outputs the
reference trajectory, but does not correct it to avoid an obstacle located on the desired
path. Therefore, the reference trajectory h as to be modiﬁed by the control layer, i.e.,
it has to be replanned to take the obstacle into account. Figures 5.31 and5.32 show130 A. Sorniotti et al.
MPC Controller
ON LINE
NMPC
BRAKING
LOGICVEHICLEObstacle posi/g415on
Fig. 5.31 Architecture of the single-level model predictive controller (Controller J) for path
tracking with obstacle avoidance (adapted from [ 92])
High-level
path 
replanner
Obstacle
avoidingLow-level path follower
ON LINE
NMPC
BRAKING
LOGICVEHICLEObstacle 
posi/g415on
Fig. 5.32 Architecture of the two-level model predictive controller (Controller K) for path
tracking with obstacle avoidance (adapted from [ 92])
the two control layer architect ures that are contrasted in [ 92]:
(i) An architecture (Controller J) consisting of a single-level model predictive
controller, based on a four-wheel vehicle model with a nonlinear tire model.
The desired trajectory and the obstacle position are fed to the control algorithm.
The controller directly calculates the refe rence steering angle and the reference
longitudinal forces for the two sides of the vehicle, Fb,land Fb,r,i no r d e r
to avoid the obstacle. These two forces are converted into individual braking
torques by the “Braking logic” (see Fig. 5.31);
(ii) An architecture (Controller K) consisting of a two-level model predictive
controller. The top-layer (the “High-level path replanner obstacle avoiding”
in Fig. 5.32) is based on a simple point-mass model, with the purpose of
replanning the reference trajectory starting from the detected position of the
obstacle. The lower layer (the “Low-level path follower”), based on the same5 Path Tracking for Automated Driving: A Tutorial on Control System ... 131
four-wheel vehicle model as the one used in controller architecture (i), receives
the replanned reference trajectory and calculates the same outputs as the single-
layer controller.
Controller J and the top layer of Controller K use cost functions with similar
structure to the one in Eq. ( 5.67), with a term referring to the tracking performance
and a term referring to the control effort, but they also include an additional term
given by:
tCHp/NUL1X
kDtJobsk;tDtCHp/NUL1X
kDtKobsvk;t
dmin k;tC"(5.79)
Jobsk;tin Eq. ( 5.79) is the cost at time kassociated to the predicted distance
between the vehicle and the obstacle, unde r the assumption that obstacle position
is known for a collection of discretized points Pt,j. In particular, dmin k;tDmin jdk;t;j.
dk,t,jis deﬁned as:
dk;t;jD8
<
:pxk;t;j/NUL
a ifpyk;t;j2Œ/NUL
c;
c/c141andpxk;t;j>
a
0 ifpyk;t;j2Œ/NUL
c;
c/c141andpxk;t;j2/STX
/NUL
b;
a/ETX
Motherwise8jD1;2;:::; N(5.80)
where dk,t,jD0 indicates the occurrence of a collision (see also Fig. 5.33).
OBSTACLE
Fig. 5.33 Obstacle avoidance scenario and main geometrical parameters used in the model
predictive control formulation (adapted from [ 92])132 A. Sorniotti et al.
The simulation and experimental results demonstrate that the case study obstacle
avoidance maneuver can be executed at higher values of vehicle speed with the two-
level model predictive controller (Controller K), while the single-level architecture
(Controller J) tends to cause stability problems. In general, when the vehicle
deviates too far from the reference trajectory, the system becomes uncontrollable.
In these conditions, “the vehicle state is outside the region of attraction of the
equilibrium trajectory associated to the desired reference.” In the single-layer
architecture, this phenomenon happens quite often, as it is induced by tire saturation.
This situation does not occur with the simple point-mass model of Controller K,
“since the path replanner always replans a path starting from the current state of
the vehicle, and therefore ensures that the low-level reference is close to current
state. This explains why the performance of the two-level approach is better than
the one-level approach.”
Also, the computational performance of the two-level approach is much better
than that of the single-level approach. Hence, the important conclusion is that
for effective automated driving through model predictive control, the separation
between the reference generation layer, which should replan the trajectory consid-
ering the presence of obstacles, and the control layer (see the introduction of this
chapter) is not only convenient for control system simpliﬁcation but also beneﬁcial
to control system performance.
Table 5.5is included as a summary of the main characteristics of the model
predictive controllers discussed in this section, with an overview of the adopted
models, the possible control action (lateral control or combined longitudinal and
lateral control), the involved complexity, and the form of validation presented in the
literature, i.e., through simu lations and/or experiments.
All the algorithms discussed in this section are based on implicit model predictive
control formulations, i.e., the optimizations are run online, which implies a signiﬁ-
cant computational load for the vehicle control unit. Also, implicit model predictive
control does not permit formal analysis of performance, subop timality and stability
[93]. An option that should be assessed in future research is explicit model predictive
control, which has already been successfu lly implemented, including experiments,
for concurrent yaw moment and active steering control in [ 94]. The validation of
robust and explicit model predictive control formulations could represent the next
step of path tracking control research.5 Path Tracking for Automated Driving: A Tutorial on Control System ... 133
Table 5.5 Comparison of the selected model predictive controllers for path tracking
Controller
 Vehicle and tire
model
Control action
 Controller
complexity
Validation
A [76]
 Single-track
vehicle model
with Pacejka tire
model (pure
cornering) with
constant vertical
load
Steering control
only
Nonlinear model
and high
computational
load
Experiments for
vehicle speeds
lower than 10 m/s
due to
computational
constraints
B [76]
 Single-track
vehicle model
with Pacejka tire
model with
constant vertical
load
Steering control
only
Linearized model
for
computationally
efﬁcient
optimization
Experimental lane
change tests
executed at
various speeds
C [76]
 Single-track
vehicle model
with Pacejka tire
model with
constant vertical
load
Steering control
only
Further simpliﬁed
version of
Controller B, with
HCD1
Experimental lane
change tests
executed at
various speeds;
performance
slightly worse
than for
Controller B
D [79]
 Four-wheel
vehicle model
with Pacejka tire
model (combined
slip) with constant
vertical load
Longitudinal
control, steering
control, and direct
yaw moment
control
Nonlinear
optimization with
high
computational
load
Simulations of
lane change tests
executed at 50
k m / ha n d7 0k m / h
with good
tracking
performance
E [79]
 Single-track
vehicle model
with Pacejka tire
model (combined
slip) with constant
vertical load
Steering control
and direct yaw
moment control
Nonlinear
(relatively) low
complexity model
for online
optimization
Simulation of lane
change tests
executed at 50
km/h; controller
not able to
stabilize the
vehicle at higher
entry speeds
F [79]
 Four-wheel
vehicle model
with Pacejka tire
model (combined
slip) with constant
vertical load
Steering control
and direct yaw
moment control
Linearized model
based on
Controller D for
computationally
efﬁcient online
optimization
Experimental lane
change tests at 50
km/h
G [80]
 Four-wheel
vehicle model and
Pacejka tire
model (combined
slip) with constant
vertical load
Longitudinal
control, steering
control, and direct
yaw moment
control
Linearized model
for
computationally
efﬁcient
optimization
Simulations of a
single lane change
test
134 A. Sorniotti et al.
Table 5.5 (continued)
Controller
 Vehicle and tire
model
Control action
 Controller
complexity
Validation
H [81]
 Single-track
vehicle model
with Burckhardt
tire model with
constant vertical
load
Only steering
control by the
model predictive
controller;
independent
Lyapunov
approach for
longitudinal
control
Nonlinear model
predictive
controller; no
details provided
regarding the
online
optimization
Simulations of a
highway exit
scenario
I [86]
 Single-track
vehicle model
with simpliﬁed
nonlinear tire
model with
constant vertical
load
Longitudinal
control, steering
control and direct
yaw moment
control
Nonlinear model
with signiﬁcant
simpliﬁcations for
computationally
efﬁcient online
optimization
providing system
robustness
Experimental
obstacle
avoidance tests at
high speed on a
snow track
J [92]
 Four-wheel
vehicle model
with Pacejka tire
model (combined
slip) with constant
vertical load
Longitudinal
control, steering
control and direct
yaw moment
control
Single-level
nonlinear model
predictive
controller with
signiﬁcant
computational
load
Experimental lane
change tests in icy
road conditions up
to 40 km/h
K [92]
 Simple
point-mass model
for the high level
controller; the
same as
Controller J in
terms of vehicle
model for the low
level controller
Longitudinal
control, steering
control, and direct
yaw moment
control
Two-level
hierarchical
nonlinear model
predictive
controller with
signiﬁcant
computational
load reduction
with respect to
Controller J
Experimental lane
change tests in icy
road conditions up
to 55 km/h
5.6 Concluding Remarks
This chapter provided an overview of control structures for path tracking in
autonomous vehicles, ranging from basic kinematic controllers to robust model
predictive controllers. The presented analysis and results bring the following
conclusions:
 Without disturbances (e.g., caused by side wind and the banking of the road),
and uncertainties (e.g., caused by the vi sion systems), the path tracking perfor-
mance of simple control structures is a dequate and was already experimentally
demonstrated in research programs in the 1990s [ 95]. For an assigned vehicle5 Path Tracking for Automated Driving: A Tutorial on Control System ... 135
speed, ﬁxed parameter controllers can d eal with the range of axle cornering
stiffnesses, vehicle masses, and tire -road friction coefﬁcients typical of a real
vehicle operation. Apparently, ﬁxed par ameter controllers can be effective even
in the case of buses and heavy goods vehicles, characterized by signiﬁcant massvariations during their operation.
 Look-down controllers show signiﬁcant performance limitations at medium-high
speeds. Effective feedback control design for path tracking must be based onthe combination of lateral displacemen t and heading angle control, or lateral
displacement evaluated at a look-ahead distance.
 Gain scheduling of the controller param eters, including the preview distance, is
recommended as a function of vehicle speed.
 The separation among the reference traj ectory level and the control layer is not
only convenient for simplifying the automated driving control system designbut also allows better system response from the viewpoint of vehicle stability,conjugated with reduced computational effort.
 In order to reduce the effect of disturbances and relax the tuning of the feedback
part of the path tracking controller, properly designed feedforward contributionsare essential. The main limitation of existing feedforward controllers for pathtracking is their reliance on very advanced state estimators, which have to provide
smooth outputs. Machine learning techniques, adaptive control and sensor fusioncould signiﬁcantly help with this challenging task.
 An interesting concept is represented by the center of percussion. A path tracking
controller based on the position error at the front center of percussion eliminatesthe effect of the rear axle cornering for ces on the lateral position error dynamics,
which signiﬁcantly facilitates the design of a feedback controller for a two-wheel-steering vehicle. A four-wheel-s teering path tracking controller based on
the lateral position errors at the front and rear centers of percussion simpliﬁesinto the design of two decoupled single-input single-output controllers.
 Some of the available experimental studies show that from the vehicle passen-
gers’ perspective, vehicle comfort (determined by the frequency and amplitudeof the oscillations induced by the contro l action) is more important than the
excellence of the tracking performance. Unluckily, only very limited data areavailable with respect to the comfort behavior of the most recent and performingpath tracking controllers, including analysis of the subjective feedback of theoccupants.
 Despite many path tracking formulations have been assessed through experimen-
tal tests, an objective comparative assessment of the performance of differentcontrol structures for the same vehicle and set of state estimators is missing inthe literature. On the one hand, the authors presenting the most advanced controlformulations tend to show their beneﬁts without going through a comparisonwith ﬁne-tuned simple controllers. On the other hand, the authors presentingrelatively simple control formulations tend to highlight their performance evenat medium-high lateral acceleration level s. Also, the subjective performance of
the different path tracking formulations, i.e., in terms of oscillation of the controlaction and the subsequent vehicle response, should be carefully assessed through136 A. Sorniotti et al.
experimental tests, in order to draw clear conclusions on the required level of
control system sophistication.
 Current research developments are in the area of automated driving for limit
conditions, i.e., at extreme lateral and l ongitudinal accelerations, and in the area
of robust model predictive control, with the main aim of systematically dealing
with system uncertainty.
 Future research activities should also systematically cover the interaction
between automated steering and direct yaw moment control, which currently
represents the main actuation technique for stabilizing the vehicle in extreme
transient conditions. Direct yaw moment control can be sporadically actuated
through the friction brakes with in stability control systems [ 96] or, in the case of
vehicles with torque-vectoring differentials or multiple electric drivetrains, can
be continuously actuated during normal vehicle operation [ 97–100]. Especially
in the latter case, further investigations of automated driving during extreme
cornering are required, including more detailed and comprehensive experimental
demonstrations.
Appendix: Deﬁnitions of Invariant Sets, Minkowski Sum ˚,
and Pontryagin Difference /TAB
The following deﬁnitions are provided:
(a) Reachable set for systems with external inputs. Consider a system
/CANkC1Df(/CANk,uk)Cwk, with/CANk2„,uk2U,wk2W. The one-step robust
reachable set from a given set of states Sis Reach f.S;W//defines˚
/CAN2Rnj
/CAN02S;9u2U;9w2WW/CANDf./CAN0;u;w//TAB
;
(b) Robust positively invariant set. A set Z/DC2„is said to be a robust positively
invariant set for the autonomous system /CANkC1Dfa(/CANk)Cwk, with/CANk2„and
wk2W,i f/CAN02Z)/CANk2Z,8wk2W;8k/NAK2NC
(c) Minimal robust positively invariant set. The set Z1/DC2„is the minimal robust
positively invariant set for the deﬁned autonomous system, if Z1is a robust
positively invariant set and Z1is contained in every closed robust positively
invariant set in „(see [ 89] for the details)
(d) Minkowski sum. The Minkowski sum of two polytopes, }and H,i st h e
polytope}LH´fxCh2Rnjx2};h2Hg;
(e) Pontryagin difference. The Pontryagin difference of two polytopes, }andH,i s
the polytope}/TABH´fx2RnjxCh2};8h2Hg.5 Path Tracking for Automated Driving: A Tutorial on Control System ... 137
References
1. SAE standard J0316, Taxonomy and Deﬁnitions for Terms Related to On-Road Motor Vehicle
Automated Driving Systems (2014)
2. T. J. Gordon, M. Lidberg, Automated driving and autonomous functions on road vehicles.
Vehicle Syst. Dyn. 53(7), 958–994 (2015)
3. C. C. MacAdam, Application of an optimal preview control for simulation of closed-loop
automobile driving. IEEE Trans. Syst. Man Cybern. SMC-11 (6), 393–399 (1981)
4. G. Genta, Motor Vehicle Dynamics: Modeling and Simulation (World Scientiﬁc, Singapore,
1997)
5. R. S. Sharp, D. Casanova, P. Symonds, A mathematical model for driver steering control, with
design, tuning and performance results. Vehicle Syst. Dyn. 33, 289–326 (2000)
6. R. S. Sharp, Driver steering control and a new perspective on car handling qualities. Proc.
I n s t .M e c h .E n g .CJ .M e c h .E n g .S c i . 219(10), 1041–1051 (2005)
7. R. S. Sharp, Rider control of a motorcycle near to its cornering limits. Vehicle Syst. Dyn.
50(8), 1193–1208 (2012)
8. C. I. Chatzikomis, K. N. Spentzas, A path-following driver model with longitudinal and lateral
control of vehicle’s motion. Forsch. Ingenieurwes. 73, 257–266 (2009)
9. G. Markkula, A review of n ear-collision driver behav iour models. Hum. Factors 54(6), 1117–
1143 (2012)
10. Y. Ohshima et al., Control system for automatic automobile driving. IFAC Tokyo Symposium
on Systems Engineering for Control System Design, 1965
11. R. E. Fenton, R. J. Mayhan, Automated highway studies at the Ohio State University – An
overview. IEEE Trans. Vehicle Technol. 40(1), 100–113 (1991)
12. S. Thrun, M. Montemerlo, H. Dahlkamp, D. Stavens, et al., Stanley: The robot that won the
DARPA grand challenge. J. Field Robot. 23(9), 661–692 (2006)
13. C. Urmson, J. Anhalt, D. Bagnell, C. Baker, et al., Autonomous driving in urban environ-
ments: Boss and the urban challenge. J. Field Robot. 25(8), 425–466 (2008)
14. C. Urmson, C. Ragusa, D. Ray, J. Anhalt, et al., A robust approach to high-speed navigation
for unhehearsed desert terrain. J. Field Robot. 23(8), 467–508 (2006)
15. F.S. Campbell, Steering Control of an Autonomous Ground Vehicle with Application to the
DARPA Urban Challenge . Master’s thesis, Massachuse tts Institute of Technology, 2007
16. J.M. Snider, Automatic steering methods for autonomous automobile path tracking .C M U -
RI-TR-09-08, Report, Carnegie Mellon University, 2009
17. A. De Luca, G. Oriolo, C. Samson, Feedback control of a nonholonomic car-like robot, in
Robot Motion Planning and Control (Springer, London, 1998)
18. J.S. Wit, Vector pursuit path tracking for autonomous ground vehicles. PhD thesis, University
of Florida, 2000
19. R. M. Murray, Control of nonholonomic systems using chained forms. Dynamics and control
of mechanical systems, the falling cat and related problems. Fields Inst. Commun. 1, 219–245
(1993)
20. C. Samson, Control of chained systems: Application to path following and time-varying point-
stabilization of mobile robots. IEEE Trans. Autom. Control 40(1), 64–77 (1995)
21. W. F. Milliken, D. L. Milliken, Race Car Vehicle Dynamics (SAE International, Warrendale,
PA, 1995)
22. M. Guiggiani, The Science of Vehicle Dynamics: Handling, Braking and Ride of Road and
Race Cars (Springer, Dordrecht, 2014)
23. T. D. Gillespie, Fundamentals of Vehicle Dynamics (Society of Automotive Engineers,
Warrendale, PA, 1992)
24. A. Broggi, M. Bertozzi, A. Fascioli, G. Conte, Automatic Vehicle Guidance: The Experience
of the ARGO Autonomous Vehicle (World Scientiﬁc, Singapore, 1999)
25. A. Broggi, M. Bertozzi, A. Fascioli, C. G. Lo Bianco, A. Piazzi, The ARGO autonomous
vehicle’s vision and control systems. Int. J. Intell. Control Syst. 3(4), 409–441 (1999)138 A. Sorniotti et al.
26. P. Furgale, U. Schwesinger, M. Ruﬂi, W. Derendarz et al., Toward automated driving in
cities using close-to-market sensors – An overview of the V-Charge project. IEEE IntelligentVehicles Symposium, 2013
27. S. Tsugawa, An overview on control algorithms for automated highway systems. IEEE/IEE-
J/JSAE Conference on Intelligent Transportation Systems, 1999
28. H. Mouri, H. Furusho, Automatic path tracking using linear quadratic control theory. IEEE
Conference on Inte lligent Trans portation Systems, 1997
29. J. Guldner, H. S. Tan, S. Patwardhan, Analysis of automatic steering control for highway
vehicles with look-down lateral reference systems. Vehicle Syst. Dyn. 26(4), 243–269 (1996)
30. J. C. Hsu, M. Tomizuka, Analyses of vision-based lateral control for automated highway
system. Vehicle Syst. Dyn. 30(5), 345–373 (1998)
31. A. Tachibana et al., An automated highway vehicle system using computer vision – A vehicle
control method using a lane line detection system. JSAE Autumn Convention 924, 157–160
(1992)
32. H. Inoue, H. Mouri, H. Sato, A. Asaoka, S. Ueda, Technologies of Nissan’s AHS test vehicle.
3rd ITS World Congress, 1996
33. R. Isermann, M. Schorn, U. Stahlin, Anticollision system PRORETA with automatic braking
and steering. Vehicle Syst. Dyn. 46(Supplement), 683–694 (2008)
34. R. Marino, S. Scalzi, M. Netto, Nested PID steering control for lane keeping in autonomous
vehicles. Control Eng. Pract. 19, 1459–1467 (2011)
35. J. Ackermann, J. Guldner, W. Sienel, R. Steinhauser, V. Utkin, Linear and nonlinear controller
design for robust automatic steering. IEEE Trans. Control Syst. Technol. 3(1), 132–143
(1995)
36. J. Ackermann, W. Sienel, Robust control for automatic steering. American Control Confer-
ence, 1990
37. J. Guldner, W. Sienel, J. Ackermann, S. Patwardhan, H.S. Tan, T. Bunte, Robust control
design for automatic steering based on feedback of front and tail lateral displacement.European Control Conference, 1997
38. V. Cerone, A. Chinu, D. Regruto. Experimental results in vision-based lane keeping for
highway vehicles. American Control Conference, 2002
39. M. F. Land, D. N. Lee, Where we look when we steer? Nature 369, 742–744 (1994)
40. H. S. Tan, B. Bougler, W. B. Zhang, Automatic steering based on roadway markers: From
highway driving to precision docking. Vehicle Syst. Dyn. 37(5), 315–338 (2002)
41. K. Ogata, Modern Control Engineering (Prentice Hall, Englewood Cliffs, NJ, 2011)
42. H. Peng, M. Tomizuka, Optimal preview control for vehicle lateral guidance . Research Report
UCB-ITS-PRR-91-16, California Partners for Advanced Transit and Highways (PATH), 1991
43. J. M. Hedrick, M. Tomizuka, P. Varaiya, Control issues in automated highway systems. IEEE
Trans. Control Syst. 14(6), 21–32 (1994)
44. H. Peng, M. Tomizuka, Preview control for vehicle lateral guidance in highway automation.
American Control Conference, 1991
45. Q. Zhou, F. Wang, Robust sliding mode control of 4WS vehicles for automatic path tracking.
IEEE Intelligent Vehicles Symposium, 2005
46. T. Hiraoka, O. Nishishara, H. Kumamoto, Automatic path-tracking controller of a four-wheel
steering vehicle. Vehicle Syst. Dyn. 47(10), 1205–1227 (2009)
47. G. Tagne, R. Talj, A. Charara, Design and validation of a robust immersion and invariance
controller for the lateral dynamics of in telligent vehicles. Control Eng. Pract. 40, 81–91
(2015)
48. G. Tagne, R. Talj, A. Charara, Higher-order sliding mode control for lateral dynamics of
autonomous vehicles, with experimental valid ation. IEEE Intelligent Vehicles Symposium,
2013
49. P. Hingwe, M. Tomizuka, Experimental evaluation of a chatter free sliding mode control for
lateral control in AHS. American Control Conference, 1997
50. H. Imine, T. Madani, Sliding-mode control for automated lane guidance of heavy vehicle. Int.
J. Robust Nonlinear Control 23(1), 67–76 (2011)5 Path Tracking for Automated Driving: A Tutorial on Control System ... 139
51. C. Hatipolglu, K. Re dmill, U. Ozguner, Steerin g and lane change: A working system. IEEE
Conference on In telligent Transportation Sys tem, 1997. ITSC’97, IEEE, 1997
52. A. B. Will, S. Zak, Modelling and control of an automated vehicle. Vehicle Syst. Dyn. 27,
131–155 (1997)
53. R. T. O’Brien, P. A. Iglesias, T. J. Urban, Vehicle lateral control for automated highway
systems. IEEE Trans. Control Syst. Technol. 4(3), 266–273 (1996)
54. D. McFarlane, K. Glover, Robust Controller Design Using Normalized Coprime Factor Plant
Desciptions (Springer, Berlin, 1989)
55. S. Skogestad, I. Postlethwaite, Multivariable Fee dback Control: Analysis and Design , 2nd
edn. (Wiley, Chichester, 2005)
56. S. Hima, B. Lusseti, B. Vanholme, S. Glaser, S. Mammar, Trajectory tracking for highly
automated passenger vehicles. 18th IFAC World Congress, 2011
57. D. H. Shin, B. Y. Joo, Design of a vision-based autonomous path-tracking control system and
experimental validation. Proc. Inst. Mech. Eng. 224, 849–864 (2010)
58. M. Kristic, I. Kanellakopoulos, P. Kotovic, Nonlinear and Adaptive Control Design (John
Wiley, New York, 1995)
59. A. El Hajjaji, S. Bentalba, Fuzzy path tracking control for automatic steering of vehicles.
Robot. Auton. Syst. 43(4), 203–213 (2003)
60. L. Cai, A. B. Rad, W. L. Chan, A genetic fuzzy controller for vehicle automatic steering
control. IEEE Trans. Vehicle Technol. 56(2), 529–543 (2007)
61. T. Hessburg, M. Tomizuka, Fuzzy logic control for lateral vehicle guidance. IEEE Trans.
Control Syst. 14(4), 55–63 (1994)
62. J. E. Naranjo, C. Gonzalez, R. Garcia, T. de Pedro, R. E. Haber, Power-steering control
architecture for automatic driving. IEEE Trans. Intell. Transp. Syst. 6(4), 406–415 (2005)
63. S. Chaib, M.S. Netto, S. Mammar, Adaptive, PID and fuzzy control: A comparison of
controllers for vehicle lane keeping. IEEE Intelligent Vehicles Symposium, 2004
64. M.S. Netto, S. Chaib, S. Mammar, Lateral adaptive control for vehicle lane keeping. American
Control Conference, 2004
65. A. Carvalho, S. Lefevre, G. Schildbach, J. K ong, F. Borrelli, Automate d driving: The role of
forecast and uncertainty – A control perspective. Eur. J. Control. 24, 14–32 (2015)
66. C. Voser, R.Y. Hindiyeh, C. Gerdes, Analysis and control of high sideslip maneuvers. Vehicle
Syst. Dyn. 48(Supp.), 317–336 (2010)
67. K. Kritayakirana, J.C. Gerdes, Using the center of percussion to design a steering controller
for an autonomous race car. Vehicle Syst. Dyn. 50(Supp.), 33–51 (2012)
68. K. Kritayakirana, J. C. Gerdes, Autonomous vehicle control at the limits of handling. Int. J.
Vehicle Auton. Syst. 10(4), 271–296 (2012)
69. K. L. R. Talvala, K. Kritayakirana, J. C. Gerdes, Pushing the limits: From lanekeeping to
autonomous racing. Annu. Rev. Control. 35, 137–148 (2011)
70. N. R. Kapanja, J. C. Gerdes, Design of a feedback-feedforward steering controller for accurate
path tracking and stability at the limit of handling. Vehicle Syst. Dyn. 53(12), 1–18 (2015)
71. E.J. Rossetter, A Potential Field Framework for Active Vehicle Lanekeeping Assistance .
Dissertation, Stanford University, 2003
72. J. M. Maciejowski, Predictive Control with Constraints (Pearson Education, London, 2002)
73. E. F. Camacho, C. Bordons, Model Predictive Control (Springer, London, 2004)
74. P. Falcone, Nonlinear model predictive control for autonomous vehicles. PhD thesis, Univer-
sita’ del Sannio, 2007
75. H. Yoshida, S. Shinohara, M. Nagai, Lane change steering maneuver using model predictive
control theory. Vehicle Syst. Dyn. 46(Supplement), 669–681 (2008)
76. P. Falcone, F. Borrelli, J. Asgari, H. E. Tseng, D. Hrovat, Predictive active steering control for
autonomous vehicle systems. IEEE Trans. Control Syst. Technol. 15(3), 566–580 (2007)
77. H. B. Pacejka, Tire and Vehicle Dynamics , 3rd edn. (Butterworth-Heinemann, Oxford, 2012)
78. P. Gill, W. Murray, M. Saunders, M. Wright, NPSOL – Nonlinear Programming Software
(Stanford Business Software Inc., Mountain View, CA, 1998)140 A. Sorniotti et al.
79. P. Falcone, H.E. Tseng, F. Borrelli, J. Asgari, D. Hrovat, MPC-based yaw and lateral
stabilisation via active front steering and braking. Vehicle Syst. Dyn. 46(Supp.), 611–628
(2008)
80. G. Yin, J. Li, X. Jin, C. Bian, N. Chen, Integration of motion planning and model-predictive-
control-based control system for autonomous electric vehicles. Transport 30(3), 353–360
(2015)
81. R. Attia, R. Orjuela, M. Basset, Combined l ongitudinal and lateral control for automated
vehicle guidance. Vehicle Syst. Dyn. 52(2), 261–279 (2014)
82. A. Gallet, M. Spigai, M. Hamidi, Use of vehicle navigation in driver assistance systems. IEEE
Symposium on Inte lligent Veh icles, 2000
83. D. Pomerlau, T. Jochem, C. Thorpe, P. Batavia et al., Run-off-road co llision avoidance using
IVHS countermeasures. Technical Report, US Department of Transportation, 1999
84. J. He, D. A. Crolla, M. C. Levesley, W. J. Manning, Coordination of active steering, driveline,
and braking for integrated vehicle dynamics control. Inst. Mech. Eng., Part D: J. Automob.Eng. 220, 1401–1421 (2006)
85. P. Tondel, T.A. Johansen, Control allocation for yaw stabilisation in automotive vehicles using
multiparametric nonlinear programming. American Control Conference, 2005
86. Y. Gao, A. Gray, H. E. Tseng, F. Borrelli, A tube-based robust nonlinear predictive control
approach to semiautonomous ground vehicles. Vehicle Syst. Dyn. 52(6), 802–823 (2014)
87. S. Yu, H. Chen, F. Allgower, Tube MPC scheme based on robust control invariant set with
application to Lipschitz nonlinear systems. 50th IEEE Conference on Decision and Controland the European Control Conference, 2011
88. D. Q. Mayne, M. M. Seron, S. V. Rakovic, Robust model predictive control of constrained
linear systems with bounded disturbances. Automatica 41(2), 219–224 (2005)
89. K.I. Kouramas, S.V. Rakovic, E.C. Kerrigan, J.C. Allwright, D.Q. Mayne, On the minimal
robust positively invariant set for linear difference inclusions. 44th IEEE Conference onDecision and Control and the European Control Conference, 2005
90. B. Kouvaritakis, M. Cannon, S. V . Rakovic, Q. Che ng, Explicit use of probabilistic distribu-
tions in linear predictive control. Automatica 46(10), 1719–1724 (2010)
91. A. Carvalho, Y. Gao, S. Lefe vre, F. Borrelli, Stochastic predictive control of autonomous
vehicles in uncertain environment. 12th Symposium on Advanced Vehicle Control, 2014
92. Y. Gao, T. Lin, F. Bo rrelli, E. Tseng, D. Hrov at, Predictive cont rol of autonomous ground
vehicles with obstacle avoidance on slippery roads. 3rd Annual ASME Conference onDynamic Systems and Controls, 2010
93. A. Grancharova, T. A. Johansen, Explicit Nonlinear Model Predictive Control – Theory and
Applications (Springer, Heidelberg, 2012)
94. S. Di Cairano, H.E. Tseng, D. Bernardini, A. Bemporad, Vehicle yaw stability control by
coordinated active front steering and differential braking in the tire sideslip angles domain.IEEE Trans. Control Syst. Technol. 21(4), 1236–1248 (2013)
95. S. E. Shladover, PATH at 20 – History and major milestones. IEEE Trans. Intell. Transp. Syst.
8(4), 584–592 (2007)
96. A. van Zanten, Bosch ESP systems: 5 years of experience. SAE 2000-01-1633, 200097. L. De Novellis, A. Sorniotti, P. Gruber, J. Orus, J. M. Rodriguez Fortun, J. Theunissen, J. De
Smet, Direct yaw moment control actuated through electric drivetrains and friction brakes:Theoretical design and experimental assessment. Mechatronics 26, 1–15 (2015)
98. L. De Novellis, A. Sorniotti, P. Gruber, Drivin g modes for designing the cornering response of
fully electric vehicles with multiple motors. Mech. Syst. Signal Process. 64–65 , 1–15 (2015)
99. L. De Novellis, A. Sorniotti, P. Gruber, Wheel torque distribution criteria for electric vehicles
with torque-vectoring differentials. IEEE Trans. Vehicle Technol. 63(4), 1593–1602 (2014)
100. T. Goggia, A. Sorniotti, L. De Novellis, A. Ferrara , et al., Integral sliding mode for the torque-
vectoring control of fully electric vehicles: Theoretical design and experimental assessment.IEEE Trans. Vehicle Technol. 64(5), 1701–1715 (2015)Chapter 6
Vehicle Reference Lane Calculation
for Autonomous Vehicle Guidance Control
Werner Kober, Richard H uber, and Ralf Oberfell
6.1 Introduction
Autonomous vehicles need smart sensors, actuators, additional road information,
and control devices to achieve their tasks for longitudinal and lateral vehicle
guidance control [ 1]. Recently presented prototype vehicles [ 2,3]u s er a d a rs e n s o r s
in combination with actuators for engine and brake control for longitudinal vehicle
guidance and camera systems in combina tion with steering act uators for lateral
vehicle guidance. Additional sensors like LIDAR and GPS with detailed map data,
which nowadays are installed in protot ype vehicles, are used more for research
purposes [ 4]. From all possible sensor technologies for lateral vehicle guidance,
the most important sensor information for the actual driving situation is provided
by the camera system. The online image processing system of the camera module
detects the lane markings of the vehicle lane. The camera software determines
the distance of the actual vehicle position on the track to the left and right lane
marking, as well as the heading angle of the vehicle to the lane markings on the
street. This information is provided in real time via the vehicle bus system to the
electronic control unit (ECU) which performs the lane-keeping control task. Besides
the information of the actual position of the vehicle on the track or its predicted
path, which can be designed according to [ 5,6], the lane guidance controller needs
also additional information about the desired reference position value of the vehicle.
This reference lane is the desired track lane where the vehicle should ideally drive
W. Kober (/envelopeback)
Kober Engineering GmbH, Ilz, Austria
e-mail: werner.kober@kober-engineering.com
R. Huber
Kober Engineering Deutschland GmbH, Stuttgart, Germany
R. Oberfell
Daimler AG, Stuttgart, Germany
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_6141142 W. Kober et al.
on the track. This value is propagated to the lane-keeping controller by the use of a
desired lane offset signal. This desired lan e offset signal, or reference lane signal, is
usually deﬁned to be zero in the middle of the lane and positive with right-hand side
offset values. The controller calculates its controller deviation from this reference
value and the current position of the vehicle on the track, trying to minimize the
controller deviation by driving the actuators of the system accordingly [ 7]. It is
obvious that the performance of the overall lane-keeping controller is, among others,
mainly inﬂuenced by the qua lity of this reference lane input. The reference lane
calculation module therefore belongs to the most important controller parts for the
lateral vehicle guidance task in autonomous vehicles [ 8,9].
One simple approach for reference lane calculation is to keep the vehicle in the
middle of the accessible lane, which means t o provide the lane-keeping controller
with an offset signal of zero. This “mid-lane” approach is widely used by passenger
car lane-keeping systems, e.g., seen in [ 10]a n d[ 11]. The “mid-lane” approach
shows good results when used in passenger cars without any trailer attached. For
vehicles with more complex driving dynamics like vehicles with trailer attached or
heavy truck vehicles like truck–semitrailer combinations, the “mid-lane” approach
is not sufﬁcient anymore. This is not only b ecause of the bigger dimension of these
vehicles but also because of different d riving dynamics and especially because of
additional risk potential arising, for example, from the tractrix. Drivers of heavy
trucks with trailer attached or drivers of truck–semitrailer vehicles therefore often
have to choose different vehicle tracks than driver of passenger cars. The task of
this paper is to design a reference lane calculation system which meets also the
complex requirements of heavy truck and truck–semitrailer driving. Due to the fact
that this task is the more gen eral case of reference lane calculation, the easier task
for calculating the reference lane for smaller vehicles with simpler driving dynamics
like passenger cars will be included in the proposed reference lane calculation
method.
6.2 Vehicle Lane-Keeping Boundaries and Requirements
The ﬁrst step for designing a reference lane calculation system is to gain some
overview of the fundamental boundaries of road tracks and the possible diversity
of vehicle parameters which have inﬂu ence on reference lane selection. The
environmental boundaries for autonomous vehicles were deﬁned by the geometry
of the roads and the associated speed limitation regulations. A short overview of the
requirements regarding the road geometry and speed limitation is given in Table 6.1,
which shows typical road curvature and ro ad width with the associated design speed
regulations.
The columns A, B, and C list different road categories which refer to German
guidelines for road construction [ 12,13]. All categories are used for national and
rural roads; categories B and C are permitted for use within built-up areas. For class
C roads, it is furthermore allowed to have adjoining building next to the road. The6 Vehicle Reference Lane Calculation for Autonomous Vehicle Guidance Control 143
Table 6.1 Road characteristics with minimum road radius information [ 12,13]
Road category
 A
 B
 C
Lane width (m)
 2.75–3.75
 2.75–3.75
 2.75–3.75
Design speed (km/h)
 Minimum road radius for category and speed (m)
40
 –
 –
 40
50
 –
 80
 70
60
 135
 125
 120
70
 200
 190
 175
80
 280
 260
 –
90
 380
 –
 –
100
 500
 –
 –
120
 800
 –
 –
lane width of a road is chosen in dependence of trafﬁc volume and other factors, but
generally it can be supposed that the selected road width decreases from category A
to C. Roads with narrow lanes are challenging for lateral vehicle guidance systems
because of less safety buffer for keeping t he vehicle on track. For vehicles with
trailer attached, the additional risk of t ractrix hazards increases with reduced lane
width and reduced curvature radius. For r eference lane calcu lation development,
the environmental boundaries should therefore be selected to cover these use cases
best possible. One possible example of an environmental design setup will be a
narrow road with small curvature radius, which will typically be used at relatively
low vehicle speeds. According to this example, the road type C with small lane
width and 50 m curvature radius, used at design speeds of 40 km/h, could be
selected. Typical driving scenarios would be, for example, at exits of highways
or curvy country roads. The vehicle parameter which inﬂuences the reference lane
selection the most is the wheelbase of the vehicle as well as the type of the attached
trailer or semitrailer. These parameter s have inﬂuence on the track offset when
cornering, which the driver has to take into account when choosing the vehicles
lane for avoiding collisions in the tractrix area. The track offset is the difference
of turning radius between the ﬁrst and the last axle of a vehicle when cornering.
When surveying vehicles with trailers att ached, three main vehicle categories can
be separated. These categories are the truck–semitrailer vehicle, the vehicle with
rigid drawbar trailer, and the vehicle with pivot plate trailer. Figure 6.1shows these
different vehicle types in cornering maneuvers with the most important vehicle
parameters for track offset determination.
As can be found, under Ackermann conditions the track offset calculation
equations, as shown in Eq. ( 6.1), do not differ between truck–semitrailer and truck
with rigid drawbar trailer [ 14]:
/SOHDr/NULq
r2/NULl2
TkCl2
Co/NULl2
Tl (6.1)144 W. Kober et al.
Fig. 6.1 Vehicle types: Truck–semitrailer ( left), truck with rigid drawbar trailer ( middle ), truck
with pivot plate trailer ( right )
When adapting appropriate vehicle param eters, the track offset calculation
relationship is also suitable similarly for passenger cars with trailer, truck with rigid
drawbar trailer, and truck–semitrailer applications. The truck with pivot plate trailer
has an additional pivot point which leads to a slightly different track offset equation,
as shown in Eq. ( 6.2):
/SOHDr/NULq
r2/NULl2
TkCl2
Co/NULl2
Db/NULl2
Tl(6.2)
Both equations require Ackermann conditions, thus applicable in cornering
maneuver at low vehicle speed. Considering this driving situation for reference lane
calculation, the track offset differences be tween these three vehicle types have to be
examined closer. The results of the gained lane offset /SOH, based on typical vehicle
parameters of vehicles of each category, are shown in Table 6.2. The comparison
of these different vehicle types and their associated vehicle dynamics states under
Ackermann conditions on a road of category C at low vehicle speed shows that
the truck–semitrailer vehicle typically has the biggest lane offset, whereas the truck
with pivot plate trailer has the smallest.
Summarizing the examinations of environmental boundaries and possible vehicle
types for most general reference lane calculation design, it can be found that
additional risk of tractrix hazards will occur mainly on narrow and curvy roads
which are designed for comparatively low vehicle speeds related to the German
guidelines for road construction. As can be seen in Table 6.2, the biggest lane
offset in these driving situations will be gained by the truck–semitrailer vehicle type
(/SOHD0:72 m). For the purpose of designing a reference lane calculation method,
which is able to consider the abovementioned boundaries for the most general case,
the truck–semitrailer vehicle type has to be chosen.6 Vehicle Reference Lane Calculation for Autonomous Vehicle Guidance Control 145
Table 6.2 Parameters, for example, calculation with Ackermann conditions
Length parameter (m)
Truck with pivot
plate trailer
Truck with
drawbar trailer
Truck with
semitrailer
Curve radius r
 50
 50
 50
Truck wheelbase lTk
 5.5
 4.9
 3.7
Coupling point (ﬁfth wheel) to rear
axle lCo
2.4
 1.8
 0.65
Drawbar lDb
 3
 –
 –
Kingpin to trailer axle or trailer
wheelbase lTl
5.17
 6.43
 7.63
Lane offset/SOH
 0.61
 0.62
 0.72
6.3 Vehicle Driving Situation Analysis
A reference lane calculation method which is not adapted to the driver’s demands
will autonomously take steering actions which must or will be actively corrected by
the driver. Such a system behavior will be annoying to the driver, which will lead in
the end to a deactivation of the assistance sy stem by the driver, if that is possible, or
at least will lead to a dishonored system with accordingly bad customer response.
For designing a reference lane calculation system, it is therefore essential to analyze
the driving behavior of a truck–semitrailer vehicle and the driving style of the users
of such vehicles in different driving situations. The ﬁrst driving situation which has
to be analyzed is the simple straightforward driving situation. When a driver of a
passenger car will mainly choose the mid of the lane as reference, to get an equal
safety buffer to the left and right lane markings, the driver of a truck–semitrailer
will choose a reference lane with an offset to the right. This is reasonable because
of the bigger dimensions of a truck. Especially the bigger mirrors are in danger to
get involved in collisions with the mirro r of a truck coming along the opposite lane.
Figure 6.2shows this situation for three different track widths. As track width is
declining, also the offset must be chosen smaller. If track width is getting too small
to have enough buffer space for choosing a reference lane, the offset is getting zero
which leads in the end to mid-lane driving, shown with the truck on the right-hand
side of the ﬁgure.
When driving vehicles with long wheelbase or vehicles with trailer or semitrailer
attached, the driver has to keep attentio n of the tractrix and track offset of the rear
wheels of the vehicle at every cornering situation. Figure 6.3shows an example of
a dangerous situation regarding this issue. The red truck is guided by a “mid-lane”
reference lane on a road with 3.75 m width, which is a quite common lane width
for highway and larger countryside roads. Nevertheless the rear wheels of the red
semitrailer are already leaving the lane and potentially compromising the trafﬁc on
the opposite lane.
The green truck–semitrailer uses an adapt ed (green) reference lane, with an offset
to the outside of the turn, taking the track offset of the vehicle in account. This truck–146 W. Kober et al.
Fig. 6.2 Driving situation: Straightforward driving with lane width change, mid-lane guidance
(chain dotted line ), and adapted lane guidance ( solid line )
Fig. 6.3 Driving situation: Left-turn driving with mid-lane guidance ( chain dotted line )a n d
adapted lane guidance ( solid line )
Fig. 6.4 Driving situation: Right-turn driving with mid-lane guidance ( chain dotted line )a n d
adapted lane guidance ( solid line )
semitrailer is able to perform the left-hand side cornering safely without leaving
the trafﬁc lane. Especially when performing a right-hand side cornering maneuver,
the driver of a truck–semitrailer vehicle has often to follow a comparatively
sophisticated reference lane, as Fig. 6.4shows. First the driver of the truck–
semitrailer comes from a straight-ahead driving situation, which leads him to drive6 Vehicle Reference Lane Calculation for Autonomous Vehicle Guidance Control 147
the vehicle with an offset to the right lane limitation, as mentioned above. To
accomplish the cornering without running th e risk of departing the trafﬁc lane with
the rear wheels of the semitrailer unintentionally, the driver has to adapt his right-
hand side reference lane offset to a left-hand lane offset (solid reference lane). If the
driver uses the mid-lane reference appro ach instead (red chain dotted line), the rear
wheels of the semitrailer will leave the trafﬁc lane. If the side verge is not able to
carry the wheel load of the semitrailer properly, such a situation could easily lead to
a rollover accident.
These presented main driving maneuvers cover most of the standard driving
situations a driver or an autonomous vehicle has to deal with. Nevertheless there
are many more additional driving situations which might occur during a drive. Such
additional driving situations, for example, could be obstacles like a stopped vehicle
at the side verge. In this situation the driver will take the maximum possible driving
offset to the left to have as much safety buffer to this obstacle when passing it.
Trafﬁc jams give a further situation where special driving maneuvers like forming an
emergency corridor have to be performed. Even if emergency vehicles with ﬂashing
blue lights are going to pass, the driver has to react with an adapted reference lane,
which will be a maximum offset to the right-hand side in this case.
6.4 Model-Based Reference Lane Calculation Method
Taking the requirements from Sects. 6.2and6.3in consideration, a reference lane
calculation algorithm for lane keeping has to comply with the following main tasks:
Vehicle Safety Task : The system has to keep the vehicle in track which also
includes preventing the wheels of the vehicle trailer from leaving the road. This
means that the tractrix of the vehicle has to be monitored permanently. Therefore
the possible reference lane selection within the trafﬁc lane is limited not only by
track width but also by tractrix limitations.
Driving Comfort Task : The system has to be adapted to the driver’s needs and
driving habits at least in the most common driving situations to gain high driver
acceptance and high-quality customer response.
Connected Emergency Task : An advanced reference lane calculation system
also has to include information from ambient connected vehicles or infrastructure
devices in the reference lane calculation process.
To meet the safety requirements, in most general case, the truck–semitrailer
vehicle is chosen for designing the refer ence lane calculatio n algorithm, because
the biggest track offset is gained by this vehicle type as shown in Sect. 6.2.
When driving in straightforward driving situations, the possible lane selection isn’t
affected by the tractrix, so the limitations are in fact the left and right lane markings
of the trafﬁc lane the vehicle is actually driving on. When performing a cornering
situation, however, the tractrix will take effect and the trafﬁc lane limitations will
be lowered due to tractrix limitations. To calculate the tractrix limitations, online in148 W. Kober et al.
Fig. 6.5 Guidance offset and kink angle at single-track vehicle model
the driving vehicle, a model-based approach based on a single-track model of the
truck–semitrailer vehicle, as shown in Fig. 6.5, could be used.
As could be seen in the ﬁgure, the vehicle is performing a left-hand side cornering
maneuver with kink angle /CRand track offset /SOH. To assure safe cornering the radius
of the vehicle rTk;fmust be adapted by the track offset /SOHso that the turning radius of
the trailer rTl;minstays within the trafﬁc lane bor ders. Because online measurement
of the track offset is not possible, the offset has to be calculated from available
vehicle measurement signals. To determine the track offset of the vehicle, generally
the kink angle has to be known. Due to the fact that the vehicle kink angle is not
measured by sensors too, a real-time capable kink angle observer has to be designed,
which is able to determine the necessary kink angle to pass the road curvatures
ahead of the vehicle [ 15]. The information of the road ahead, which is a necessary
input for the kink angle observer, could be gathered by a camera system, which
indeed provides the reference lane calculation system with the required information
of curvature, vehicle position within the lane and heading angle of the vehicle. By
the use of this information, it is possible to set up a track offset calculation module
which calculates the necessary track offs ets of the road curvature with a beneﬁcial
look-ahead functionality. As human driver s do, every lateral vehicle controller
needs controller reference values with some look-ahead capacity, to gain the best
possible performance at vehicle guidance task. When designing the reference lane
calculation module for lane-keeping controllers, this can be assured as mentioned
above, by a proper use of the camera look-ahead information available.
For designing the kink angle observer, the single-track model of a truck–
semitrailer, as shown in Fig. 6.6, is used. The kink angle /CRcould generally be
determined by numerical integration of kink angle rate P/CR:
/CRtDP/CR/SOHt1C/CRt/NULt1 (6.3)
T h ek i n ka n g l er a t e P/CRis the difference of the yaw rate of the truck P Tkand yaw
rate of the semitrailer P Tl:
P/CRDP Tk/NULP Tl (6.4)6 Vehicle Reference Lane Calculation for Autonomous Vehicle Guidance Control 149
Fig. 6.6 Single-track model of a truck–semitrailer combination
The yaw rate of the truck P Tkcould be represented by use of the equations of
the single-track model as Eq. ( 6.5) shows. The yaw rate is calculated from vehicle
steering angle ı, the front wheel speed vFa, and the sideslip angle ˛Faof the front
wheels. Unfortunately the sideslip angle could not be measured online in vehicle
when not using expensive measurement equipment; therefore Eq. ( 6.5) could not
directly be used for determining the yaw ra te. Alternatively the directly measured
yaw rate of the truck by the vehicle’s yaw rate sensor, used for the electronic stability
program (ESP), could be used:
P TkDvFa
lTk/SOHsinı/SOHcosı/NULvFa/SOHcosı
lCo/SOHsin˛Fa (6.5)
The yaw rate of the semitrailer could accordingly be represented by using
a single-track model as Eq. ( 6.6) shows. The yaw rate is determined besides
geometrical vehicle parameter s, from steering wheel angle ı, front wheel speed vFa,
and kink angle /CR:
P TlDvFa/SOHcosı/SOHsinı
lTk/SOHlTk;b
lCo/SOHcos/CR (6.6)
With Eqs. ( 6.4), (6.5), and ( 6.6), we get the calculation method for the kink angle
rate:
P/CRDvFa
lTk/SOHsinı/SOHcosı/NULvFa/SOHcosı
lCo/SOHsin˛Fa/NULvFa/SOHcosı/SOHsinı
lTk/SOHlTk;b
lCo/SOHcos/CR
(6.7)
The kink angle could be calculated from Eq. ( 6.3) by the use of sensor input
information of vehicle speed, yaw rate of the truck, and necessary steering angle
which is gained from the camera curvature information, performing a numerical
integration. With the knowledge of kink angle, the track offset has to be determined.
When assuming cornering maneuvers under Ackermann conditions, this can be150 W. Kober et al.
achieved with simple trigonometric equations. The assumed simpliﬁcations of the
Ackermann conditions are:
 Low vehicle speed with almost no longitudinal tire forces (no slip).
 No inﬂuence of lateral acceleration, no si deslip angle, and therefore no lateral
tire forces.
 The prolongation of the tire axles meets in one circular center point.
Compared to vehicles without trailer, truck–semitrailer vehicles or vehicles
with trailer attached tend to drive cornering maneuvers at relatively low lateral
accelerations to avoid rollover risks. Typica lly values for lateral accelerations during
lane change maneuvers, for example, are in a range from 0:2to0:5m=s2[16].
So the Ackermann assumptions generally comply quite well with the use cases of
the proposed application. Furthermore typically tractrix calculations are essential
especially at relatively steep cornerin g maneuvers which anyway were performed
at lower speeds, for example, at highway exits or curvy country roads, as shown
in Sect. 6.2. So the Ackermann assumptions are suitable for use in track offset
determination task for reference lane calculation.
The trigonometric relationship of the single-track vehicle model under Acker-
mann assumptions is shown in Fig. 6.7for a truck–semitrailer vehicle. The steering
angleıcan be calculated with Eq. ( 6.8) from wheelbase of the truck lTkand the
Fig. 6.7 Single-track model of a truck–semitrailer combination6 Vehicle Reference Lane Calculation for Autonomous Vehicle Guidance Control 151
turning radius of the front wheels rTk;f[17,18]:
sin.ı/DlTk
rTk;f(6.8)
The necessary turning radius of the front wheels rTk;fdepends on the road
curvature crwhich the vehicle is driving at. For autonomous vehicles with camera-
based lateral vehicle guidance, the cur vature information of the road ahead is
provided by the lane detection camera. In case of GPS-based lateral vehicle
guidance, the curvature information is available from road map data:
rTk;fD1
cr(6.9)
By the use of Eqs. ( 6.8)a n d( 6.9), a necessary steering angle ıfor driving a road
curvature crcan be calculated with Eq. ( 6.10). This steering angle, depending on the
road curvature ahead, can be used as input for the kink angle observer to calculate
the kink angle arising when driving the curvature:
ıDarcsin/DC2lTk
rTk;f/DC3
Darcsin.lTk/SOHcr/ (6.10)
First step for track offset calculation is the determination of the minimum turning
radius rTk;minat the rear wheels of the truck. The required cornering radius of the
front wheels rTk;fcould be gained from the camera curvature information. The
minimum cornering radius of the rear wheels rTk;mincould then be calculated with
Eq. ( 6.11) by use of the wheelbase lTk:
rTk;minDq
r2
Tk;f/NULl2
Tk (6.11)
Next step is the calculation of the turning radius at the semitrailer coupling rCo
from minimum rear wheel cornering radius rTk;minwith Eq. ( 6.12):
rCoDq
r2
Tk;minCl2
Co (6.12)
The angle"which is the angle between turning radius of the semitrailer coupling
and the vehicles longitudinal axis could be determined by Eq. ( 6.13):
"Darccos/DC2lCo
rCo/DC3
(6.13)
By use of"and the kink angle /CRfrom the kink angle observer module, the
minimum turning radius of the trailer rTl;minis given in Eq. ( 6.14):
rTl;minDrCo/SOHsin."/NUL/CR/ (6.14)152 W. Kober et al.
Finally the track offset /SOHtractrix could be calculated as difference between
cornering radius of front wheels rTk;fand minimum cornering radius of trailer axle
rTl;min:
/SOHtractrix DrTk;f/NULrTl;min (6.15)
The track offset /SOHtractrix gives the possibility for real-time calculation of required
lane space for driving an oncoming trafﬁc lane curvature safely regarding tractrix
hazards. Therefore this information is use d to generate online s afety limitations for
possible reference lanes for left-hand side and right-hand side cornering maneuvers.
Within this limitation the reference lane could be set freely from safety sight of view.
It is recommended to use this potential to add solutions for additional requirements,
for example, to gain higher driving comfort. Therefore requirements from driver
habits could be taken in consideration to gain the best possible driving comfort.
As seen in Sect. 6.3, the driver of the considered truck–semitrailer vehicle will
tend to drive this type of vehicles with an offset to the right-hand side. To meet
this requirement in the proposed reference lane calculation method, a nonlinear
approach of trafﬁc lane width dependent on comfort offset calculation, as shown
in Eq. ( 6.16), is used:
/SOHcomfort D/SOHlane;set
wl;set/NULwveh/SOHmaxŒ.wl/NULwveh/;0/c141 (6.16)
The comfort track offset /SOHcomfort depends from vehicle width wvehand track
width wl. The parameterization of the nonlinear offset function is done by setting a
reference offset point /SOHlane;setat a certain track width wl;set, which can be freely
chosen accordingly to the needs of the users. If vehicle width wvehis getting
bigger than actual track width wl, the comfort offset is set to zero to perform
a mid-lane vehicle guidance approach at this driving scenario. The user of the
vehicle could also be enabled to set different comfort parameters, e.g., the reference
offset point, of the reference lane calculation software module for adapting vehicle
reference lane calculation to his/her needs. Autonomous vehicles also include
additional functionalities for special driving situations which have also to be taken
in consideration for reference value gene ration software algorithms. These driving
situations include emergency situations like forming emergency corridors when
trafﬁc jams occurs or setting the driving lane offset to the maximum possible right
direction for enabling emergency vehicles to pass. Another driving situation with
high accidental risk is the situation when t he vehicle has to pass a stopped vehicle
or any other obstacle at the side verge. Again the appropriate reaction would be to
set the reference lane offset to the left limit to gain maximum buffer space to the
obstacle on the right. To perform these situ ations, a special emergency track offset
is calculated as Eq. ( 6.17)s h o w s :
/SOHemergency DmaxŒ.wl/NULwveh/;0/c141
2/SOHsign.Eleft;right/ (6.17)6 Vehicle Reference Lane Calculation for Autonomous Vehicle Guidance Control 153
The emergency offset is determined so that the vehicle is guided to the border
of the actual lane width of the appropriate side to generate a safety buffer.
For activation of the emergency reference lane calculation, additional input and
further software modules are used. This module includes also information from
other surrounding vehicles and infrastructure devices. The gained information is
preprocessed by additional software modules, and the reference lane generation
module ﬁnally gets the information Eleft;rightif an emergency lane is needed. The
choice of the lane side which is appropriate for the actual emergency situation
is deﬁned by the sign of Eleft;rightin Eq. ( 6.17). To generate the lane reference
output value, the calculated track offsets f or vehicle safety, driving comfort, and
connected emergency have to be merged together to one target value for the lane-
keeping controller of the autonomous vehicle. This task is performed by use of
a prioritization logic. The highest priority is to keep the vehicle safely on track.
In standard driving situations, Eq. ( 6.18) is therefore used to limit the determined
comfort driving lane with the tractrix limitations. The minimum function min 0of
Eq. ( 6.18) is used to set the minimum around zero to be able to use left- and right-
hand side offsets around the center lane of the track:
/SOHreference Dmin0Œ/SOHtractrix;/SOHcomfort/c141 (6.18)
In cases of emergency situations, the comfort lane is substituted by the appropri-
ate emergency lane, which leads the driving comfort lane having the lowest priority.
When using the emergency lane, keeping the vehicle on track has again a higher
priority than performing the emergency lane. Equation ( 6.18) can therefore be used
by replacing the driving comfort lane with the emergency lane, shown in Eq. ( 6.19):
/SOHreference Dmin0/STX
/SOHtractrix;/SOHemergency/ETX
(6.19)
By using this approach, the prioritization l evels of the calculated track offsets are
given by the vehicle safety with highest priority, emergency lane with mid priority,
and the driving comfort with lowest priority.
6.5 Functional System Architecture Overview
By use of the developed model-based kink angle observer, it is possible to design
a reference lane calculation system which is able to fulﬁll all the requirements of
complex driving dynamics regarding autonomous tractrix observation for truck–
semitrailer vehicles. Due to the fact of requirement selection choosing the most
general use case in Sect. 6.2, the proposed reference lane calculation method is
also valid for vehicle types like passenger car with trailer attached or truck–trailer
combinations which generally have less track offset then the truck–semitrailer has.
The reference lane calculation method in th ese cases would only set reference lanes
with more safety buffer than a truck–semitrailer would have. Figure 6.8shows the154 W. Kober et al.
Fig. 6.8 Functional software architecture for reference lane calculation (equations are referenced
in brackets)
functional software architecture of the proposed reference lane calculation system
with three main parts: the kink angle observer with track offset calculation, the user-
speciﬁc reference lane generation, and the output of the desired lane after the tractrix
limitation of the generated user reference lane. The input stage gathers sensor
information from the vehicle bus system , like vehicle speed and steering angle, as
well as from the camera system with signals like distance to left/right lane marking
and curvature of the lane. This information is used by the subsequent operation
modules to calculate the reference lane yrefand the left/right lane limitations ( Ll
andLr). The reference lane gives the desired position of the vehicle on the track
which is performed and adjusted via the lateral lane controller of the autonomous
system. The limitation values LlandLraccomplish the driver task of observing the
tractrix and ensuring that the rear wheels of the trailer or semitrailer stay on the
road in all driving situations. To calculate the tractrix limitations, the kink angle
observer, as shown in Sect. 6.4, and the actual lane curvature information from
camera system are used to determine the track offset. This track offset is then
propagated to the reference lane correction module, to limit the desired lane to
possible values regar ding tractrix hazards.
Till reference lane correction module limits the desired lane to safe values, a
user-speciﬁc reference lane can easily be applied at the vehicle without danger
of harming any safety restrictions. The us er-speciﬁc reference generation module
implements the algorithm for vehicle-sp eciﬁc reference lanes which could be in
the simplest case a “mid-lane” approach fo r passenger cars with trailer attached. In6 Vehicle Reference Lane Calculation for Autonomous Vehicle Guidance Control 155
these cases the tractrix lim itation because of trailer usage is permanently assured by
the reference lane correction module. For truck-semitrailer combinations, a simple
constant lane offset to the right-hand side could be set to meet the requirements
of truck drivers straightforward driving desires. For more advanced solutions, the
constant offset could be improved by using an offset value which is dependent
from actual trafﬁc lane width. If the lane width is equal to vehicle width, the offset
will go to zero and the reference lane will then be the same as in the mid-lane
approach. In the user-speciﬁc reference generation module, also the emergency lane
functionalities are implemented. External information received from infrastructure
devices or other vehicles are used to set appropriate reference lanes for the vehicle
in different emergency situations. Since there where camera input signals used for
calculation modules like in the track offset calculation module, a simple look-ahead
functionality of the module output can be ensu red. This leads to better performance
of the subsequent lane controller in the autonomous vehicle guidance system.
6.6 Example Driving Situations and Module Performance
For performance testing and validation of the reference lane calculation method,
different driving situations have to be considered to cover all design requirements.
As an example the main driving situations, straightforward driving, left-hand side
cornering, and right-hand side cornering, as shown in Sect. 6.3, will be subsequently
examined with the implemented software module with a measured driving run. The
output of the reference lane calculation procedure is given at Fig. 6.9,w h e r et h e
reference lane offset is shown over simula tion time. Preprocesse d measurement data
were used as input for the simulation run; thus the truck–semitrailer is driving with
cruise control 50 km/h on a curvy country road during the simulation. To get a
short overview of the driving run on which the simulation analysis is based on, the
performed driving situations are listed in Table 6.3in dependence of simulation
time.
A reference lane offset of value zero corresponds to the “mid-lane” approach as
indicated by the dashed line in Fig. 6.9. The left and right limitation graphs limit
the possible reference lane selection area w hich is safe regarding possible tractrix
hazards. The dark red solid line ﬁnally show s the calculated reference lane from the
proposed reference lane calculation method. In the ﬁrst section from simulation time
from 0 s to approximately 20 s, the vehicle is in a straightforward driving situation,
indicated by the given possible reference lane limits of 40 cm which are equally for
the left- and the right-hand side. The refer ence lane of the vehicle, which is given by
the green graph, is chosen with a trafﬁc lane dependent offset. As the ﬁgure shows,
the offset in this road width situation is approximately 25 cm to the right. From 20
to 40 s, the left limitation is lowered which indicates that the vehicle is performing
a slight left-hand side cornering maneuver. Due to the fact that the left limitation
doesn’t affect the actual reference lane, the vehicle is able to continue driving with
its previously used right-hand side offset. Shortly after simulation time of 40 s, a156 W. Kober et al.
Fig. 6.9 Simulation output reference lane calculation module and angular input signals
Table 6.3 Simulation steps
of driving scenario
Simulation time (s)
 Driving situation
0–20
 Straightforward driving (ref. Fig. 6.2)
20–40
 Left-hand cornering (ref. Fig. 6.3)
40–77
 Right-hand cornering (ref. Fig. 6.4)
77–98
 Straightforward driving (ref. Fig. 6.2)
98–130
 Left-hand cornering (ref. Fig. 6.3)
130–165
 Right-hand cornering (ref. Fig. 6.4)
steep right-hand side cornering has to be performed. The right limitation calculation
uses the information from the camera system and the kink angle observer to detect
the oncoming lane curvature. With observer knowledge it is possible to calculate the
necessary kink angle to pass this curvature and determine the oncoming track offset
in real time.
This information is used to examine the right limitation shown in Fig. 6.9. As can
be seen, the right limitation affects the actual vehicle reference lane in that way, that
the offset to the right-hand side is lowered to zero in the ﬁrst stage. When proceeding6 Vehicle Reference Lane Calculation for Autonomous Vehicle Guidance Control 157
the cornering maneuver, it is even necessary to set the offset to the left-hand side,
to pass safely this steep right-hand side road curvature without having any tractrix
hazards. As soon as the road curvature is passed, the reference lane is set back to
the lane width dependent offset for straightforward driving situations. Another left-
hand cornering maneuver and in comparis on to the ﬁrst a less steep right-hand side
cornering situation are following with ongoing simulation time.
6.7 Conclusion
This paper presents the recent developmen ts of reference lane calculation methods
necessary for advanced driver assistance systems and autonomous driving vehicles.
It could be shown that a simple mid-lan e approach as used for reference lane
determination for passenger cars is not suitable for vehicles with more complex
driving dynamics, e.g., vehicles with trailers or semitrailers attached. For designing
an advanced reference lane calculation method, it is essential to determine the
requirements and boundaries of road environment as well as the possible variety of
vehicles where the system is intended to be applied. The truck–semitrailer vehicle
type was chosen for developing the refer ence lane calculatio n algorithm, because
this vehicle type provides the most general case for this task. This selection approach
permits the usage of the proposed reference lane calculation method to be used in
principal and also for all other vehicle types. A very important design requirement is
also to include considerations of vehicle driver desires in different driving situations
in the design speciﬁcation process to gain a system with good customer response
and high driver acceptance. This is equa lly important for percentage of usage of
driver-selectable assistance systems as well as for persistent activated autonomous
guidance systems. One of the most important safety hazards when driving vehicles
with trailers or semitrailers attached is the risks of tractrix accidents. The proposed
reference calculation method includes thi s safety function of permanent tractrix
observation as well as a user-dependent re ference lane generation and calculation
of special reference lanes for emergency situations to provide a system with all
necessary safety features in combination with highest possible driving comfort.
References
1. SAE J3016, Taxonomy and De ﬁnitions for Terms Related to O n-Road Motor V ehicle Auto-
mated Driving Systems, Jan 2014
2. Daimler AG, Mercedes Benz Future Truck 2025, www.mercedes-benz.com/en/mercedes-benz/
design/design-of-the-future-the-future-truck-2025/ . Accessed 5 Jul 2015
3. Daimler Trucks North America LLC, Freightliner Inspiration Truck, http://www.freightliner
inspiration.com/technology/ . Accessed 5 Jul 2015
4. Google X, Google Self-Driving Car Project, www.google.com/selfdrivingcar/ . Accessed 9
August 2015158 W. Kober et al.
5. P. Falcone, F. Borrelli, J. Asgari, H.E. Tseng, D. Hrovat, Predictive active steering control for
autonomous vehicle systems. IEEE Trans. Control Syst. Technol. 15(3), 566–580 (2007)
6. P. Falcone, F. Borrelli, H.E. Tseng, J. Asgari, D. Hrovat, A Hierarchical Model Predictive
Control Framework for Autonomous Ground Vehicles, in American Control Conference ,
Seattle , 2008
7. A. Nhila, D. Williams, V . Gupta, Integration of Lane Keeping Assistance with Steering, in SAE
2013 Commercial Vehicle Engineering Congress , Rosemont, Illinois, 2013
8. B. Mashadi, M. Majidi, Global optimal path planning of an autonomous vehicle for overtaking
a moving obstacle. Lat. Am. J. Solids Struct. 11, 2555–2572 (2014)
9. Y . Gao, T. Lin, F. Bo rrelli, E. Tseng, D. Hrov at, Predictive Cont rol of Autonomous Ground
Vehicles With Obstacle Avoidance on Slippery Roads, in ASME 2010 Dynamic Systems and
Control Conference , Cambridge, MA, 2010
10. J. Freyer, L. Winkler, M. Warnecke, G.P. Duba, A little bit more attentive audi active lane assist.
ATZ Worldw 112(12), 40–44 (2010)
11. BMW AG, BMW ConnectedDrive Driver Assistance systems in the BMW 7 Series,
www.bmw.com/com/en/newvehicles/7series/sedan/2015/showroom/driver_assistance.html ?
Accessed 9 Aug 2015
12. Forschungsgesellschaft für Straßen- und Verkehrswesen, Richtlinie für die Anlage von Straßen
RAS-Q (FGSV Verlag, Köln, 1996)
13. Forschungsgesellschaft für Straßen- und Verkehrswesen, Richtlinie für die Anlage von Straßen
RAS-L-1 (FGSV Verlag, Köln, 1984)
14. E. Hoepke, S. Breuer (Hrsg) Nutzfahrzeugtechnik ,7 .A u ﬂ a g e( V i e w e g CTeubner, Wiesbaden,
2013)
15. R. Huber, Model based development of target lane position determination for heavy duty
trucks. Thesis, Ins titut für Verb rennungsmotoren und Kraftfahrwesen, Stuttgart, 2013
16. E.J.-D. Schulze, M. Becke, Unfallrekonstruktion, LKW Spurwechsel auf mehrspurigen Rich-
tungsfahrbahnen (Schimmelpfenning und Becke GbR, Münster, 2007)
17. M. Mitschke, H. Wallentowitz, Dynamik der Kraftfahrzeuge , 4. Auﬂage (Springer, Berlin,
2004)
18. B. Heißing, M. Ersoy, Chassis Handbook (Vieweg CTeubner, Wiesbaden, 2011)Part III
Advances in Environment Sensing,
Sensor Fusion, and PerceptionChapter 7
The Role of Multisensor Environmental
Perception for Automated Driving
Robin Schubert and Marcus Obst
7.1 Introduction
Automated driving is characterized by a c omputer-based derivation and execution
of appropriate driving maneuvers based on the current trafﬁc situation. The basis for
evaluating the trafﬁc situation, however, is knowledge about all relevant entities in
a vehicle’s environment, including trafﬁc participants (vehicles, pedestrians), road
infrastructure (lane markings, trafﬁc signs, trafﬁc lights), or obstacles (curbstones,
potholes, bushes).
For acquiring such knowledge, numerous sensors are being used that perma-
nently provide relevant data. These dat a, however, are typically not directly used
by the high-level driving functions (such as path planning or maneuver decision-
making). Instead, an intermediate processing layer is used that is referred to as the
environmental model (see Fig. 7.1). This additional layer is used for several reasons:
Sensor errors : Data directly provided by the s ensors are subject to different
errors. On the one hand, the measured signals can be disturbed by effects such
as sensor noise, latencies, or calibra tion errors. On the other hand (and more
severe), sensors may fail to detect objects at all or falsely report objects that are
not present in the environment. Those eff ects are called false-negative or false-
positive detections, respectively.
The environmental model contains algorithms to reduce those errors by
temporal ﬁltering and to estimate the magnitude of errors that need to be
considered when using its result for taking driving decision. Thus, environment
modeling helps to increase the reliability of the perception.
R. Schubert (/envelopeback)M .O b s t
BASELABS GmbH, Chemnitz, Germany
e-mail: robin.schubert@baselabs.de ;marcus.obst@baselabs.de
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_7161162 R. Schubert and M. Obst
Imaging/
Classification
(cameras)Ranging 
(Radar, Lidar, 
Ultrasonic)Ego vehicle
(GNSS, INS)Virtual 
sensors
(maps, V2X)Sensor LayerEnvironmental Model
Object Detection & Tracking Free-Space EstimationPerception
LayerTactical/Strategic Control
Situation 
AssessmentDecision
MakingPath
PlanningMotion 
ControlFunction
LayerSteeringThrottle/ 
BrakingActuator
LayerHuman-
Machine-
Interface
Fig. 7.1 The perception layer constitutes an interface between sensors and high-level functions
Sensor abstraction : The sensor conﬁguration of different vehicles will most
likely not be the same. In addition, interfaces and properties of the utilized
sensors may change. By providing a sep arating layer between the sensors and
the driving function, the environmental model facilitates the implementation
of driving functions that are independent from particular sensors. This has a
huge impact on reusability and archit ectural quality of those functions. The
environmental model may, thus, be considered as a sensor-abstraction layer .1
Data fusion : For many driving functions, information from different sensors
are required (e.g., the velocity of an object measured by a radar and its class
determined by a camera). The environmental model inherently combines data
from all available sensors in order to provide both a higher quantity and a higher
quality of available information. While the former is achieved by combining
heterogeneous sensors or sensors covering different ﬁelds of view, the latter effect
is based on sensor redundancy. The environmental model ensures that the driving
functions can use a consolidated representation of the environment.
Modeling and hypothesis generation : The required reliability of information
representing the environment of the vehicle constitutes an inherent conﬂict when
compared to the quality of the available sensor data. The decisive strategy
for bridging this gap is to use model knowledge . In fact, the concept of the
1To some extent, this can be compared to hardware abstraction layers used in programming to
support modular software architect ures that facilitate reusability.7 The Role of Multisensor Environmental Perception for Automated Driving 163
environmental model is to form expectations of the environment (often in form of
numerous hypotheses) and to conﬁrm or falsify these hypotheses by calculatingtheir ﬁt to the observed sensor data. For instance, lanes may be assumed to beparallel and to follow a clothoidal shape. It is many grades of magnitudes easierto estimate the parameters of a clothoid based on noisy data than to determinea completely arbitrary shape from these data. The same concept holds for otherentities such as vehicles, whose stable detection and tracking is only possiblebecause it is assumed that they comply w ith typical motion patterns. Modeling
also facilitates the estimation of quantities that are not directly observable. In fact,this concept forms the basis of the term environmental model , as it emphasizes
that the main role in this layer is to deﬁne t he expected structural representation
of the environment and to estimate the parameters of this representation based onsensor data.
Prediction : For automated driving, it is not sufﬁcient to describe the current
trafﬁc situation. In fact, maneuver decisions or warnings to a driver should beissued before a collision or another dangerous situation occurs. This implies
the need to predict the trafﬁc situation to the future in order to anticipatethe consequences of driving decisions. The environmental model provides thisfunctionality by exploiting model knowledge as described before. For instance,if typical motion patterns of vehicles are modeled and their dynamic parameters(such as their velocities and yaw rates) are estimated, future positions can bedetermined. As predictions can never be certain, however, also the reliability ofsuch predictions needs to be quantiﬁed by the environmental model.
Integrity : Together with the representation of the environment, probably the
most relevant role of the environmental model is to provide quantitative indica-tors that describe its uncertainties. For a single sensor, it is difﬁcult to determinethe current error of its measurement. The environmental model, however, canexploit the redundancy between sensors as well as the model knowledge toestimate the current estimation errors. S uch an error indicator is considered to
fulﬁll the property of integrity if the true error never exceeds the estimated one.
As automated driving functions are safety critical, this property is crucial for asafe operation. Only if the driving functions know about the current expectederror of the environmental representation, it can take appropriate decisions. Themost common way to describe these uncertainties is by means of probabilisticquantities. For this reason, probabilistic inference algorithms are at the heart ofenvironmental modeling algorithms.
7.2 State of Practice
In general, the vehicle environment for automated driving applications comprisesdynamic and static entities. In the followi ng sections, typical methods to model and
estimate these entities are presented.164 R. Schubert and M. Obst
State/Existence Prediction State/Existence Update
Data Association
(optionally including Gating)Track Management
Track 
InitializationTrack 
Deletion
Measurements
Fig. 7.2 Functional structure of a multiple objects tracking process
7.2.1 Dynamic Environments
Dynamic environments are characterized by numerous entities that can move
independently from each other. As described in Sect. 1, it is advantageous to model
this motion mathematically in order to improve the robustness of the perception. For
this reason, the most common approach for modeling dynamic environments is to
apply an object-based paradigm by handling each mo ving object independently.
A commonly applied technique to that end is multiple objects tracking (MOT).
Here, object tracking refers to the task of utilizing noisy measurements from
heterogeneous perception sensors to derive both the number and the characteristics
of relevant objects by ﬁltering the sensor data over time. The characteristics are
subsumed in a vector called the state and typically include continuous parameters
such as position, velocity, and heading angle as well as discrete states like the object
class.
Though there is a variety of MOT algorithms, many of them can be generalized
to the structure illustrated in Fig. 7.2. The basic assumption of an MOT algorithm
is that, due to false positives and false negatives, detections reported by sensors
do not necessarily correspond to true objects. This inherent property of perception
systems is taken into account by introducing the concept of tracks representing
object hypotheses . A track consists of a state estimate (typically including a position
and additional kinematic parameters) and a probability which quantiﬁes the belief in
the hypothesis that this track represents a true object (referred to as the probability
of existence ). Both the state estimate and the probability of existence are iteratively
updated whenever new sensor data arrive.
The state of a track is modeled independently from the sensor measurements,
while the relation between both is modeled by a mathematical function called the
sensor model. By using several sensor models, the tracks can be updated by different
sensors independent from each other. Thus, a ll sensors that are related to the state
by a sensor model contribute to the estimation of this state as well as the estimation
of the track’s probability of existence. This concept implicitly facilitates the spatial7 The Role of Multisensor Environmental Perception for Automated Driving 165
and temporal alignment of data from diffe rent sensors—commonly referred to as
(multiple sensor) data fusion .
The concept of MOT will be explained in the following subsections based on the
structure illustrated in Fig. 7.2.
7.2.1.1 State Estimation by Bayesian Filtering
In general, several approaches to realize multisensor fusion are available [ 1]. A well-
known and successfully applied technique in online multisensor fusion applications
is Bayesian state estimation. By that a pproach, the temporal correlation between
consecutive observations from multiple sensors can be continuously exploited and
combined with a priori model knowledge. Finally, the result is represented by a
probability density function (PDF). The recursive Bayes ﬁlter algorithm comprises
t w om a i np a r t s :
State prediction : In this step, the knowledge of the system under observation
from the last time step tk/NUL1is synchronized to the measurement time tkof the most
recent sensor observations. This is achieved by applying a system model (e.g., an
appropriate motion model [ 2] in the case of a vehicle state estimation problem)
which describes the expected evolvement of the system over time. As this state
synchronization is solely based on model knowledge (which typically does not
match reality in every detail), it typically adds uncertainty to the estimate. Due
to the fact that the state of the system under observation and the provided sensor
measurement are often not deﬁned in the same coordinate system, the predication
step also includes an additional transformation process from the synchronized
system state to the measurement domain. In order to achieve this transformation,
a sensor-speciﬁc measurement model which considers sensor noise is applied.
State update : After the prediction step, a probabilistic representation of the
synchronized system state (also called a state hypothesis) described in the
measurement domain and the particular sensor observation sample is available
for comparison. Probabilistically speak ing, the likelihood of the sensor model
given the assumption of the state hypothesis is evaluated at the position of the
observed measurement. Based on the result, the predicated state estimate is
adjusted and considered the best knowledge of the system at time tk. The result of
this step is a probabilistic combination of the information from the latest sensor
measurement and the previously accumulated system state.
Recursive Bayes ﬁltering is an efﬁcient and consistent technique to perform
a probabilistic data fusion among multiple sensors for real-time applications.
Different measurement principles and the s ensor noise are considered by particular
measurement models, while the alignmen t of asynchronous sensor data is implicitly
achieved by applying the system model. It is worth mentioning that there are
multiple practically relevant implementations of recursive Bayes ﬁlters: For linear
systems whose uncertainties can be mode led by Gaussian PDFs, the Kalman ﬁlter
is the optimal estimator. The practically most relevant ﬁlters are the extended166 R. Schubert and M. Obst
Fig. 7.3 Position uncertainties and false-positive detections are causing ambiguities
Kalman ﬁlter and the unscented Kalman ﬁlter for nonlinear systems that are subject
to unimodal disturbances which can be approximated by Gaussian PDFs. For
multimodal PDFs or in case of severe nonlin earities, particle ﬁlters can be applied
[3].
7.2.1.2 Data Association
In order to update a track’s state estimate, sensor measurements are used. In practice,
however, this process is subject to severe ambiguities as illustrated in Fig. 7.3.T h e
output of a sensor is a list of detections within the ﬁeld of view that are not related
in any way to the object hypotheses that are handled by the MOT. For updating
the state of a track, it is crucial to know which of these detections shall be used
for updating a particular track. One part of the ambiguity related to this issue stems
from the uncertainty of the state estimate itself. As the track’s position is not exactly
known, it is difﬁcult to distinguish between a detection that displays a different
position than the track due to measurement noise and a detection coming from an
adjacent object. The other part of the am biguity is caused by the fact that sensor
detections can be erroneous. In Fig. 7.3, some of the sensor detections may be
related to the vehicle, they may be false positives, or they may represent a vehicle
which is not yet tracked. Solving this ambiguity is referred to as data association
(or, more precisely, measurement to track association) and can be considered the
key challenge in multiple objects tracking.
The basis of data association is some kin d of distance metric between the tracks
and the measurements. Instead of using a geometrical measure such as the Euclidean
distance, MOT requires to apply a statistical distance measure that, on the one
hand, accounts for the uncertainties of the tracks and the sensor measurements and,
on the other hand, facilitates the combination of different state variables such as7 The Role of Multisensor Environmental Perception for Automated Driving 167
position and velocity into a single metric. The metric of choice for this application
is the Mahalanobis distance , which is a statistical measure describing the distance
between a multi-dimensional probability density function and a point [ 4]. If the
track’s state is represented by a Gaussian PDF, the metric can be considered as a
track’s likelihood evaluated at the position of the measurement.
Based on the Mahalanobis distance between each track and each measurement,
the measurement to track association takes place in several steps.
The ﬁrst step is called gating . In this phase, detections that exceed a predeﬁned
distance to the closest track are excluded from the further steps. Those detections
are considered as non-associable , which means it is considered very unlikely that
those detection represent objects which ar e already being tracked. Instead, those
detections are assumed to be potential obj ects that are not yet tracked—hence, they
are used to create new object hypotheses (i.e., new tracks). In addition to using those
non-associable detections as a source for new tracks, another rationale for gating in
combination with decision-based association techniques is to avoid unreasonable
association decisions.
Regarding the second step after the gating, there are two groups of techniques:
The ﬁrst one reduces complexity by conducting a unique n-1-pre-association in the
sense that every detection is associated unambiguously to the closest track (which
implies that several detection can be pre- associated to each track). Those approaches
can be considered as local association techniques. The second group does not make
use of this simpliﬁcation, which makes it more performant in ambiguous situations
but also more computationally complex.
In the ﬁnal association step, again two different categories may be distinguished:
Decision-based data association : In the ﬁrst category, a unique association
decision is derived in the sense that not more than one detection is associated to
a track and vice versa. This can be achie ved by minimizing the distance between
tracks and detections. The local algorithm in this category is the local nearest
neighbor association which determines the c losest detection for each track. The
global nearest neighbor association, however, enumerates overall association
hypotheses and chooses the one with the smallest sum of distances.
Probabilistic data association (PDA) : In this category, no hard decisions are
made. Instead, all detections (possibly p re-associated to a track) are considered
valid association hypotheses, and a probability is derived for each hypotheses
which is higher for detections closer to certain tracks than for detections that are
farther away. Depending on whether a pre-association has been applied, either a
local variant (PDA) or a global variant (joint PDA—JPDA) of this approach can
be used.
PDA and JPDA can be further distinguished into several subclasses of association
algorithms depending on certain assumptions and models:
PDA/JPDA vs. IPDA/JIPDA : The basic PDA/JPDA is using the association
weights for the state update but not for updating the existence probability. An168 R. Schubert and M. Obst
extension is the integrated PDA (or the corresponding joint integrated PDA) that
updates also the existence probability accordingly [ 5].
GPDA : The basic PDA assumes that each object cannot generate more than one
detection. This assumption limits the number of hypotheses and, thus, reduces
complexity. However, it also implies tha t if several measurements are received
for one object, all but one are per deﬁnition considered false positives. In some
scenarios (like tracking of large trucks with a radar sensor), this assumption does
not hold. The generalized PDA (that is also available in the integrated and joint
variant) relaxes this assumption at the costs of a higher computational complexity
[6].
As an interim conclusion, data association is a complex topic that can be solved
by numerous algorithms that are summarized in the Tables 7.1and7.2. The choice
of the right algorithm depends on the sensors as well as on the scenarios and the
available computation power.
Table 7.1 Systematization of data association techniques
Data association
Gating
Detections too far away from existing tracks are considered
non-associable and are used to create new tracksa
Pre-association (per
detection)
n-1-association (“local”):
Detections are associated to not
more than one track
n-m-association (“global”):
Detections are associable to any
track (no pre-association)
Deterministic vs.
probabilistic
association (per
track)
Local nearest
neighbor (hard
1-1 decision)
Probabilistic
data
association
(PDA) (no
decision)
Global nearest
neighbor (hard
1-1 decision)
Joint
probabilistic
data
association
(JPDA) (no
decision)
aThis approach is called data-driven track creation. While it is the practically most relevant
approach, the theoretically consistent way of creating tracks is to draw them randomly from a
birth distribution
Table 7.2 Further systematization of probabilistic data association techniques
(Joint) probabilistic data association
Impact on existence
estimation
Classical PDA/JPDA: No
inﬂuence between existence
and association probabilities
Integrated PDA/JPDA
(IPDA/JIPDA): Mutual
inﬂuence between both
probabilities
Assumed number of possible
true detections from an object
Assumption of classical
PDA/JPDA/IPDA/JIPDA:
The sensor never receives
more than one true detection
from an object
Generalized
PDA/JPDA/IPDA/JIPDA :A
sensor can receive several
true detections per object
7 The Role of Multisensor Environmental Perception for Automated Driving 169
7.2.1.3 Existence Estimation
For the estimation of a track’s probability of existence, Bayesian ﬁltering can be
applied as well. However, in contrast to the estimation of a continuous state, theexistence of a track is a binary variable. This simpliﬁes the estimation, as it allowsthe usage of a discrete Bayes ﬁlter.
The belief that the track under consideration represents a true object is rep-
resented by the conditional probability P.9x
kjZk/where the binary variable 9xk
denotes the existence of an object xat time kand Zkdenotes the set of all
measurements from time 0 to k. This conditional probability can be calculated using
Bayes rule (using /DC1as a normalizing constant), which leads to
P.9xkjZk/DP.9xkjzk;Zk/NUL1/
D/DC1/SOHP.zkj9xk;Zk/NUL1//SOHP.9xkjZk/NUL1/
D/DC1/SOHP.zkj9xk//SOHP.9xkjZk/NUL1/
This equation contains two relevant terms: P.9xkjZk/NUL1/denotes the probability
of existence conditioned on all measurements except the last one. It can be obtainedby predicting the probability of existence from the last time step to the current timeusing the Chapman-Kolmogorov equation:
P.9x
kjZk/NUL1/DX
9xk/NUL1P.9xkj9xk/NUL1//SOHP.9xk/NUL1jZk/NUL1/
The term P.9xk/NUL1jZk/NUL1/corresponds to the probab ility of existence from the
previous time step, which illustrates that this value can be calculated iterativelyfrom each time step to the next. The conditional probability P.9x
kj9xk/NUL1/describes
how likely it is that an existing object will persist or a new object will appearand is referred to as birth/persistence m odel. The far more relevant term, however,
is the existence likelihood P.z
kj9xk/. This term describes the expected sensor
measurements for both for the case of an existing as well as a nonexisting object. Itsusage depends on the selected data association strategy.
For a nearest neighbor association, the only relevant information is if a measure-
ment could be associated to a track or not, t hat is, a binary variable. This reduces
the existence likelihood to a probability di stribution consisting of four values (of
which only two are required due to the fact that probabilities sum up to unity). Therequired likelihoods are:
P.z
kD1j9xkD1/: This is the true positive rate of the sensor, that is, the
probability that the sensor will detect an existing object.170 R. Schubert and M. Obst
P.zkD1j9xkD0/: This is the false-positive rate of the sensor, that is, the
probability that the sensor w ill provide detections from locations without existing
objects.
Both quantities can be obtained by characterizing the sensor. If the true positive
rate is considered zero outside the ﬁeld of view, the fusion of several sensors with
partially overlapping observation areas can be implicitly handled by updating the
existence probability independently for each sensor. Both the true and the false-
positive rate may vary over the ﬁeld of view (for instance, the detection performance
of a radar may depend on the azimuth angl e due to its antenna characteristics).
In a system using PDA, the existence likelihood also depends on the true and
false-positive rate of the sensors, but also on the distance between the measurement
and the track. Further details can be found in [ 6].
7.2.1.4 Track Management
In MOT, a dedicated, application-speci ﬁc strategy to inject and discard track
hypotheses is required. A t ypical choice for the track initialization step is to
apply a data-driven regime where new track hypotheses are proposed based on
not associated sensor measurements afte r each sensor’s duty cycle. However, this
approach assumes that the information from the observed sensor data is sufﬁcient
to perform the full inverse transformation from the measurement domain to the
targeted system representation. If this requirement is not fulﬁlled (e.g., it is generally
not possible to derive information about the absolute velocity of a vehicle from a
radar measurement which only includes angle, range, and radial velocity) further
assumptions have to be made.
The same applies to the discarding strategy of already conﬁrmed object hypoth-
esis. Again, it depends on the targeted application and particular use case which
hypotheses are considered relevant and thus have to be kept and which can be safely
removed (e.g., in order to save computational resources).
7.2.2 Static Environments by Occupancy Grid Mapping
Whereas the modeling of dynamic environments as introduced in Sect. 2.1aims to
represent individual entities, occupancy grid mapping is a complementary approach
more suitable for arbitrary static environments which does not assume any type of
feature. The concept of grid mapping is to model the environment as an evenly
spaced two-dimensional grid2with a ﬁne-grained cell size. Each cell inside of
the grid comprises a binary random variable that represents the presence of an
2There are also other variants of grid implementations which consider more dimensions such as
the 4D grid [ 8].7 The Role of Multisensor Environmental Perception for Automated Driving 171
obstacle at that particular location. In order to estimate this occupancy from sensor
measurements, the individual cells are continuously updated by applying a discrete
Bayes ﬁlter algorithm similar to the existence estimation step in MOT of Sect. 2.1.
Thus, the occupancy grid can be considered a storage for spatially and temporally
distributed measurement data.
In contrast to dynamic environment modeling with MOT, which provides
conﬁrmed object hypotheses, the result of an occupancy grid can be efﬁciently
used to infer information about free space areas. This is in particular important for
decision-making and path planning of automated maneuvers.
Due to the lack of dynamic quantities in t he estimate, occupancy grids are
typically not well suited for dynamic environments. There are however, hybrid
approaches such as particle grids that are attempting to overcome this limitation
and to constitute an estimation approach fo r both static and dynamic environments
[7].
7.3 Challenges in Data Fusion
In the previous section, typical techniques for modeling dynamic and static environ-
ments for automated vehicles have been presented. The following section introduces
selected challenges which practitioners ma y encounter during the implementation of
data fusion systems for environmental perception.
7.3.1 Sensor Characterization
Sensor observations are a crucial input of every perception system. However, in
general, the sensors which are used to observe the environment have weaknesses.
First, not every measurement necessarily belongs to a real existing object. Those
false-positive measurements (whose number is time varying) have to be eliminated
during the tracking process. Vice versa, not every existing entity generates a
measurement at sensor cycle and thus lead s to a false negatives. In addition, the
measurements are disturbed by noise. Finally, sensors have a limited detection range
and ﬁnite resolution.
For the successful implementation and application of a multisensor data fusion
system such as MOT, a correct and realistic modeling of the previously mentioned
sensor properties is inevitable. In the following text, common techniques to derive
and specify these sensor properties are stated. Moreover, examples of sensor
mismodeling and their inﬂuence to the environmental model will be given:
Measurement noise : Random ﬂuctuations in measured signals are referred to
as measurement noise. They can be characterized by statistical parameters that
describe the average deviation of a sensor observation from the true value over172 R. Schubert and M. Obst
time. For example, for a radar system that measures angle, range, and range
rate, the measurement noise is usually given independently for each dimension
and described by a zero-mean Gaussian di stribution with appropriate variances.
Finally, the realization of a sensor observation and the knowledge of its behavior
is used by statistical ﬁltering such as Bayesian estimation in order to reduce the
uncertainty over time.
Usually, these parameters are either extracted from the sensor manual or
derived via empirical testing under cont rolled conditions. Although initial values
from a sensor manual are usually a good starting point, practice reveals that these
parameters need to be tested and validated carefully within the t arget scenario and
the utilized data fusion algorithm. In MOT, for example, the measurement noise
directly inﬂuences the pe rformance of the data associ ation step and the accuracy
of the estimated objects. If the measuremen t noise is set too small, the tracking
algorithm will not be able to generate stable object hypotheses (i.e., object with
constant track IDs). On the other hand, assuming a too conservative value for
the sensor noise limits the performance of the environmental model to represent
high-dynamic maneuvers.
Field of view : As the concept of MOT is based on object hypotheses (see
Sect. 2.1), the perception system naturally aims to predict whether and how a
particular object hypotheses will be measured by a sensor system. Generally,
speaking, a sensor observation is only expected inside the sensor’s ﬁeld of view
(FOV). Inside the FOV , a sensor observation might either correspond to a real
object (and thus conﬁrms its existence) or is considered clutter and should be
ignored. If a sensor observation is missing for a predicted object hypothesis, this
usually indicates that the hypothesis inside of the MOT is incorrect and should
be removed. Of course, this decision is not made at one particular time step but
derived over time. The time span necessary to make this decision directly depends
on the detection behavior of a sensor.
A typical conﬁguration in environmental perception for automated vehicles
is to have multiple perception sensors realizing a partially overlapping FOV in
order to increase robustness and ensure proper handover. It is worth mentioning
that the consistent performance of MOT is rather sensitive to the correct modeling
of the overlapping area. If sensor FOVs are modeled too optimistic (i.e., sensor
range is modeled to large), the MOT algorithm will consider nonexistent sensor
observations at the FOV border as potentially missed detection and thus propose
to delete the object hypothesis. This may lead to the unintuitive situation where
two sensors work against each other i nstead of conﬁrming a common object
hypothesis.
Detection behavior : Although the measurement noise already gives an indi-
cation of the quality of a sensor observation in terms of accuracy, it does not
include any information about the reliab ility of a sensor system. Similarly, while
the sensor’s FOV already gives a binary i ndication whether a sensor observation
can be expected at a particular position around the host vehicle or not, it does
not quantify the probability of detection in a statistical way. A straightforward7 The Role of Multisensor Environmental Perception for Automated Driving 173
approach is to quantify the probability whether a sensor will detect an object
given its existence inside of the FOV with a constant detection probability.
Given an exemplary high-reliable sensor which usually always detects objects
inside the FOV , already one missing detection might indicate that the object
hypotheses inside the perception is wrong and should be removed.
Although the assumption of a constant det ection probability yields reasonable
results for simple setups and scenarios, practical evaluation have shown that
most perception systems require a more sophisticated modeling of the detection
probability. A typical evolution in MOT modeling is to make the detection
probability dependent on the position inside of the sensor FOV . Again, empirical
evaluations may be used to derive these values.
Occlusion : In general, a particular sensor is able to detect an object inside
its FOV with a given detection probability, may it be constant or dynamically
derived from other parameters such as object position or weather conditions.
However, for a certain class of perception s ensors such as lidar, radar or imagery
the FOV may be temporarily impaired due to occlusion of other objects. In order
to consistently distinguish between the systematic outage caused by temporarily
occlusions and missing de tections according to the be havior described by the
detection probability, the sensor model needs to explicitly consider the position
and spatial extension of other track hypotheses. If an MOT implementation does
not consider occlusion, objects which are going to be occluded will be typically
instantly discarded from the track list and are consequently no longer part of
the environmental model. Proper occlusion handling is especially important for
advanced scenarios where communication-based information such as vehicle-to-
vehicle data is considered inside of the environmental perception.
7.3.2 Extended Objects
As previously mentioned in Sect. 2.1, MOT aims to estimate the time-varying
number and the characteristics of the dynamic road entities in the surveillance area
in an integrated manner. Current practical MOT implementations already consider
the fact that the sensor observations are i n general not perfect and thus are subject to
noise andfalse positives . Moreover, temporary outages—so called false negatives —
are typically treated by modeling with an appropriate sensor-speciﬁc detection
probability.
In addition, the core part of almost every MOT implementation, the data
association algorithm, typically assume s that each object generates not more than
one physical sensor detection. Basically this implies that the object to be tracked
is considered a point source that has one unique and ﬁxed reﬂection center.
The rationale behind that choice is to ensure an efﬁcient implementation with a
computational complexity that can be handled under real-time conditions.
However, not in all situations, this strong assumption is appropriate. For exam-
ple, Fig. 7.4illustrates a scenario where a remote vehicle generates three true174 R. Schubert and M. Obst
Fig. 7.4 In extended object tracking, an entity may generate more than one detection
observations on the rear bumper which is directly observable by the front-looking
perception sensor of the host vehicle. Apparently, whether an object generates
more than one true sensor observations directly depends on the sensor resolution
and the dimensions of the object under observation. By taking into account that
the performance of modern perception sen sors constantly increases, the issue
of multiple detections per object becomes more relevant for future applications.
Moreover, automated systems are going to target denser environments such as urban
areas where the average distance to other road users is lower, and thus the number
of detections per object increases as well.
A straightforward approach in practical systems to address the challenge of
multiple detections per object is to introduc e a dedicated detector stage between the
sensor interface and the perception layer. Typically a clustering approach is chosen
which reﬁnes multiple observations of an extended object from one epoch to one
particular object measurement. By that approach, the point source assumption is
kept, and the usual data association algorithms can be applied. However, one major
drawback of non-statistical methods such as clustering for object extraction is the
still unsolved question of the consistent handling of measurement uncertainties and
false-positive phenomena. In addition, the introduction of an explicit detection stage
makes it nearly impossible to reverse that decisions once they are made using the
shown approaches.
7.3.3 Track Initialization
The basic concept of MOT is to improve the reliability of the state estimate
as well as the conﬁdence on the existence of a track by iteratively updating it
using measurements from several subse quent time steps. As described in Sect. 3,
the main challenge for steady-state tracks is data association. However, another
signiﬁcant step that can have a crucial impact on the track ing performance is track
initialization . Track initialization is required if new object hypotheses (tracks) are7 The Role of Multisensor Environmental Perception for Automated Driving 175
created based on sensor data that is unlik ely to be generated from existing tracks.
Initialization of a track means to derive a ﬁrst-state estimate from a single-sensor
detection. If the quality of this initialization is insufﬁcient, the track will most likely
not be associated to measurements from subsequent time steps. This, in turn, will
prevent a steady-state tracking and lead to a repeated creation and deletion of tracks
representing the same physical object. In particular for applications where the time
to conﬁrm an object is particularly short (e.g., automatic emergency braking), such
an effect can lead to severe functional failures.
The main challenge in track initializatio n is to ﬁnd initial values for nonobserv-
able quantities, mainly velocity and heading. The difﬁculty of this step substantially
depends on the sensors and the scenarios in which the perception system shall be
applied. This shall be discussed on two examples.
Cameras and lidars are capable of providing position measurements of relevant
objects. They are not capable of directly measuring velocities. A radar, however,
can measure velocities but only in radial direction. This means that the velocities of
objects in front of the ego vehicle can be directly measured by the radar, while the
longitudinal velocities of objects movin g on one side of the ego vehicle cannot.
The heading angle of an object cannot directly be measured.3The variability of
this quantity, however, depends on the scenario. In a highway scenario, it can be
appropriate to initialize objects to travel in the same direction as the host vehicle. In
urban environments like intersections, however, this assumption is not valid. Instead,
objects may move in arbitrary directions.
A common way to handle initialization ambiguities is to use multiple initializa-
tion hypotheses. In later time steps, those hypotheses can be evaluated using their ﬁt
to the additional sensor data available at that time. However, this approach requires
a rigorous handling of existence probabilities in order to avoid violations of the
system’s integrity in terms of correctly determining the conﬁdence on the existence
of an object.
7.3.4 Asynchronous Sensors and Out-of-Sequence Processing
One challenge in data fusion is the combination of independent measurements from
multiple sensors to get a more accurate and reliable estimate of the environment.
In general, sensors provide measurements in ﬁxed time intervals. However, they are
usually not synchronized with a common clock, and thus it is rather likely that the
measurements are asynchronously arriving at the data fusion. Especially in dynamic
environments, a synchronization strategy is needed as otherwise the true state of an
object might have changed between the sensor observations. By using Bayesian
ﬁltering, as proposed in Sect. 2, measurement synchronization is naturally included
by applying the prediction step of the system model.
3Save by high-resolution sensors such as lidars in close distances as a result of a clustering process.176 R. Schubert and M. Obst
Furthermore, the data fusion of several heterogeneous sensor systems raises
the problem of correctly reordering the i ndividual observations according to their
time of validity. This problem commonly referred to out-of-sequence measurements
(OOSMs) arises mainly due to different inherent sensor latencies [ 11]. In general,
sensor latencies comprise acquisition time due to the measurement principle,
processing time inside of the sensor, as well as the time required for communication
toward the perception system. The laten cies can also be classiﬁed to be either
deterministic or nondeterministic. If these latencies are not properly handled inside
of the multisensor fusion, the original order of the measurements is lost. Exemplarily
sensor latencies of radar-based perception sensors are in the range of 80–200 ms
[8].
However, a typical Bayes ﬁlter as used in MOT relies on the arrival of data in
the correct chronological order and will therefore generate corrupted estimation
results under an OOSM scenario without proper handling. Especially scenarios with
high dynamics such as vehicle tracking (e.g., automatic emergency braking) are
vulnerable to this problem.
Although there are several potential approaches with different levels of com-
plexity to handle OOSMs, it is usually not obvious which technique should be
implemented in a particular MOT application. A straightforward solution which
gives reasonable results when the variance of the latencies among the perception
sensors is rather low is to completely ignore the latency while slightly increasing
the modeled measurement noise of the sensors. The rationale behind that approach
is to transform the error in the time domain into the measurement domain. Other,
more complex approaches, either aim to p erform an extrapolation of the sensor
measurements [ 9] or directly try to apply dedicated OOSM strategies such as
retrodiction to include the measurements inside of the multisensor data fusion
according to their corr ect time of validity [ 10].
7.4 Implementation Workﬂows and Paradigms
for Perception
In the previous sections, the core algorith ms as well as selected challenges of envi-
ronmental perception systems have been pr esented. In this section, these contents
shall be mapped on state-of-practice des ign paradigms and t ool-based workﬂows
that support the implementation process. This includes the implementation and
conﬁguration of perception software modules and their validation.
7.4.1 Design Paradigms for Perception Software
The straightforward approach for implementing a software component for envi-
ronmental perception is to apply one of the commonly used models for system7 The Role of Multisensor Environmental Perception for Automated Driving 177
design in the automotive area (such as the V-model) and to start the software
implementation based on previously deﬁned requirements. This implies using asoftware development environment that is suitable for embedded systems as theﬁnal software is supposed to be executed in an electronic control unit (ECU) of avehicle.
While this approach is well suited for other parts of automotive software, it
displays signiﬁcant disadvantages for the implementation of environmental percep-
tion software. The reasons for this can be found in the challenges described in theprevious section: Due to the variability of environmental perception with respectto sensors and scenarios, it is rather challenging to specify the utilized algorithmsin advance. Starting the implementation i mmediately from the speciﬁcation bears
the risk of either failing to comply with those requirements or using an algorithmicconﬁguration that is signiﬁcantly more complex than required and, thus, wastingcomputational resources in the ﬁnal system. Due to the lack of applicability ofmodern software design patterns to embedded software, also the reusability of suchsoftware for future systems is limited.
For these reasons, the most commonly used design paradigm is an iterative
approach that is based on an early prototype of the system which is continuously
tested and improved to reﬁne the system requirements. The advantages of thisapproach are the higher development speed (due to the usage of a non-embeddedenvironment) as well as the better extendibility and reusability of the implementedsoftware. This paradigm, however, can be further divided: One common optionis to implement the software prototype by manual coding. The sole advantageof this approach is the usage of a non-embedded programming language. Asecond approach is to use model-based paradigms building on predeﬁned librariesand architectural models. This approach yields a signiﬁcan t acceleration of the
development process, as it provides a wide range of pre-implemented algorithmsand models. The transition to the series code can be done using automatic codegenerators, which makes the manual codi ng of embedded software obsolete. In
addition to the advantages in development speed, automatic code generation isalso widely accepted to provide safer c ode as typical manual coding errors can be
avoided. The disadvantage is that (given sufﬁcient efforts) manual embedded codetypically can be more optimized for particular platforms and applications than auto-
generated code.
Model-based design using auto-generat ed code is a well-established design
paradigm for many automotive software components (for instance, engine ECU orcontroller design). The basis of this paradigm is the assumption that the softwarefollows a domain-speciﬁc architecture and, thus, can be modeled in a uniﬁed wayusing a predeﬁned set of building blocks. While this is true for many applications,the process of deﬁning a standardized model for environmental perception is stillongoing. As of today, a major part of environmental perception algorithms can bemodeled in a uniﬁed way; however, there are other parts that need to be adapted tothe sensor conﬁguration or the scenario, respectively.
In addition, classical model-based design tools are designed for signal-oriented
systems and allow for handling and processing a set of scalar signals. The input of178 R. Schubert and M. Obst
Algorithm LayerEnvironmental perception software
Interfaces
State 
estimationInterfaces Interfaces
Provided by library,
extendible/replacable by userAdditional user-code can b e added anywhere in the modelInterfaces
User-coded detection modelInterfaces
User-coded track initialiationSensor/Scenario
LayerInterfaces defined,
contents to be written by user
Interfaces
Existence
estimationInterfaces
Data 
AssociationTrack 
ManagementMeasurement 
Model
Fig. 7.5 Hybrid design paradigm combining model-based and coding-based aspects
Table 7.3 Comparison of design paradigms for perception software
Design paradigm
 Transition to series system
 Development time
 Flexibility
Direct ECU implementation
 Not necessary
 Long
 None
Coding-based prototyping
 Manual re-implementation
 Long
 Low
Model-based prototyping
 Template-based code generation
 Short
 Medium
Hybrid prototyping
 Generic code generation
 Short
 High
perception systems, however, is typically more complex. Data types to be processed
include object lists of variable length, point clouds, or images. The usage of signal-
oriented tools for the processing of such data makes the design process particularly
complex.
Based on these two limitations of current model-based design paradigms, an
additional workﬂow is increasingly being used. This paradigm is referred to as
hybrid prototyping in this chapter, as it combines characteristics of model-based
and coding-based prototyping. The concep t of hybrid prototyping is illustrated in
Fig.7.5: On the one hand, this paradigm assume s that the key algorithms described
in Sect. 2are provided by a perception library in the numerous available variants.
By deﬁning a generic architecture of environmental perception, such a library can
be used to conﬁgure the algorithmic layer.
In a second layer (called the sensor and scenario layer), the variants are too
numerous to be covered by one generic m odel. Thus, standardized interfaces can
be deﬁned that allow the user to implement important parts of the perception,
such as the detection model and the track initialization, by adding his own code.
Finally, the user may add additional code anywhere in the model. This may
be necessary to handle special scenario conditions or to implement particular
processing prioritization strategies.
The application of this paradigm requires a code generator that is not restricted to
a limited set of models and templates, but facilitates a generic code generation from
both library-provided models and user code. Table 7.3summarizes the different
design paradigms discussed in this section.7 The Role of Multisensor Environmental Perception for Automated Driving 179
7.4.2 Software Environments for Testing and Validation
Testing and validating software typically requires feeding deﬁned input data,
executing the software, and comparing the results to the expected output. For envi-
ronmental perception systems, the dime nsionality of the input data is signiﬁcant.
In addition, data for particular scenarios and use cases are required for testing and
validation. Finally, the complexity of the system makes it particularly challenging
to identify error sources without a domain-speciﬁc data representation and the
calculation of dedicated key p erformance indicators (KPIs ). These characteristics
motivate the usage of domain-speciﬁc environments for implementing, debugging,
and testing environmental perception software systems. In the following, key
properties of such environments are discussed in order to provide guidelines for
the reader to select an appropriate environment:
Sensor interfaces : Testing perception software implies feeding it with data from
automotive perception sensors such as radars, cameras, or lidars. Multisensor
frameworks shall provide ready-to-use in terfaces to typical sensors and automo-
tive interfaces (including access to automotive bus systems). To facilitate the
usage of proprietary or prototypical sens ors, those sensor interfaces should be
extendible by the user.
Data synchronization : One key characteristic of perception systems is the usage
of asynchronous sensors with different update rates. While some perception
algorithms support an implicit data synchronization by predicting the state
estimate to the time of the data to be processes, other techniques require a
manual data synchronization. A testing environment should provide different
conﬁgurable ways to synchronize data and active processing components.
Data recording/replay : While tests and demonstrations in a vehicle in live (real-
time) conditions are useful, debugging and m anual validation requires different
modes of feeding data into the perception software. State-of-practice multisensor
environments facilitate the convenient recording of complex, timestamped data.
This facilitates a synchronous replay incl uding features such as pausing, single-
step processing, or the selection of particular scenes.
Interfaces to simulation software : Testing perception software requires sensor
data. However, sensors and test vehicles are not always available at the beginning
of a development process. Furthermore, not all scenarios can be safely tested in
a real environment. For this reason, simulation software4is available to allow for
deﬁning scenarios and run simulations. Most simulation tools facilitate closed-
loop test in which the result of a sensor data processing is fed back to modify
the behavior of the simulation. A testing environment for perception systems
should provide interfaces to common simula tion tools in order to facilitate virtual
validation.
4For instance, PreScan by TASS International or Carmaker by IPG180 R. Schubert and M. Obst
Fig. 7.6 Domain-speciﬁc data visualization supports the debugging of perception software
Visualization : Due to the complexity of perception systems, a domain-speciﬁc
data representation is required to reasonably debug the system and identify
errors. For manual debugging, a rich visualization is an invaluable tool for
analyzing the perception performance. Typical requirements to that end include
overlaying camera images with sensor data or perception results and visualizing
the complete trafﬁc scene in a top-down perspective. Figure 7.6illustrates this
notion on the example of a multisensor 360ıperception.
Interfaces to other domain-speciﬁc software : Parts of software for automated
vehicles are written in speciﬁc development environments, such as MATLAB
Simulink for controller design. Testing tools for perception software should
support interfaces to such environments in order to facilitate a uniﬁed testing
of perception and controller software.
Test automation : In addition to manual debugging, testing perception systems
typically requires the automated testing. This implies the automated processing
of huge amounts of recorded sensor data as well as the calculation of speciﬁc
KPIs. Testing environments should, thus, provide interfaces for external test
management tools to facilitate selection of data to be processed, parameterization
of components, and automated control of applications under test.
These requirements illustrate that the test and validation of environmental
perception software requires domain-speciﬁc tool support to facilitate an efﬁcient
process. Experiences from practice indicate that the tools available for this purpose
can contribute signiﬁcantly to the implementation of reliable perception software.7 The Role of Multisensor Environmental Perception for Automated Driving 181
7.5 Conclusions
The environmental model has been identiﬁed as a key component of automated
vehicles in this chapter. Typical algorithms for static and dynamic environments, in
particular multiple objects tracking, have been presented and discussed. In addition,
additional information from a practitioner’s perspective have been given:
On the one hand, it has been argued that there is no generic perception for all
sensor conﬁgurations and use cases, but rather a need for conﬁgurable perception
software. This conﬁguration needs to be based on the sensor conﬁguration and
the targeted use cases (which, in turn, inﬂuence the choice of appropriate algo-
rithms). Thus, one conclusion of this chapter is that, for automated driving, the
environmental model does not exist. Instead, we will most likely see a variety of
implementations.
On the other hand, it has been shown that a conﬁgurable perception requires
new design paradigms. Though classical manual coding or pure model-based design
are possible implementation approach es, a much higher design efﬁciency can be
achieved using state-of-the-art methodologies as presented in this chapter.
On the other hand, it has been shown that due to state-of-practice design
paradigms and tool-based workﬂows, the efﬁciency of the design process for this
software could be signiﬁcantly increased over the last years.
References
1. B. Khaleghi et al., Multisensor data fusion: A review of the state-of-the-art. Inf. Fusion 14(1),
28–44 (2013)
2. R. Schubert et al., Empirical evaluation of vehicular models for ego motion estimation, in
Intelligent Vehicles Symposium (IV), 2011 IEEE . IEEE (2011)
3. S. Thrun et al., Probabilistic Robotics (The MIT Press, Cambridge, 2005)
4. P.C. Mahalanobis, On the generalised distance in statistics. Proc. Natl. Inst. Sci. India 2(1),
49–55 (1936)
5. D. Musicki, R. Evans, Joint Integrated P robabilis tic Data Association—JIPDA , in Information
Fusion, 2002. Proceedings of the Fifth International Conference on, vol. 2, pp. 1120–1125,
8–11 Jul 2002
6. C. Adam, R. Schubert, G. Wanielik, Radar-based extended object tracking under clutter
using generalized probabilistic data association, in Intelligent Transportation Systems—
(ITSC), 2013 16th International IEEE Conference on, pp. 1408–1415, 6–9 Oct 2013. doi:
10.1109/ICIF.2002.1020938
7. R. Danescu, F. Oniga, S. Nedevschi, Modeling and tracking the driving environment with
a particle-based occupancy grid. Intell. Transp. Syst. IEEE Trans. 12(4), 1331–1342 (2011).
doi:10.1109/TITS.2011.2158097
8. C. Coué et al., Bayesian occupancy ﬁltering for multitarget tracking: An automotive applica-
tion. Int. J. Robot. Res. 25(1), 19–30 (2006)
9. M.M. Muntzinger et al., Reliable automotive pre-crash system with out-of-sequence measure-
ment processing, in Intelligent Vehicles Symposium (IV), 2010 IEEE . IEEE (2010)182 R. Schubert and M. Obst
10. A. Rauch et al., Car2x-based perception in a high-level fusion architecture for cooperative
perception systems. Intelligent Vehicles Symposium (IV), 2012 IEEE . IEEE (2012)
11. Y. Bar-Shalom, Update with out-of-sequence measurements in tracking: Exact solution.
Aerosp. Electron. Syst. IEEE Trans. 38(3), 769–777 (2002)Chapter 8
Galileo-Based Advanced Driver Assistance
Systems: Key Components and Development
Dirk Abel, Bassam Alrifaee, Frank-Josef Heßeler,
Matthias Hoppe, and Matthias Reiter
8.1 Introduction
Accompanying the introduction of the European navigation satellite system
“Galileo,” possibilities of Global Navigation Satellite Systems (GNSS) for
advanced applications in the ﬁeld of d river assistance systems are currently
discussed.
GNSS-based applications have gained in creasing relevance in the ﬁeld of modern
Advanced Driver Assistance Systems (AD AS), as they contribute to higher safety
and comfort in road trafﬁc. While classic driver assistance systems such as antilock
braking systems (ABS) and electronic sta bility control (ESC) use onboard sensors,
future ADAS developments take the environment into account. In this context, the
effective detection of stationary or moving vehicles in the environment is essential.
Classic driver assistance systems actively support the driver. Nevertheless,
current systems are restricted by the limite d detection range of the sensors employed
and are subject to varying environmental conditions. In this context, a signiﬁcant
improvement can be achieved by the additional use of GNSS in combination with
vehicle-to-vehicle (V2V) communication, to enable long range detection of the
environment.
The European navigation satellite system “Galileo” will have better integrity
and availability than current systems. In addition, it will offer improved position
accuracy. In this respect, GNSS-based ADAS are subject of current research at the
Institute of Automatic Control of RWTH Aachen University.
This chapter is structured as follows: Section 8.2gives an overview of the test
environment in use. Section 8.3presents an introduction into sensor data fusion of
Galileo and onboard sensors using Kalman ﬁlters. Subsequently, Sect. 8.4presents
D. Abel (/envelopeback)  B. Alrifaee  F.-J. Heßeler  M. Hoppe  M. Reiter
Institute of Automatic Contro l RWTH Aachen University, Steinbachstrasse 54, 52074 Aachen,
Germany
e-mail: D.Abel@irt.rwth-aachen.de
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_8183184 D. Abel et al.
two applications of Galileo in ADAS, a Cooperative Adaptive Cruise Control and a
Collision Avoidance System.
8.2 Test Environment Aldenhoven Testing Center
and automotiveGATE
For the testing of safety-relevant advan ced driver assistance systems, which can
inﬂuence the driving behavior of the vehicle, a dedicated automotive testing center
is a very important development component. Due to the fact that the automotive
manufacturers themselves operate most of the European automotive testing centers,
it is very difﬁcult for small and medium enterprises or research facilities to get
access to these testing centers. Furthermore, there exists no possibility to test GNSS-
based systems in real vehicles under cont rollable conditions. For these reasons,
RWTH Aachen University developed the id ea of a manufacturer-neutral automotive
testing center in combination with a Galileo testing environment.
The automotiveGATE consists of six terrestrial transmitting antennas, so-called
pseudolites. These pseudolites simulate the signals of the European satellite naviga-
tion system Galileo within the area of the Aldenhoven Testing Center. The precision
of position measurement is up to 0.8 m. The automotiveGATE offers the possibility
to test Galileo-based applications independently of the real Galileo satellites. The
signals of the automotiveGATE can be manipulated. It is, for example, possible
to investigate the inﬂuence of different levels of position accuracy on the newly
developed Galileo-based driver assistance systems. One additional advantage of this
center is that it allows for testing applications under preassigned and reproducible
conditions.
In Fig. 8.1, the different track elements of th e Aldenhoven Testing Center (ATC)
and the positions of the pseudolites of the automotiveGATE are depicted. The ATC
provides all necessary track elements for aut omotive tests. In detail, these are the
oval circuit, the handling track, the braking test track, the vehicle dynamics area,
the rough road, the hill section, and the highway. For example, the oval circuit has a
length of 2 km and the vehicle dynamics area has a diameter of 210 m. Especially,
the vehicle dynamics area is ideal for the testing of advanced driver assistance
systems, as it is possible to set up arbitrary trafﬁc scenarios.
The combination of the ATC and the automotiveGATE is unique and gives the
possibility to test not only standard driver assistance systems but also advanced
driver assistance systems, which use position, velocity, and time information (PVT)
of different road users unde r controllable conditions.
The automotiveGATE makes it possible to develop Galileo-based applications
before the satellite system is in full operation. The Aldenhoven Testing Center in
combination with the automotiveGATE provides ideal conditions for the devel-
opment of Galileo-based driver assistance systems, which are described in the
following sections.8 Galileo-Based Advanced Driver A ssistance Systems: Key Components ... 185
Fig. 8.1 The Aldenhoven Testing Center and automotiveGATE
8.3 Galileo-Based Sensor Fusion
In this chapter, certain fundamental char acteristics of Galileo-based (or more gen-
erally GNSS-based) driver assistance systems are described. Also, an introduction
is given on how these characteristics n eed to be considered when implementing
a GNSS-based control system. More speciﬁcally, aspects that will be addressed are
the update rates of typical GNSS sensors, delayed input data, and the need for sensor
fusion.
8.3.1 GNSS Characteristics
One aspect that almost inevitably needs to be addressed when using GNSS data
in control systems is the need for sensor fusion. Unlike other sensors used in
automotive control systems, a GNSS sen sor needs to be treated as unreliable.
Although the position of highly specia lized GNSS sensors can reach the order of
centimeters or even less, the achievable accuracy is highly situa tion-dependent. The
accuracy can degrade, for example, due to an insufﬁcient number of satellites in
view or multipath effects. Also, situations in which no or only imprecise GNSS
information is available are manifold, such as tunnel or car-park driving. Obstacles
along the road, especially high buildings (“urban canyon”), can also dramatically
reduce accuracy. Even in best conditions, a GNSS sensor is subject to a startup
acquisition time; therefore, one cannot rely on the signal to be readily available at
system start. Once in proper operations, two other aspects are very common for
GNSS sensors. For one, data is typically output at a relatively low sample rate of
approximately 5–10 Hz. Also, GNSS sensors need a certain computation time in
order to calculate a position from the acquired satellite signals. This time delay is
very often not negligible and can be on the order of tenths of a second.186 D. Abel et al.
8.3.2 Sensor Fusion
Sensor fusion is a very common and useful means in order to overcome restrictions
arising from the characteristics mentioned above. For this, the GNSS signal isaugmented using onboard sensors, such as accelerometers, gyroscopes, or wheelspeed sensors. These sensors are highly reliable and provide information at ahigh update rate. However, this informa tion is only incremental, such that no
absolute position can be calculated from onboard sensors alone. Also, due to errorintegration, navigation results based on onboard sensors alone are prone to drift. Ina typical sensor fusion implementation for navigation applications, GNSS data isused to provide an absolute position measurement whereas the onboard sensor datais used for “interpolation.” That way, higher update rates can be achieved. Also,the aforementioned sensor delay can be accounted for. Furthermore, it is possible toprovide valid position information for short outages of the GNSS sensor.
From an algorithmic point of view, a predictor–corrector structure is well suited
to implement sensor fusion tasks. For this, a dynamic model, e.g., in state spaceform, can be used. In the following, the indices kandk/NUL1are used to denote the
time step. For example, x
kandxk/NUL1denote the system states at time steps kandk/NUL1.
In analogy, uk/NUL1denotes the input at time step k/NUL1andykthe (measurement) output
at time step k.Ak/NUL1,Bk/NUL1;andCkdescribe the system dynamics as well as input and
output behavior; no feedthrough is considered:
xkDAk/NUL1xk/NUL1CBk/NUL1uk/NUL1
ykDCkxk(8.1)
The functionality of the predictor–corrector structure can be outlined as follows.
First, the model is used to predict the current state and outputs of the system basedon the state of the system at the last time step as well as on known inputs (predictionstep).
bx
/NUL
kDAk/NUL1bxC
k/NUL1CBk/NUL1uk/NUL1
by/NUL
kDCkbx/NUL
k(8.2)
Then, the outputs of the system model are compared to measured system outputs,
feeding back the difference in order to correct the estimated model state (correctionstep):
bx
C
kDbx/NUL
kCKk/NULeyk/NULby/NUL
k/SOH(8.3)
Here,eykdenotes the measured system outputs and Kkthe feedback gain for the
correction. Please note that the nomencl ature does not use the “actual” state xk.
Instead, an “estimated” state bxkis used. Furthermore, there is a distinction between
the estimated state bx/NUL
kand outputby/NUL
kbefore (“a-priori”) and the estimated state bxC
k
and outputbyC
kafter (“a-posteriori”) the most current measurement values have been
used to correct it.8 Galileo-Based Advanced Driver A ssistance Systems: Key Components ... 187
8.3.3 Kalman Filter, Extended Kalman Filter
Many methods and variations exist on how the actual prediction and correction steps
are implemented. Among the most popular methods are the Kalman Filter [ 1]a n d
an extension of it, the Extended Kalman Filter (EKF).
A Kalman ﬁlter does not only estimate the sy stem state itself but also keeps track
of the uncertainty of these estimates in form of an (estimated) covariance matrix Pk
of the system state:
PKDEh
.xk/NULbxk/.xk/NULbxk/Ti
(8.4)
PKdescribes the expected probability distribution of the estimation error. This
covariance increases ever y time a prediction is performed (as more insecurity is
introduced through the prediction) and drops every time a new measurement value
is used to correct the system state. A thorough introduction into Kalman ﬁltering
can be found in [ 2].
For the design of a Kalman Filter, a system as well as a measurement model of
the form
xkDAk/NUL1xk/NUL1CBk/NUL1uk/NUL1Cwk/NUL1
ykDCkxkCvk(8.5)
is used. Here, wk/NUL1andvkare white noise disturbances that are assumed to be acting
on the process and its measurement output. Their noise levels are quantiﬁed using
theProcess Noise Covariance Matrix Qkand the Measurement Noise Covariance
Matrix Rk:
E/NUL
wi;wT
j/SOH
D/SUBQk;iDj
0;i¤j(8.6)
E/NUL
vi;vT
j/SOH
D/SUBRk;iDj
0;i¤j(8.7)
The Kalman Filter Gain Kkto be used in the correction s tep of the ﬁlter according
to Eq. ( 8.3) is then given as
KkDP/NUL
kCT
k/NUL
CkP/NUL
kCT
kCRk/SOH/NUL1(8.8)
The update of the covariance estimation is performed as
P/NUL
kDAk/NUL1PC
k/NUL1AT
k/NUL1CQk/NUL1 (8.9)188 D. Abel et al.
and the correction as
PC
kD.I/NULKkCk/P/NUL
k (8.10)
Given the assumptions of a linear system and that the process and measurement
noise are correctly quantiﬁed using the white noise assumption, the Kalman ﬁlter is
an optimal iterative estimator. That means it is not possible to ﬁnd an iterative ﬁlter
that can provide a better approximation of the system state [ 3].
Of course, it is seldom possible to perfectly describe a practical system using
a linear model as described above. Furth ermore, often neither the white noise
assumption holds nor is it always possible to obtain a precise quantiﬁcation of
the disturbances. Still, this type of ﬁlter is very powerful and therefore used in
many applications. Many extensions and variants of the Kalman Filter and other
observer algorithms exist that use the predictor–corrector structure. For example,
the EKF uses a nonlinear model within the prediction step and a linearization of
it within the correction step [ 4], allowing to consider certain nonlinear systems.
Other ﬁlters, such as the Sigma Point ﬁlter [ 5], use a nonlinear model and a sampled
probability distribution to improve the cov ariance update when the system is subject
to nonlinearities.
8.3.4 Example: Simple 2D Case
In the following, an example of a model for the implementation of a simple ﬁlter
is used. The ﬁlter is based on measurem ents of the yaw rate, wheel speeds, and a
GNSS sensor. Despite being relatively simple, this ﬁlter can already be a substantial
improvement over using a raw GNSS signal.
A model widely used in vehicle dynamics is the two-track model (see Fig. 8.2).
Here, the vehicle is modeled as a rigid body with the four wheels attached to it.
The forces FX;xxandFY;xxacting on each tire are modeled through lateral and
longitudinal slip that arises from non-holonomous movement. This model is able
to consider effects in lateral dynamics such as over- and understeer as the vehicle
heading is uncoupled from the direction of movement of the center of gravity. For
applications that do not need to consider lateral dynamics in such detail, a simpler
model, such as the simpliﬁed Kinematic Single-Track Model (see Fig. 8.3), can
be sufﬁcient. Here, perfect holonomous movement is assumed; therefore kinetics
as well as tire slip are completely neglected . If the reference point (and therefore
ideally the mounting point of the GNSS receive r) is selected as the center of the rear
axle, its movement can be described as a circular motion.
The turning radius is determined by the vehicle length Land the steering angle ı:
RDL
tan.ı/(8.11)8 Galileo-Based Advanced Driver A ssistance Systems: Key Components ... 189
Fig. 8.2 Two-track model
Fig. 8.3 Simpliﬁed kinematic single-track model
The yaw rate P then results as
P DV
R(8.12)190 D. Abel et al.
If a small enough time step Tis assumed, even a stepwise linear movement can be
used to ﬁnally describe the model in a state space form:
xkC1D2
4X
Y
 3
5
kC1D2
4100
010
0013
5xkC2
4cos. //SOHT0
sin. //SOHT0
0 T3
5uk
ykD2
41
1
13
5xkwith xD2
4X
Y
 3
5and ukD"
V:
 #(8.13)
The velocity Vof the reference point can be taken as the mean speed of the
rear wheels whereas a measurement of the yaw rate can be obtained from a (bias-
compensated) inertial sensor.
Even if the application does not have high demands on the accuracy, it is
advisable to consider the time delay of the GNSS measurements. Although for
GNSS sensors, the time stamp of a measurement is known very precisely, it is only
available after a (varying) processing time, which can be on the order of tenths of
a second. If the measurements are simply used for state correction with no further
processing, the system state will be corrected using an up-to-date estimate of the
output and a measurement that is several time steps old. An intuitive but effective
possibility to handle the delay is to use a ring buffer to save the old system state
estimates as calculated by the ﬁlter. Then, when a new measurement becomes
available, the state estimate corresponding to the actual time of measurement can
be obtained from the buffer. More sophisticated approaches to handle the delay are
available, for example, as described in [ 6], where closer attention is paid to not only
consider the delayed measurement but al so to correctly propagate the covariance
estimates.
8.3.5 Example: 3D Case
In case of highly dynamic maneuvers, a simple single-track representation does not
capture the important dynamics of the vehicle. Thus, a more complex representation
has to be chosen.
For a complete description of the vehicle, the position, the velocity, and the
attitude of the vehicle have to be estimated in all three dimensions. An estimate can
be calculated using the signals provided by an inertial measurement unit (IMU). This
IMU uses three accelerometers and three gyroscopes to measure the accelerations
in x-, y-, and z-direction and the roll, pitch, and yaw angular rates. By integration of
these three accelerations and three rotational speeds, it is possible to predict position,
velocity, and orientation. This integration is able to provide calculation results at a
high data rate. However, the prediction is only accurate for a short time being prone
to drift.8 Galileo-Based Advanced Driver A ssistance Systems: Key Components ... 191
A GNSS receiver provides long-time stable position and velocity information but
at a low data rate. This information can be used to estimate the errors ıxresulting
from the integration of the IMU sensor dat a. Therefore, a Kalman ﬁlter in error state
space formulation is used. This ﬁlter estimates the error covariance matrix in the
prediction step and computes the estimation errors ıxonce a new measurement from
the GNSS is available. Besides the estimation of the error of position ıp, velocity
ıv, and attitude ı/SI, the bias of the accelerometers ıbaand gyroscopes ıb!can be
estimated in order to correct them online. All in all, the resulting model consists of
the 15 state variables
ıxD2
664ıxnıxeıxd„
ƒ‚
…
position error ıpTıvnıveıvd„
ƒ‚
…
velocity error ıvTı/RSı/DC2 ı „
ƒ‚
…
attitude error ı–T
ıba;xıba;yıba;z„
ƒ‚
…
accelerometer bias error ıbT
aıb!;xıb!;yıb!;z„
ƒ‚
…
gyroscope bias error ıbT
!3
775T (8.14)
Linearization of the model leads to a state space model in the form:
d
dt2
666664ıp
ıv
ı/SI
ıba
ıbw3
777775DF2
666664ıp
ıv
ı/SI
ıba
ıbw3
777775CG2
664na
n!
nba
nb!3
775(8.15)
with the process noise origin ating from accelerometer an d gyroscope measurements
(naandn!) and sensor biases ( nbaandnb!), respectively. The sensor biases are
assumed to follow a random walk process, leading to a zero-mean Gaussian white
noise distribution. The complete description of the linearized state space model is
omitted due to its complexity. For the complete mathematical description and the
derivation, the interested reader is referred to [ 7]o r[ 6].
8.4 Applications Examples
In the following, two examples for systems using of the ﬁlters and ﬁlter models
described in Sect. 8.3are presented. Both examples describe systems that use fused
data originating from a GNSS sensor and onboard sensors. Whereas in the ﬁrst
example (Cooperative Adaptive Cruise Control), the sensor fusion is based on the
simpler 2D case, the system in the second example (Collision Avoidance System) is
based on the 3D case.192 D. Abel et al.
8.4.1 Application 1: Cooperative Adaptive Cruise Control
A possible application of GNSS in ADAS is the extension of Adaptive Cruise
Control (ACC) systems for road vehicles to situations where the vehicles cannot
locate each other using only onboard sensor s. This can, for example, be driving
through tight corners and on hilly roads, wh ere radar- or lidar-based sensors reach
their geometric limitations or situations where vehicles located far ahead have to be
accounted for (e.g., at the end of a trafﬁc jam). This section describes an extension
of an ACC system to a GNSS- and Map-Based Cooperative Adaptive Cruise Control
(CACC) system for road vehicles. The CACC system implements a distance control
based on position data acquired from a GNSS sensor fused with onboard sensors,
a digital road map, and vehicle-to-vehicle (V2V) communication. The system is
validated in experiments.
Figure 8.4describes the principle structure of the CACC system. First, each
vehicle has to be located on a digital road map. Then, the leading vehicle provides
its position data to the following vehicle using V2V communication, enabling it to
determine the distance between both vehicles. Additionally, the CACC system uses
vehicle data from both the following and the leading vehicle. In the following, we
give an overview of the main components distance determination andcontroller
and show experimental results.
8.4.2 Distance Determinatio n Between Two Vehicles
In order to keep a reference distance betw een two vehicles, the actual distance
between them should be determined. However, the Euclidean distance between two
vehicles, which is easy to calculate, does not represent the real route distance in
between them. The route distance is the actual distance to be travelled on a road
network. Therefore, it is the relevant distance concerning the CACC system.
In order to use the map data, the vehicles ﬁrst need to ﬁnd the logical equivalent
of their measured, physical position on the map. It has to be determined on which
map segment and where within this segmen t the vehicle is located. This process is
called map matching. In [ 9], a map matching algorithm for application in GNSS-
based ADAS has been developed that is also applied here.
In the ﬁrst step of distance determination, the map is converted to a directed
line graph GD.V;E/. The vertices of the directed line graph represent the map
segments. Its edges contain the connection information of the map segments. Two
vertices are connected by an edge if thei r respective map segments are connected
and if it is possible to drive from the ﬁrst segment to the second. It is notpossible
to drive between two segments if the second segment represents a one-way road in
the opposite direction of travel. Each vertex has a cost value, which is assumed here
to be its length. The graph is saved in an adjacency matrix.
The shortest route distance between two vertices (map segments) can be deter-
mined by the generated directed line graph. This is done using the Dijkstra graph8 Galileo-Based Advanced Driver A ssistance Systems: Key Components ... 193
Fig. 8.4 Structure and main components of the CACC system [ 8]
search algorithm that solves the shortest path problem [ 10]. In addition, the Dijkstra
algorithm is modiﬁed to apply to directed line graphs and to fulﬁll the real time
requirements of the controller device. The returned cost from the Dijkstra algorithm
of the shortest path is the sum of all vertex costs on it. The route distance between
two vehicles is determined as
dmapDddijkstra /NULdfollower /NULdleader/NULlfollower
2/NULlleader
2(8.16)194 D. Abel et al.
where ddijkstra is the route distance computed by Dijkstra algorithm, dfollower is the
route distance between the current position of the following vehicle and the start
point of its map segment, dleader is the route distance between the current position of
the leading vehicle and the end point of its map segment, and lfollower lleader are the
following vehicle and leading vehicle length, respectively.
8.4.3 Design of the Distance Controller
The distance controller comput es a reference acceleration arefusing a cascaded
controller [ 11]. The inner loop controller is a pr oportional controller controlling
the velocity, and the outer loop controller is a proportional-integral controller with
disturbance feedback controlling the route distance. As the velocity error acts as
ramp disturbance on the controlled output dmap, the integral controller is required to
achieve steady-state offset-free tracking in the closed loop setup. The CACC system
keeps a reference route distance drefaccording to a constant time gap [ 12].
8.4.4 Experimental Results
The results are based on measurement d ata that has been recorded on the test
track (Aldenhoven Testing Center) using a V olkswagen Passat CC as the following
vehicle and a BMW 7 Series as the leading vehicle. The performance of the
proposed CACC system is evaluated using a sensor data fusion of radar and a camera
as a reference system in the following vehicle.
The distance determination is evaluat ed by comparing the GNSS- and map-based
route distance with the radar-based distance from the reference system on a straight
line (1st plot in Fig. 8.5). Thereby, the radar-based dist ance and relative velocity are
0 if no target object is selected. The 2nd plot shows the difference between several
measurement methods of the relative velocity /c129vDvleader /NULvfollower . Thereby,
/c129vwheel (the difference of the raw measurements of the mean wheel velocities)
delivers the best availability. Hence, it is used in the CACC system although its
accuracy is lower than /c129vGNSS (the difference of the raw values of the velocities
measured using GNSS).
To validate the CACC system, the following test scenario is chosen. The leading
vehicle initially drives with approximately constant velocity (as far as possible for
the driver), since the leading vehicle has no cruise control system. The driver of
the following vehicle tries to follow it as possible with the same initial velocity
and an initial route distance dmap>drefwithout control. The CACC system is
enabled at tD9s (5th plot). Subsequently, the fo llowing vehicle accelerates and
joins up to the leading vehicle keeping the reference route distance (3rd and 4th
plot). The reference route distance is computed using a time gap of 1:8sa n da n
additional safety distance of 5m. The experimental results show the applicability of8 Galileo-Based Advanced Driver A ssistance Systems: Key Components ... 195
Fig. 8.5 Experimental results [ 8]
the proposed CACC system. Note that the control could also be conducted at times
where geometric limitations did not allow for valid distance measurement using the
onboard sensors.
8.4.5 Application 2: Collision Avoidance System
The task of a Collision Avoid ance System (CAS) is to observe the surroundings of
the vehicle and to perform an autonomous emergency braking or evasion maneuver
in case of an imminent collision in order to avoid the collision or mitigate collision
damage. The emergency maneuver is started once it is clear that the driver does not
react appropriately in time. This leads to a n intervention of the system at the last
possible moment. Thus, the algorithm must be able to guide the vehicle around the
obstacle while driving at the vehicle handling limits.
A collision avoidance system can generally be divided into several different
components:
 Sensor fusion: In order to realize reliable collision avoidance, the position, the
velocity, and attitude of the ego-vehicle is needed. Since the evasion maneuver
will be highly dynamical, a 3D approach as described in Sect. 8.3.5 is needed.196 D. Abel et al.
 Environment recognition and collision detection: The CAS needs proper infor-
mation about the position of possible co llision targets in order to avoid them
reliably. One possibility to get that information is the use of environmental
sensors such as camera, LiDAR, or radar sensors. Another possibility is the
combination of GNSS systems with digital road maps and vehicle-to-vehicle
(V2V) communication; see [ 13,14]. The usage of such a combination can lead
to a signiﬁcant improvement of detection ranges.
 Maneuver coordination: Once a collision is imminent, the CAS needs to decide
on a possible maneuver to avoid the collision. This decision includes the choice
between braking and evading and the best time of a driver warning.
 Path/trajectory planning: For an evasion maneuver, a feasible and collision-free
evasion path has to be found.
 Vehicle Control: Once the evasion path is known, the task of the controller is the
longitudinal and lateral guidance along the evasion path.
In the following, it is assumed that a collision is imminent. It is further assumed
that an appropriate evasion path is computed in order to concentrate on the vehicle
control.
Since the evasion path is computed directly and is thus known, a model predictive
control scheme is chosen [ 15]. The main advantage of a model predictive controller
is that limitations from the actuator dynami cs and vehicle stability can directly be
taken into account. A model predictive controller uses a mathematical plant model
to predict the future outputs y/DLE
kCiˇˇˇk/DC1
;iD1;:::; Hpof the plant over a ﬁnite
prediction horizon Hp. The control inputs u/DLE
kCjˇˇˇk/DC1
;jD1;:::; Huare then
optimized over a ﬁnite control horizon Husuch that the deviation of the outputs
from a speciﬁed reference trajectory r/DLE
kCiˇˇˇk/DC1
;iD1;:::; Hpis minimized.
For the optimization, a quadratic cost function of the form
J.k/DHp/NUL1X
iD0/CR/CR/CRy.kCijk//NULr/DLE
kCiˇˇˇk/DC1/CR/CR/CR2
Q.i/CHu/NUL1X
iD0/CR/CR/CR/c129u/DLE
kCiˇˇˇk/DC1/CR/CR/CR2
R.i/(8.17)
is used, where Q.i/and R(i) penalize deviations of the control outputs from
the reference and changes in the control input, respectively. In this regard, the
notation.kCijk/indicates that the future value of a variable is predicted for
time kCiat time k. The minimization of the cost function gives a sequence
of optimal input steps /c129uopt/DLE
kˇˇˇk/DC1
;:::;/c129 uopt/DLE
kCHu/NUL1ˇˇˇk/DC1
. The control input
ukDuk/NUL1C/c129uopt/DLE
kˇˇˇk/DC1
is applied to the plant, and the optimization is repeated
with a shifted prediction horizon. This principle is called receding horizon.
In order to apply the predictive control scheme, an appropriate plant model for
the vehicle dynamics and the relative kinematics of the vehicle and the evasion path
is needed. Figure 8.6shows a principle sketch of the single-track model which is
used.8 Galileo-Based Advanced Driver A ssistance Systems: Key Components ... 197
Fig. 8.6 Free-body diagram of the employed prediction model [ 7]
All in all, the resulting nonlinear prediction model can be written in state space
representation as
:x.t/Df.x.t/;u.t/;z.t/;/DC2.t//
y.t/Dg.x.t//D/c129y(8.18)
In that model, the state vector
xTD/STX
vxvyP ı/c129  /c129 yd/c129Py/ETX
(8.19)
consists of the lateral and longitudinal velocity vxandvy, the yaw rate P , the actual
steering angle ı, the relative yaw angle between the vehicle’s center of gravity and
the evasion path /c129 , the lateral displacement /c129yfrom the evasion path, and the
lateral velocity disturbance d/c129Py. The control input uis the demanded steering angle
ıref. The path’s curvature kis assumed as a known disturbance value. Additionally,
an adaption parameter /DC2.t/is added to account for unknown changes in tire-road
contact.
Figure 8.7shows the control results for a double lane change maneuver. This
corresponds to the evasion of a standing obstacle in a scenario with oncoming trafﬁc.
The initial velocity of the vehicle is approximately 15:5 m=s.198 D. Abel et al.
Fig. 8.7 Experimental results for MPC (based on [ 7])
It is visible that the controller follows the evasion path well with a maximum
absolute lateral deviation of 0.33 m. Best control results were achieved with a
prediction horizon of about 1s and a control horizon of about 0:5s. Furthermore, a
sample time of 0:02 s is chosen. Simulations have shown that shorter horizons lead
to a degraded control performance which may even lead to stability problems for
very short horizons.
8.5 Conclusion
This contribution presented a test infrastructure that can be used to develop
Galileo-based Advanced Driver Assistance Systems. The infrastructure consists of
the Aldenhoven Testing Center (ATC) in combination with a pseudolite system
that provides a Galileo Test and Development Environment (automotive GATE ).
This infrastructure allows company-independent research on Galileo-based control
systems. An overview is given on characteristics that are imminent to GNSS-based
control systems and how some of the arisi ng issues, such as measurement delay and
low update rates, can be addressed using sensor fusion techniques.8 Galileo-Based Advanced Driver A ssistance Systems: Key Components ... 199
Then, implementations of two GNSS-based ADAS applications developed using
the presented infrastructure were presented. The ﬁrst system uses navigation datain combination with a digital road map as well as V2V communication in orderto extend the range and functionality of an Adaptive Cruise Control system. Thesecond system performs an emergency Collision Avoidance maneuver based onGNSS and inertial data.
Acknowledgement The presented research work has been performed within the projects “Galileo
above” and “GALILEO-basierte Assistenzsysteme.”
The project “Galileo above” i s sponsored by the Space Agency of the German Aerospace
Centre (DLR) with funding by the Federal Ministry of Economics and Technology, in compliancewith a resolution of the German Parliament (project/grant no. 50 NA 0902).
The project “GALILEO-basierte Assistenzsysteme” is funded by the Ministry of Economics,
Energy, Industry, and Small Business of the State of North Rhine-Westphalia and the EuropeanUnion with Financing of the European Regional Development Fund (ERDF).
The idea of a manufacturer neutral testing center (Aldenhoven Testing Center) was realized
with the help of the county of Düren and fundings by the State Government of North Rhine-Westphalia and the European Union. The idea of the Galileo testing center for automotiveapplications (automotiveGATE) was implemented within the aforementioned project “Galileo
above” by the funding of the DLR Space Administration with funds of the Federal Ministry
for Economic Affairs and Ener gy. Both facilitie s explicitly guarantee th e possibility to be used
especially by small and medium enterprises and research facilities. All other customers are alsowelcome.
References
1. R.E. Kalman, A new approach to linear ﬁltering and prediction problems. J. Basic Eng. 82(1),
34–45 (1960)
2. M.S. Grewal, A.P. Andrews, Kalman ﬁltering: Theory and Practice with MATLAB (Wiley,
Hoboken, NJ, 2014)
3. P.S. Maybeck, The Kalman ﬁlter: An introduction to concepts, in Autonomous Robot Vehicles ,
ed. by I.J. Cox, G.T. Wilfong (Springer, New York, 1990), pp. 194–204
4. H.W. Sorenson (ed.), Kalman Filtering: Theory and Application (IEEE Press, New York,
1985)
5. R. van Der Merwe, E.A. Wan, Sigma-Point Kalman Filters for Integrated Navigation, in
Proceedings of the 60th Annual Meeting of the Ins titute of Navigation (ION) , pp. 641–654,
2004
6. J. Wendel, Integrierte Navigationssysteme (Oldenbourg Verlag, Munchen, 2011)
7. A. Katriniok, Optimal Vehicle Dynamics Control and State Estimation for a Low-Cost GNSS-
based Collision Avoidance System, Ph.D. thesis, RWTH Aachen University, Aachen, Germany,2014
8. B. Alrifaee, M. Reiter, J. P. Maschuw, F. Christen, L. Eckstein, D. Abel. Sate llite- and Map-
based Long Range Cooperative Adaptive Cruise Control System for Road Vehicles, in AAC
2013, 7th IFAC Symposium on Advances in Automotive Control , pp. 732–737, Tokyo, Japan,
Sept 2013
9. M. Reiter, D. Abel, D. Gulyas, C. Schmidt. Konzept, Implementierung und Test eines
echtzeitfähigen Map-Matching-Algorithmus für Anwendungen in GNSS-basierten Fahreras-sistenzsystemen, in AUTOREG , 5, pp. 389–400, Baden-Baden, Nov 2011200 D. Abel et al.
10. E.W. Dijkstra, A note on two problems in connexion with graphs. Numerische Mathematik 1,
269–271 (1959)
11. R.C. Dorf, R.H. Bishop, Modern Control Systems , 9th edn. (Prentice-Hall, Upper Saddle River,
NJ, 2000)
12. R. Rajamani (ed.), Vehicle Dynamics and Control (Springer, New York, 2005)
13. R. Schubert, M. Schlingelhof, H. Cramer, G. Wa nielik, Accurate Positioning for Vehicular
Safety Applications—The SAFESPOT Approach, in IEEE Vehicular Technology Conference ,
pp. 2506–2510, 2007
14. P. Papadimitratos, A. La Fortelle, K. Evenssen, R. Brignolo, S. Cosenza, Vehicular com-
munication systems: Enabling technologies, app lications, and future outlook on intelligent
transportation. IEEE Commun. Mag. 47(11), 84–95 (2009)
15. J. Maciejowski, Predictive Control with Constraints (Prentice Hall, Harlow, 2002)Chapter 9
Digital Maps for Driving Assistance Systems
and Autonomous Driving
Alexandre Armand, Javier Iban ez-Guzman, and Clément Zinoune
9.1 Introduction
The use of digital maps in the form of on board vehicle navigation systems or in
mobile telephones has been widely deployed for in past years. Their use has become
part of current driving tasks, particularly for drivers unfamiliar with the roads lead-
ing to their destination. Digital maps store information on the road and its attributes;
further currently, vehicle connectivity m eans that geolocalized information can be
cascaded from multiple sources to drivers enhancing the information in them. Digi-
tal maps allow drivers to anticipate what will encounter as they drive, to form better
mental models with regard to their expectations and ultimate shape their intentions.
For example, it is possible to anticipate the arrival to a complex intersection or the
crossing of a sharp bend or a sudden change in vehicle speed limits.
After a slow start like with the adoption of radars for adaptive cruise control
(ACC) systems, the deployment of exteroceptive sensors on board passenger
vehicles has rapidly expanded over the past years. Vision-based ADAS systems
form part of the current offer in particular for the detection of lane markings,
vehicles and pedestrians. In Europe, the independent assessment of the safety level
available in passenger cars, Euro NCAP, has encouraged safety improvements in
new car designs and thus propelled the use of sensor-based safety systems on board
of European vehicles as proactive safety systems. Most of the current offer relies on
the use of video cameras, whose outputs are processed by purpose built processors
achieving results that were only found in research laboratories years back. The
output of perception systems are classiﬁed objects with their position and time
orientation is estimated with respect to the vehicle navigation frame. Whilst this
A. Armand (/envelopeback)  J. Ibanez-Guzman  C. Zinoune
Renault S.A.S., Technocentre de Guyancourt, Research Department, France
e-mail: alexandre.armand@renault.com
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_9201202 A. Armand et al.
is a major progress, due to the complexities found in using machine vision systems
in real time, challenges remain.
Perception systems are far from perfect. The presence of false positives and false
negatives leading to hazardous situations remain. This is being addressed through
the use of multi-sensor approaches and the fusion of their acquired information to
provide a better perceived world as well as increased interest on the use of a new
generation of active sensors like laser rangers or the application of convolution
network techniques for the classiﬁcation of video data. Nevertheless, once the
perceived world is classiﬁed and registered, the machines using this information for
decision-making (e.g. stop the vehicle or perform a collision avoidance manoeuvre)
need to make sense of this information.
Situation understanding is a major function prior to decision-making and the
lateral/longitudinal motion control of the vehicle. It is necessary to understand the
spatio-temporal relationship between th e perceived objects with respect to the road
network and the subject vehicle. However, making sense of the perceived object
without context is a difﬁcult task for a machine. For example, as the subject vehicle
arrives to an intersection, it needs to scan fo r vehicles likely to arrive perpendicular
to its path or those in front that might turn. Without contextual information, the
presence of vehicles around the intersection could be confusing to the machine and
likely lead to hazardous situations. By pro jecting the perceived objects on top of
a digital map, it can be inferred, e.g. how far a vehicle is from an intersection, or
who has priority at such an intersection b y reading the road attributes associated
with it. Similarly, the presence of a pedestrian next to a road intersection or next to
a pedestrian crossing would lead to an interpretation that the pedestrian is likely to
cross in front of the vehicle, whilst without such information, the machine will only
know that there is a pedestrian close to its path.
The perceived objects are projected into segments of the stored maps in order to
facilitate the understanding of spatio-tem poral relationships between these objects,
road infrastructure and the subject vehicle. This information is then used to provide a
situation understanding and subsequently to infer decisions. Therefore, a local world
model is ﬁrst constructed by mapping the vehicle position on the digital navigation
map. This results in the extraction of a se gment where the perceived objects can be
projected on. This provides an instantaneous representation of the world.
The ﬁrst part of this chapter introduces a methodology to infer situation
understanding and thus to identify the likely interactions between perceived road
users and road features in order to estimate their impact on vehicle navigation.
Therefore, a framework for the structur ed representation of the data in terms of a
purpose built ontology is proposed. This is then used to assess risk as applied to
road intersections, information that is used to infer decisions on the action to take
at a road intersection. The principle is shown in Fig. 9.1. A major feature of this
approach is that the application is inferred from existing production sensors and that
the output can be either used to provide anticipatory information to drivers in the
case of ADAS systems or to the decision-making mechanisms in the case of highly
automated vehicles. The chapter includes results of the application of the approach
in an experimental vehicle evolving in public roads.9 Digital Maps for Driving Assistance Systems and Autonomous Driving 203
Fig. 9.1 Framework for inferring spatio-temporal situation understanding applicable to ADAS
systems and highly automated vehicles
The digital map is the underlying component in this process. It provides the
stored information that is exploited for contextualization and to infer situation
understanding. The source for these maps originates from map suppliers, the most
known being HERE (previously known as Navteq) and TOM TOM. Digital maps
have been built over the years from different sources including the use of purpose
built surveying cars that will collect road information from laser rangers, video
cameras and vehicle position estimates. That is, digital maps can be regarded as a
patchwork of maps originating from various sources. Their precision and resolution
varies and thus not only road attribute errors but also geometric errors exist. This
can represent several metres in relative terms between the links and nodes but larger
errors in absolute terms, that is with respect to the world reference frame like the
WGS84. Another error could reside on the road structure itself, that is maps are not
up-to-date as the road structure would have changed, for example, the incorporation
of a roundabout replacing a road intersection. If the maps are wrong, the approach
proposed in the ﬁrst part of this chapter will not be applicable, the inference of
situations will be made based on the wrong assumptions which shall lead to errors,
and eventually hazardous situations. The second part of this chapter proposes a
framework that enables the detection of faults in the geometry of navigation maps
through the use of standard vehicle proprioceptive sensors plus GNSS receivers. A
particular feature of the described approach is that it can solve the ambiguity that
could arise due to the presence of errors in the localization systems. That is when
an spacial error occurs, this can be either from errors in the map geometry but it
can also originate due to errors in the position estimates. Whilst in the ﬁrst run, the
framework can indicate that an error exists, its origins on whether this originates at
the map or the position estimate is not know, however, once the vehicle crosses again
the same area, the framework can discern that the error is a map geometric error or
a position estimate. This approach can be possible as most driving journeys are
repetitive, and thus vehicles will drive over similar paths often as when commuting
from home and the work place in a daily manner. The different algorithms applied
to implement the fault detection are included as well as results of trials performed
using data collected from public roads.204 A. Armand et al.
9.2 Ontology-Based Situation Understanding
9.2.1 Ontologies
Ontologies are an essential concept for sema ntic-based approach es and are therefore
introduced ﬁrst.
The term ontology was ﬁrst used by philosophers to designate the study of
being of existence. It has been adopted by researchers in ar tiﬁcial intelligence
from the beginning to design computational models for automated reasoning [ 11].
The most famous deﬁnition describes an ontology as ‘an explicit speciﬁcation of
conceptualization ’[9]. The conceptualization of a domain is the manner how a
domain is perceived and understood, and the speciﬁcation of this conceptualization
is actually a formal description of this conceptualization.
More concretely, an ontology is a description of the concepts and relationships
that are relevant to model a domain of interest. It speciﬁes the vocabulary that is
necessary to make assertions, and which may be inputs/outputs of knowledge agents
(e.g. software, etc.). Moreover, it provides the language for communication between
agents [ 10]. Figure 9.2a illustrates this deﬁnition.
Agent A
Ontology
Agent BExchanges between 2
agents, performed with
common knowledge and
language.
The ontology provides
a common knowledge
and language
ONTOLOGY
TERMINOLOGICAL
BOX
Prior Knowledge
=
Definition of conceptsASSERTIONAL
BOX
Observations
=
Instances of concepts
Fig. 9.2 Ontology. ( a) Ontology used by agents (e.g. software) for communication. ( b) Structure
of an ontology-based on Description Logic9 Digital Maps for Driving Assistance Systems and Autonomous Driving 205
Ontologies are based on Description Logics (DL) which is a formal language
for knowledge representation [ 3]. A DL enables to model Concepts, Roles and
Individuals through its two functional parts, the Terminological Box (TBox) and
the Assertional Box (ABox). Figure 9.2b illustrates this structure.
The TBox consists of the deﬁnition of all the concepts that the ontology aims to
describe. An analogy can be done between the TBox and the knowledge that human
have. The knowledge that humans acquire along their life is used to understand
and to interpret the world. The ontology TBox represents prior knowledge, and the
deﬁnition of it is performed through the deﬁ nition of Concepts, Roles and Relations.
The following deﬁnitions were established after [ 13]:
Concepts (or classes) are concrete representations of the concepts of the domain
that the ontology aims to describe. These concepts can be organized into a
superclass–subclass hierarchy, which is generally called Taxonomy .
Roles are properties which can be deﬁned and assigned to concepts. Roles can be
classiﬁed into two groups:
–Object Properties aim to deﬁne axioms in the form of Triples .I no t h e r
words, they are binary relationships between two concepts in the form
Concept1—Object Property—Concept2 . Characteristics may be attributed to
object properties, such as symmetry or transitivity with respect to other object
properties.
–Data Properties are used to assign properties to single classes or instances of
classes in the form Concept1—Data Property —Property Value .
Relations between concepts are deﬁned with taxonomic relations (hierarchical
relations), axioms (classes linked by object properties) and rules. The deﬁnition
of rules can be done using basic description logic axioms which only enables
the deﬁnition of basic class equivalence. More sophisticated languages enable to
deﬁne more complex and expressive rules. Among these languages, the Semantic
Web Rule Language (SWRL) is one of the most common [ 14].
The ABox consists of the deﬁnition of instances of classes previously deﬁned
in the TBox. These instances, commonly called Individuals , represent real life data
that the ontology aims to interpret. Again, an analogy may be done with humans
as the ABox can represent objects that humans observe and understand because of
prior knowledge (TBox). Further, in the same way as properties can be attributed
to concepts deﬁned in the TBox, Object an d Data Properties can be attributed to
individuals deﬁned in the ABox.
The main advantage of ontologies is the possibility to reason on knowledge using
Reasoners . Reasoners are pieces of software able to infer logical consequences from
a set of asserted facts or axioms [ 1]. In other words, they aim to exploit information
stored in the TBox in order to infer new information and knowledge which is not
speciﬁcally expressed about Individuals deﬁned in the ABox.
The reasoning methodology refers to the algorithm that is used for the reasoning
task (e.g. tableau-based or hypertableau algorithms [ 23,35]). The methodology has
a signiﬁcant inﬂuence on computational efforts required for reasoning. Performance206 A. Armand et al.
of a reasoner also includes the soundness and completeness which is the capability
to correctly perform all inferences which should be done in theory.
9.2.2 Situation Understanding
Three terms are generally used when talking about situation understanding: Scene ,
Situation and Scenario . The meaning of each of these terms in the context of
intelligent vehicles is rather vague and deﬁnitions are often contradicting. Geyer
et al. formally deﬁned the meaning of the se terms in the context of assisted and
automated driving guidance [ 7] as shown in Fig. 9.3. The deﬁnitions are rather
abstract and have been interpreted with re spect to the problems addressed in this
article:
A scene is a snapshot of a collection of cohabiting road entities, including the
subject vehicle and the surrounding st atic and dynamic entities. Each entity is
deﬁned by its type and state. A scene can therefore be represented by all data
returned by the data sources.
A situation is the scene as it has to be understood by a particular dynamic
entity of this scene (i.e. the subject vehicle). This consists in understanding how
the interactions between all entities of the Scene are propagated to this entity
and constrain it in its navigation. Therefore, Situation understanding consists in
giving sense to a Scene.
A scenario is understood as a sequence of Scenes which is the consequence of
the Situation of all interacting road entities present in a primary Scene. In the
context of this thesis, predicting a Scenario consists in predicting the future state
of the participating entities in order to estimate the risks lead by the Situation.
Fig. 9.3 Relation between scene, situation and scenario9 Digital Maps for Driving Assistance Systems and Autonomous Driving 207
9.2.2.1 Methods for Situation Understanding
Situation understanding consists of reasoning on the scene representation, i.e.
adding meaning to the scene information. From the subject vehicles point of view
it means to infer how it is constrained by the surrounding environment. Two main
categories for situation understanding were identiﬁed: probabilis tic approaches and
semantic-based approaches.
Probabilistic Approach
Road situations are often highly complex due to the variability of situations, espe-
cially in urban environments. Vehicles are able to perceive plenty of surrounding
entities, however, most of these entities are not relevant. Platho et al. proposed
to decompose situations into ‘parts of situations’ or ‘conﬁgurations’ [ 25]. This
simpliﬁes the scene by considering only relevant entities. The notion of relationship
between road entities is introduced by, for ex ample, considering that the behaviour
of a perceived vehicle can be affected by a red trafﬁc light or by another vehicle
which has stopped. The recognition of conﬁgurations is performed through a
Bayesian Network. The approach was tested in simulated environments, and was
used to predict the velocity proﬁles of other road users in intersection situations [ 26].
However, the approach only allows to consider direct relationships between entities
but no chain reactions (e.g. if the subject ve hicle follows a vehic le that approaches
to a pedestrian, the interaction between the lead vehicle and the pedestrian is not
taken into account).
Probabilities allow to take into account un certainties on perception data, but so
far they can only be used to model basic situations based on scenes represented
with conventional methods. The amount of possible situations which may occur
makes it difﬁcult to deﬁne a generic probabilistic model which would be well suited
for all situations and which would be capable of considering interactions between
road entities. This may explain why litera ture does not propose other probabilistic
frameworks for situation understanding than the one presented above.
Semantic-Based Approaches
Semantic-based approaches do not only use semantics for description, but also
apply reasoning. Most of these approaches either use First-order Logics [ 36]o r
Description Logics [ 3] to describe concepts in ontol ogies. First, semantic-based
approaches were used to model and understand the road network from the point
of view of the subject vehicle. Later, they were also used to model and understand
the whole interaction between road network and dynamic entities.
One of the ﬁrst works exploiting DL for situation understanding was done
by Hummel et al. [ 17]. The proposed ontology introduces the concepts of road
networks (roads, lanes, dividers, road markings and junctions) and is used as a208 A. Armand et al.
complement of vision sensors and digital maps to retrieve relevant information about
intersections. For example, if the precision of the localization sensors is not able
to determine the current lane the vehicle is navigating on, this information can be
inferred by the ontology from map and camera data. Whilst this formalism does not
take into account cohabiting road entities (vehi cles, pedestrians, etc.), it shows that
ontologies can be used to reason, at least partially, on road situations.
The representation of road intersection networks through ontologies was intro-
duced by Regele [ 32]. It was used to solve the trafﬁc coordination problem of
autonomous vehicles, i.e. t o handle conﬂicts between vehicles reaching the same
intersection or cohabiting in the same area. This work inspired Hülsen et al. who
proposed a generic description of road intersections for situation understanding [ 16].
This ontology enables to infer conﬂicts and thus potential risk situations for vehicles
reaching the same intersection. Figure 9.4illustrates a sample representation of a
relationships. The framework was tested on several intersections and its efﬁciency
was proved even for very complex intersections. A real time implementation of the
framework in simulated environments was successfully performed [ 15]. In these
ontologies, vehicles and other road entities are not formally represented.
Vacek et al. [ 37] introduced an ontology-based representation of other road
entities. In that way, semantic information about road entitie s (i.e. types, etc.) were
deﬁned in an ontology which is used within a case-based reasoning framework
to perform scene understanding. The tenet was to recover similar or resembling
situations in order to infer the behaviour which seems to be the most appropriate
to negotiate the situation. Whilst the ontology allows to represent different types of
Fig. 9.4 Example of semantic representation of an intersection. After [ 16]9 Digital Maps for Driving Assistance Systems and Autonomous Driving 209
road entities, relationships between them are ignored, which ﬁnally prevents from
understanding the situation as a whole.
First-order probabilistic languages (FOPL) was used by Schamm et al. [ 34]
to perform situation assessment. A FOPL knowledge base was used to model
driving situations and interactions. This a priori knowledge is thus used with sensor
information to automatically create a probabilistic network and then to infer the
situation in a structured manner. Since all entities are conceptually of the same type,
interactions between entities of different types are not considered. Moreover, ﬁrst-
order logic suffers from poor expressivity, which therefore prevents from editing
complex rules in the knowledge base. Further, it seems difﬁcult to extend such a
system for more complex situations than those presented in [ 34].
Zhao et al. built a knowledge base which contains information about maps and
trafﬁc regulation. It is used within safety ADAS to take decision at road intersections
in case of over speed [ 39]. Three ontologies were deﬁned for this purpose. The
ﬁrst one aims to describe information which may be stored in a digital map, the
second aims to describe control strategies and the last one aims to describe vehicles.
Interactions between road entities are considered only between vehicles reaching
the same intersection, for the generation of collision warning.
An ontology that models trafﬁc scenes in order to establish the state space
of the subject vehicle with respect to other vehicles and the road network was
proposed by Kohlhaas et al. [ 19]. Two categories of objects are considered, namely
the environment objects (related to the road network) and the dynamic objects
(related to vehicles). The interactions between the vehicles and the road network
as well as the lateral and longitudinal int eractions between vehicles are formally
stated. Further, the ontology contains information about trafﬁc rules through deﬁned
conditions.
Finally, Pollard et al. proposed an ontology that represents features of the
road network, environmental conditions, sensors states, subject vehicle state and
presence of moving obstacles [ 27]. This ontology enables vehicles to perform self-
assessment on their automated driving capabilities, with the aim to decide on the
most appropriate automation level (from fully manual to fully automated).
Semantic-based appro aches enable to model road scenes and interactions
between entities as well as to reason in a straightforward manner on situations.
Their main limitation is the ir inability to take data uncer tainties into account. FOPL
enables to ﬁll this gap, however, it does not enable to model complex situations
because of the low expressivity of the language.
9.2.3 Framework for Ontology-Bas ed Situation Understanding
The developed ontology is part of an overall framework for situation understanding
shown in Fig. 9.5.210 A. Armand et al.
World
Model
Vehicles
Pedestrians
Intersections
Etc.InferencesABox
TBoxOntologyOntology
Reasoning
OWL
FileSituation Understanding
Perception
Digital Map
StateEnvironment
Subject VehicleObservations
Fig. 9.5 Exploitation of the ontology within a framework
The ontology presented here is not exhaustive and must be considered as a
draft that is used to conﬁrm the coherence of the approach. Further extensions and
optimizations are required for a real-world validation.
9.2.3.1 Observations
The ﬁrst prerequisite for the framework is information about surrounding entities.
This step is represented by the Observations box in Fig. 9.5. Two types of data
sources are considered for the awareness of the environment. Modern vehicle
sensors such as smart cameras, radars o r lasers allow for the real time perception
of moving entities. Most of them are able to perform classiﬁcation on the perceived
entities and provide an estimation of their state with respect to the subject vehicle
on which they are embedded. Further, digital maps can store and provide contextual
information about the road network features. For instance, this a priori information
can contain information about the coming road intersections, about coming pedes-
trian crossing, etc. Figure 9.6shows a sample situation as it may be perceived by a
vehicle.
9.2.3.2 World Model Principles
Information is provided in a piecemeal ma nner from different mostly independent
data sources. It is therefore necessary to organize this data as a list of surrounding
entities. This structured and organized list is called the World Model . Figure 9.7
provides a sample world model for the situation shown in Fig. 9.6.
The creation of this world model may require some preliminary processing on
perception data. One entity may be perceived by several sensors at the same time
or sensors may not be synchronized. For these purposes, data and sensor fusion
techniques have to be employed [ 20]. These problems are complex to solve and
today they remain a meaningful challenge for the data fusion community. Here,9 Digital Maps for Driving Assistance Systems and Autonomous Driving 211
124
3 78 9
56
Fig. 9.6 Example of perceived world. The perceived entities are given IDs
perception is considered as a black box performing sensor and data fusion on the
data returned by a set of perception sensors.
9.2.3.3 Situation Understanding
Situation understanding is based on the use of an ontology (see Fig. 9.5) consisting
of two fundamental parts, the TBox and the ABox.
The TBox consists of a conceptual description of the entities and contextual
objects which can be met by a ve hicle in a navigable space. In other words, it enables
to deﬁne the types of entities which can be met and the relationships and interactions
which are likely to exist between them. An analogy can be done with the knowledge
that drivers acquire when they learn driving at driving school, which is fundamental212 A. Armand et al.
# Type Information
1 Car Subject Vehicle
2 CarComing from the left
Turning right
3 Motor BikeSame lane
x meters ahead
4 TruckComing from the right
x meters before intersection
5 Pedestrian Crossing x meters ahead
6 Stop Intersection x meters ahead
7 Pedestrianx meters ahead
On left pavement
8 Pedestrianx meters ahead
On the road
9 Pedestrianx meters ahead
On right pavement
Fig. 9.7 World presented in Fig. 9.6in the form of World Model table
to makes them able to understand situati ons. The TBox is the permanent part of the
ontology and was developed with respect to the Description Logic speciﬁcations.
The focus of this ontology is only on situations which can be represented in one-
dimensional space (i.e. road entities on the same navigation lane).
The ABox can be considered as the conversion of the World Model into
the ontology language. For each entity in the World Model an instance of the
corresponding concept is created. The ABox is the changing part of the ontology
and is updated at each update of the World Model . After each update of the ABox,
reasoning can be performed on the whole ontology in order to give more sense to the
data. More precisely, it means to take into consideration the interactions which are
likely to exist between the entities and also chain reactions which may happen as a
consequence of these interactions. The purpose is to infer a high level interpretation
of the perceived situation in order to select the risk assessment algorithms which
suit the situation best.
TBox
Figure 9.8shows the taxonomy which deﬁnes the ontology. It is described in the
following:
T h e Context entity aims to list and classify the road entities which may be met in a
driving space. Road entities were classiﬁed into two sub-concepts, Mobile Entity
andStatic Entity . Information about a mobile entity (i .e. pedestrians and vehicles)9 Digital Maps for Driving Assistance Systems and Autonomous Driving 213
ConceptContext Entity
Context Parameter
Inputs for ADASMobile Entity
Static EntityPedestrianVehicleCar
Truck
Bike
Road Infrastructure
Road IntersectionPedestrian Crossing
Speed Bumper
Stop Intersection
Right of Way Intersection
GiveWay IntersectionParameter
Parameter
Parameter
Stop Intersection
PedestrianStop Intersection ahead
Stop Intersection before 1 leader
Stop Intersection before several leaders
Pedestrian ahead
Pedestrian before 1 leader
Pedestrian before  several leaders
Object Property Data PropertygoesTowards
hasToDecelerate
hasToStop
isCloseTo
isFollowing
isToReach
willDecelerate
willReach
willStopdistanceToSubjectVehicle
hasValue
isOnRoad1
2 3
Fig. 9.8 Ontology concepts, object properties and data properties
cannot be a-priori known. This information has to be obtained in real time from
perception sensors. Static entities are assumed to be part of the road network.
Their presence is perfectly predictable and can be stored in digital maps. The
presented ontology represents two types of static entities: Road Infrastructures
which effect the behaviour of vehicles such as speed bumpers and pedestrian
crossings and Road Intersections (classiﬁed into three categories: “Stop”, “Right
of Way” and “Giveway Intersections”).
The Context Parameter aims to deﬁne spatio-temporal thresholds which
allow to decide whether interactions between two entities are likely to exist. To
illustrate the IsFollowing Parameter , lets imagine two vehicles (the leader and
the follower) navigating at the same speed, on the same road, and in the same
direction. If the two vehicles are sep arated by 90 m, the interaction between
them depends on their speed. If they are moving at 30 km/h, the leader is 6 s
ahead of the follower, so it may be cons idered that there i s no interaction
between them. However, if they are moving at 90 km/h, the leader is only 2 s
ahead. It can therefore be considered that interaction between the two vehicles
is established. The IsFollowing Parameter allows to set the threshold in the
form of time duration which enables to consider if a vehicle is following another
one. Following the same logic, the IsClose Parameter and the IsT oReach214 A. Armand et al.
Parameter are also deﬁned. Numerical valu es are given to these concepts
through Data Properties.
TheInputs for ADAS is presented in the red shaded area in Fig. 9.8.I ta i m st o
store concepts which describe the situation of vehicles. Further, these concepts
are guidelines for embedded risk assessment systems as they state which entities
and which associations of entities are pertinent to be monitored to ensure safety.
The purpose is to infer class equivalences on the subject vehicle in order to
choose the most suitable risk assessment algorithm for the current situation.
Object properties aim to deﬁne the relationshi ps and interactions which may
happen between two concepts of Context Entities . The state of a mobile entity
with respect to another one can be described through the goesT oward s,isClos-
eT o,isT oReach and isFollowing properties .Further, near future behaviours
are deﬁned through the isT oReach ,willDecelerate and willReach properties.
Finally, expected behaviours are deﬁned through the hasT oStop and hasT oDe-
celerate properties. These object properties will be used within inferred triples
such as Car - goesT owards -Stop Intersection ,orPedestrian -isCloseT o
-Pedestrian Crossing .
Data Properties aim to assign properties to individuals which will be deﬁned in
the ontology ABox.
All individuals which will be deﬁned in the ontology ABox have to be deﬁned
with their position in the scene. For this purpose, a reference frame had to be
chosen. As most observations are perfo rmed with respect to the subject vehicle,
it was chosen as the reference frame. Furth er, since the world is represented in
one dimension in the ontology, the positions of entities with respect to the subject
vehicle are deﬁned as curvilinear abscissas along the road (in the same manner as
the position of static entities are deﬁned in the Electronic Horizon). In that way,
the property distanceT oSubjectVehicle was created, which expects arguments
as numerical values.
Further, some entities such as pedestrians can be either on the road or on
the pavement. For a vehicle this information is important in order to decide if the
entity has to be considered. Therefore, the boolean parameter isOnRoad enables
to deﬁne in the ontology whether a pedestrian is on the road.
Finally, the Context Parameter concepts require to be set. For this purpose
the numerical data parameter hasValue was created.
Relations aim to provide a priori knowledge about road entity concepts and their
potential interactions and to extract the m ost relevant features of the situation.
Relations consist of axioms aiming to affect object properties to the individuals
which are stored in the ontology ABox.
Relations were created in two steps. In the ﬁrst step, axioms which enable to infer
the likely interactions between the road entities stored in the ABox are deﬁned. Most
of this axioms require an expressiveness which cannot be provided by a Description
Logic language. Therefore SWRL rules have been chosen for this purpose. The
second step adds additional axioms to exploi t the interactions which were inferred
during the ﬁrst step and thus to extract for a ll vehicles the most relevant features9 Digital Maps for Driving Assistance Systems and Autonomous Driving 215
Table 9.1 Example of 3 SWRL rules edited in the ontology
#
 SWRL rules
 Meaning
1
 vehicle(?v1) ^vehicle(?v2)
^distanceToSubjectVehicle (?v1,?d1)
^distanceToSubjectVehicle (?v2,?d2)
^subtract (?sub ,?d 2,?d1)
^isFollowingParameter(?fParam)
^hasValue (? f ,? fParam )
^lessThan (?sub ,? f )
! isFollowing(?v2,?v1)
The position d1and d2of the
vehicles v1and v2are known
thanks to the distanceToSubjectVe-
hicle parameter. By performing a
subtraction (line 4), it is possible to
determine the distance subbetween
both vehicles. By comparing this
distance with the threshold of the
isFollowingParameter (line 7), it is
determined whether one vehicle is
following the other one (line 8).
2
 vehicle(?v1)
^StopIntersection (?stop1)
^willR each (?v1 ,? stop1 )
! willStop (?v1,? stop1)
The vehicle v1will reach the stop
intersection stop1 . This condition
means that v1will probably stop at
stop1 (line 4).
3
 vehicle(?v1)
^StopIntersection (?stop1)
^isToReach (?v1 ,? stop1 )
!hasToStop (?v1 ,? stop1 )
The vehicle v1is about to reach the
stop intersection stop1 . This condi-
tion means that v1has to stop at
stop1 (line 4).
of the situation. For this purpose, it was possible to use the DL language as the
corresponding axioms are simple. Note that SWRL could have been used, however,
reasoning on SWRL rules is more expensive than reasoning on DL axioms.
For the ﬁrst part, 14 SWRL rules were deﬁned. Table 9.1presents 3 of these
rules. These rules aim to make it possible to infer spatio-temporal relationships
between entities, near future behaviour s of mobile entities and expectation about
mobile entities manoeuvres. Rule 1 in Table 9.1is one of ﬁve rules dealing
with spatio-temporal relationships. Rule 2 is one of three rules dealing with
near future behaviours of the mobile entities. Finally, rule 3 is one of six rules
dealing with expected manoeuvres of the mobile entities. Some of these rules
were deﬁned to take into consideration possible chain reactions (e.g. vehicle that
is following another vehicle that has to stop has also to stop in order to avoid a
collision).
For the second part, one basic DL axiom was created for each Output For ADAS
concept. In total, six axioms were edited for the ontology, two of them are presented
in Table 9.2in order to help the reader understand the principles. Axiom 1 aims to
deﬁne that if a single vehicle is expected to stop at a stop intersection, it is pertinent
to run an ADAS that makes sure that the driver is aware of the stop intersection.
Further, axiom 2 aims to deﬁne that if a vehicle following another vehicle expected
to stop at a stop intersection, it is pertinent to run an ADAS that makes sure that the
driver is aware that the lead vehicle will stop soon.216 A. Armand et al.
Table 9.2 Example of 2 Description Logic Axioms edited in the ontology.
#
 DL axioms
 Meaning
1
 StopIntersection:D
Vehicle u9hasToStop /SOHStopIntersection
If an instance of concept Vehicle
is linked to an instance of concept
StopIntersection through the object
property hasToStop , then the instance
of concept Vehicle is also an instance
of the StopIntersectionAhead concept.
2
 StopIntersectionBefore1Leader:DVehicle
uisFollowing /SOHStopIntersectionAhead
If an instance of concept Vehicle
is linked to an instance of con-
cept StopIntersectionAhead through
the object property isFollowing ,t h e n
the instance of concept Vehicle is also
an instance of the StopIntersectionBe-
fore1Leader concept.
The ABox
The ontology ABox contains two types of individuals. There are those which are
mandatory and created independently from the World Model, and those which are
created according to the World Model.
 Mandatory Individuals
Even if the World Model does not include any information about surrounding
road entities, the ontology ABox requires four individuals to be deﬁned. These
individuals enable the ontology to work properly and are deﬁned as follows.
The World Model will always contain information about the subject vehicle
that perceives its surrounding environment. Therefore, the ontology ABox has to
store one instance of the Vehicle concept, representing the subject vehicle. This
entity is taken as the origin of the frame, so the distanceT oSubjectVehicle data
property is affected to this individual and is set at 0.
The three other individuals refer to the three concepts included in the
Context Parameter major concept. These individual aim to activate the context
parameters in the ontology and thus to assign a value to the three of them. In
that way, one instance of the isCloseParameter concept has to be created. This
individual is given the hasValue data property which sets the maximum distance
between a pedestrian and a static entity to consider them close enough to interact.
Further, one instance of the isFollowingParameter concept has to be created
with the hasValue data property. The value of this property sets the distance
between two vehicles from which it is considered that the following vehicle
is no longer following the leader. This value depends on the vehicle speeds in
stabilized conditions. Finally, one instance of the isT oReachParameter concept
has to be created, again with the hasValue data property. This parameter sets the
distance of a vehicle to a static entity from which it is considered that the vehicle
is about to reach the static entity. This p arameter also depends on the vehicle
speed in stabilized conditions.9 Digital Maps for Driving Assistance Systems and Autonomous Driving 217
 World Model Dependent Individuals
These individuals can be considered as the conversion of the World Model
contents into the ontology language. Thus, each entity stored in the World Model
has its equivalent in the ontology ABox. For each entity, one instance of the
corresponding concept is created and is affected the distanceT oSubjectVehicle
data property. The value of this property is the position of the concerned entity,
with respect to the subject vehicle. Note that uncertainties on the position of
entities are not considered by the ontology. Finally, the isOnRoad data property
has to be attributed to all instances of the Pedestrian concept to declare whether
the corresponding pedestrians are on the road or on the pavement.
9.2.4 Implementation and Experimental Evaluation
The ontology’s ability to infer pertinent i nformation about a road situation has been
tested using test data and real data. It was edited in the Protégé software (TBox and
ABox), version 4.3, developed by the Stanford Center for Biomedical Informatics
Research [ 29,30]. This ontology editor enables the edition of SWRL rules.
9.2.4.1 Case Study Using Manual Data
This ﬁrst case study was performed with an ontology whose ABox was ﬁlled
manually, Fig. 9.9a describes the situation that was manually edited in the ontology.
This situation consists of three vehicles (called Subject Vehicle ,Vehicle 2 andVehicle
3) going towards a stop intersection (called Stop 1 ).Vehicle 3 is the closest to the
intersection and just passed a pedestrian crossing (called Pedestrian Crossing 1 ).
Vehicle 2 goes towards Pedestrian Crossing 1 ,a n d Subject Vehicle follows Vehicle
2. Finally, a pedestrian (called Pedestrian 1 ) is walking next to Pedestrian Crossing
1.
As mentioned before, the ABox contains four mandatory individuals, one for the
subject vehicle and three others for context parameters. In this case study, the highest
allowed speed is 50 km/h, therefore the cont ext parameters are set according to this
speed. In that way, it was set that a vehicle is following another one if the following
time is lower than 3 s. Therefore, an individual of the isFollowingParameter
concept was created with the hasValue data property set to 42 m (distance travelled
in 3 s at 50 km/h). Further, it was set that a mobile entity is about to reach a
static entity if it is reaching it within 5 s at constant speed. Therefore an individual
of the isT oReach concept was created with the hasValue data property set to
70 m. Finally, an instance of the isCloseParameter concept was created with the
hasValue property set to 3 m.218 A. Armand et al.
Name: Subject Vehicle
Concept: Car
distanceToSubjectVehicle = 0mName: Stop 1
Concept: Stop Intersection
distanceToSubjectVehicle = 85m
Name: Pedestrian 1
Concept: Pedestrian
distanceToSubjectVehicle = 55m
isOnRoad = falseName: Vehicle 3
Concept: Car
distanceToSubjectVehicle = 65m
Name: Vehicle 2
Concept: Car
distanceToSubjectVehicle = 30m
Name: Pedestrian Crossing 1
Concept: Pedestrian Crossing
distanceToSubjectVehicle = 56m
Subject VehicleObject Properties Assertions
Concept Equivalence AssertionsStop Intersection before several leadersStop Intersection before 1 leader
Pedestrian Ahead
Pedestrian before 1 leaderObject Properties Assertions
Concept Equivalence Assertions Stop  Intersection before 1leaderStop Intersection ahead
Pedestrian AheadVehicle 2Object Properties Assertions
Concept Equivalence AssertionsVehicle 3
Stop Intersection aheadPedestrian 1Object Properties Assertions
Concept Equivalence AssertionsisCloseTo Pedestrian Crossing 1
Ø
goesTowards Stop 1
isToReach Stop 1
hasToStop Stop 1
goesTowards Pedestrian Crossing 1
isToReach Pedestrian Crossing 1
hasToDecelerate Pedestrian Crossing 1
isToReach Pedestrian 1
hasToDecelerate Pedestrian 1
hasToStop Vehicle 3isFollowing Vehicle 3goesTowards Stop 1
isToReach Stop 1
hasToStop Stop 1
goesTowards Stop 1
willReach Stop 1
willStop Stop 1
goesTowards Pedestrian Crossing 1
isToReach Pedestrian Crossing 1
hasToDecelerate Pedestrian Crossing 1
isToReach Pedestrian 1
hasToDecelerate Pedestrian 1
hasToDecelerate Vehicle 2
hasToStop Vehicle 2isFollowing Vehicle 2
Fig. 9.9 Case study. ( a)O nt h e left, an illustrative picture of the case study (scale is not respected).
In the boxes on the right , the World Model Dependant Individuals stored in the ABox. ( b) Object
properties and concept equivalence assertions after reasoning9 Digital Maps for Driving Assistance Systems and Autonomous Driving 219
Results
Reasoning was performed through the Protégé software and the Pellet reasoner as
it is compatible with SWRL and offers good performances [ 6]. Figure 9.9bs h o w s
the object properties and concept equivalence assertions performed by Pellet for the
chosen case study. Some of these inferences are detailed bellow.
Pedestrian 1 is inferred to be close to Pedestrian Crossing 1 . The reasoner
computes the distance between these two entities according to the distanceT oSub-
jectV ehicle data parameter set on the two corres ponding individuals. This distance
is of 1 m and satisﬁes the condition (that depends on the isClose context parameter)
that was set in the ontology to claim that a pedestrian is close to a pedestrian
crossing. It implies that the pedestrian is likely to have the intention to cross the
road, therefore it means that a vehicle that would approach to the pedestrian would
have to take care of the pedestrian. No concept equivalence is asserted on Pedestrian
1because there is no axiom for concept equivalence deﬁned in the TBox for the
Pedestrian concept.
Three object property assertions are inferred for Vehicle 3 . These assertions
concern interactions between this ve hicle and the stop intersection Stop 1 . Thanks
to the position of these two entities, is was inferred that Vehicle 3 passed all the
static entities except Stop 1 . Therefore, it is inferred that Vehicle 3 goes towards
Stop 1 . Further, the distance between these two entities is low enough to consider
thatVehicle 3 is about to reach Stop 1 . Moreover, since it was deﬁned in the ontology
that all vehicles about to reach a stop inters ection have to stop at the intersection, it
is inferred that Vehicle 3 has to stop at Stop 1 . Finally, it is inferred that Vehicle 3 is
an instance of the Stop Intersection Ahead concept. This is performed using the
ﬁrst DL axiom presented in Table 9.2.
Ten object property assertions are inferred for Vehicle 2 . The ontology infers that
this vehicle passed neither Pedestrian Crossing 1 andStop 1 , therefore it is inferred
that it goes towards these two static entities. Moreover, Vehicle 2 is close enough
toPedestrian Crossing 1 andStop 1 to say that it is about to reach them. Since
all vehicles have to stop at stop intersections, it is inferred that Vehicle 2 has to
stop at Stop 1 . This assertion implies Vehicle 2 to be an instance of concept Stop
Intersection Ahead .Moreover, all vehicle have to decelerate before reaching a
pedestrian crossing, therefore Vehicle 2 has to decelerate for Pedestrian Crossing 1 .
Further, as it was inferred that Pedestrian 1 is close to Pedestrian Crossing 1 ,a n d
since Vehicle 2 is about to reach Pedestrian 1 , it is inferred that it has to decelerate
for the pedestrian. This assertion implies Vehicle 2 to be an instance of concept
Pedestrian Ahead . Finally, Vehicle 2 is close enough to Vehicle 3 to claim that it
is following this latter. However, it was inferred that Vehicle 3 h a st os t o pa t Stop
1, and since Vehicle 2 is following Vehicle 3 ,Vehicle 2 has to top behind Vehicle 3 .
This chain reaction implies Vehicle 2 to be an instance of concept Stop Intersection
before 1 leader .
Eleven object property assertions are inferred for Subject Vehicle .L i k e Vehicle
2,Subject Vehicle passed neither Pedestrian Crossing 1 andStop 1 . It is therefore
inferred that it goes towards these two entities. Moreover, Subject Vehicle is too220 A. Armand et al.
far from Stop 1 to consider that it is about to reach it. However it is inferred
that Subject Vehicle will reach Stop 1 , and therefore that it will stop at Stop 1 .
Further, as it is close enough to Pedestrian Crossing 1 ,Subject Vehicle is about
to reach it, and thus has to decelerate. In addition, as it is for Vehicle 2 , the chain
reaction with Pedestrian 1 andPedestrian Crossing 1 implies that Subject Vehicle
has to decelerate for Pedestrian 1 . This implies Subject Vehicle to be an instance
of concept Pedestrian Ahead .F u r t h e r , Subject Vehicle is close enough to Vehicle
2to claim that it is following it. This implies several chain reactions with the other
context entities. First, Subject Vehicle is following Vehicle 2 that is an instance of
Stop Intersection ahead . This implies Subject Vehicle to be an instance of concept
Stop Intersection before 1 leader . In addition, Vehicle 2 is also an instance of
concept Stop Intersection before 1 leader , therefore is also implies that Subject
Vehicle is an instance of concept Stop Intersection before several leaders .
Finally, Vehicle 2 is an instance of concept Pedestrian Ahead , it therefore implies
thatSubject Vehicle is an instance of concept Pedestrian before 1 leader .
These results show that the proposed ontology enables to perform coherent
reasoning on global road situations. It shows that interactions between road entities
can be understood and considered to anticip ate the behaviours of the mobile entities.
9.2.4.2 Case Study Using Recorded Data
The next step is to test the ontology with data recorded from sensors embedded on
an experimental vehicle. Figure 9.10 shows a representation of the case study that
was chosen for the evaluation of the ontology in real time conditions. It consists
of the subject vehicle that is following a lead vehicle. Both vehicles are navigating
towards a pedestrian crossing that precedes a stop intersection. Ten meters separate
the pedestrian crossing and the intersection. Additionally, a pedestrian is located
next to the pedestrian crossing.
Figure 9.11 presents the framework that was used for the real time exploitation
of the ontology.
The framework requires several data sources. A priori information about the
position of the pedestrian crossing and of the stop intersection were stored in a
digital map in the Open Street Map format. In addition to this map, the localization
data returned by the GPS receiver was us ed by the Navigation System in order to
generate the Electronic Horizon in real time. Real time information about leading
vehicles and pedestrians are provided by the Lidar sensor. Finally, the ontology
TBox was stored in a Ontology Web Language (OWL) ﬁle [ 22]. This ﬁle format is
the reference for the storage of ontologies.
Three pieces of software were necessa ry to exploit the ontology in real time.
The ﬁrst one is the navigation system that exploits the OSM digital map and that
returns the Electronic Horizon at each ne w measurement of vehicle location. That
is, it provides information about the static entities, i.e. the distance of the subject
vehicle to the pedestrian crossing and to the stop intersection.9 Digital Maps for Driving Assistance Systems and Autonomous Driving 221
Stop
Pedestrian
Pedestrian CrossingLead Vehicle
Subject Vehicle
Fig. 9.10 Case study for real time evaluation of the ontology
LIDAR
GPSNavigation
SystemWorld
Model
Ontology
ABox
TBoxPellet
Reasoner
OWL
DocOSM
MapHMI
Display situation
and ontology
inferencesC++ (Rtmaps 4)
JA V A (TCP Server)Data Sources
Fig. 9.11 Framework for real time situation understanding
The second piece of software was developed in the C++ programming language
for the RTMaps 4 middle-ware. This software allows to get information about the
mobile and static entities as they are returned by the data sources. An RTMaps
component was developed to feed the World Model structure according to the
information about road entities.
The last piece of software was developed in the Java programming language. It
enables to exploit the ontology and thus to reason about the World Model. Even if
the Java language is not the best language for real time functions, it was chosen to
use it as it was the only programming langua ge that proposes accessible libraries for222 A. Armand et al.
ontology handling. For this purpose, the OWL API library was used [ 12]. Moreover,
the software was developed as an ontology server, that is it communicates with
clients which need to reason about World Models. The communication between
the server and RTMaps is performed through the TCP protocol. The World Model
structure is exchanged after having been serialized using the Protobuf library [ 31].
After reception of the World Model structure by the server, ontology individuals are
created, completing the core ontology that was preliminary loaded from the OWL
ﬁle. Reasoning is then performed through the Pellet reasoner and inferences are
sent back to the TCP client. The inferen ces can therefore be exploited by an ADAS,
which is, in this Chapter, an HMI that displays the ontology inferences.
Results
Figure 9.12 presents the results of the experimental evaluation of the ontology.
Figure 9.12a shows the state of the lead vehicle and the inferred class equivalences
over time for the corresponding ontology individual. Further, Fig. 9.12bs h o w st h e
state of the subject vehicle and the inferred class equivalences over time for the
corresponding ontology individual. From the point of view of the subject vehicle,
the situation evolves over time through eight main events happening at times t1–t8.
These events are detailed hereafter.
From the beginning of the experiment, the distance between the subject vehicle
and the lead vehicle is lower than the isFollowing threshold (see Fig. 9.12b). The
ontology therefore considers that the subject vehicle is following the lead vehicle.
It means that as soon as the lead vehicle interacts with at least one other road entity,
this interaction is propagated to the subject vehicle.
At time t1, the distance between the lead vehicle and the pedestrian becomes
lower than the isT oReach threshold (see Fig. 9.12a). Therefore, the ontology
considers that there is interaction betw een the lead vehicle and the pedestrian and
that the lead vehicle is about to reach the pedes trian. However, the pedestrian is close
to the pedestrian crossing, therefore it is inferred that the lead vehicle individual
becomes an instance of the Pedestrian Ahead concept (see Fig. 9.12a). Moreover,
since the subject vehicle is following the l ead vehicle, the interaction between the
lead vehicle and the pedestrian is propagated to it. The subject vehicle individual
therefore becomes an instance of the Pedestrian Before 1 Leader concept (see
Fig.9.12b).
At time t2, the distance between the lead vehicle and the stop intersection
becomes lower than the isT oReach threshold (see Fig. 9.12a). Thus, the ontology
considers that the lead vehicle is about to reach the stop intersection. The lead
vehicle individual therefore becomes an instance of the Stop Intersection Ahead
concept. Further, since the subject vehicle is still following the lead vehicle, the
subject vehicle individual becomes an instance of the Stop Intersection Before 1
Leader concept (see Fig. 9.12b).
At time t3, the distance between the subject vehicle and the pedestrian becomes
lower than the isT oReach threshold (see Fig. 9.12b). Since the pedestrian is still9 Digital Maps for Driving Assistance Systems and Autonomous Driving 223
0 5 10 15 20050100150200
Pedestrian AheadStop Intersection Ahead
t1t2t5t6
Time (s)Distance (m)
Distance to Pedestrian
Distance to Stop
isToReach threshold
0 10 15 20050100150200
t1t2t5t6t3t4t7t8Pedestrian Before
1 LeaderStop Intersection Before 1 LeaderPedestrian AheadStop Intersection Ahead
Time (s)Distance (m)
Distance to Pedestrian
Distance to Stop
Interdistance Between Vehicles
isToReach threshold
isFollowing threshold
Fig. 9.12 Results of the experimental evaluation. ( a) Situation of the lead vehicle with respect to
the static entities and ontology inferences. ( b) Situation of the subject vehicle with respect to the
static entities and ontology inferences
close to the pedestrian crossing, the subject vehicle starts to interact with him and
therefore the subject vehicle individual becomes an instance of the Pedestrian
Ahead concept. Note that at this time the lead vehicle did not pass the pedestrian,
therefore the subject vehicle individual is still an instance of the Pedestrian Before
1 Leader concept.
At time t4, the distance between the subject ve hicle and the stop intersection
becomes lower than the isT oReach threshold (see Fig. 9.12b). Therefore, the
ontology considers that the subject vehicle starts to interact with the intersection and
thus the subject vehicle individual becomes an instance of the Stop Intersection
Ahead concept. Note that at this time the lead vehicle did not pass the stop
intersection, therefore the subject vehicle individual is still an instance of the Stop
Intersection Before 1 Leader concept.
At time t5, the lead vehicle passes the pedestrian (see Fig. 9.12b). As a con-
sequence, the lead vehicle individual is no longer an instance of the Pedestrian224 A. Armand et al.
Ahead concept. Further, that implies that the subject vehicle is no longer following
a vehicle that is about to reach a pedestrian. Therefore, the subject vehicle individual
is no longer an instance of the Pedestrian Before 1 Leader concept (see
Fig.9.12b). It means that the subject vehicle no longer indirectly interacts with the
pedestrian.
At time t6, the lead vehicle passes the stop intersection. As a consequence, the
lead vehicle individual is no longer an instance of the Stop Intersection Ahead
concept (see Fig. 9.12b). Therefore, the subject vehicle is no longer an instance of
the Stop Intersection Before 1 Leader concept (see Fig. 9.12b).
At time t7, the subject vehicle passes the pedestrian. Therefore, the subject
vehicle individual is no longer an instance of the Pedestrian Ahead concept (see
Fig.9.12b). The stop intersection therefore becomes the only pertinent road entity
for the subject vehicle.
Finally, at time t8, the subject vehicle reaches the sto p intersection. Therefore, the
subject vehicle individual is no longer an instance of the Stop Intersection Ahead
concept (see Fig. 9.12b). The ontology no longer infers any concept equivalence,
therefore there is no more pertinent p erceived surrounding entity that have to be
monitored by the subject vehicle.
9.2.5 Discussion
It was shown that the proposed ontology enables to reason on road environments
as they can be perceived by a vehicle. Reasoning on road environments can be
performed with respect to the types of the entities which are concerned, while
considering the interactions which are likely to happen between entities. The
ontology enables to consider chain reactions in a straightforward manner, that is,
the interaction between two entities can have consequences on the behaviour of
another entity. In comparison, most conventional ADAS would have considered
each perceived entity independently from the others and would have monitored the
closest entity only.
The proposed ontology cannot be exploited to reason on every road context. Only
situations compatible with it can be understood, that is, situations which only meet
entities which have been described in the ontology TBox. It means that if the World
Model contains an entity that is not formally described in the ontology, the latter
will not be able to reason about this entity. If in real life this entity has inﬂuence
on other entities known by the ontology, a great part of the reasoning will not be
representative of reality and thus will not be consistent. Further, for the experiments
which were presented, the values of th e Context parameters were set in an ad hoc
manner. This was because no studies aimi ng to deﬁne conditions for which entities
can be considered as interacting were found in the literature. It would therefore be
pertinent to carry out studies to ﬁll this gap.
In addition to the quality of the knowledge that is stored in the ontology, the
consistency of the inferred information depends on the quality of the information9 Digital Maps for Driving Assistance Systems and Autonomous Driving 225
stored in the World Model. If a pertinent entity of the situation misses in the World
Model, reasoning about the situation ca nnot be coherent. Moreover, if the World
Model contains incoherent information a bout the situation, reasoning will neither be
coherent. For instance, let’s consider a situation for which the World Model contains
an intersection and a lead vehicle in addition to the subject vehicle. If the distance
between the subject vehicle and the intersection is under-estimated, the ontology
may understand that the lead vehicle already passed the intersection while it did
not. The consequence would therefore be that no interaction between both entities
is inferred, therefore the situation would be misunderstood by the subject vehicle.
In the current state of research, one weak point of ontologies is their inability
to take uncertainties into account. Again, this means that the precision of the data
stored in the World Model is of great importance. This implies that all perception
and localization sensors must provide pr ecise and accurate meas urements and that
navigation maps are precise and up to dat e. In addition, this lack of uncertainty
implies that it has to be assumed that drivers comply with rules, and that it is not
considered that rules can be violated. Fin ally, neither uncertainties on interactions
between entities, neither uncertainties on concept equivalence assertions can be
estimated. Such uncertainties could be of great interest, especially for the risk
assessment systems which may have to exploit the ontology inferences.
Finally, the time necessary to reason on an ontology is signiﬁcant and has to
be considered. For the experimental evaluation presented in Sect. 9.2.4 , the average
processing time necessary for reasoning was 71 ms on a 4 GB RAM laptop with a
dual core 1.9 GHz processor. This processing time depends both on the complexity
of the ontology TBox (number of axioms and especially the number and complexity
of the SWRL rules) and on the number and types of road entity individuals stored
in the ontology ABox. If the ontology has to be extended, an effort would have
to be made in order to limit the number of axioms and rules and thus to limit the
complexity of the reasoning step. For real time applications, if the processing time
is too high in comparison with the frequency at which the World Model returns data,
it would be conceivable to reason on the ontology asynchronously with the rest of
the system as it was done in [ 15].
9.3 Map Error Detection
Intelligent and autonomous vehicles appli cations require the information provided
by the navigation function in the form of the Electronic Horizon (EH). Erroneous
data in the EH may result in undesirable behaviour of client systems and generate
hazardous situations. These can be the consequence of faults that arise at any step of
the EH generation. Localization system used in combination with the map may be
perturbed and provide a position estimate that contains large errors. This may result
in large errors on the estimation of the vehicle position onto the map. A map is a
complex entity that represents the environment that is constantly evolving, it then226 A. Armand et al.
necessarily contains Faults. The scope of this section is on faults originating in the
navigation map.
This section ﬁrst deﬁnes the concepts of fault and error which are essential here.
Next the pathology of faults found in navigation maps and their effects on the vehicle
applications is described.
9.3.1 Deﬁnitions
The terms of fault, error, failure and integrity may have different meanings
according to the application domain. The following deﬁnitions are used in the
context of this research and are based on those given in [ 28]:
 Fault: Error generative process. The pre sence of a fault may not lead to an error.
 Error: A discrepancy between a computed , observed or measured value and the
true, speciﬁed or theoretically correct value.
 Failure: Instance in time when a requi red function exceeds the acceptable limits
or is terminated.
 Integrity: Reliability of the conﬁdence indicator associated with an information
with respect to speciﬁcations of the client application.
There is a loss of integrity of EH data if the error is greater than the estimation.
Figure 9.13 shows the geometry of the segment of a road network. The shaded
shape represents admissible error associated with it. In this illustration, a fault occurs
if the EH data is outside this envelop. Figure 9.14 shows the loss of integrity for the
position estimate. The true vehicle position is indeed outside the conﬁdence domain
of the error associated with the position estimate.
The accuracy of the vehicle position estimate provided by the navigation function
in the EH is closely related to both the localization and the navigation map.
Fig. 9.13 Navigation
estimates where integrity is
kept
Fig. 9.14 Loss of integrity
for position estimate9 Digital Maps for Driving Assistance Systems and Autonomous Driving 227
Fig. 9.15 Needs in localization and map accuracy for the development of driving assistance
functions (after [ 8])
Figure 9.15 highlights this dependency and the consequences on the development of
driving assistance functions, from the assisted navigation to autonomous driving [ 8].
Passenger vehicles are mainly used either for commuting or to travel on known
roads. Except for occasional journeys lik e going on vacations, the vehicle is
therefore driven on roads on which it has already been driven. It must be noticed
that the dysfunctions due to map faults are mainly systematic. Whenever the
vehicle crosses again the erroneous road, the EH provides the same false data to
ADAS which, themselves, will have the same uncomfortable behaviour. The quality
perceived by the driver decreases signiﬁcantly due to the frustration of repetitive
illogical warnings or reactions of the vehicle.
9.3.2 Pathology
The road network is constantly evolving. Map providers consider that 15 % of
the road network of a mature country ch ange each year. This value increases
in developing countries. With the exception of few countries like Japan, road
changes are not monitored by a central administration. It is therefore difﬁcult for
cartographers to keep the geogr aphic databases up-to-date.
Map creation is a complex process tha t takes a long time. When loaded in the
vehicle, the navigation map data is therefore already several months old and partially
outdated. Mapmakers adopt two approaches to pursue fast map updates. The ﬁrst
is to facilitate mapping surveys by deploying a large ﬂeet of vehicles. These are
equipped with a speciﬁc set of sensors (e.g . lidar, inertial measurement systems,
differential GNSS) for rapid mapping of the road network. Priorities are given to
main roads and areas where changes have been reported. This strategy allows precise
mapping but is costly in material and human resources. The second is to rely on
user data. The records of the journeys travelled with the navigation devices are228 A. Armand et al.
automatically uploaded to the map provider server. Data mining algorithms are then
applied to update the central database. This approach is less expensive and allows
to update the road geometry or the mean travel times. However other structural
elements such as trafﬁc signs, speed limits still require ﬁeld surveys.
The typical faults are summarized in a pathology. It provides an overview of the
issues involved by each fault and associated scientiﬁc challenges. The distinction is
made here between fault in the navigation map structure, geometry and attributes.
Structural faults are related to the ma nner in which the elements of the map are
connected or are identiﬁed in the map. Geo metric faults are related to the shape or
the geographic placement of these entities. This distinction is made because they
require different approaches to be detected and corrected. These are detailed in the
following paragraphs.
9.3.2.1 Structural Faults
Road Connectivity
The correct representation of road junction in the navigation map is essential
for optimal path planning. The missing connection between two road may cause
the path planner choose a suboptimal path and bother the driver. Reciprocally, a
connection between two roads in the navigation map that does not exist in reality
may result in impossible path. In this case, the driver may be misled by the
navigation assistant and cause hazardous driving situations.
Type of Intersection
The signiﬁcant information at road junctions is the right way of one road with
respect to the others. Hazardous situations could occur if this information is missing.
In navigation maps, the type of intersection can be associated with junctions in
order to describe implicitly the order of priorities. Over the past years, a particular
type of intersection that is roundabouts (or trafﬁc circles) is preferred to others
types and is built in many places. They indeed reduce fatalities and increase trafﬁc
exchange between roads. Their construction means that the network structure is
changed [ 33,38]. The manner in which the vehicle crosses them is different to
a classic crossroad and the reachability to the intersection branches is different.
The inclusion of a roundabout must be registered in the navigation map in order
to provide convenient guidance information to the driver and adapt the approaching
manoeuvre (e.g. speed reduction, lane placement).9 Digital Maps for Driving Assistance Systems and Autonomous Driving 229
9.3.2.2 Geometric Fault
Road Shape and Road Offset
For optimization purposes, the on board navigation maps are compressed and
compiled. In this process, some road shape points are removed. The road curvature
estimated using the shape points is therefore perverted. In the GIS domain, absolute
and relative accuracies are distinguished [ 5]. The former describes the accuracy
of the geographic feature with respect to a global reference coordinate system
whilst the later describes accuracy relative to other features. Roads with low relative
accuracy result in poor shape deﬁnition. Th e curve warning related ADAS (i.e.
Contextual ACC, LKA and PFL) are directly affected by low relative accuracy of
the road. In case of low absolute and high r elative accuracies (road offset), the
map-matching algorithm may not choose the right road candidate, especially in
dense road network area. Moreover, Fig. 9.16 shows that the offset on junctions
induces malfunctions of intersection warning systems for vehicles running on the
other roads [ 2].
Missing Roads
Road networks change over time and some ro ads are created or closed. Until the next
cartographic survey, every contextual ADAS application cannot operate properly.
The case in which the vehicle is driven on a new road is split into two situations.
First, if the new road is far from the roads stored in the navigation map, the map-
matching function will switch to failure mode and provide the output off road .T h e
contextual ADAS applications could then adopt a suitable strategy and limit the
Fig. 9.16 Consequences of road offset on intersection warning systems. The true roads are in
black .T h e redpolylines are the roads stored in the navigation map. The vehicle is the yellow
triangle230 A. Armand et al.
consequences. Second, if the new road goe s along a road stored in the navigation
map, the vehicle position is likely to be matched on the wrong road with a high
conﬁdence level. The contextual ADAS c ould operate based on inconsistent data
and cause hazardous situations.
9.3.2.3 Attributes Faults
Speed Limits
The speed limit can be displayed to the dr iver in Over-Speed Prevention (OSP)
system or used to set the vehicle cruise speed in Contextual ACC applications. The
navigation map stores the speed limit as an attribute for each road. This attribute
originates from direct surveys or is inferred based on the road class, the number of
lanes and the area (inside or outside built-up area). Smart cameras are nowadays
capable of detecting speed signs in real time [ 18,24], however, the challenge
resides in determining whether the detect ed sign is applicable to the vehicle. Speed
limits indicated by trafﬁc signs may be dedicated to one particular lane (e.g. for a
motorway exit), to a class of vehicles (e.g. trucks, vehicles towing caravans, buses)
or to special whether conditions. An inappropriate estimation of the speed limit by
the vehicle would bother the driver and decrease the perceived vehicle quality.
Driving Directions and Vehicle Restrictions
In navigation maps, roads are assumed to be drivable in both direction unless a
dedicated attribute is associated with the r oad. Similarly, attributes are deﬁned in
order to establish some trafﬁc restrictions (e.g. trucks, pedestrian and maximum
height). The path planner uses these attributes to exclude wrong-way roads and
roads that does not comply with the vehicle type. Faults in these attribute may cause
the path planner to choose a suboptimal route or ask the driver to take a forbidden
route. This may have severe consequences especially for large goods vehicles that
cannot manoeuvre easily.
As a conclusion on this fault pathology, it must be noticed that the variety of
the information stored in the navigation map induces a variety in the faults in
the map. The methods employed to address the detection and correction of these
faults are necessarily diverse in terms of sensors and formalisms. Some of the
formalisms that could permit to address this problem require an a priori knowledge
on the correctness of the navigation map. However, to the author’s knowledge, no
trustworthy study on the navigation map overall reliability has been done. Here, the
navigation map is considered to be globally correct but potentially locally erroneous.9 Digital Maps for Driving Assistance Systems and Autonomous Driving 231
9.3.3 Page’s Trend Test
The quality of the road representation within the navigation map in terms of
geometry has a direct impact on the performance of intelligent vehicles navigation
systems. The knowledge of the road shape in front of the vehicle is used in
existing intelligent vehicles to improve sensor tracking (e.g. lane markings for lane
keeping functions or leading vehicle for adaptive cruise control applications) and
anticipate hazardous situatio n by adapting the vehicle speed. The navigation map
road geometric description is also essential for autonomous driving like for path
planning, decision-making and control functions. To avoid dysfunction of these
systems, the quality of the geometric description of the road in the navigation map
must be monitored.
In passenger vehicles, no access is permitted to internal variables or data of
navigation function which is therefore considered as a black box in the approach
presented here. When a failure occurs on the application functions it is difﬁcult to
identify their origin, to correct them or reduce their effect. A method to detect error
in the map geometry is to compare the vehicle position estimate provided by the
navigation function with the positioning information given by the available sensors
as illustrated by Fig. 9.17. The challenge here is that the level of performance of
vehicle sensors is limited considering meas urement applications. The low accuracy
and high level of noise introduced by vehicle sensors make probabilistic approach
appropriate.
Statistical tests are appropriate to evaluate parameters of a probability law based
on a set of outcomes. In our application, we aim at detecting a change of the mean of
the probability density function (PDF) of a set of observed data while the standard
deviation of this PDF is in the same order of magnitude than the expected mean
gap. Page’s trend test works sequentially and is especially efﬁcient for stream data.
The problem is therefore formulated as the detection of a change of the mean of a
Map 
MatchingClient ADAS
Vehicle 
position 
estimationFault Detection, 
Isolation and 
AdaptationGNKnowledge 
of faultGNSS
Proprioceptive
sensorsGNSSNavigation Navigation Map
Smart front 
cameraCorrectionEH
Page’s 
trend test N=G ?
Fig. 9.17 Page’s trend test for fault detection in navigation integrity monitoring context232 A. Armand et al.
Fig. 9.18 The distance between the estimate from sensors Gand the estimate from navigation N
taken as random variables. dandeare the lateral and longitudinal offsets between the estimates
from navigation and from sensor, respectively. R0is the East–North plane locally tangent to the
Earth surface and R1is the frame aligned with the road segment on which the position is matched
by the navigation function.
random variable that represents the distance between the estimates from sensors and
from navigation as illustrated by Fig. 9.18.
9.3.3.1 Signal Generation
This section details how the distance signa l is generated and described in terms of
mean and standard deviation. Let us consider the estimate Nfrom the navigation as
the result of a random process based on the true vehicle position Pin a frame R1
aligned with the road:
NDPC˛ (9.1)
†˛D/DC4/ESC2
a0
00/NAK
R1(9.2)
where˛is a noise supposed zero-mean with a diagonal covariance matrix †˛.
Indeed, since the roads are represent ed in the navigation map by zero width
polylines, the variance of the navigatio n map-matched error normal to the road
segment is by deﬁnition null. However, a map-matched position error along the road
segment exists and /ESCadenotes the longitudinal standard deviation of the navigation
estimate.
The estimate of the vehicle position from sensors Gcan be encoded as a two-
dimensional point GD.x;y/Tin the East–North plane R0locally tangent to Earth9 Digital Maps for Driving Assistance Systems and Autonomous Driving 233
with the covariance matrix †ˇof the estimation error ˇ:
GDPCˇ (9.3)
†ˇD"
/ESC2
x/ESC2
xy
/ESC2
xy/ESC2
y#
R0(9.4)
In order to make the distance signal independent of the road direction, an
isotropic approach is chosen and it consists in using the outer circle of the ellipsoid.
Its radius is/DC1Dmax./DC1i/,/DC1ibeing the eigenvalues of †ˇ. So, the covariance matrix
expressed in R1is/DC1/SOHI(with Ibeing the identity matrix).
InR1, the difference between the map-mat ched and estimated positions is given
by a vector Lwhich has two independent components.
LD/DC4d
e/NAK
DN/NULGD˛/NULˇ (9.5)
Under the hypothesis of indepe ndent errors, the lateral dand longitudinal e
signals have the following variances:
/ESC2
dD/DC1
/ESC2
eD/DC1C/ESC2
a(9.6)
The relevant information in terms of the application is the lateral position of the
roads in the navigation map. The fault detection is therefore made by detecting mean
changes of the signal d.
9.3.3.2 Formulation of the Test
Page’s test consists in statistically detecting a change in the mean of a random
variable [ 4]. Let us consider qsamples diof a random variable D. The likelihood of
two hypotheses H0andH1are compared. The ﬁrst hypothesis states that Dhas
a constant mean /SYN0among the qsamples. The second one assumes that, given
0< r/DC4q, the mean of Dis/SYN0for the ﬁrst r/NUL1samples and /SYN1for samples
rtoq:
H0WdiD/SYN0Cbi;iD1;:::; q
H1W/SUBdiD/SYN0Cbi;iD1;:::; r/NUL1
diD/SYN1Cbi;iDr;:::; q(9.7)234 A. Armand et al.
where bis a zero-mean noise of standard deviation /ESC. The generalized likelihood
ratio of both hypotheses is given by ( 9.8).
ƒ.D/DqQ
iD1p.di;rjH1/
qQ
iD1p.dijH0/(9.8)
Since the likelihood of the alternative hypothesis H1depends of an unknown
parameter r, its maximum likelihood estimation is considered.
ƒ.D/Dsup
r/DC2r/NUL1Q
iD1p.dijH1/qQ
iDrp.dijH1//DC3
qQ
iD1p.dijH0/(9.9)
As the likelihood of the null hypothesis H0does not depend on rand having
r/NUL1Q
iD1p.dijH1/Dr/NUL1Q
iD1p.dijH0/, the likelihood ratio can be simpliﬁed as follows:
ƒ.D/Dsup
r qY
iDrp.dijH1/
p.dijH0/!
(9.10)
Letıdenote the mean gap ( ıD/SYN1/NUL/SYN0). Under Gaussian assumption, one can
get [21]:
ln.ƒ.D//Dı
/ESC2sup
r qX
iDr/DC2
di/NUL/SYN0/NULı
2/DC3!
(9.11)
The decision of choosing either H0orH1is made by comparing the likelihood
ratio with a threshold /NAKƒ:
/SUBH0Wln.ƒ.D//< ln./NAKƒ/
H1Wln.ƒ.D//> ln./NAKƒ/(9.12)
For a real time implementation, it is especially convenient to formulate the test
sequentially. Let us then deﬁne the cumulative sum as in ( 9.13):
Sq
r./SYN0;ı/DıqX
iDr/DC2
di/NUL/SYN0/NULı
2/DC3
(9.13)9 Digital Maps for Driving Assistance Systems and Autonomous Driving 235
which can be re-written as:
Sq
1./SYN0;ı/DSr/NUL1
1./SYN0;ı/CSq
r./SYN0;ı/ (9.14)
The decision rule then becomes
(H0WSq
1./SYN0;ı//NULinf
r/NUL
Sr/NUL1
1./SYN0;ı//SOH
</CR
H1WSq
1./SYN0;ı//NULinf
r/NUL
Sr/NUL1
1./SYN0;ı//SOH
>/CR(9.15)
where/CRD/ESC2ln./NAKƒ/.
Letımbe the minimum value of ıwhich must be detected. The test is split into
two sub-tests running in parallel, the ﬁrst aiming at detecting a mean growth and the
other a decrease of the mean.
Finally, at the current time k, a mean growth is detected as soon as ( 9.16)i st r u e :
Uk/NULmk>/CR (9.16)
where
UkDUk/NUL1Cdk/NUL/SYN0/NULı
2(9.17)
mkDmin.mk/NUL1;Uk/ (9.18)
Conversely, a mean decrease is detected when:
Mk/NULTk</CR (9.19)
where
TkDTk/NUL1Cdk/NUL/SYN0Cı
2(9.20)
MkDmax.Mk/NUL1;Tk/ (9.21)
As soon as threshold /CRis reached, the cumulative sums are reset to zero. The
actual mean change happened at the last time m(resp. M) has reached its minimum
(resp. maximum) before crossing /CR. Another formulation for the localization of the
mean change which is used in this work is to ﬁnd the last time the decision variable
(Uk/NULmkfor increase detection or Mk/NULTkfor decrease detection) is null. This test
is then very efﬁcient in terms of required computational load. Indeed, at every new
time step, it only requires to make additions and comparisons of scalar variables.
The mean change cannot be detected at the samples prior to the last one at which236 A. Armand et al.
the decision variable is null. Those sampl es are useless and can be removed from
the computer memory.
The choice of /CRhas consequences on the false alarm probability. It is not possible
to express it formally because the PDF of hypothesis H1depends of an unknown
parameter r. However, it can be set based on the number hof estimated parameters
in the PDF and on the number n/ESCof standard deviations: /CRD2/SOHh/SOHn/ESC/SOH/ESC=ı m[21].
Here the mean is the only estimated parameter of the PDF and n/ESCi ss e tt o2a s
nominal tuning which is a good compromise between false alarm rate and time to
detection. Then /CRD4/SOH/ESC=ı m.
Let us consider the example shown in Fig. 9.19. The signal plotted in the upper
graph of the ﬁgure is generated using a Gaussian function with a constant standard
deviation of 2. The mean of this signal is 0 from sample 1 to sample 40 and from
sample 61 to sample 100. The mean is set to 5 for sample indexes 41–60. Page’s
trend test is run using this signal as an input and the cumulative sum Ukas well
as the decision variable Uk/NULmkare plotted in order to illustrate the behaviour of
the test. A larger threshold than indicated previously is chosen in order to make the
explanation more understandable; here n/ESCD6thus/CRD4:8. When a sample of the
signal deviates from zero and get close to 5 (at samples 5, 18, 21, for instance)
the cumulative sum increases and thus th e decision variable increases. In those
situations a mean change of the signal is expected but not conﬁrmed. Since the actual
Fig. 9.19 Illustrative example of Page’s test. The signal to consider is plotted on the top graph .
The corresponding cumulative sum and decision variable are beyond. The red stars denote the
sample indexes for which the test detected a mean change9 Digital Maps for Driving Assistance Systems and Autonomous Driving 237
mean of the signal is 0 from sample 1 to 40, the cumulative sum keeps decreasing
and the decision variable goes back to zero before crossing the threshold. The
expectation of a mean change is therefore rejected. At the sample indexes 41–43,
the cumulative sum and the decision vari able increase like before but the decision
variable ﬁnally crosses the threshold at index 44 which conﬁrms the mean change.
Samples 41–44 are therefore marked with red stars on the graph. The cumulative
sum and the decision variable are set to zero which is indicated by discontinuities
of the plots. The Page’s test starts again: it detects at the sample 46 that a mean
change occurred since the sample 44, and so on. In this example the test requires 3
or 4 samples to detect a mean change and missed the sample 59 and 60 because the
decision variable was close to the threshold but did not reach it.
9.3.3.3 Experimental Evaluation of Fault Detection
Analysis Methodology
The critical issues of the fault detection are the reactivity and the ability to detect
the fault when it occurs. It was shown in the previous section that the sequential
formulation of Page’s trend test resets depending on the value of the samples. It
therefore has the particularity to constantly adapt the size of the sliding window.
The reactivity of this test is not known before hand. In order to measure this, the test
is evaluated in terms of distance-to-alert , distance-to-recovery and accuracy of map
error localization, as shown in Fig. 9.20. The distance-to-alert and the distance-to-
recovery are derived from the usual time-to -alert and time-to-recovery and adapted
in the context of this work in which the distance travelled by the vehicle is the
reference. The distance-to-alert ıH0!H1is the distance travelled by the vehicle
before detecting a fault. Reciprocally, ıH1!H0is the distance-to-recovery, that is,
the distance after which the test detects the end of a fault. Since the test may detect
a fault a few samples in the past, the a posteriori accuracy of the test is measured
byeH1jH0andeH0jH1.eH1jH0denotes the length of the road that has been identiﬁed
as faulty while being actually fault-free. This can be named false alarm distance.
Reciprocally, eH0jH1stands for the length of road that actually contains a fault that
has not been detected by the algorithm w hich can be seen as a missed detection
distance.
The performance of Page’s trend test is compared to two other usual methods
based on ﬁxed length sliding window. These both aim to discriminate between H0
andH1:
/SUBH0WdiDbi;iD1;:::; q
H1WdiDımCbi;iD1;:::; q(9.22)
where bi/CANN/NUL
0;/ESC2/SOH
.238 A. Armand et al.
Fault
1
0
Sequential 
outcomes 
of the testH0
H1
H0
Final test 
result
H1
H0Traveled distance
Traveled distance
Traveled distance
Fig. 9.20 Deﬁnition of the metrics used for tests assessment based on a simple example. The fault
to detect is represented on the upper part of the ﬁgure. As the test may go back in the past to
localize a detected fault, the a posteriori outcomes of the test appear on the second line . The fault
ﬁnally detected and localized appears on the bottom graph
On the one hand, a simple decision rule based on the empirical mean of the
sliding window was implemented:
1
qqX
iD1diH1≷
H0ım (9.23)
On the other hand, the Neyman Pearson probabilistic decision rule was used for
comparison. This is based on the generalized likelihood ratio of the hypotheses.
Under Gaussian noise assumption. The choice follows the rule ( 9.24)[4,21]:
qX
iD1diH1≷
H0/ESCp
2/SOHq/SOHlog.ˆ/ (9.24)
Where the threshold ˆarises from a compromise between desired false alarm
(type I error) and missed detection probabilities (type II error) of the decision rule.
The false alarm probability has been set to its usual value (0.1 %) for an appropriate
comparison with the proposed method.
The size qof the sliding window must be large enough to be statistically
representative and short enough to detect map errors as fast as possible. Moreover,9 Digital Maps for Driving Assistance Systems and Autonomous Driving 239
the samples Dmust be reinitialized as soon as the vehicle leaves one road for another
which happens frequently in urban environment. It has then been set to qD20
which is equivalent to approximately 200 m of travelled distance.
Experimental Evaluation
The tests were run on a set of roads th at were recently modiﬁed due to the
construction of a new motorway in Normandy, France (see Fig. 9.21). This area
is representative of typical geometric errors that a map may hold and which may
cause severe malfunctions in driving assistance systems. In area 1 and 2, sharp
bends were added to the road which was previously straight. This would makes
a curve warning system inefﬁcient. In area 3 a new carriage way was added to the
old single track road. This induces a constant lateral offset of the new road which
would make obsolete intersection warning systems on crossing roads. On the fourth
area, the lateral road offset decreases while the vehicle goes. This situation is very
useful to highlight the distance to recovery of the tests.
/g1/g1/g1/g1/g1/g1
Fig. 9.21 Global view of the test areas. The out-of-date map being assessed is shown by yellow
lines . A map of the actual road network is at the background in grey. The vehicle trajectory is in
blue (starting from the bottom of the ﬁgure). The four test zones are circled in red240 A. Armand et al.
Since the experiment is done in a rural environment and also for explanation
convenience, it is assumed here that a fa ult always originates from an error in the
navigation map.
Tests have been run on the lateral euclidean distance d. The most restrictive
constraint comes from intersection warning systems which require a longitudinal
precision of 10 m for the placement of an inter section on a road link. Indeed, a lateral
offset of a road link induces a longitudinal m isplacement of intersection on crossing
roads. This value has then been c hosen as the mean change to detect ımD10m.
Finally, the cumulative sum threshold is set dynamically to be /CRD4/SOH/ESC=ı mwhich
represents a good compromise between false alarm rate and time to alert.
The results summarized in Fig. 9.22 show that Page’s trend test is appropriate
for detection and localization of faults. I ndeed, faults are detected less than 20 m
after the beginning of the fault and well localized. The two other methods provide
less suitable false alarm and missed detec tion rates. This is mainly due to the fact
that ﬁxed length sliding windows are used. The fault detection has then undesirable
collateral effects on the tail of the window. These methods show bad results when
the road error is small with respect to the size of the sliding window.
Let us focus on area 1, to better understand the strength and weakness of the three
methods. The upper part of Fig. 9.23 shows the lateral error between the vehicle’s
estimated position and its map-matched position against the travelled distance. The
lower part shows the sequential outco mes of each methods while the vehicle is
driven. It can be seen on this ﬁgure that Page’s test is very efﬁcient for detecting the
fault since it chooses H1as soon as the road is actually erroneous. Moreover, in this
example, it locates perfectly the fault (from abscissa 520–1520m). The outcomes of
the two other tests are less accurate. Indeed , the faults are detected later and locate
it very poorly. This is due to the fact that is not possible to know where the change
happened within the sliding window. The whole window is supposed to belong to
H1as soon as the threshold is crossed. Corr ect road points are then declared faulty
Area 1Page 0 m
73 m
46 m0 m
150 m0 m
90 m
220 m0 m
177 m
0 m 255 mTest H 0H 1 H 1H 0 H 0H 1 H 1H 0
Mean
N.P.
Area 2Page 20 m
n.d.4
80 mn.a.3
n.a.
n.a.20 m
35 m
0 m0 m
0 m
170 mMean
N.P.
Area 3Page 0 m
50 m
0 m0 m
100 m
300 m0 m
150 m
0 m0 m
200 m
300 mMean
N.P.
Area 4
3
4Page 0 m
50 m
0 m20 m
0 m
250 m0 m
250 m
0 m20 m
40 m
210 mMean
N.P.
not applicable
not detected
Fig. 9.22 Comparative results with nominal tuning of each test9 Digital Maps for Driving Assistance Systems and Autonomous Driving 241
Fig. 9.23 Sequential outcomes of three trend tests on hypotheses H0(correct road segment) and
H1(erroneous road segment). The lateral distance to the map-matched position is denoted on the
upper part . The plot colour shows the true state of the road: correct in green , with fault in red
while they are not and vice versa . This example illustrates why these methods induce
false alarms, missed detections and i naccuracies in fault localization.
9.3.4 Discussion
The mathematical formulation of this tes t and its application to the comparison
of vehicle position estimates was detailed. Given this, its ability to detect a
discrepancy between the estimate from s ensors and the estimate from navigation
was evaluated using real vehicle data. Since the metrics usually employed to
measure the performance of this test are not relevant in the intelligent vehicle
context, the evaluation was done using metrics introduced in this chapter. The
test showed convincing performance sinc e it detected quickly (short distance-to-
detection and distance-to-recovery) and accurately (short false alarm and missed
detection distances) the discrepancies between the estimates.
Page’s trend test allows to detect with robustness when the two estimates of the
vehicle position are signiﬁcantly different and to conclude that a fault affects at least
one of them. However, it does not permit to determine which one is affected by the
fault if it is assumed that vehicle sensors can also be responsible for the fault. In this242 A. Armand et al.
sense, this test performs fault detection but does not perform isolation. In order to
solve this ambiguity, an approach consists in taking beneﬁt of the repeated vehicle
journeys on the same roads. The repeatability of the map geometrical faults permits
to isolate and correct faults after a few number of journeys [ 40].
9.4 Summary
The chapter examined a fundamental issue in the decision-making process for
vehicle navigation under computer cont rol, namely situation understanding of
the spatial-temporal relationship between entities sharing the same segment of a
road network. A solution is proposed through the use of ontologies that establish
this relationship in an ‘ordered’ manner t o structure this relationship. During
this process, a fundamental source of information and knowledge resides within
navigation maps. They provide contextual information that it is used to facilitate
the situation understanding process. Whilst much progress has been attained on
the deployment of digital navigation maps for vehicle guidance applications,
their geometric descriptions is far from perfect, there are modiﬁcations to maps
structures, there are geometric errors , etc. Thus the second part of this chapter
presented a novel approach for the detection of faults in the geometric descriptions
of the roads, a feature of this being the use of close to production components that
are used in other ADAS functions. The theoretical developments in this chapter have
been implemented in passenger vehicles and different trials performed in standard
road networks.
The overall results have shown that further work is needed, in particular on
the information needed to infer understanding of the situation. That is, how to
infer information from the close environment to improve the spatio-temporal
relationships amongst the relevant entitie s. For this purpose an area to explore
is semantic road segmentation. It should facilitate classiﬁcation as well as the
deﬁnition of the driving or navigation space. Maps remain a challenge, the concepts
portrayed in this chapter are being extended to the notion of learning maps by
leveraging on the repeated trajectories tha t often drivers, e.g. daily commuting. The
success of these endeavours shall be de monstrated when applied to autonomous
driving as the machine has to interpret d ata, detect errors and interact with its
environment in a safe manner as it drives to its destination.
References
1. S. Abburu, A survey on ontology reasoners and comparison. Int. J. Comput. Appl. 57(17),
33–39 (2012)
2. A. Armand, D. Filliat, J. Ibañez-Guzmán, Modelling stop intersection approaches using
gaussian processes, in Proceedings of the 16th International IEEE Conference on Inte lligent
Transportation Systems-ITSC (2013)9 Digital Maps for Driving Assistance Systems and Autonomous Driving 243
3. F. Baader, The Description Logic Handbook: Theory, Implementation, and Applications
(Cambridge University Press, Cambridge, 2003)
4. M. Basseville, I.V . Nikiforov, Detection of Abrupt Changes: Theory and Application (Prentice-
Hall, Englewood Cliffs, NJ, 1993)
5. D.J. Buckley, The GIS primer an introduction to geographic information systems. Technical
Report, Innovative, 1997
6. K. Dentler, R. Cornet, A.T. Teije, N. De Keizer, Comparison of reasoners for large ontologies
in the OWL 2 EL proﬁle. Semantic Web 2(2), 71–87 (2011)
7. S. Geyer, M. Baltzer, B. Franz, S. Hakuli, M. Kauer, M. Kienle, S. Meier, T. Weißgerber, K.
Bengler, R. Bruder et al., Concept and development of a uniﬁed ontology for generating testand use-case catalogues for assisted and automated vehicle guidance. IET Intell. Transp. Syst.8(3), 183–189 (2013)
8. P.-Y . Gilliér on, H. Gontran, B. Merminod, Cartogra phie routière précise pour les systèmes
d´’assistance à la conduite, in Proceedings of the GIS-SIT Conference . TOPO-CONF-2006-015
(2006)
9. T.R. Gruber, Toward principles for the design of ontologies used for knowledge sharing? Int.
J. Hum. Comput. Stud. 43(5), 907–928 (1995)
10. T. Gruber, Ontology, in The Encyclopedia of Database Systems , ed. by L. Liu, M.T. Özsu
(Springer, Berlin, 2009)
11. P.J. Hayes, The second naive physics manifesto, Formal Theories of the Commonsense World
(1985), pp. 1–36
12. M. Horridge, S. Bechhofer, The OWL API: a java API for OWL ontologies. Semantic Web
2(1), 11–21 (2011)
13. M. Horridge, S. Jupp, G. Moulton, A. Rector, R. Stevens, C. Wroe, A practical guide to
building OWL ontologies using protégé 4 and CO-ODE tools edition 1. 2. The University ofManchester (2009)
14. I. Horrocks, P.F. Patel-Schneider, H. Boley, S. Tabet, B Grosof, M. Dean et al., Swrl: a semantic
web rule language combining OWL and RuleML. W3C Member Submission 21, 79 (2004)
15. M. Hulsen, J.M. Zollner, N. Haeberlen, C. Weiss, Asynchronous real-time framework for
knowledge-based intersection assistance, in 2011 14th International IEEE Conference on
Intelligent Transportation Systems (ITSC) (IEEE, New York, 2011), pp. 1680–1685
16. M. Hulsen, J.M. Zollner, C. Weiss, Trafﬁc intersection situation description ontology for
advanced driver assistance, in 2011 IEEE Intelligent Vehicles Symposium (IV) (IEEE, New
York, 2011), pp. 993–999
17. Hummel, W. Thiemann, I. Lulcheva, Scene understanding of urban road intersections with
description logic, in Dagstuhl Seminar Proceedings (Schloss Dagstuhl-Leibniz-Zentrum fr
Informatik, Dagstuhl, 2008)
18. C.G. Keller, C. Sprunk, C. Bahlmann, J. Giebel , G. Baratoff, Real- time recognition of U.S.
speed signs, in 2008 IEEE Intelligent Vehicles Symposium (2008), pp. 518–523
19. R. Kohlhaas, T. Bittner, T. Schamm, J.M. Zollner, Semantic state space for high-level maneuver
planning in structured trafﬁc scenes, in 2014 IEEE 17th Inter national Conference on Intelligent
Transportation Systems (ITSC) (IEEE, New York, 2014), pp. 1060–1065
20. L. Lamard, R. Chapuis, J.-P. Boyer, Multi target tracking with CPHD ﬁlter based on asyn-
chronous sensors, in 2013 16th International Conference on Information Fusion (FUSION)
(IEEE, New York, 2013), pp. 892–898
21. D. Maquin, J. Ragot, Diagnostic des systèmes linéaires (Lavoisier, Paris, 2000)22. D.L McGuinness, F. Van Harmelen et al., Owl web ontology language overview. W3C
Recommendation 10(10), 2004 (2004)
23. B. Motik, R. Shearer, I. Horrocks, Optimized reasoning in description logics using hyper-
tableaux, in Automated Deduction–CADE-21 (Springer, Berlin, 2007), pp. 67–83
24. F. Moutarde, A. Bargeton, A. Herbin, L. Chanussot, Robust on-vehicle real-time visual
detection of American and European speed limit signs, with a modular traf ﬁc signs r ecogn ition
system, in 2007 IEEE Intelligent Vehicles Symposium (2007), pp. 1122–1126244 A. Armand et al.
25. M. Platho, J. Eggert, Deciding what to inspect ﬁrst: incremental situation assessment based on
information gain, in 2012 15th Internati onal IEEE Conference on In telligent Transportation
Systems (ITSC) (IEEE, New York, 2012), pp. 888–893
26. M. Platho, H.-M. Gros, J. Eggert, Predicting velocity proﬁles of road users at intersections
using conﬁgurations, in 2013 IEEE Intelligent Vehicles Symposium (IV) (IEEE, New York,
2013), pp. 945–951
27. E. Pollard, P. Morignot, F. Nashashibi, An ontology-based model to determine the automation
level of an automated vehicle for co-driving, in 2013 16th International Conference on
Information Fusion (FUSION) (IEEE, New York, 2013), pp. 596–603
28. V. Popovic, B. Vasic, Review of hazard analysis methods and their basic characteristics. FME
Trans. 36(4), 181–187 (2008)
29. Protégé website, http://protege.stanford.edu/ . Accessed 29 April 2015
30. Protégé Wiki website, http://protegewiki.stanford.edu/wiki/webprotege . Accessed 29 April
2015
31. Protobuf Website, https://devel opers.google.co m/protocol-buffers/ . Accessed 29 April 2015
32. R. Regele, Using ontology-based trafﬁc models for more efﬁcient decision making of
autonomous vehicles, in Fourth International Conference on Autonomic and Autonomous
Systems, 2008. ICAS 2008 (IEEE, New York, 2008), pp. 94–99
33. R.A. Retting, B.N. Persaud, P.E. Garder, D. Lord, Crash and injury reduction following
installation of roundabouts in the united states. Am. J. Public Health 91(4), 628–631 (2001)
34. T. Schamm, J.M. Zollner, A model-based approach to probabilistic situation assessment
for driver assistance systems, in 2011 14th Internati onal IEEE Conferen ce on Intelligent
Transportation Systems (ITSC) (IEEE, New York, 2011), pp. 1404–1409
35. L. Seraﬁni, A. Tamilin, Local tableaux for reasoning in distributed description logics, in
Proceedings of the International Workshop on Description Logics, DL , vol. 4 (2004), pp. 100–
109
36. R.M. Smullyan, First-Order Logic (Courier Corporation, North Chelmsford, MA, 1995)
37. S. Vacek, T. Gindele, J.M. Zollner, R. D illmann, Situation classi ﬁcation for cognitive
automobiles using case-based reasoning, in 2007 IEEE Intelligent Vehicles Symposium (IEEE,
New York, 2007), pp. 704–709
38. R. Wang, H.J. Ruskin, R. Wang, H.J. Ruskin, Modeling trafﬁc ﬂow at a single lane urban
roundabout. Comput. Phys. Commun. 147, 570–576 (2002). Proceedings of the Europhysics
Conference on Computational Physics Computational Modeling and Simulation of Complex
Systems
39. L. Zhao, R. Ichise, S. Mita, Y . Sasaki, An ontology-based intelligent speed adaptation system
for autonomous cars, in Semantic Technology (Springer, Berlin, 2014), pp. 397–413
40. C. Zinoune, P. Bonnifait, J. Ibanez-Guzman, Sequential FDIA for autonomous integrity
monitoring of navigation maps on board vehicles. IEEE Trans. Intell. Transp. Syst. 17(1),
143–155 (2016)Chapter 10
Radar Sensors in Cars
Holger H. Meinel and Wolfgang Bösch
10.1 Introduction
Advanced Driver Assistance Systems (ADAS) and autonomous driving, also based
on mm-wave radar, are in discussion everywhere these days. It is already several
years back—about 50 really—since the ﬁrst attempts of implementing radar sensors
into cars have been started. In those day s, the car was entir ely a mechanical
device, even the injection control was done m echanically; the ign ition coil—besides
lightning—then was the only electric device in the car.
Already 50 years ago, there were some people envisioning the changes towards
the electronic content in a car that have become reality today. However, they were
laughed at then. Diagram 10.1 shows the increase of electric/electronic parts in a car
as thought of in 1990s.
More electronics needed higher and—most importantly—lower cost integration
by the utilization of automated assembly lines and the use of integrated circuits
RFICs and MMICs. It was only in the early 1990s that in a MELECON Conference
in Ancona, Prof. Alberto Sangiovanni-Vincentelli (today at the University of LA,
Cal., USA) postulated to have Si wafers as large as 15 in. at the end of the century
(being said in a time with production wafers having a diameter of 4–6 in. only)—
half of the audience left the auditorium laughing.
Recently, Inﬁneon has sold more than ten million radar chips for cars (Microwave
Journal—Microwave ﬂash—July 2015).
H.H. Meinel (/envelopeback)
Daimler AG, Ulm, Germany
e-mail: holger.h.meinel@gmx.de
W. Bösch
TU Graz, Graz, Austria
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_10245246 H.H. Meinel and W. Bösch
Diagram 10.1 The increase of electric/electronic parts in a standard sedan—as predicted in
1990s. Source : DASA, Germany—business development
In the early 1970s, we had the oil crisis with car free sundays all over Europe
(Fig. 10.1),—the development of more comfortable and safer cars was not at all in
focus—the objective was to lower the fuel consumption.
Was that really the right time to develop microwave radar systems for cars, or the
Automotive Co llision Avoidance System (A CAS)—as it was dubbed then?!
Still it was done and beginning in 1972, the German government sponsored a
research program investigating radar-based Automotive Anti Collision Systems—
named NTÖ 49—which was launched at AEG-Telefunken in Ulm, Germany,
employing 35 GHz technology. Earlier attempts implementing car radar systems
were carried out at X-Band and Ku-Band, around 10 GHz and 16 GHz, shown in
Figs. 10.2 and10.3, respectively. However, the rad ar units were quite too large to ﬁt
into a standard sedan.10 Radar Sensors in Cars 247
Fig. 10.1 Autobahn near Frankfurt on 25th November 1973—the ﬁrst car free Sunday in
Germany. Source : SWP, Ulm
Fig. 10.2 10 GHz automotive radar system built by VDO, early 1970s. Source : private collection
of the author
10.2 Forward Looking Radar (FLR)
Within the research project, NTÖ AEG-Telefunken thoroughly investigated auto-
motive radar design strategies and developed the ﬁrst radar system operating
at 35 GHz in the millimeter wave frequencies range. Many innovative design
ideas were implemented, such as narrow beam width antennas with 2.5 by 3.5ı
pencil beams. The 2.5ıin azimuth was illuminating just one lane 100 m in
front, while 3.5ıin elevation was good enough to look over hills and under the
bridges. The utilization of miniaturized se miconductor two terminal devices, namely248 H.H. Meinel and W. Bösch
Fig. 10.3 16 GHz automotive radar system built by SEL (Standard Electric Lorenz) 1975. Source :
private collection of the author
Fig. 10.4 Block diagram of a 35 GHz collision avoidan ce radar built by AEG-Telefunken in 1973.
Source : AEG-Telefunken, Ulm, Germany
IMPATT-, GUNN-, and Schottky diodes and hybrid assembly technology, made it
possible to signiﬁcantly reduce the size of such a radar unit and ﬁt it into the front
of a standard sedan. IMPATT diodes were used for the radar pulse generation in
the transmitter, while GUNN diodes served as a local oscillator (LO) in the receiver
unit, and discrete beam-lead-type Schottky d iodes were used as the mixing element
in the receiver.
Figure 10.4 shows the block diagram of this ﬁrst 35 GHz collision avoidance
radar designed by AEG-Telefunken. The transmit (TX) and the receive (RX) units10 Radar Sensors in Cars 249
Fig. 10.5 35 GHz automotive radar system built by AEG-Telefunken 1974 (the driver being the
1st author of this paper). Source : private collection of the author
Fig. 10.6 MAN truck equipped with a 35 GHz sensor. Source : private collection of the author
were realized as separate modules with th eir own transmit and receive antenna, as
no adequate and technically sufﬁcient circulators at 35 GHz were available then.
The achievable pulse output power was about 100 mW with 20 ns of pulse width.
Already then, at the very beginning, the idea of using an automotive radar as
a means to reduce the accident rates on our streets was one of the major driving
forces. Therefore various cars, buses, and trucks were equipped with radar sensors
(Figs. 10.2,10.3,10.5,a n d 10.6) and tested worldwide.
In other countries, mainly in the USA and Japan, research on automotive radar
systems was initiated as well, however, at very different frequencies such as 35,
47, 60, and 94 GHz, the later being a “leftover” from military applications and250 H.H. Meinel and W. Bösch
Fig. 10.7 Antenna conﬁguration schematic of “Distronic Plus”—combining LRR and SRR for
urban employment ( yellow : 77 GHz LRR-Sensor, green : 24 GHz SRR-Sensor). Source : Daimler
AG, Stuttgart, Germany
thus components were readily available, e.g., from the DARPA sponsored MMIC
program in the USA.
Nevertheless, these ﬁrst mm-wave units operating at 35 GHz showed promising
performance. Several ten units had been built and were tested on several millions of
highway test kilometers in Germany, jointly together with Bosch, one of the AEG-
Telefunken partners within the NTÖ 49 research program.
Even trucks have been equipped and tested with the ﬁrst 35GHz radar sensors.
Based on these results, similar and slightly improved 35 GHz radar units were
forwarded to SEL company working toge ther with Mercedes-Benz within the
regime of the sponsored NTÖ 49 program.
The Japanese 60 GHz approach was a political and very pragmatic one; mm-
wave radar and future communication sys tems could be set up and investigated,
employing the entirely same semiconductor devices and mm-wave components
being developed at 60 GHz then, Fig. 10.13 .
Only the introduction of 77 GHz radar sensing, being started in Germany in the
early 1980s, as a worldwide standard for long range automotive radar (LRR) (see
also Fig. 10.7) within WARC 89 cleared this turmoil of different frequencies.
10.3 Blind Spot Detection Radar
A ﬁrst Blind Spot Detection (BSD) sensor, i.e., a Short Range Radar sensor (SSR)
for the recognition of vehicles, being in the optical blind spot of the standard
rear mirror, was presented in the early 1970s by Dunlop & Assoc. and Bendix
(Fig. 10.8) in the USA, employing slotted array-type antennas at 16 GHz. “ The
antenna patterns intersect adjacent (street) lines to illuminate the blind spot areas10 Radar Sensors in Cars 251
Fig. 10.8 Slotted array-type antennas with waveguide feeds at 16 GHz. Source : Harokopus, W.P.,
IEEE G-MTT, May 19, 1971 [ 6]
Fig. 10.9 24 GHz SDS system built by HE Microwave, 1995. Source : HE Microwave publication,
IEEE MTT-S, 1995, San Francisco, USA [ 7]
and to warn of the presence of approaching automobiles with a light or audible
signal .”
More than 20 years later, in 1995, HE Microwave Corp. (Hughes Electronics) in
Tucson, AZ, USA, already proposed 24 GHz for their SDS (side detection sensor)
system for trucks (Fig. 10.9). “The SDS was conceived to assist the driver in
accessing the viability of a planned lane change ,” as well a BSD sensor.
Today, the 24 GHz range is the general frequency approach being taken for BSD
sensing (Fig. 10.10 ).
Narrow-Band (NB) systems, operating in the ISM-Band (24.05–24.25 GHz)—
standing for Industrial, Scientiﬁc and Medical—and Ultra-Wide-Band (UWB)252 H.H. Meinel and W. Bösch
Fig. 10.10 Blind Spot Detection (BSD) incorporating two separate 24/26 GHz SRR sensors.
Source : Daimler AG, Stuttgart, Germany
systems operating between 21.65 and 26.65 GHz with various advantages and
disadvantages, are on the market today. Companies such as Valeo or Hella, just to
mention two companies in Germany, are al ready producing mor e than two million of
these NB sensors per year (2014) each. Autoliv is manufacturing UWB Blind Spot
Detection systems for Mercedes-Benz, e.g., the so-called CPA (Collison Prevention
System).
Nowadays, basically all long range automotive radar (LRR) sensors with “pencil”
beams are operating in the 77 GHz frequency range that has been allocated by the
ETSI standardization organization, wher eas the SRRs for urban trafﬁc applications
with wider azimuth antenna values are operating in the 24 GHz range—these days
(more on this subject in the Sect. 10.5).
The development of new markets and the worldwide deployment of a technically
innovative product like automotive radar is typically a reaction to social devel-
opments and the upcoming of speciﬁc needs. The worldwide trend towards huge
megacities accompanied by the democr atization of mobility in highly populated
countries like the BRIC States (Brasil, Russia, India, and China—together amount-
ing to more than 40 % of all car sales in 2012) has led to a dramatic increase in trafﬁc
density and thus accident rates on the streets, prompting the need for enhanced
vehicle safety and more driver assistance.
Due to their unique physical performance, automotive radar sensors are the
backbone of modern vehicle safety and driver assistance systems, though not being
the only means; laser scanner and video camera systems are mostly complementary
and sometimes competing technologies. However, based on the described trends,
it is quite simple to forecast that the density of radar systems will explode over
the next decades, along with the world wide hugely increasing number of cars
(Diagram 10.2).10 Radar Sensors in Cars 253
Diagram 10.2 Total car stocks by region. Source : IEA—International Energy Agency
The higher the automotive radar density operated on the road will grow the more
important it will be to guarantee the interoperability of such sensors, especially as
we are on the move from simple comfort systems to highly sophisticated safety
applications, e.g., for autonomous drivin g utilizing automotive radar systems. TÜV
certiﬁcation based on further developed A SIL deﬁnitions (i.e., setup of sensor
structures) within DIN 26262 will become necessary.
10.4 Early Systems and Their Results
1992 As early as 1992, the EATON VORAD CWS (collision warning system)
operating at 24 GHz was installed in more than 4000 buses and trucks in the USA,
from Greyhound buses (Fig. 10.11 ) to rental trucks providing an acoustic warning
for the driver only.
Being driven on more than 900 million road km, the study conﬁrmed that the
amount of accidents per km travelled was reduced by more than 50 %; more than
that, the resulting severity of accidents still occurring was signiﬁcantly reduced
(Fig 10.12 ).
However, these radar system units had to be de-installed on the long run due
to heavy protests of the US-driver unions. The CWS radar system tracked the
driving hours on the road as well and hence produced “transparent” drivers to their
employers. Obviously, the drivers did not like that at all. The time was not yet ready
for such a system.254 H.H. Meinel and W. Bösch
Fig. 10.11 24 GHz CWS system built by EATON-VORAD, 1996. Source : private collection of
Wolfgang Menzel
Fig. 10.12 Accident reduction results. Source : Woll, J. D., M&RF Conf. 1997, London, UK [ 8]
1996 Four years later in 1996, the “Automated Highway System” was installed
and tested in Japan on about 100 km of the newly built Jo-Shin-Etsu highway. The
interoperability of several systems was tested. A “leakage coaxial cable” (LCX) was
used for vehicle2roadside (v2x) communication. Magnetic nails in the road surface
and corresponding sensors in the cars provided lane control during driving, and a
mm-wave radar at 60 GHz was utilized for distance control. In addition, optical
lane markers were detected by a CCD camera installed on the car (Fig. 10.13 ).
The overall system was called ACAS (Automotive Collision Avoidance System)
and demonstrated the ﬁrst driverless car s. The “Electronic Information Systems
Research Laboratory” of Nissan Motor Co. LTD. was one of the protagonists of
this system.
The achieved and demonstrated results were very promising; however, the
required road-side installations—LCX, magnetic nails, etc.—and the sensor systems
in the car were thought to be too expensive at the time.
However, these days NISSAN is one of the technology leaders towards
autonomous driving.10 Radar Sensors in Cars 255
Fig. 10.13 Automated Highway System built by NISSAN Motor Co. Ltd. Source : Nissan Motor
Co. Ltd
1998 Two more years later, when the DISTRONIC system was introduced by
Mercedes-Benz in 1998, the acceptance rat e was not at all favorable and the timely
spread from the premium S-Class cars to o ther classes was quite slow—however,
since the introduction of DISTRONIC PLUS (1x LRR plus 4x SRR), another 8 years
later (2006), this has changed signiﬁcantly. With “ Brake Assist Plus ”a n d“ PRE-
SAFE Brake ” having become part of the system package (Fig. 10.14 ), such a system
became directly driver recognizable an d was well perceived by the public.
2011 The paradigm change from comfort systems to safety systems started to take
place, as well as the “d emocratization ” process with the introduction of the new
Mercedes-Benz B-class and A-class in 2011 and 2012, respectively. “ DISTRONIC
PLUS ” became available as a special equipmen t (Sonderausstattung) product ﬁtted
also in smaller cars. CPA—Collision Prevention Assist was already a series product
although in the beginning only as an acoustical warning signal.
2014 With the introduction of the new Mercedes-Benz C-class in spring 2014, the
further developed CPAplus (Collision Prevention Assist plus) and thus automatic
brake assist became a standard series equipment in Mercedes-Benz cars.
The “ PRE-SAFE BRAKE ” system of Mercedes-Benz or the “ Intelligent Brake
Assist ” from NISSAN are theprerequisite for advanced braking systems, that
signiﬁcantly reduce the number and the severity of road accidents.256 H.H. Meinel and W. Bösch
Fig. 10.14 Pre-safe brake—developed and conﬁrmed for sedans—now also in trucks. Source :
Daimler AG, Stuttgart, Germany
Figure 10.15 shows the reduction of accidents (in number as well as in severity)
due to the introduction of “ Distronic PLUS ,” a radar-based electronic braking
system.
A study from KPMG—August 2015—came to the result that ADAS could
reduce accidents by 80 %.
Today, we have roughly one accident per 280,000 miles driven; in 2040 this could
be only one accident per 1,600,000 miles driven.
10.5 Trends
In the future, as described above, many more sensors will be operated on the
road simultaneously. Therefore, it is quite obvious for any OEM investigating and
planning the next generation of radar; it will not be sufﬁcient to take a sensor that
has demonstrated to be insensitive agains t others. The sensor itself has also to be
proven not to interfere or to blind other systems. Testing the interoperability of
radar sensors for OEMs, as well as for the corresponding supplier, it would be
very convenient to utilize a standard interferer [ 10] as a qualiﬁcation device. Such
a test device should be able to generate a large variety of modulation schemes
and bandwidths that could be tested against the sensor under question. Another
objective has to be keeping the opportunities open to meet future demands in10 Radar Sensors in Cars 257
Fig. 10.15 Reduction of accidents based on “Distronic PLUS.” Source : Daimler AG, Stuttgart,
Germany
the process towards interoperability. One prominent issue of this concern is the
corresponding frequency band as well as the bandwidth taken per sensor to allow, for
example, frequency hopping. Future frequency regulation strategies should aim to
get worldwide access to higher frequency ba nds, as well as using larger bandwidths
per sensor. A minimum bandwidth of 1–2 GHz is very likely to be the requirement
for future trafﬁc scenarios, like pedestr ian recognition (micro-Doppler) or side-
impact-alert.
As a consequence, all this demands a common effort between radar manufac-
turers, backed by their corresponding OEMs, in order to identify and to agree
upon a common design rule book . This guideline has to quote commonly agreed
countermeasures against interferen ce, while keeping opportunities open for each
manufacturer to develop his individual radar. The EU-funded project MOSARIM
(MOre Safety for All by Radar Interference Mitigation) was a ﬁrst step in this
right direction. MOSARIM was openly described and broadly discussed within the
microwave community during the EuMW 2012 in Amsterdam; the EuMC/EuRAD
WS23 being the ofﬁcial and ﬁnal event of that program.
Today 24/26 GHz is the general frequency approach, being taken for BSD
sensing, as stated above. However, the time for changing the operating frequency
of future radar sensors from 24/26 GHz to 76–81 GHz is very likely to come soon.
There are four main reasons:258 H.H. Meinel and W. Bösch
1. Technical requirements
 of future (and more complex) driver assistance and
vehicle safety systems, demanding hi gher resolution and accuracy in space and
time.
2. Vehicle integration and sensor packaging
 demands minimization, while enhanc-
ing sensor performances.
3. Cost reduction
 based on “economies of scale.” Shifting to the 76–81 GHz range
allows to develop radar modules being able to be used for all automotive radar
types from LRR via MRR to SRR.
4. Interoperability
 , since the market penetration of a utomotive radars will explode,
interference mitigation has to become the key for further market growth. A large
bandwidth enabling frequency hopping or other efﬁcient frequency separation
procedures has to be mandatory and is worldwide available only between 76 and
81 GHz.
However, more and ongoing efforts concerning automotive radar performance
are already under development, as they will be necessary for the future.
10.6 Future Directions
Taking off from today’s already available and market introduced radar sensors,
injury free driving and a better and more efﬁcient vehicle management, resulting
in lower consumption, will be a near future issue (Fig 10.16 ).
Applications like RCTA (Rear Cross Trafﬁc Alert), supporting a driver while
backing-up out of a parking lot or RPC (Rear-Pre-Crash) and detecting and calculat-
ing critical objects approaching from the rear , are already being implemented, e.g.,
in the Mercedes-Benz S-Class , having been launched in July 2013 (Fig. 10.17 ).
Fig. 10.16 Visions for vehicle motion and safety. Source : Bosch GmbH, Stuttgart, Germany, from
a EuRAD 2012, Amsterdam, paper10 Radar Sensors in Cars 259
Fig. 10.17 The Mercedes-Benz S-Class of 2013, featuring a RPC (rear-Pre-Crash) sensor. Source :
Daimler AG, Stuttgart, Germany
In 2013, Valeo had introduced a combined BSD/RTCA sensor, employing DBF
(Digital Beam Forming) antenna technology.
The “All-around collision free” car from NISSAN utilizes the “safety shield,”
a concept being already introduced in 2005. The “Safety Shield” is an effort to
proactively achieve active safety. The car is able to help to provide assistance to the
driver for safer driving depending on the actual situation. By combining aspects of
active and passive safety, NISSAN was able to help reduce the number of fatalities
and serious injuries.
“Distance Control Assist,” based on ACC, or “Lane Departure Warning” and
even more “Lane Departure Prevention” are parts of NISSAN’s “safety shield.”
TOYOTA announced details of its entry into the autonomous vehicle race at
the annual “Consumer Electronics Show” (CES) 2013 in Las Vegas, USA, in
January. The “Advanced Safety Research Vehicle,” a Lexus RS (Fig. 10.18 ),
utilized a variety of technologies, like GPS, mm-wave radar, laser tracking, and
stereo cameras, to achieve its autonomy.
In December 2013, the Volvo Car Corporation (VCC) in Gothenburg, Sweden,
has announced the “ Drive Me—Self-driving cars for sustainable mobility ” project.
“Drive Me ”isa world unique pilot project with up to 100 self-driving cars on
public roads before 2017. If everything is running as planned and smoothly, series
production is envisioned to start in 2020 (Fig. 10.19 ).
Recently, in September 2015, the Dutch government has announced an ambi-
tious program to have automotive vehi cles on the roads before 2025. Necessary
changes are going to be implemented in existing laws to open the door for
such vehicles on public roads. In parallel, the national consortium DA VI (Dutch260 H.H. Meinel and W. Bösch
Fig. 10.18 The Lexus Advanced Safety Research Vehicle, as shown in Las Vegas, CES 2013.
Source : Toyota, Japan, from the Internet
Fig. 10.19 DRIVE-ME test car. Source : Volvo Cars Corporation (VCC)
Autonomous Vehicle Initiative) was orga nized, with the TU Delft as part of the
consortium.
Advanced signal processing of today—incorporating “big data” at very high data
rates—has made new solutions and applications possible for car radar employment.
Micro-Doppler detection for pedestrian recognition or the distinguished wheel
Doppler detection of a car are such recent examples. Super computing with Deep
learning capabilities thus will be the bac kbone for future and advanced signal
processing—bringing Automated Driving nearer to reality.10 Radar Sensors in Cars 261
Accident free driving and subsequently autonomous driving have come into reach
technically.
The following chapters will describe this situation in detail.
Further Reading
1. H. Meinel, B. Rembold, Commercial and scientiﬁc applications of millimetric and sub-
millimetric waves. Radio Electron. Eng. 49(7/8), 351–360 (1979)
2. H. Meinel, Millimeter-Wave Systems and Applications in Europe, Invited Paper ,IEEE MTT-S,
New York, 1988, pp. 649–653
3. H. Meinel, Millimeter Wave System Design and Application Trends in Europe, Invited Paper,
Alta Frequenza LVIII(5–6), 441–456 (1989)
4. H. Meinel, Automotive Radar—Present Status and Future Trends in a ‘Market to Be’
for Millimeterwaves, Invited Key-Note Talk, in 20th International Conference on IR &
Millimeterwaves , Lake Buena Vista, FL, USA, Dec 1995
5. H. Meinel, J. Wenger, G. Rollmann, H. Dominik, M. Chinn, M. Kunert, 24 GHz UWB Tech-
nology for Automotive Radar Applications, in IWUWBT2005, 2005 International Workshop
on UWB Technologies , Yokosuka Research Park, Yokosuka, Kanagawa, Japan, Paper: TA4-1,
8–10 Dec 2005, pp. 79–82
6. W.P. Harokopus, Application of Radar to Automobile Control and Sensing, IEEE G-MTT, 19
May 1971
7. J.C. Reed, Side Zone Automotive Radar Criteria for Target Classiﬁcation, in Intelligent Vehicle
Technology Conference , VTC 1995, Detroit, 25/26 Sept 1995, pp. 361–363
8. J.D. Woll, Monopulse Doppler Radar for Vehicle Applications, in M&RF Conference 1997 ,
London, UK, Sept 30–Oct 2, 28 pages
9. C. Gauss et al., Comparative Test of Advanced Emergency Braking Systems, ADAC Internal
Test Report, ADAC Technik Zentrum, Landsberg, Germany, 30 Aug 2012
10. H. Meinel, J. Dickmann, Automotive radar: From its origins to future directions. Microw. J.
56(9), 24–40 (2013). Cover Feature/Invited Paper
11. TOYOTA Deutschland GmbH—Public Relations & Press, TOYOTA entwickelt automatisierte
Fahrsysteme—neue Abstandsregelung und Fa hrspursteuerung vorg estellt, 11 Ok tober 2013
12. H. Furushou, Nissan Research Center: Private communication , and Nissan Motor Company,
Kanagawa, Japan: Technological development activities , Internet adv., Dec 2013
13. Volvo Car Corporation, Gothenburg, Sweden, Press release on behalf of “DRIVE-ME” ,D e c
2013
14. H. Yan, Drivers Stay Behind the Wheel Awhile , China Daily, Oct 2015, p. 18Part IV
In-Vehicle Architectures and Dependable
Power ComputingChapter 11
System Architecture and Safety Requirements
for Automated Driving
Jan Becker, Michael Helmle, and Oliver Pink
11.1 Toward Automated Driving
Assisted driving functions already support the driver today by taking over either
the longitudinal or the lateral driving task in speciﬁc situations. Examples are
Adaptive Cruise Control or Lane Keeping Support. While these functions support
the driver with regard to the longitudinal or lateral vehicle guidance within deﬁned
situations, handover of control back to the driver is required in case functional
system boundaries are reached or a critical fa ult is detected. Therefore, the driver
has to remain available all the time and provide fallback and recovery by means of
human intervention.
Automated driving introduces the ﬁrst driving functions that will carry out both
longitudinal and lateral control tasks simultaneously and allow the driver to be
absent from the active driving task for a limited amount of time. The driver will
be responsible for permanently supervising partially automated functions, which is
not required for highly and fully automated functions.
Different approaches exist on how to reach fully automated driving. One strategy
is to incrementally increase the amount of automation for the respective function.
For example, adaptive cruise control on highways is followed by combined longi-
tudinal and lateral control with the driver constantly supervising the function. This
is followed by highly automated driving where the driver may perform side tasks
while driving, followed ultimately by fully automated driving on highways. Another
approach is to jump directly to fully automated driving while signiﬁcantly limiting
J. Becker (/envelopeback)
R o b e r tB o s c hL L C ,P a l oA l t o ,C A ,U S A
e-mail: Jan.Becker@us.bosch.com
M. Helmle  O. Pink
Robert Bosch GmbH, Gerli ngen-Sch illerhöhe, Germany
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_11265266 J. Becker et al.
velocity, e.g., to 25 km/h. For a detailed discussion on the different strategies and
their implications the reader is referred to [ 1].
Below, we will adopt the incremental view and introduce a set of driving
functions with increasing degree of automation to set the stage for the technical
discussion. The functions referred to serve as a set of example speciﬁcations
which are currently not standardized and represent a subset of possible future
automated functions. We expect wide-scale introduction of automated driving in
well-deﬁned situations and restricted environments ﬁrst. For example, a freeway
provides an environment with unidirectional trafﬁc ﬂow, whereas urban driving
scenarios include cross-trafﬁc situations, pedestrians, and bicyclists. Consequently,
the requirements on perception, situation recognition, and decision making are
considerably higher in a more complex environment.
Figure 11.1 shows our expectation of the evolution of automated driving. For
a detailed taxonomy of automated driving functions, we refer to [ 2]. Our vision
for automated driving can be seen in [ 3] and, more speciﬁcally, how a user may
experience a highway pilot system is shown in [ 4].
Therefore, we are expecting a function such as the trafﬁc jam pilot to be the ﬁrst
highly automated driving function deployed to the market, followed by the highway
pilot. Both functions will be restricted to highway-like environments. Below, we
present a brief functional description of these two exemplary driving functions.
The function deﬁnitions given here are tentative and serve as examples to derive
requirements regarding the onboard network but are far from being standardized
and, therefore, are subject to changes in deﬁnition.
Fig. 11.1 Examples for automated highway driving functions according to the level of automa-
tion: Adaptive Cruise Control and Lane Keeping Support function are examples for assisted
functions (level 1); Integrated Cruise Assist and Highway Assist are examples for partial automa-
tion (level 2). The highway pilot and autopilot resemble high and full automation, respectively
(level 3 and 4)11 System Architecture and Safety Requirements for Automated Driving 267
11.1.1 Trafﬁc Jam Pilot
The trafﬁc jam pilot is designed to provide automated guidance of the vehicle in
situations with trafﬁc congestions on highway-like road environments. This requires
combined lateral and longitudinal guidance of the vehicle at velocities typically less
than 60 km/h on roads with more than one lane per driving direction, wide lanes,
and low curvature. Lateral guidance aims at keeping the vehicle in the current lane;
automated lane changes are not supported. Longitudinal guidance aims at keeping
a safe distance to the preceding vehicle. In case a system boundary is reached, the
driver is requested to take over control of the vehicle. If the driver is not responding
accordingly within a deﬁned time limit, the system will st art switching to the safe
state.
11.1.2 Highway Pilot
The highway pilot will extend the trafﬁc jam pilot to higher velocities of up to
130 km/h and to situations without surroundi ng vehicles. In addition, automated
lane change maneuvers and ﬁner lateral guidance within the ego lane are provided,
resulting in a more comfortable distance to adjacent vehicles. Another evolution
of the highway pilot is represented by the exit to exit function. It implements
functional features such as transitions from one highway to another highway,
including on-ramps and off-ramps. This allows the driver to enter a city area as target
destination in the vehicle navigation system, and the pilot function automatically
selects relevant combina tions of highways to reach that destination. We refer to [ 4]
for a potential implementation of such a highway pilot system.
11.2 System Architecture
The use cases in the previous section enable us to deﬁne requirements for individual
components of an automated driving system. While an automated driving function
does not necessarily have to cover all situations, it is desirable to cover as many
as possible in order to obtain higher availability of the function and less frequent
takeover requests to the driver. Furthermore, in case of the occurrence of any
unforeseen situation, the function must be able to handle the situation until the driver
has taken back control.
Similarly, in case of hardware failures, the system needs to stay operational,
at least with reduced functionality, until the driver has taken back control. This
imposes additional requirements on the sensor set, electronic control units (ECUs),
communication network, power supply, and actuators [ 5].268 J. Becker et al.
Fig. 11.2 Simpliﬁed example for the functional architecture of a highly automated driving vehicle.
Redundant sensors and other system input are on the left. Algorithmic components in the center
(dark gray boxes ). Redundant actuators on the right
The use cases to be covered by a respective function typically have an impact on
all components. For example, snowfall can lead to limited sight of the sensors, will
affect a surround-sensor-based localization system due to different appearance of
the surroundings, may require decision making to drive more slowly, and causes a
low friction road surface which requires appropriate motion control capabilities [ 6].
Technical solutions for automated driving have been developed during the 2007
DARPA Urban Challenge [ 7] and have been improved since [ 8–10]. These systems
need to be further extended in order to be capable of handling all situations
that occur in real trafﬁc. In the following sections, the impact of handling the
aforementioned use cases will be detailed for some of the key components of an
automated driving system.
Figure 11.2 shows a simpliﬁed functional architecture for highly automated
driving. Functional redundancy is employed on the sensor and actuator level.
11.2.1 Surround Sensors
The surround sensor set for automated highway driving must be capable of reliably
detecting all relevant obstacles in any situation the vehicle may encounter. In
addition to physical redundancy for handling, e.g., hardware failures, this requires
a diverse sensor set with different sensing technologies. Even under adverse
circumstances, relevant obstacles have to be detected by at least one sensor. Sensors
have to fulﬁll different requirements in different areas around the vehicle. The
detection range and reliability in each area are deﬁned by the respective most
challenging use case.
For the front sensor set, this could be a comfortable stop behind a standing
vehicle, given that there is no oncoming trafﬁc on highways, for example, the rear11 System Architecture and Safety Requirements for Automated Driving 269
Fig. 11.3 Example of sensor set and associated ﬁeld of view for highly automated driving
end of a trafﬁc jam. The object detection reliability is dependent on the distance
from a vehicle ahead. Late detection of a sl ow vehicle ahead will lead to a harder
and potentially uncomfortable braking man euver. However, any potentially harmful
object has to be detected early enough so that an emergency maneuver can be
triggered. Consequently, the area gua ranteed to be free of potentially harmful
obstacles needs to be determined, and the vehicle must be able to perform a potential
emergency maneuver within this area.
For the rearwards facing sensors, the most challenging use case encountered on
highways is typically a fast approaching v ehicle from behind with an approaching
speed of up to 250 km/h.
For the side sensor set, the detection range is deﬁned by the lane change use
case and has to cover an area around the vehicle large enough to ensure that the
neighboring lane is free. Consequently, the detection range has to cover at least two
adjacent lanes to the left and two adjacen t lanes to the right of the vehicle.
Figure 11.3 shows an exemplary sensor set for highly automated driving.
11.2.2 Perception
The main goal of the perception system is to combine all sensor measurements
into a consistent representation of the surrounding world. There are many fusion
algorithms proposed to this end. They can be categorized into object-level fusion,
where each individual sensor delivers object hypotheses which are combined in a
subsequent fusion step, e.g., [ 11], and feature-level fusion, where lower-level sensor
data is directly used to update a world model, e.g., a grid or particle representation
[12]. In general, the output of any fusion system is an obstacle representation, for
example, an occupancy grid or an object list or a combination of both.270 J. Becker et al.
In addition to a representation of all known obstacles, perception also needs to
provide a notion of the unknown for many use cases. For example, if the ﬁeld of
view is limited due to fog or obstructions, the system needs to adapt its speed
accordingly, because there may be undetect ed obstacles outside the ﬁeld of view.
Instead of explicitly modeling the “knownness,” our perception system computes
and outputs a “free space,” known to be fre e of obstacles. An area that is neither
part of the free space nor part of an obstacle is considered unknown. The perception
system uses measurements from the road surface and other clues, such as positions
of detected obstacles, to d etermine the free space.
11.2.3 Localization
Localization is the process of estimating the vehicle position and orientation with
respect to a given map. We distinguish three levels of localization precision:
– Road precision: On which road am I?
– Lane precision: On which lane am I?
– Sub-lane precision: Where within the lane am I?
The different levels are used at different steps during the decision making
process. Localization on road level is required for function activation, e.g., if the
function is limited to a certain set of roads, e.g., highways, and in order to determine
the route from the current position to the desired destination. Lane-level localization
is mainly required for lane change use cases, e.g., whether a lane change is possible
or whether we have to change lanes in ord er to reach our navigation goal. Sub-lane
level localization is required for maintaining the proper position within the lane.
Unavailability of any of these localization levels may lead to degradation of the
functional performance or even to a driver takeover request. For example, if the
activation relies on road-level localization, it has to be available to offer the function
to the driver. If lane localization is unavailable, lane changes may not be possible
during this time. Special situations, such as driving in a tunnel or under a bridge,
may lead to temporary unavailability of any of the aforementioned levels, even
when using state-of-the-art satellite-based localization systems. To recover in these
situations, we use surround-sensor inform ation in addition to Global Navigation
Satellite System (GNSS)-based information for localization. Such surround-sensor-
based localization systems have been proposed for several sensor technologies (e.g.,
camera [ 13]o rL i d a rb a s e d[ 14]). Similar to the perception system, combining
multiple sensing technologies increases the overall availability of the localization
system. In order to guarantee a high availability, we are using a combination of all
available sensing technologies for localization.11 System Architecture and Safety Requirements for Automated Driving 271
11.2.4 Decision Making
It is essential to adapt the behavior of an automated vehicle to the current driving
situation, especially in challenging situations. This includes determining a safe
maximum vehicle speed and safety distances for the current situation, for example,
based on the current sensor viewing ranges, road surface condition, or the speed of
other vehicles. Using the free space representation from the previous section, the
maximum vehicle speed could be selected so that we can perform an emergency
maneuver within the current free space.
Before executing any given maneuver, d ecision making also has to determine
whether this maneuver can be performed sa fely in the respective situation. For
example, lane changes will not be performed when fast vehicles are approaching
from behind or if the vehicle is driving in a narrow curve where the ﬁeld of view is
limited.
Decision making is also responsible for following trafﬁc rules. Essentially, the
entire subset of local trafﬁc rules [ 15,16] that applies to highway driving needs
to be implemented in the planning system. This differs signiﬁcantly from country
to country, which is illustrated by some of the rules that are implemented in our
planning system for lane changes in the USA and Germany, respectively:
USA:
– Perform a lane change to another lane ( left lane preferred but not mandatory)
if the vehicle ahead is driving signiﬁcantly slower than our desired speed.
– If approaching a highway split or exit, change onto a lane that continues
toward our navigation goal.
Germany :
– Rightmost lane: Perform a lane change to the left if the vehicle ahead is driving
signiﬁcantly slower than our desired speed. Since passing other vehicles on
the right-hand side is illegal, the same rule applies to any other vehicles ahead
on our left-hand side.
– Middle lane(s): Perform a lane change to the left if the vehicle ahead in our
lane (or in any lane left to us) is driving signiﬁcantly slower than our desired
speed. Change to the right if there is no vehicle in sight (the law states that
continuous driving in the middle lane(s) is allowed if there is a vehicle in the
rightmost lane “occasionally” present).
– Leftmost lane: Immediately change lanes back to the right if we can continue
there with our desired speed for at least several seconds.
– If we approach a highway split or exit, the above rules apply to all lanes that
continue toward our navigation goal. That is, if no other trafﬁc is present,
change onto the rightmost lane that continues toward our navigation goal.
– At speeds below 80 km/h, passing on the right-hand side with moderately
higher speed is permitted.272 J. Becker et al.
– In trafﬁc jams, only change lanes if required (e.g., due to a lane ending), the
rule of driving in the rightmost lane does not apply.
There are several additional rules related to lane changes that are not listed, for
example, based on the distances and speeds of vehicles in the target lane. Our
implementation makes use of a hierarch ical state machine, which is a common
approach for automated driving systems [ 17,18]. Different driving behaviors, such
as lane following or lane changing, are modeled as states. Maneuver decisions,
including the aforementioned trafﬁc rules, safety considerations, and interactions
with other vehicles, are modeled as state transitions.
11.3 Functional Safety Concept
As one of the ﬁrst activities in the safety lifecycle according to ISO 26262 [ 19],
the hazard analysis and risk assessment (H&R) shall be conducted. As a result, the
safety goals and the related ASIL ratings shall be deﬁned.
For the trafﬁc jam pilot, the hazard analy sis and risk assessment yields among
others the following safety goal: “Avoid in sufﬁcient vehicle deceleration when traf-
ﬁc jam pilot is active.” Evaluation of the severity of the possible harm (S3), exposure
(E3), and controllability by the driver and other involved trafﬁc participants (C3)
leads to assignment of ASIL C for this safety goal. The deﬁnition of the safe states
is based on this safety analysis. According to ISO 26262-1, the safe state is deﬁned
as “operating mode of an item without an unreasonable level of risk” (cf. [ 19]). In
the context of automated driving, there are usually two types of safe states including
different criteria (see Table 11.1).
In general, zero collision risk would imply to have a prediction horizon to inﬁnite
future times. We refer to the discussion in [ 20], where the authors conclude that all
of the classic planning methods are arguably unsafe. However, in the context of a
certain world model, it can be argued according to [ 20] that an automated vehicle
does not actively harm and that it can be designed to be as safe as humanly possible.
In simple terms, the safe state translates to bringing and keeping the vehicle in a
Table 11.1 Potential safe states for automated driving functionalities
Safe state
 Criteria for the safe state
The driver takes over control of the vehicle
  Maximum period of time allowed for
driver takeover
 Functionality to be maintained while
waiting for driver takeover
The automated driving functionality switched to
a degraded operation mode and ﬁnally into the
safe state
 Maximum estimated time to reach the
safe state
 Minimum functionality to be maintained
while transitioning to the safe state
11 System Architecture and Safety Requirements for Automated Driving 273
standstill condition in a safe location wh ile sending out warning signals to other
trafﬁc participants, e.g., via hazard m essages or activated warning lights.
For the trafﬁc jam pilot, a possible strategy is to moderately decelerate the vehicle
within the current lane and keep it in standstill there, i.e., parking the vehicle. At
ﬁrst, a request for driver takeover is issued; however, if the driver does not respond or
a critical failure is detected, the vehicle s lows down automatically. The deceleration
is accompanied by warning signals for the surrounding trafﬁc participants and
possibly by an emergency call, depending on the driver’s state.
For vehicle velocities lower than 60 km/h and an assumed deceleration of at least
/NUL3m / s2, the time required to reach standstill is approximately 6 s. The vehicle
travels a maximum distance of approximately 50 m during this time within the
current lane. This emergency trajectory has to be planned ahead and stored securely,
since the trafﬁc jam pilot will rely on it as the fall back reaction in case of a relevant
system failure. Consequently, a valid emergency trajectory has to be available before
the automated driving function can be activated.
This deﬁnition is insufﬁcient for the highway pilot due to the higher relative
velocity range and potentially more complex trafﬁc situations compared to a trafﬁc
jam situation. The safe state has to be determined situation dependent and could be
one of the following states:
– Driver takes over control of the vehicle.
– Stopping the vehicle in the current lane.
– Decelerate and pull over t o the rightmost lane (for r ight-hand trafﬁc).
– Decelerate and pull over to the emergency lane.
– Continue driving at reduced speed to a safe location.
These examples show that safe states for automated functionalities are very
complex and can take quite some time t o reach. The time to reach the safe state
is deﬁned as emergency operation interval in ISO 26262-1 (cf. [ 19]).
The maximum transition time to the safe state can be split in the following two
contributions:
– The maximum time span to wait for driver takeover.
– The time span required to take the vehicle to the safe state without support by the
driver.
B o t ha d du pt ot h ef a u l tr e a c t i o nt i m e ,w h i c hi sd e ﬁ n e di nF i g . 11.4.D u r i n g
both time durations, the system completely controls the vehicle. Therefore, the
corresponding system function has to be provided with high reliability. For most
cases, this corresponds to a safety goal rated ASIL D according to ISO 26262.
Table 11.2 summarizes preliminary concepts regarding maximum allowance for
driver takeover and corresponding safe state for the trafﬁc jam pilot and highway
pilot. We want to emphasize that these num bers are given as an indication only. The
exact values depend on many parameters such as
– Type of automated functions
– Deﬁnition of the safe state(s)274 J. Becker et al.
timenormal 
operationoccurrence 
of  fault
fault 
detection
timefault 
reaction
timesafe statefault tolerant time 
intervalpotential 
hazard
transition to 
safe statefault detection
Fig. 11.4 Deﬁnition of fault r eaction time and fault-tolerant time interval adapted from ISO
26262-1, 1.44 (cf. [ 19])
Table 11.2 Estimation of maximum tolerable times
Automated driving
function
Estimated time for
driver takeover (s)
 P o s s i b l es a f es t a t e
Criteria for the safe
state
Trafﬁc jam pilot
 10–15
 Standstill in current lane
 Up to 5 s
Highway pilot
 10–15
 Standstill on rightmost
lane
Approximately 30 s
Highway pilot
 10–15
 Standstill on emergency
lane
Approximately 60 s
Highway pilot
 10–15
 Standstill in breakdown
bay or parking lot
Up to 30 min
– Driving conditions
– Vehicle type
Final assessment of these parameters will require in-depth HMI and user expe-
rience studies. From the safety perspectiv e, critical procedures are activation and
deactivation of the automated function. At these particular events, the responsibility
for controlling the vehicle is transferred from the human driver to the system and
vice versa. The HMI is responsible for providing transparent state information to
the driver, i.e., whether the automated function can be activated and subsequently
control the vehicle so that the driver can release control. The same argument applies
for deactivation where handover of control to the driver is required. In addition,
warning signals and indications of the planned driving maneuver in fallback mode
need to be issued reliably to other trafﬁc participants.
In the fallback mode of a highly automated vehicle, the system cannot rely on
driver actions any more. The mechanical fallback solution that is offered by many
brake systems in use today has no beneﬁt in automated mode. Instead, the safety
concept requires a redundant “drive-by-wi re” functionality in the automated mode.11 System Architecture and Safety Requirements for Automated Driving 275
Legal aspects have to be considered as well, for instance, the Ofﬁcial Journal of
the European Union, ECE_R13-H for the braking system [ 21] and ECE_R79 for
the steering system [ 22], speciﬁes explicit design and test criteria. At least two
independent channels are required for th e operating braking system as well as an
additional fail-operational parking brake system. For the steering system, there is
currently a test catalog deﬁned in [ 22] which demands a degraded steering operation
for an extended time interval of 40 min. We refer to [ 23] for a detailed discussion
of the legal situation in the context of tele-operated and automated vehicles with
respect to braking and steering systems.
Contemporary surround sensors have a limited ability to reliably detect and
classify objects. Therefore, functional redundancy is required in a way that at least
in critical regions around the vehicle surround sensors using different technologies
can provide an overlapping ﬁeld of view. This is in the functional safety concept
addressed as functional redundancy (see Fig. 11.2). For the trafﬁc jam pilot, a
minimal set of surround and localization sensors is required to safely navigate
to the safe state. For the highway pilot system, the sensor cluster becomes even
more important since feed-forward control o n a pre-computed fallback trajectory is
not sufﬁcient for the longer operation times in fallback mode, instead the fallback
trajectory needs to be updated permanently.
11.4 Technical Safety Concept
In the following, we discuss exemplary architectural issues regarding the technical
safety concept. Due to space restriction of our presentation, we will not be able to
discuss software- and hardware-related safety measures but rather restrict ourselves
to some aspects of the onboard communication and power network.
The technical safety concept referenced in the ISO 26262 has to specify
technical safety requirement s covering system external interfaces, environmental
and functional constraints, and safety mech anisms related to detection and control
of faults.
For highly safety relevant systems, i t is recommended to carry out the safety
analysis both in a deductive and an inductive way. However, a detailed safety
analysis is beyond the scope of this article. We will restrict the discussion here to
the most prominent components from the perspective of the safety concept. Firstly,
these are the braking and steering systems and the control units. Depending on the
deﬁnition of the safe state, also the power train can be of concern (not considered
here).
Maintaining a fail-operational orfail-degraded system operation, while transi-
tioning into the safe state, requires high availability of the actor control and in
particular the actors. From the safety p erspective, this can be achieved by a cor-
responding design or by employing redundancy concepts. As far as braking systems
are concerned, redundancy concepts can be established based on technology already
available today, for an example conﬁguration see Sect. 11.4. As a prerequisite for276 J. Becker et al.
the braking system redundancy, the power supply system must reach a maximal
availability (see Table 11.2). This results in requirements for the power supply
system, which are beyond today’s implementations.
11.5 Requirements Imposed on the Onboard Network
by Automated Driving Functions
In Sect. 11.3, we discussed the different automated driving functions together with
the corresponding safe states and transitio n times to the safe state. In this section,
we derive resulting requirements for the onboa rd electrical systems, i.e., the electric
power network and the communication network.
11.5.1 Requirements for the Electric Power Supply
The electrical power net has to provide two independent energy storage capabilities
that are able to supply the components requi red for transitioning to safe state. The
electrical storage has to provide the energy capacity under all environmental and
climatic conditions for which automated driving has been released. Monitoring of
the energy content has to be implemented, and the energy content has to be checked
reliably before the automated driving mode is offered to the driver. Moreover,
the diagnostic system has to guarantee that automated driving mode can only be
activated if the energy storage will be cap able of supplying the critical components
for at least a deﬁned time that is needed to r each a safe state. This is a more delicate
task than just monitoring voltage levels.
The power supply topology has to be designed in a way that deﬁned minimum
functionality can be provided in single-point failure situations. Resulting critical
failures are rated ASIL D, and, therefore, the related failure rate must be sufﬁciently
low. Wiring of components has to be organized in a way that a minimal set of
required components in the fallback scenario will stay operational.
11.5.2 Requirements for the Communication Network
Our presentation of the communication network in Fig. 11.5 is kept very abstract, for
instance, we have drawn all communication channels as point-to-point connections.
Bus topologies can be used as well; however, the single-point failure tolerance has
to be carefully evaluated.
A challenging requirement is the maximum tolerable latency time, which is
imposed on the communication network. Maximum latency times can be derived11 System Architecture and Safety Requirements for Automated Driving 277
Sensing 
Cluster 1
Control
Unit 1
HMI 1
Sensing 
Cluster 2
HMI 2Control
Unit 2Brake
System 1
Brake
System 2
Redundant  
SteeringPower net 1
Power net 2
Fig. 11.5 System architecture for a potential trafﬁc jam pilot/highway pilot system. Solid lines :
power net 1 and 2. Dotted lines : communication lines. The sensing clusters contain environment
and localization sensors. While not necessarily required for the trafﬁc jam pilot system, the
highway pilot demands a redundant electrical supply for the steering system
from the speciﬁcation of the fault reaction time deﬁned for each safety goal by
subtracting the time required by the control units, sensors, and actors to process
the request. Thereby, existing gateways and switches have to be considered as
well. A guaranteed latency time with respect to the communication channel is
easily achieved using time-triggered protocols but more difﬁcult to assure for event-
triggered communication.
Regarding the detection of errors that lead to missing or falsiﬁed data content,
standard measures like end-to-end safeguarding have to be applied; the concepts for
this are, for instance, described in [ 24].
11.6 Requirement Implications
Considering the requirements derived above, we present a coarse architecture
solution, which addresses part of the constraints. In Fig. 11.5, we sketch the coarse
E/E architecture of a hypothetical trafﬁc jam pilot system. We have chosen to278 J. Becker et al.
display a distributed architecture variant with two separate control units. Using
different control units supports the argumentation for freedom of interference of the
redundant units. An alternative architectural variant could be based on a central ECU
hosting both units sufﬁciently decoupled, i.e., with independent electrical supply,
independent communication channels, and sufﬁciently low thermal coupling. The
latter variant will save construction space and supports high data bandwidth between
both units but requires a careful design for the assertion of freedom of interference.
Control unit 1 is responsible to comput e the vehicle’s future collision-free
trajectory. Therefore, control unit 1 receives input data from the environment
sensors and the location sensors (sensing cluster 1) in order to judge the relative
positions and velocities of objects in relation to the vehicle. The sensing clusters
in Fig. 11.5 can be realized in different ways: as physically redundant sensors, as
sensor units with redundant electrical and c ommunication interfaces, or as sensors
with different diverse data processing in terfaces, provided that common cause faults
are sufﬁciently controlled. We will not elaborate this issue further but rather focus
on the onboard network. Since the correctness of this computation is rated safety
critical, there has to exist a redundant path composed from sensing cluster 2 and
control unit 2. The redundancy has to be static or dynamic in hot standby mode (see
deﬁnition in [ 25], Fig. 11.6) in order to meet the timing requirements.
Brake Request
Wheel impulse 
countersElectric power 
supplies4 4 1 1ESP
ECUiBooster
ECU
Fig. 11.6 Redundancy concept for fail-degraded brake system. Each brake system has to be
independently electrically supplied and connected to one of the two sets of wheel impulse counters
(four for each set)11 System Architecture and Safety Requirements for Automated Driving 279
Depending on the interpretation of the situation, the redundancy can be asym-
metric, i.e., the function executed on control unit 2 is not necessarily required to
understand the situation in the same level of detail as the function hosted on control
unit 1. This offers a good opportunity to implement diversity in the development
of the function running on control unit 2. The same argument is applicable to
the sensing clusters, where the use of sensors with diverse principles of physical
measurement is usually required to cope with their weaknesses. The emergency
trajectory has to be stored in both braking systems in order to be available with high
reliability, even in degraded mode.
For the trafﬁc jam pilot, we assumed in Sect. 11.1 that the safe state is deﬁned
as decelerating the vehicle to standstill in its current lane and keep it parked.
Transition to the safe state is primarily a task for the braking system, which in case
of a nonfunctional steering system can even provide small lateral corrections by
asymmetric brake interventions required to keep the vehicle in the current lane. In
fact, this is a steering control redundancy with limited performance.
Therefore, the capability to provide controlled braking of the vehicle is crucial
and has to be maintained with high reliab ility. Taking into account legal require-
ments, which mandate two independent channels for a braking system (cf. [ 21]),
this requirement translates into a fail- operational braking system where each unit
has to be independently electrically supplied. In addition, a fail-degraded HMI is
required to reliably communicate the system status to the driver in the context of
activation and takeover.
For the highway pilot, this system architecture has to be complemented with a
fail-operational steering system. The st eering system thus needs a second electrical
feed. This requirement is imposed by the possibly higher vehicle velocity leading
to a longer distance to reach the safe state an d the less constrained motion of other
vehicles. Therefore, lateral control i s necessary in the fallback mode for a certain
period of time and a minimum of perception capabilities in order to avoid collisions
with other trafﬁc participants. Depending on the deﬁnition of velocity range and safe
state, a reliable limp home functionality has to be supported. This would require
a fail-degraded power train architecture and would represent an extension to the
architecture given in Fig. 11.5.
11.7 Safety Architecture Solutions
In the previous section, the exemplary safety goal “avoid insufﬁcient vehicle
deceleration when trafﬁc jam pilot is activ e” was derived. Below, the consequences
with respect to the system architecture of the braking system will be elaborated.280 J. Becker et al.
In order to reach the trafﬁc jam pilot safe s tate (vehicle is decelerated and parked
within the driving lane), the following functionalities of the braking system have to
be fail degraded:
– Active pressure buildup
– Avoidance of locked wheels at the rear axle in order to maintain stability of the
vehicle
Control of the front-wheel slip in low /c157situations to provide the lateral
forces required for small corrective steer ing maneuvers in order to follow the pre-
calculated emergency trajectory.
A possible concept for a fail-degraded brake system realizing this safe state is
shown in Fig. 11.6. This ﬁgure focuses on speciﬁc parts of the redundancy concept
and does not show all components in detail.
This exemplary setup contains two i ndependent systems, each of them capable
to fulﬁll the requirements regarding em ergency operation to reach the safe state.
During normal operation (both systems are free from errors), the ESP takes the
tasks of vehicle stability control incl. the processing of vehicle deceleration requests
(issued by the automated driving functionality). In case of a fault forcing the ESP
into degraded mode (or even fail safe mode), the automated driving functionality
is switched into degraded mode. In this scenario, the iBooster performs the task of
bringing the vehicle into the safe state. This concept is called dynamic hot standby
redundancy (cf. [ 25]).
The mechanical push-through that is available in today’s braking systems has
no beneﬁt in the automated driving mode. This is due to the fact that the driver
is out of the loop in these automated driving situations. The same argument
applies to the steering system; therefore, a fail-operational electrical steering is
required. Redundant steering systems are likely to be designed as one-box solutions,
embedding inherent redundancy rather t han using two redundant systems. Such
steering systems then require dual electrical feed from independent power sources
as sketched in Fig. 11.5.
Our overall concept for redundant actuation is shown in Fig. 11.7. The redundant
braking is realized by combining ESP and iBooster, while a redundant steering
system is realized by combining elect ronic power steering with ESP, which can
issue a yaw momentum through braking of individual wheels.
This paper has not yet discussed a detailed architecture of the environment sensor
set. It will be a formidable future task to design an electrical and communication
topology for the sensor clusters which will support all functional use cases, all safety
goals, and at the same time man age to achieve target costs.
Finally, we would like to point out that the coexistence of other driving func-
tionalities with an automated driving system, for instance, the functional behavior
at deﬁned system boundaries, shall also be considered for the design of the onboard
network.11 System Architecture and Safety Requirements for Automated Driving 281
Redundant steering system
Redundant braking systemElectronic 
power 
steeringESP iBooster
Fig. 11.7 Overall concept for redundant actuation. Redundant braking is realized by combining
ESP and iBooster, redundant steering is realized by combining electronic power steering with ESP,
which can issue a yaw momentum through braking of individual wheels
11.8 Conclusion
In this paper, we provided a high-level overview of our development of highly
automated driving systems. We illustrated challenging situations and use cases
and outlined their impact on system desi gn, key technologies, and their technical
realization. The paper also exempliﬁes how certain aspects of the system design
as well as the implementation are country and use case speciﬁc. We are convinced
that automated driving is becoming a reality, offering beneﬁts for safe, relaxed, and
economical driving, and we expect a stepwise introduction of automated driving
starting with increased levels of automation on the highway. The ﬁrst highly
automated driving function will be a trafﬁc jam pilot. The trend toward automated
driving is generating new technical challenge s for the sensors, algorithms, actuators,
as well as for the E/E architecture of future vehicles. We discussed the implications
of the new functionalities o n the onboard supply and communication network in this
paper. Derived from safety aspects and legal constraints, we argued that redundant
electric onboard network and redundant communication network is required even
for closer-to-market highly automated driving functions such as the trafﬁc jam pilot.
For the highway pilot, the standard concept of one safe state per safety goal has to be
revisited in favor of a cascade of safe reactions. The corresponding transition times
are likely to be on the order of minutes. The onboard net has to provide the required
energy capacity during this time safely.282 J. Becker et al.
References
1. International Organization for Standardization, Road Vehicles—Functional Safety. ISO 26262-
10, 2012 (2012)
2. L. Lutz, T. Tang, M. Lienkamp, Analyse der rechtlichen Situation von teleoperierten
(und autonomen) Fahrzeugen (2012), http://www.ftm.mw.tum.de/uploads/media/07_Lutz.pdf .
Accessed 28 Mar 2014
3. Robert Bosch GmbH, Bosch Automated Driving (2013), http://youtu.be/0D0ZN2tPihQ .
Accessed 10 Jul 2015
4. Robert Bosch GmbH, Bosch User Experience for Automated Driving (2015), https://youtu.be/
2i-t0C7RQWM . Accessed 10 Jul 2015
5. M. Helmle et al., Transient System Safety and Architectural Requirement for Partly and Highly
Automated Driving Functions, in Electric & Electronic Systems in Hybrid and Electric Vehicles
and Electrical Energy Management (2014)
6. J. Becker, M. Helmle, Architecture and System Safety Requirements for Automated Driving,
inRoad Vehicle Automation 2 , ed. by G. Meyer, S. Beiker. Lecture Notes in Mobility, vol. 2
(Springer, Cham, 2015), pp. 37–48
7. M. Buehler, K. Iagnemma, S. Singh (eds.), The DARPA Urban Challenge. Autonomous
Vehicles in City Trafﬁc . Springer Tracts in Advanced Robotics, vol. 56 (Springer, Berlin, 2009)
8. Google Inc, Google Self-Driving Car Project, Monthly Report, May 2015, http://static.
googleusercontent.com/media/www.google.com/us//selfdrivingcar/ﬁles/reports/report-0515.
pdf. Accessed 8 Jun 2015
9. H. Lategahn, C. Stiller, Vision-only localization. IEEE Trans. Intell. Transp. Syst. 15(3), 1246–
1257 (2014)
10. C. Stiller, J. Ziegler, Situation Assessment and Trajectory Planning for AnnieWAY , in
IEEE/RSJ International Conference on Intelligent Robots and Systems. IROS Workshop on
Perception and Navigation for Autonomous Vehicles in Human Environment , San Francisco,
30 Sep 2011
11. M. Aeberhard et al., Object Existence Probability Fusion Using Dempster-Shafer Theory in
a High-Level Sensor Data Fusion Architecture, in Intelligent Vehicles Symposium (IV) , 2011
IEEE, Baden-Baden, 5–9 Jun 2011
12. T. Gindele, S. Brechtel, J. Schroeder et al., Bayesian Occupancy Grid Filter for Dynamic
Environments Using Prior Map Knowledge, in 2009 IEEE Intelligent Vehicles Symposium (IV) ,
Xi’an, 3–5 Jun 2009
13. T. Jiang, S. Petrovic, U. Ayyer et al., Self-driving cars: Disruptive or incremental? in Applied
Innovation Review , vol. 1 (Sutardja Center for Entrepreneurship & Technology, University of
California, Berkeley, 2015), pp. 3–22
14. J. Levinson, S. Thrun, Robust Vehicle Localization in Urban Environments Using Probabilistic
Maps, in 2010 IEEE International Conference on Robotics and Automation (ICRA) , Anchor-
age, 3–8 May 2010
15. California DMV, California Driver Handbook (2015), https://apps.dmv. ca.gov/pubs /dl600.pdf .
Accessed 10 Jul 2015
16. D. Sales, D. Correa, L. Fernandes et al., Adaptive ﬁnite state machine based visual autonomous
navigation system. Eng. Appl. Artif. Intell. 29, 152–162 (2014)
17. SAE International, On-Road Automated Vehicle Standards Committee, Taxonomy and Deﬁni-
tions for Terms Related to On-Road Motor Vehicle Automated Driving Systems (2014), http://
standards.sae.org/j3016_201401/ . Accessed 30 Oct 2014
18. Federal Ministry of Justice and Consumer Prot ection, Straßenverkehrs-Ordnung StVO. Teil I
(2013), http://www.gesetze-im-internet.de/stvo_2013/index.html . Accessed 1 Mar 2013
19. International Organization for Standardization, Road Vehicles—Functional Safety. ISO 26262-
1, 2011 (2011)11 System Architecture and Safety Requirements for Automated Driving 283
20. R. Benenson, T. Fraichard, M. Parent, Achievable Safety of Driverless Ground Vehicles, in
10th International Conference on Control, Automation, Robotics and Vision , 2008, Hanoi, 17–
20 Dec 2008
21. United Nations Economic Commission for Europe, Regulation No 13-H of the Economic
Commission for Europe of the United Nations (UN/ECE). Uniform provisions concerning theapproval of passenger cars with regard to braking. Off. J. Eur. Union L 230, 1–80 (2010)
22. United Nations Economic Commission for Europe, Regulation No 79, Addendum 78, Revision
2, of the Economic Commission for Europe of the United Nations (UN/ECE). Uniformprovisions concerning the approval of vehicles with regard to steering equipment. Off. J. Eur.Union L 137, 25–51 (2008)
23. J. Levinson et al., Towards Fully Autonomous Driving: Systems and Algorithms, in Intelligent
Vehicles Symposium (IV) , 2011 IEEE, Baden-Baden, 5–9 Jun 2011
24. AUTOSAR R4.0, Rev 2, Technical Safety Concept report Status V1.1.025. R. Isermann, R. Schwarz, S. Stölzl, Fault-tole rant drive-by-wire systems. IEEE Control Syst.
Mag. 22(5), 64–81 (2002)Chapter 12
Advanced System-Level Design
for Automated Driving
Jan Micha Borrmann, Sebastian Ottlik , Alexander Viehl, Oliver Bringmann,
and Wolfgang Rosenstiel
12.1 Motivation
Automated driving (A.D.) requires concurrent execution of multiple complex driv-
ing functions on automotive embedded platforms. In general, such systems can be
partitioned into early stages including sensor processing, individual perception, and
cognition functions and into later, more centralized stages that perform data fusion,
planning, and decision making. In this ch apter, we exemplarily concentrate on
automotive embedded processing systems for perception and cognition problems,
however, we expect similar problems also on later stages such as data fusion. For
perception and cognition, one can observe a wide gap between required processing
power and the achievable embedded realizations which have to fulﬁll non-functional
requirements such as low power and small cost. Furthermore, these systems must
perform all processing under strict safety requirements that guarantee deadlines and
provide high system robustness.
Regarding their development, there is a lack of efﬁciency when applying estab-
lished methodologies to modern heterogeneous architectures that employ hardware
acceleration to meet performance requireme nts. Finally, there is a lack of hardware
architectures that can scale towards the e ver-growing processing requirements. In
this chapter, we ﬁrst identify these gaps based on a case study of a single perception
and cognition function. Afterwards we present novel solutions that tackle these gaps
J.M. Borrmann ( /envelopeback)  S. Ottlik  A. Viehl
FZI Research Center for Information Technol ogy, Haid-und-Neu-Str. 10–14, 76131 Karlsruhe,
Germany
e-mail: borrmann@fzi.de ;ottlik@fzi.de ;viehl@fzi.de
O. Bringmann  W. Rosenstiel
Wilhelm-Schickard-Institute for Computer Science, University of Tübingen, Sand 13, 72076
Tübingen, Germany
e-mail: oliver.bringmann@uni-tuebingen.de ;wolfgang.rosenstiel@uni-tuebingen.de
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_12285286 J.M. Borrmann et al.
individually. Finally, we introduce a powerful framework for modern automotive
platform design based on these solutions.
12.2 State-of-the-Art
This section consists of two parts: First, we give an overview on current heteroge-
neous automotive processing hardware and d iscuss state-of-pr actice for automotive
timing analysis and multitasking. Then we discuss embedded prototyping. Focusing
on perception and cognition, we then present a case study based on our previous
work [ 7] to identify current deﬁciencies o f embedded automotive processing
architectures and their development.
12.2.1 Overview on Current Embedded System Design
We ﬁrst give an overview on current heterogeneous embedded platforms for
advanced driver assistance systems (AD AS) and automotive processing before
we summarize current automotive software development with regards to timing
analysis, automotive multitasking, and prototyping. The shortcomings of current
design methods are then identiﬁed based on the case study.
12.2.1.1 Current Embedded Automotive Hardware
Currently, automotive embedded architectures rapidly change in favor of complex
heterogeneous system-on-chips (SoCs) that do not only integrate multiple embed-
ded CPU cores but also hardware accelerators. Table 12.1 gives a summary of
Table 12.1 Overview on current high-performance embedded ADAS system-on-chips (selection)
Product
 Core types
 Accelerators
TI TDA2x [ 40]
 2x ARM Cortex-A15,
 4x TI EVE Vision accelerator
2x ARM Cortex-M4,
2x TI C66x DSP
TI TDA3 [ 41]
 2x ARM Cortex-M4,
 1x TI EVE Vision accelerator
2x TI C66x DSP
nVidia Tegra K1 [ 25]
 4+1 ARM bigLittle Cortex-
A15
6x12 nVidia Kepler Shaders
nVidia Tegra X1 [ 26]
 4+4 ARM bigLittle Cortex-
A57/A53
2x16x8 nVidia Maxwell Shaders
Mobileye EyeQ3 [ 38]
4x MIPS32 1004K [ 31]
 4x Vector Microcode Processors
Mobileye EyeQ4 [ 23]
4x MIPS InterAptive,
 6x Vector Microcode Processors,
1x MIPS M5150 peripheral
core
2x Multithreaded Processing Cluster,
2x Programmable Macro Array
12 Advanced System-Level Design for Automated Driving 287
prominent architectures on the market and their architectural features. Examples
for these complex SoCs come from vendors such as nVidia or Texas Instruments
but also from more specialized companies such as Mobileye [ 21]. Heterogeneity
differs in type and number of cores or acceler ators. Accelerator s include arrays of
GPU shaders as well as ﬁxed-function and programmable accelerators. Regarding
safety qualiﬁcation, in contrast to nVidia’s chips, EyeQ4 is designed to provide
ISO 26262 ASIL-B(D) [ 23] while Texas Instruments’ TDA2x provides AEC-Q100
qualiﬁcation [ 2].
12.2.1.2 Timing Analysis for Automotive Systems
Timing analysis and veriﬁcation is a cruc ial task in automotive system devel-
opment. Such a timing analysis is typically already integrated in model-driven
and component-based development workﬂows on highest abstraction level. The
AUTOSAR timing extensions [ 4] allow for speciﬁcation of timing properties on
component level but also the speciﬁcation of end-to-end timing requirements over
component boundaries. By modeling dependenc ies and annotating periodicity, early
schedulability analyses can already be executed on such high-level models. One
prominent automotive tool is SymTA/S [ 39] which integrates low-level analysis
results into a model- and component-based ﬂow and can be coupled to ECU
software development tools such as Ascet [ 12]. Early timing behavior can be
validated using provided simulation models for generic schedulers, bus systems, and
RTOS, such as the AUTOSAR OS. In model-based ﬂows, for early analysis, manual
estimation of timing properties is still state-of-the art (even for space missions [ 14]),
while timing models can be reﬁned iteratively based on updated results from low-
level static analysis or timing measurements (e.g., execution on ECU hardware
during a test drive to extract timing data) on generated code.
For tighter, lower level, estimates, timing analysis that considers application
knowledge can be done manually (see analysis of the pipeline of Fig. 12.1 in [8]),
or more generalized based on timing-annotated graphs [ 13]. Manual analysis is
cumbersome and not generalizable. Her e, guaranteed worst-case execution times
can only be given when largely overestimating execution time although theoretical
worst-cases practically never occur on real executions (cf. Sect. 12.3.2.2 ).
Graph-based modeling such as scenario-aware-dataﬂow graphs (SADFG) [ 13]
considers data dependencies and control ﬂow dynamics on a more generic level,
e.g., by modeling them as scenarios. Both, model-based analysis and graph-based
Camera data Output Classification Segmentation ROIROI
select.Temporal
fusionTraffic
ele-
ments
Fig. 12.1 Structure of the software pipeline for camera-based assistance systems (adapted from
[24])288 J.M. Borrmann et al.
analysis, share the fact that they require the annotation of timing properties which
are (iteratively) extracted from lower level tools from implementation results: For
example, SymTA/S allows the import of timing properties from the Absint aiT [ 1]
static analysis tool or from recorded tr ace data from execution on real hardware.
Measurement-based extraction of tim ing data introduces big uncertainty [ 3]
due to the small coverage of real-world scenarios. For automotive manufacturers,
this manifests in the state-of-practice of many required test drive kilometers.
On the other hand, commercially available static timing analysis tools such as
Absint aiT [ 1] are not available for complex micro architectures with features such as
out-of-order execution or SMT, both of which can be found in current, commercially
available, high-performance au tomotive platforms (cf. Sect. 12.2.1.1 ).
Furthermore, the trends towards automotive multicores and hardware accelera-
tion introduce side-effects that complicate such analyses. Examples are common
access to shared resources such as shared Level 2 caches but also the side-effects of
DMA transfers from other masters in the system, such as accelerators [ 3]. Schmidt
et al. [ 33] showed that such effects already occur on current automotive multicores.
Also, low-level static analyses usually require application knowledge, such as
bounds on loop iteration counts, which can be hard to establish for complex A.D.
algorithms while limiting overestimation to reasonable margins (cf. Sect 12.3.2.2 ).
12.2.1.3 Automotive Multitasking
Multitasking systems for automotive processing have to consider strong timing
requirements. As apparent from the previ ous section, those requirements can be
annotated early when using a component-based or model-based workﬂow. Then,
tools can provide schedulability analyses or simulation of real-time schedulers
such as earliest deadline ﬁrst (EDF) . Static (cyclic) scheduling is also common
when using AUTOSAR [ 22]. Here within a schedu ling hyperperiod, multiple
AUTOSAR runnables are scheduled at ﬁxed offsets within smaller time-slots [ 22].
Such static scheduling can especially be observed for near-sensor or data fusion
driving applications which are typically tightly synchronized to input data capturing
rates. Here, the length of scheduling slots is usually coupled to the input sensor
update rates, such as camera frame rates for perception problems. Scheduling within
Mobileye EyeQ1 is an example for such static scheduling [ 37]. In EyeQ1, timeliness
of execution times against the static slot periods was veriﬁed using simulation on
large amounts of recorded data from test drives. While static scheduling provides
highest predictability, it limits concurrent utilization of processing resources, espe-
cially with growing number of concurrent pipelined applications (cf. Sect. 12.2.3.2 ).
12.2.1.4 Current Embedded Prototyping
Prototyping by utilizing simulations of a full system, so-called virtual prototypes,
has emerged as a potential solution for many challenges in general embedded system12 Advanced System-Level Design for Automated Driving 289
development. However, the approach is yet to be adopted by many automotive
software developers and system designers. The key issue of virtual prototyping is
approximating system properties such as accu rate timing behavior of target software
at a simulation performance that makes a practical application viable. The needed
trade-off between performance and accura cy can vary over designs and development
progress. For example, exact timing provides little advantage in early stages of
development when a system and thus its timing will still undergo large changes.
Here we give a brief overview of simulation abstraction levels during an idealized
development process.
During pre-development or early development, abstract prototypes can be con-
structed using tools such as Simulink [ 43] or usual desktop programming. These
prototypes enable activities such as algorithmic development or training of models
for machine learning. However, due to the h igh level of abstraction, an accurate
prediction of most product properties is impossible.
For automotive embedded real-time systems, timing behavior is as crucial
as functional behavior. Therefore a targ et hardware platform has to be selected
considering its timing but also its cost. Virtual prototypes that provide timed
simulations enable a systematic exploration of the design space, such as potential
platforms and hardware/software partiti ons. SoC vendors rely on detailed hardware
models (e.g., of the CPU cores) that closely approximate hardware at this stage [ 9].
However, this approach is unrealistic for application development—for example, by
an automotive OEM—due to two reasons: Firstly, the abstraction of these models
is typically orders of magnitude too low to allow a fast timed simulation of real
applications. Secondly, if the sole purpose is selecting a suited target platform, the
high licensing cost of such detailed architectural models is not justiﬁed, as a large
library of many of those models would be required.
Pressler et al. [ 29] propose a solution based on the estimation of platform
independent source code and the computati onal cost of operations on a given target.
While this approach, due to the higher level of abstraction, certainly has a lower
accuracy than more detailed simulations, it is less subjective and much faster than
alternatives (e.g., selecting based on benchmark results).
System-level simulations approximate a full system by co-simulating hard-
and software models that have been compiled for the simulation host. They can
be applied during most development stages and offer a wide range of possible
trade-offs between simulation accuracy an d performance. Software is simulated
based on either source or binary code. Source-code-based approaches (source-level
simulations, SLS) rely on heuristics [ 9,17,35,36] to accurately reﬂect non-
functional properties such as timing of target binary code. This step can introduce
an additional error compared to approaches based on binary code, the so-called
binary-level simulation (BLS). Hardware is usually modeled in SystemC [ 15], a
standard language for system-level simulation. Abstraction of hardware can range
from techniques such as TLM+ [ 11], where bus transfers are simulated for whole
application-level object (e.g., a full video frame), to a detailed simulation of internal
hardware signals.290 J.M. Borrmann et al.
12.2.2 Challenges in Hardware /Software Co-design for
Automated Driving: A Case Study
In this section, we exemplarily demonstrate the deﬁciencies of the current design of
automotive processing architectures, w ith a bias towards perception and cognition,
based on a case study (also see our previous work [ 7]) that covers the development
of a heterogeneous embedded realization of a complex driver assistance function,
using a state-of-the-art approach. We then discuss the shortcomings of such classic
development and propose novel solutions.
12.2.2.1 A Vision-Based Trafﬁc Light Detection
Our case study is concerned with an efﬁc ient implementation of a camera-based
trafﬁc light recognition (TLR) system. The targeted algorithm [ 24] consists of a
multi-level image segmentation for ﬁndi ng light points, a search for the surrounding
trafﬁc light boxes and a subsequent classiﬁcation of found candidates by a support
vector machine (SVM). Candidates are tr acked over time and classiﬁcation results
are fused temporally over multiple frames. The application’s output are the detected
light positions and their states. Such a result can be used by subsequent applications
such as an intersection assistance which is a key component in automated driving.
On1280 /STX720color video data it could achieve about 25 frames per second when
executed on an Intel Core i7-2820QM quad-core general-purpose development PC,
outperforming state-of-the-art approaches in both, detection robustness and speed
(when executed on a PC platform). Figure 12.1 shows the generic algorithmic
pipeline structure that is used by the TLR and also applies to other perception and
cognition applications.
12.2.2.2 Systematic Hardware/Software Co-design
As the algorithm evaluates the results from a history of several frames before
deciding on a recognition result, a high average frame rate, ideally near 24 fps, is
targeted. Our workﬂow for realizing the recognition under embedded constraints
is depicted in Fig. 12.2. Based on past experience together with the performance
results from executing the application on the high-performant developer platform,
we concluded that we most probably would not be able to realize the application at
required performance on an embedded platform, when executed in software only.
Therefore, the ﬁrst design decision was choosing the Xilinx Zynq SoC [ 47]a s
target platform. It does not only contain a powerful ARM Cortex-A9 dual core CPU
but it also allows for custom hardware accelerators by providing an on-die FPGA
logic fabric. Also, for maximum possibl e software perform ance and minimized
overhead, we additionally decided to use no operating system but only a small
hardware abstraction layer that contains basic library and I/O support (bare metal
programming). Thus we save the overhead from device drivers, virtual memory,
and also keep memory footprint low.12 Advanced System-Level Design for Automated Driving 291
I Evaluation phase mplementation phaseDesign phaseOriginal x86 PC
implemenation of
algorithm in C/C++
Baseline
ARM bare
metal
implement
ationInstrumented
baseline
imple-
mentationRe-
implementation
of functionality
from 142
librariesSW:
profiling
instrument.
+
network
stack
HW:
video input
over GigEFirst
hardware
platformProfiling
execution
Overall
system
designHardware
accelerator
design
Profiling
instrumentati
ons and
debug I/OHW
design
SW
designCompilationHardware
synthesis Execution
on test-
drive dataExecutable
HW/SW
platformLogged
recognition
results
Logged
performance
resultsFunctional
cross-
validationDeviations in
recognitionTestbench
C/RTL Co-
simulationEvaluationConverting
original C/
C++ into C
testbenchProfiling
analysis
dataAlgorithmic
optimizations
HW/SW
partitioningStart of development
Fig. 12.2 Workﬂow towards an embedded realization of the TLR algorithm of [ 24]( b a s e do n[ 7])
Starting point was the x86 architecture implementation from [ 24] of the assis-
tance function on a PC. First, an initial port to the target ARM CPU architecture
had to be done, which included replacing a large number of libraries by custom
implementations as they were relying on an operating system or were not available
for the ARM architecture. Then, preparations for proﬁling this software port were
done. For being able to receive test drive video data from a host PC, a hardware
interface for GigE had to be provided together with adding a UDP software stack.
Additionally, the software port was instrumented by adding calls to the ARM
CPU timers around individual functional blocks to allow for timing measurements.
This port of the software was then executed for proﬁling, where input video data
was fed over gigabit Ethernet.
While memory consumption was fair (about 22 MiB), the performance proﬁling
results of this solution were orders below the targeted goal: Processing one single
video frame could take multiple seconds, resulting in a average-case throughput
of 0.5 frames per second. As a major bottle neck we identiﬁed th e classiﬁcation
step which uses a computationally high-demanding SVM. Also, it could occur that
several tens of trafﬁc light box candidates would be selected for classiﬁcation by
the segmentation stage. The selection itself was performed by solving a complex
optimization problem which discarded candidates based on iterative scoring. We
replaced this approach by a simpler plausibility check that processes a list of rules
that includes color and geometry checks and still showed robust detection while
lowering complexity of decision ma king at similar detection rates.
We also performed a manual data type an alysis for the SVM’s feature vector
elements, testing different data resolutions against the introduced error. It was292 J.M. Borrmann et al.
revealed that we could replace the double data types by an 8-bit type without
affecting overall classiﬁcation results (see [ 7] for the detailed error analysis). Still,
iterative proﬁling runs showed that ha rdware acceleration would be needed for
image segmentation and classiﬁcation. The design was then manually partitioned
into hardware and software components where hot-spots are tackled by dedicated
hardware accelerators whereas uncritical program paths remained implemented
in software. For segmentation we develope d a generic ﬁlter accelerator structure
that allows for on-the ﬂy image processing by only intermediately storing local
image lines. This generic architecture is then instantiated multiple times to form
a structure that implements a more complex morphological top-hat transform.
The formula of the radial basis function (RBF) kernel within our SVM was
reformulated [ 7] to express the kernel (see [ 30] for an introduction on SVMs)
as a large running multiplication, where the argument is a function that—due to
the 8-bit feature elements—can only assume 256 different values. We implement
a fully pipelined approach processing eight vector elements in parallel within
each clock cycle using four dual-port on-chip SRAM lookup tables followed by a
multiplication tree and an accumulator register. Also, we hold the candidate vector
in local memory preventing costly fetches from external DRAM for every single
vector comparison. Figure 12.3 shows the overall accelerat or design. Synthesizing
hardware accelerators, interconnect and c ompiling the software ﬁnally led to our
executable hardware/software platform wh ich then could be evaluated with regards
to performance, functional equivalence, and power consumption.
Candidate
vector
Buffer
ResultSupport vector stream from DRAM
Candidate streamBuffer
8 88 88 8 88 8 8 8 88 88 8
8 8
3232
32
3232 3232 32 32 3232 3264
64
a
b
s
o
l
u
t
e
d
i
f
f
e
r
e
n
c
e
:
F
i
x
e
d
-
p
o
i
n
t
m
u
l
t
.
:
D
a
t
a
b
u
s
:
M
e
m
o
r
y: absolute difference
: Fixed-point mult.
:D a t ab u s
:M e m o r y
LUT8 8
32 32
LUT8 8
32 32
LUT8 8
32 32
LUTPort 1 Port 2 Port 1 Port 2 Port 1 Port 2 Port 1 Port 2
Fig. 12.3 Hardware accelerator for the RBF kernel of the support vector machine. Four dual-port
lookup tables are employed together with a mu ltiplier tree, forming a fully pipelined design12 Advanced System-Level Design for Automated Driving 293
Using this step-by-step methodology, we achieved 12 fps minimum and a 46 fps
average detection performance while only consuming approx. 5 Watts total system
power at similar recognition results as the original x86 implementation.
12.2.3 Obstacles to Efﬁcient Realizations of Automated Driving
Guided by our experiences from the case study of a single perception and cognition
function, we now identify major shortcomings of current development of automotive
processing architectures.
12.2.3.1 Performance Gap
As apparent from our case study, even for single-application systems, there is a
large gap between the available processing power of embedded CPUs and the
computational demands of modern assistance/A.D. functions. This can already be
seen in the trend towards heterogeneity in current automotive SoCs which answer
those demands via hardware acceler ation, e.g., GPU shader arrays.
While heterogeneity may ease the performance gap, growing heterogeneity also
leads to changes in automotive software d evelopment. Programmable accelerators
may enforce usage of non-standard or pr oprietary programming languages, which
makes code platform-speciﬁc and much less portable than (MISRA—[ 20]) C often
used in homogeneous embedded automotive platforms. For example, for general-
purpose programming the GPU shaders of the nVidia Tegra K1/X1 SoCs, their
custom CUDA programming model is mandatory, as at the time of writing, no
openCL support was available.
12.2.3.2 Utilization Gap
As also apparent from our case study, h ardware acceleration may be mandatory
to efﬁciently implement complex future A.D. functions. Costs for chip area of
those accelerators have to be justiﬁed by high utilization as for a given process
technology, manufacturing cost of a die exponentially increase with die area (cf. [ 46,
Eqs. (14.5), (14.7)]). Guaranteeing such hi gh utilization might already be difﬁcult
when accelerators are assigned to single app lications and when static scheduling is
used as it is state of the art in many automotive systems. However, with the growing
number of functions needed for automated driving, it has to be made sure that
accelerators can be utilized by multiple applications to avoid costly over-design and
over-provisioning of resources. This is e specially true when accelerators can only
be used within certain stages of application pipelines, running idle in other stages
(as our accelerator for c lassiﬁcation, Fig. 12.3, used within our pipeline model,
Fig.12.1).294 J.M. Borrmann et al.
Static scheduling as introduced in Sect. 12.2.1.3 gives highest predictability, but
due to the inherent dynamics of input data and subsequent execution time, big over-
provisioning has to be applied to the common static slot period, leaving slots highly
underutilized in the average case. Again, th is dilemma grows with growing number
of concurrently executed applications.
12.2.3.3 Development Gap
Prevailing approaches to developing automotive embedded systems, usually elec-
tronic control units (ECUs), rely on target hardware to evaluate implementation
properties such as performance. This has numerous drawbacks: The effort required
for a preliminary implementation restricts the number of evaluated platforms. In
the case of our case study, development took several months due to the system
complexity. A preselection can often onl y be based on imprecise factors such as
benchmark results or developer experience.
Furthermore, observability in modern So Cs is restricted, as classical debugging
aids such as in-circuit emula tion are not feasible anymore.
12.2.3.4 Scalability Gap
While current automotive systems employ multiple embedded CPU cores and accel-
erators, their symmetric mu ltiprocessing together with currently used interconnect
will eventually hit a scalability gap. Rega rding interconnect, buses, crossbars (as
currently found on automotive SoC, cf. Sect. 12.2.1.1 ), but also ring interconnects
do not scale well towards large numbers of processing elements (PE) such as CPU
or accelerators [ 16,32]. As authors of [ 32] point out: Buses are limiting due to the
serialization of concurrent requests. Crossbars, while limiting serialization, suffer
from quadratical area and power demand wrt. number of PEs, while average hop
count for rings grows proportional to the number of PEs. The current crossbars
and shared memory architectures of curre nt SoC will eventually not be sufﬁcient
anymore to fulﬁll the increasing demand of concurrent driving functions.
12.3 Concepts for Efﬁ cient Future Automated Driving
In this section we present solutions to individually tackle the challenges discussed
in Sect. 12.2.3 : overcoming the performance gap, the utilization gap, as well as the
development gap and the scalability gap.12 Advanced System-Level Design for Automated Driving 295
MM2S S2MM
Input
streamOutput
streamCtrl InterfaceSafety module
Ctrl Interface
HWA
logicDATA-I/O
interfaceConfiguration
interface
MM2S DMA Domain-specific accelerator
Fig. 12.4 Generic hardware accelerator, separating data I/O from its conﬁguration. Accelerator-
local DMAs are used to read/write data and to perform memory-mapped to streaming translations
12.3.1 Bridging the Performance Gap with Heterogeneity
As successfully implemented in our case study, for bridging the gap between
demanded and available processing powe r in embedded realizations, we propose
hardware acceleration. For not equally enlarging the utilization gap, these accel-
erators should not be application-speciﬁc but should allow for reconﬁguration
towards usage by a large number of concurrent applications. For example, for
our RBF Kernel accelerator this means that t he application-sp eciﬁc lookup tables
(cf. Fig. 12.3) can be reloaded at runtime to contai n different trained classiﬁcation
models.
For design reuse and scalability towards multiple instantiations, hardware accel-
erators (HW A) should share a common interface separating conﬁguration from
input/output data transfers. Thus, only the communication channels have to be
adapted when changing from a classic bus interconnect to a modern network-on-
chip (NOC). This also allows for simple addition of novel accelerator types.
Furthermore, hardware safety measures are employed: Conﬁguration of the
DMA’s memory addresses is only possible via privileged access, not allowing
the DMAs to be accidentally conﬁgured to overwrite foreign memory areas. The
accelerator structure is depicted in Fig. 12.4.
12.3.2 Bridging the Utilization Gap
Hardware acceleration for demanding comput ational tasks can only be cost-efﬁcient
when high utilization is ensured. Otherwise additional chip area cost may not be
justiﬁed (cf. Sect. 12.2.3.2 ). However, sharing resources in the context of usually
safety-relevant systems has to be carefully designed and veriﬁed towards safety
requirements. We now present means on how such high utilization can be achieved.296 J.M. Borrmann et al.
12.3.2.1 Runtime Resource Management
In our previous work [ 8], we give a twofold approach to ease the utilization gap in
heterogeneous embedded systems for automated driving. Our approach consists of
two main contributions:
1. Decoupling of input data capturing from p rocessing to increas e utilization while
at the same time shortening system response time.
2. Inter-application resource sharin g that also considers safety aspects.
Decoupling of Input Data Capturing from Processing Our approach targets appli-
cations that decide on a vehicle reaction based on observing the environment over
a certain period of time. Practically, this means that such a decision is based on a
temporal fusion of results from past application iterations (i.e., multiple executions
of the full application’s pipeline, see Fig. 12.5). Many driver assistance applications
follow such a scheme.
In our approach, applications follow a common software pipeline model similar
to that of Fig. 12.1. Adhering to this pipeline scheme, we use two camera-based
applications, a TLR (also see Sect. 12.2.2 for details) and a trafﬁc sign recogni-
tion (TSR) which performs a circle-detection-based segmentation into Region-of-
Interest, which are then classiﬁed by an SVM against a trained model using a
radial-basis-function kernel.
Both algorithms further track results over time and can robustly decide on a
reaction based on the last 15 iterations. Deadlines of the system’s response times
are derived from functional requirements (see [ 8]). Our ﬁrst contribution now lies in
the fact, that by decoupling input data capture from processing, in contrast to state-
of-the-art automotive static scheduling (cf. Sect. 12.2.1.3 ), we do not have leave
resources idle until the next capturing period is started but can immediately start
processing of a fresher frame. By capturing at higher rates than classic automotive
designs we thus can minimize the per-application idle time and shorten reaction
time by earlier availability of the results from 15 iterations. The scheme is depicted
in Fig. 12.5 for a two-application setting executed on a dual core processor.
...
tF0
F0 F1 F2 F3 F4 F5 F6 F7 F8<< 30 fps
capture
30 fps
capture
0
0
Application 1, iteration#
Application 2, iteration#F1 F2
1
12
23
3F15 F16 F17F5
30F14...
F42 F43 F44
4
45
5 14 ...14...\ ______
______
\
First observation
15
15 3940
4041 420
01
12
29
9 1414Capture-aligned schedule
Capture-decoupled scheduledecoupled decoupled decoupledOur system response time
Classic system response time
Video frame #Reaction
Fig. 12.5 Decoupling data acquisition from processing allows for better utilization of processing
resources at reduced system response time12 Advanced System-Level Design for Automated Driving 297
Sharing of Common Processing Hardware Under Safety Requirements Our second
measure for increased efﬁciency is the deﬁnition of sharable clusters of process-
ing resources of a common type. A cluster may consist of multiple CPUs or
(programmable) hardware accelerators. We deﬁne tasks as being sub-computations
within each application pip eline that can be ofﬂoaded to the processing resources
located within such a cluster of shared resources.
Access to shared resources is restricted : Applications cannot directly issue
tasks to such a cluster but only indirectly to a unit we name strategy controller ,
controlling resource access. Following this scheme, utilization of these resources
can be granted in a way, so that applicatio n deadlines are fulﬁlled. Each cluster is
equipped with such a strategy controller which in our implementation is a small
synthesizable Xilinx MicroBlaze CPU core. The decision on using a programmable
CPU was made for ﬂexibility in evaluating different scheduling algorithms. As soon
as the scheduling algorithms are decided on, in a series production, one would
rather replace that CPU by custom hardwar e for chip area efﬁciency. The strategy
controller does not only arbitrate requests to shared resources, it also collects status
information at runtime fro m each executed application using a heartbeat scheme:
At each completion of a software pipeline s tage, the controller is accordingly
notiﬁed. Also, individual resources within a cluster notify their controller when
a task has been successfully processed. Di fferent scheduling strategies such as
EDF can be implemented that consider app lication deadline requirements over
hardware/software boundaries. For an evaluation of scheduling algorithms, please
see [8]. A strategy controller can additionally act as safety manager when heartbeat
rates of an application drop below a threshold, indicating a malfunction.
12.3.2.2 A Runtime Fail-Operational Mechanism
For individual driving functions, response-time requirements can be derived from
functional requirements and parameters such as camera optics or supported vehicle
speed range, and sometimes, also from regulations (cf. [ 8]).
However, giving tight execution time bounds for complex applications such
as perception applications is difﬁcult on ar chitectural and application-level. For
the former case, this is due to (micro)architectural execution time variations
and side-effects found in modern automo tive multicore processing platforms
(cf. Sect. 12.2.1.2 ). For example, for the target platform of our case study (see
Sect. 12.2.2 ), microarchitectural timing ambiguity in low-level static analysis is
additionally increased on architectur e level by shared Level 2 caches and DMA
transfers from accelerators. On applica tion-level, specifyin g bounds for iterative
and looped computations is mandatory when using static analysis. However,
in perception problems, for example, at the early segmentation pipeline stages,
execution time dynamics directly relate to the content of the input video data. This
results in extreme overestimations in static analysis when assuming the theoretical
worst-case, even if by far not observable during real drives. On the other hand,
assuming worst-cases based on statistical data or from observations within test298 J.M. Borrmann et al.
drives are inherently unsafe, as they give no formal guarantees. For later pipeline
stages limitations might be easier (see [ 8]).
As conﬁdence on such timing analysis has to be considered low, dynamic analysis
and monitoring is additionally required to guarantee safe behavior on the road.
We propose a runtime monitoring approach coupled with a fail-operational
mechanism: For each application to be c oncurrently executed we deﬁne a set of
deadlines of different criticality where the criticality levels reﬂect different vehicle
parameterizations (e.g., comfortable b raking versus emergency braking). Within
such a deadline, an application’s pipeline is executed multiple times (iterations).
Dividing it by the number of needed iterations that are required to decide on a
reaction leads to an average per-iteration deadline that we use as an indicator of
the current conformity of the real observed execution time versus the static per-
application deadlines. In the case of our trafﬁc light and TSR we require 15 iterations
for deciding on a reaction and deﬁne two deadlines of different criticality, the
ﬁrst deadline allows for a comfortable vehicle reaction (here soft braking), while
a shorter second deadline still allows for a safe reaction but at much less comfort (in
our two-state case, this means parameteriz ing the vehicle for emergency braking).
Figure 12.6 shows the approach: A slight violation of the per-iteration average
deadline which would allow for a comfort able vehicle reaction is interpreted as
a signal, that an application might not meet its multi-iteration execution time
requirement that would allow for a comfortable reaction. This leads to a state
transition where the vehicle is prepared for a stronger, le ss comfortable, reaction
that can still be executed within the remaining time period. Additionally, while such
situation should never happen on the road, an overload indication period should
also be implemented, detecting system failure and potentially triggering a limp-
home/-aside mechanism. While we just impl ement two states. In a real deployment,
more ﬁne-granular vehicle parameteri zation with more states would be used. This
allows for trading-off guaranteed performance against resource sharing potential, to
provide safe behavior even when observing high system load (cf. Sect. 12.4.2.1 ).
Comfort Emergency FailureMonitored normal load
Monitored severe overload iterationMonitored slight
overload iterationMonitored severe
overload iteration
Monitored
slight
overload
iter.Monitored
severe overload
iter.
Soft
recovery
Fig. 12.6 Per-application fail-operational state machine: the indication of a potential overload
causes a state change, still allowing for an emergency r eaction12 Advanced System-Level Design for Automated Driving 299
Additionally, between deadlines of different criticality, a recovery mechanism can
be implemented, setting vehicle parameterization to a less critical level when
observing deadline conformity for a number nof subsequent iterations.
12.3.3 Bridging the Development G ap Using Virtual Prototypes
Virtual prototypes promise to bridge the gap between the low efﬁciency of classic
design processes and the complexity of modern systems. In this section, we present
our simulation framework, which has already been applied to automotive ADAS
production code and can be applied during most development stages.
An overview on the framework is shown in Fig. 12.7. Software execution on a
processor, including a highly accurate tim ing approximation, is simulated by spe-
cialized software simulations. They are integrated with our hardware simulations.
We discuss both in the following.
12.3.3.1 Simulation of Software Execution
We support binary code emulation using QEMU [ 5], which utilizes just-in-time
compilation to achieve a high performance and supports a wide range of instruction
sets. Furthermore we integrated a custom source level instrumentation tool into our
framework. Both are augmented with a custom timing simulation library.
As in most prevailing timing simulations, our library advances time by consum-
ing a certain number of processor cycles when a block of instructions, similar to
a basic block, is executed. A novel concept of our approach is utilizing multiple
y
Binary code
Source codeFunctional
simulationTiming
simulationTiming
database
SystemC
peripheral
modelSystemC
peripheral
modelSystemC
peripheral
modelHW simulation in SystemC
Hard ware Simu lation
in SystemC Timed Processor Simul ation
access to peripheralsControl flowStatic anal sis
Execution tracingorTiming info
optimization
timing
Processor model wrapperor
Fig. 12.7 Overview of our virtual prototyping framework300 J.M. Borrmann et al.
possible cycle counts for a single block. During simulation, values are selected
based on the current context, an abstrac tion of preceding control ﬂow. For example,
for a function called from a loop, our simulation can differentiate the timing of
blocks inside the function based on the loop iteration the function was called from.
For an ARM Cortex-M3 processor we have compared our approach to a context-
insensitive simulation (i.e., the same cycle count is used on every block execution).
Our results [ 27] demonstrate that even for this relatively simple processor, context-
insensitive simulations can induce large errors in the simulated timing, whereas
our context-sensitive simulation is highly accurate. More recent [ 28] results for
an ARM Cortex-A9 suggest that our context abstraction is powerful enough to
implicitly model caches. This suggests another advantage over context-insensitive
simulation, which requires a dynamic cache model. These cache models can be a
signiﬁcant simulation performance bottleneck, slowing down BLS by 200 % [ 42]
and SLS by nearly a factor of ten [ 18]. The context-sensitive simulation causes
an overhead of only 70 % in comparison to a simulation without timing, which is
only 20 % more than the 50 % [ 42] for a (extremely inaccurate) context-insensitive
simulation that does not include a cache model.
Timing information is stored in the so-called timing database (TDB), which
simpliﬁes running multiple simulations (e.g ., for different program inputs) with one
set of timing data. The timing data itself can be obtained by static analysis or by
tracing a single program execution on target hardware.
12.3.3.2 Simulation of Hardware
We build on the SystemC [ 15] standard for our hardware simulation. Therefore,
many academic approaches as well as comme rcial models can be integrated with our
simulations. For our in-house application we rely on the reference implementation
of the SystemC kernel.
For software-focused simulations we often implement simpliﬁed models of
the necessary peripherals, that exclude in ternal details of peripherals as well as
functionality that is not utilized in a project. For hardware-focused simulation,
we usually rely on more detailed models and in some cases even integrate RTL
simulations when higher accuracy is required.
Transaction level modeling (TLM) [ 10] is applied to model inter-module commu-
nication in order to provide a ﬂexible and reasonable trade-off between simulation
accuracy and performance. We usually em ploy loosely timed synchronization,
where modules may simulate without synchronization for a certain amount of time,
called a quantum. Further synchronization is enforced on particular interactions with
peripherals, for example, when software changes the interrupt mask in an interrupt
controller. To accurately handle asynchr onous events such as interrupts, a quantum
must usually be chosen such that at most one instance of such an event can occur
within each simulation quantum.
The software simulations are wrappe d by specialized SystemC models to
integrate them with the hardware simulation. They expose signals for asynchronous12 Advanced System-Level Design for Automated Driving 301
events (e.g., interrupts) and TLM interfaces for bus accesses. Multiple processors
can simply be simulated by instantiatin g multiple processor modules in SystemC,
which are each backed by an independent instance of our software simulation.
12.3.4 Bridging the Scalability Gap for Future Platforms
As discussed in Sect. 12.2.3.4 , the lack of scalability of current automotive embed-
ded architectures with regards to the growing number and nature of future applica-
tions may pose a serious threat for bringing highly or fully automated driving to a
mass market soon. For general-purpose c omputing, the answer to scalability prob-
lems has been introducing more parallelism which eventually leads to large scalable
multicore or even many-core solutions that contain some to several hundreds of
CPU cores. As interconnect, the so-called NoCs are commonly used, connecting a
regular structure of CPU tiles over a packet -based on-chip interconnect. Using such
a regular structure together with sophisticated routing algorithms allows for large
many-cores, where available chips easily contain 48 [ 19]o r6 4c o r e s[ 44].
Homogeneous many-cores, i.e., only containing one type of processing elements,
have been evaluated for automotive perception and recognition problems in research
work [ 6,48]o r[ 34]. While they all showed that in general complex single
automotive functions can be run on such platforms, their absolute results lacked
efﬁciency wrt. performance/watts and pe rformance/#cores (performance per chip
area), making them unfavorable for future A.D. functions.
Success of heterogeneous automotive SoCs suggests that instead, heterogeneous
multi- to many-core solutions might be better suitable for bridging the scalability
gap. An example for such a research architecture is the HeMan (Heterogeneous
Many-core) architecture developed at FZI (see Fig. 12.8). It is a tiled multi- to
many-core research platform that incorporates heterogeneous tiles each containing
classic embedded cores with individual RAM and ROM memories but also allows
for domain-speciﬁc (potentially programmable) hardware accelerators. Each tile has
a special local memory used for message passing and providing data to the hardware
accelerators. External memory is accessed by special tile types.
Speciﬁc measures in per-router message queues enforce message routing that
can give latency guarantees for end-to-end message transfers between tiles based on
providing virtual communication channels on top of the physical links.
HeMan employs privileged communication channels for system control mes-
sages such as heartbeats (see Sect. 12.3.2 ) where speciﬁc hardware measures prevent
communication from non-privileged tiles on those channels. On top of these virtual
communication channels, prioritization of messages is used. Such measures also
provide the means for securing system-relevant communication, such as the boot
process where the program code for application tiles is deployed by a system
controller whereas for regular tiles, (accidentally) overwriting the program code of
other tiles is forbidden. As the NoC is a shared resource, a guaranteed throughput
and latency for individual communicatio n can only be provided when access to this302 J.M. Borrmann et al.
Router
Processing
tileNIRouter
Processing
tileNIRouter
Processing
tileNI
Processing
tileNIRouter
Ctrl. & RAM
tileNIRouter
Processing
tileNI
Router
Processing
tileNIRouter
Processing
tileNIRouter
Processing
tileNIBusOn-chip
ROMOn-chip
RAMEmbedded CPUInterrupt
controller
Bus
bridgeBus
controller
masterslaveslave
NoC
interface(programmable)
Hardware
acceleratorLocal
Message
Bufferslave
master
slave
slave
data
NoC
routerInterrupt requestsconfiguration
interface
data
interfaceRouter
DRAM
Ctlr.Tile-internal structure
NI: NoC interface
Fig. 12.8 Scalable heterogeneous automotive processing architecture: Processing tiles are con-
nected via an NOC. Hardware accelerators provide required performance—while the interconnect
allows for scaling towards future demands. Off-chip I/O and DRAM access is provided by special
tile types
shared resource remains restricted: Thus the conformity of a tile to a previously
assigned data plan (communication schedul e) is controlled in hardware by speciﬁc
trafﬁc shaping components with in each tile’s network interface.
Hardware accelerators within tiles share a common interface as proposed in
Sect. 12.3.1 . The runtime approach from Sect. 12.3.2 can also be applied to such
a tiled architecture: Then, tiles are gr ouped into a cluster that is augmented by
one strategy controller. Also, redundancy can be applied such as adding lockstep
cores for the CPU cores within each tile that execute the same instruction stream
as the original core with a online self-tested comparator unit detecting mismatches
that might occur because of hardware faults (dual-mode redundancy). In such a
case, NoC messages to a safety management tile can be triggered automatically.
This could especially be useful regarding the demanded further integration of more
functionality per chip [ 22], where safety-relevant tiles, e.g., data fusion, planning
or decision making, are executed on speciﬁcally hardened processing tiles, while
functions which are not safety relevant are executed on generic processing tiles.
On top, safety concepts on higher levels such as soft lockstep can be implemented
where multiple tiles perform redundant cal culations on the same input data whereas
other tiles take the role of comparators. Also, hybrid approaches are possible:
Here, the results from hardware accelerators are regularly checked by a software
thread that runs on the tile’s CPU during idle periods (self-test). For all these
mechanisms, mixed system topologies are possible where only safety-relevant tiles
provide redundancy, while processing-optim ized application tiles are use the soft
approaches.12 Advanced System-Level Design for Automated Driving 303
12.4 Modern Platform-Based Automotive System Design
We now present our tooling framework, that shows how our individual solutions
for realizing embedded A.D. functions from Sect. 12.3 can be efﬁciently combined.
Additionally, we evaluate the discussed runtime concepts of Sect. 12.3.2 and
demonstrate the accuracy of our timing simulation of Sect. 12.3.3 on an automotive
function.
12.4.1 Tooling Framework
Creating and developing a complex heterogeneous target platform which integrates
the concepts of Sect. 12.3 requires an efﬁcient workﬂow, which can only be achieved
with powerful tooling. Our tooling and workﬂow to achieve this goal is depicted
in Fig. 12.9 and essentially consists of three steps: generating intermediate sources
from a platform description (Platform Generation), creation of the actual simulation
and FPGA platforms (Platform Creation), and ﬁnally, execution of the platforms
(Platform Execution). These steps are performed iteratively during development.
Generating both, a virtual and an FPGA-based prototype, automatically from the
very same description, enable a highly efﬁcient development. We use the virtual
QEMU CPU
instantiation +
wrapper Verilog/VHDL
templatesLibraries
Generated SystemC Generated RTL Code
Virtual Prototype FPGA PrototypeXML platform
specification
Topology Generator
Verilog NoC mesh topology
Timed SystemC
simulation binaryRTL synthesis
Host
compilerVerilog & VHDLVerilogVHDL tiles & top-level
VerilatorSystemC/QEMU
computing tilesSystemC mesh/tile
interconnectSystemC simulation top-level
SystemC
NoC mesh
FPGA bitstreamSystemC
templates
Verilog
SystemC
Platform creationPlatformexecutionTrace-based Timing DB
generation
Timing DB
generatorTiming
DBExecution on FPGA
Program
tracestracesTarget binary software
Execution of VPtiming info
Platformgeneration
Timing-DB generation from static analysis
Static analysis
by Absinth aiTTiming
DB
timing infoSystemC
Fig. 12.9 Our tooling framework: simulation binaries and RTL code are generated from the same
speciﬁcation. The approach of Sect. 12.3.3 is used to simulate timing within tiles304 J.M. Borrmann et al.
prototype for early design space exploration beyond the chip area limitations of a
physical FPGA and the time-consuming design of hardware and its debugging.
Furthermore, the virtual prototype is an ideal platform for efﬁcient development
of application software and, due to the integrated timing simulation, allows a
continuous veriﬁcation of timing requirements.
The hardware prototype allows extraction of non-functional properties, such as
timing and power information which can be back-annotated to the virtual prototype.
Additionally, we use the physical prototype for low-level hardware development
and optimization, which is not possible on the virtual prototype due to the high level
of abstraction, for example, to develop lo w-level interfaces to external components,
such as CMOS sensors. Those results are then integrated into our RTL code template
library making them available for automated platform generation.
12.4.1.1 Platform Generation
Platform Generation starts with a common platform description in XML. This
description covers the topology of the mesh, together with parameters such as the
desired number of virtual channels and the number, positions, and tile types for
each individual tile. From a templated library of SystemC, Verilog, and VHDL
source ﬁles, a custom tool called Topology Generator creates intermediate inputs for
both, the virtual prototype and the hardware prototype. This includes the creation
of the speciﬁed interconnect between tiles and the mesh. Two sets of source ﬁles
are produced, SystemC sources and the RTL hardware descriptions: For SystemC,
wrapper ﬁles integrate the simulations of individual CPU cores within tiles and links
to our custom library that provides timed SystemC/QEMU co-simulation. Also,
NoC code is generated, that provides the local links of each individual tile to the
mesh. Finally, a simulation top-level acts as a simulation testbench.
RTL code includes the requested mesh topology in Verilog RTL code which is
used for both, simulation and hardware platform, in the subsequent Platform Cre-
ation step. The RTL code for individual tiles, including the CPU core instantiations,
is generated in VHDL, supported by templates from the library.
12.4.1.2 Platform Creation
Based on the intermediate results generated in the previous step, the actual platform
creation can be performed. For the virtual prototype, ﬁrst, the topology-dependent
Verilog NoC description is translated int o a cycle-accurate, yet fast SystemC model
using the Verilator [ 45] tool. Together with top-level testbench Verilog code, this is
compiled and linked into an executable simulation binary. For the FPGA prototype,
the individual tiles, given in VHDL, and the mesh, given in Verilog, is synthesized,
placed and routed using the vendor-s peciﬁc synthesis toolchain.12 Advanced System-Level Design for Automated Driving 305
12.4.1.3 Platform Execution
With the simulation and the hardware platform available, one can now utilize
both: The FPGA prototype is executed by uploading ﬁrst the bitstream, and then
a software binary that includes the software of each individual tile. Our hardware
implementation can ﬁt up to nine tiles on our FPGA development board.
Providing target software binaries, the virtual prototype can be executed. Stimuli
such as input data can be provided via dedicated testbench models. The SystemC
simulation does not only provide a dramatic speedup compared to RTL (RTL
running at approx. 100 simulated clock cycles per wall-clock seconds), but at the
same time it also increases observability, as we can use target debugger instances to
connect to each simulated processor and ar bitrarily trace signals of the mesh. The
simulation allows for systematic and fast software development as well as design
space exploration, where topologies not ﬁtting the FPGA can be explored.
If timing simulation is required, the co-simulation library reads context-sensitive
timing information from a previously generated Timing Database that can either be
extracted from recorded inst ruction traces of an execution on the physical prototype
or from static analysis (cf. Sect. 12.3.3 ).
12.4.2 Evaluation
We now evaluate our dynamic resource management from Sect. 12.3.2 including
our fail-operational strategy from Sect. 12.3.2.2 and our timing simulation from
Sect. 12.3.3 .
12.4.2.1 Runtime Resource Management
Our approach on runtime resource management has been evaluated on a Xilinx
Zynq SoC, using it’s two ARM Cortex-A9 cores and a hardware accelerator cluster
of four SVM RBF kernels. However, it is retargetable to other architectures. The
two applications from Sect. 12.3.2 each get assigned to one Cortex-A9 core for the
software parts of their pipeline. As strategy controller, we use an embedded Xilinx
MicroBlaze soft core. Signaling of heartb eats, requests for shared resources, and
completion of accelerator executions to the c orresponding strategy controller is done
using interrupts to the strategy controller. We implemented different scheduling
strategies (cf. [ 8]). For evaluation we use a combination of static allocation
together with earliest deadline ﬁrst where each application is statically assigned one
accelerator exclusively while sharing the remaining ones using an EDF schedule.
This provides a good trade-off between throughput and sharing potential. EDF
always schedules the runnable tasks of an application that has least slack towards
its deadline. For doing so, the already consumed time budget of an application is
calculated from the heartbeat signals issu ed on each completion of a pipeline stage.306 J.M. Borrmann et al.
Processing System
Programmable Logic64-bitAXI bu s
HDMI
IP coreEthernet-
controller
1 Gbit/s
Ethernet
interfaceHDM I
transmitt erHP AXI
controller
64-bit AX IDDR controllerDDR
4 x 64-bit AXI buses .
Camera
receiverDebayerCortex-
A9 core
(CPU0)Cortex-
A9 core
(CPU1)
OCMGPAXI
controller
32-bit AXI bus .MicroBlaze
(MB)
TimerInterrupt
generator (PS)
Interrupt
generator (PL)GPIO IF
Came ra
interfaceBoard
LEDHWA
Fig. 12.10 Exemplary implementation of our runtime resource management: two ARM Cortex-
A9 CPUs request hardware acceleration from the strategy controller (X ilinx MicroBl aze) which
controls access to shared resources
Our FPGA-based evaluation system either can be used with a real CMOS sensor,
where image preprocessing such as demosaicing is done in hardware, or as in-lab
prototype where videos from test drives are provided using UDP. In the latter case,
evaluation was performed subtracting the extra overhead introduced. Figure 12.10
shows the evaluation platform.
Our decoupling of processing from input data acquisition shows vast improve-
ments compared to a static schedule where the time-slot period is set to the
maximum observable execution time of a pipeline iteration during test drives. For
the TSR, relative improvements range from a min./avg./max. of 37, 39, and 42 %,
respectively. The trafﬁc light application still shows minimum 8 % improvement
with 36 % avg. and 49 % max. improvements. Total system power is below 6 Watts,
including DRAM, HDMI, and GigE.
Runtime Fail-Operational Mechanism We evaluate our runtime fail-operational
mechanism from Sect. 12.3.2 using the platform of Fig. 12.10 . Heartbeat signals
are used to notify completion of a pipeline stage in order to monitor the per-
iteration execution time of each individual app lication, steering the per-application
state machine. Dynamics in the TSR is much less as in the TLR. Driving from an
outer area into the city, we could successfully demonstrate our approach using a
ten-iteration soft-recovery, once switchi ng to an emergency parameterization and,
as expected, never reaching failure state (Fig. 12.11 ).12 Advanced System-Level Design for Automated Driving 307
02040601531051572092613133654174695215736256777297818338859379891041109311451197124913011353140514571509156116131665171717691821187319251977202920812133218522372289execu/g415on /g415me [ms]
progress [itera/g415on]          Emergency state
Comfort stateFail-opera/g415onal FSM state transi/g415on 
10-itera/g415on so/g332-recovery
Fig. 12.11 Driving from an outer area to the inner city, we could successfully show the feasibility
of our fail-safe approach including the soft-recovery from potential overload prediction
12.4.2.2 Platform Timing Simulation
As a preliminary evaluation of the timing simulation, we conducted a case study for
the TSR application [ 28]. We simulate the execution of the TSR on an ARM Cortex-
A9 using the framework presented in Sect. 12.3.3 . The necessary timing database
was generated by tracing the execution on real hardware. As simulation input we
utilize several real pictures of trafﬁc situations and 630 distinct combinations of the
segmentation parameters.
The input used during hardware traci ng inﬂuences the timing of the traced
execution, which in turn inﬂuences the results of a simulation based on a TDB
generated from that traced execution. To inve stigate this factor we generated several
TDBs which were generated using default segmentation parameters and all but one
image. One image was excluded, as it does not include any circle detected by the
segmentation and a resulting TDB would thus not cover the classiﬁcation code.
We use each TDB with all simulation inputs a nd evaluate the results to represent
the following practi cal scenarios: (1) Arb: An execution for an arbitrary image is
traced and the resulting TDB is used for all simulations. (2) Del: An execution for
an image with all supported trafﬁc signs is traced and the resulting TDB is used for
all simulations. (3) PerI: Executions for all images are traced and each TDB is only
used in simulations for the same image that was used in tracing. For an image with
no signs, a visually similar image is used. Figure 12.12 shows our results. Even
the Arb strategy produces results that allow for a practical application. Therefore
in practice only straightforward factors need to be considered when applying our
trace-based approach. For example, the TSR should be traced using an input image
that includes a trafﬁc sign. Putting more eff ort into tracing input selection can lead
to further accuracy improvements.308 J.M. Borrmann et al.
02468ArbDelPerIerror [%]
max
avg
Fig. 12.12 Error in timing accuracy of our trace-based timing simulation against real hardware
measurements on a trafﬁc sign rec ognitio n perception/c ognitio n function
12.5 Conclusions
In this chapter, we presented solutions that address the deﬁciencies in state-of-
the-art development and realization of embedded automotive driving functions that
pose a barrier towards automated driving. We believe that our contributions will
bring signiﬁcant improvements not only to individual challenges but especially
when combined, where they mi ght eventually lead to more ef ﬁcient architectures for
highly or fully automated driving, accelera ting their introduction to a mass market.
Acknowledgements This work was partially funded by the State of Baden-Württemberg, Ger-
many, Ministry of Science, Research and Arts within the scope of Cooperative Research Training
Group EAES, and by the ITEA2/BMBF project MACH under grant 01IS13016B.
References
1. AbsInt Angewandte Informatik GmbH: aiT Worst-Case Execution Time Analyzers (2015),
http://www.absint.com/ait/ . Accessed 18 March 2015
2. ADAS Applications Processor TDA2x System-on-Chip Technical Brief (2013), http://www.ti.
com/lit/ds/symlink/tda2.pdf . Accessed 18 March 2015
3. S. Altmeyer, B. Lisper, C. Maiza, J. Reineke, C. Rochange, WCET and mixed-criticality:
what does conﬁdence in WCET estimations depend upon? in OASIcs-OpenAccess Series
in Informatics, vol. 47. Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik (2015)
4. AUTOSAR, Speciﬁcation of Timing Extensions, Release 4.2.2, Document 411 (2015).
doi:411.http://www.autosar.org . Accessed 20 Oct 2015
5. F. Bellard, QEMU, a fast and portable dynamic translator, in USENIX Annual Technical
Conference, FREENIX Track (2005)
6. J. Borrmann, A. Viehl, O. Bringmann, W. Rosenstiel, Parallel video-based trafﬁc sign
recognition on the intel SCC many-core platform, in Proceedings of the 2012 Conference
on Design and Architectures for Signal and Image Processing (DASIP) (2012), pp. 1–2
7. J. Borrmann, F. Haxel, D. Nienhüser, A. Viehl, J. Zöllner, O. Bringmann, W. Rosenstiel,
STELLaR - a case-study on SysTEmaticaLLy embedding a trafﬁc light recognition, in
Proceedings of the 17th IEEE International Conference on Inte lligent Transportation Systems
(ITSC) (2014), pp. 1258–1265. doi: 10.1109/ITSC.2014.695786012 Advanced System-Level Design for Automated Driving 309
8. J. Borrmann, F. Haxel, A. Viehl, O. Bringmann, W. Rosenstiel, Safe and efﬁcient runtime
resource management in heterogeneous systems for automated driving, in Proceedings of the
18th IEEE International Conference on In telligent Transportation Systems (ITSC) (2015)
9. O. Bringmann, W. Ecker, A. Gerstlauer, A. Goya l, D. Mueller-Gritschneder, P. Sasidharan, S.
Singh, The next generation of virtual prototyping: ultra-fast yet accurate simulation of HW/SW
systems, in Proceedings of the 2015 Design, Automation & Test in Europe Conference &
Exhibition (EDA Consortium, Grenoble, 2015), pp. 1698–1707
10. L. Cai, D. Gajski, Transaction level modeling: an overview, in Proceedings of the 1st
IEEE/ACM/IFIP International Conference on Hardware/Software Codesign and System Syn-
thesis (ACM, New York, 2003), pp. 19–24
11. W. Ecker, V. Esen, R. Schwencker, T. Steininger, M. Velten, TLM+ modeling of embedded
hw/sw systems, in Proceedings of the Conference on Design, Automation and Test in Europe
(European Design and Automation Association, Dresden, 2010), pp. 75–80
12. ETAS GmbH, ASCET-SymTA/S End-to-end Timing Analysis for Electronic Control Systems
(2015), http://www.etas.com/download-center-ﬁles/products_ASCET_Software_Products/
ASCET_SYMTA_S_ﬂyer_en.pdf . Accessed 01 June 2016
13. M. Geilen, S. Stuijk, Worst-case performance analysis of synchronous dataﬂow scenarios. in
Proceedings of the Eighth IEEE/ACM/IFIP International Conference on Hardware/Software
Codesign and System Synthesis (ACM, New York, 2010), pp. 125–134
14. R. Henia, L. Rioux, N. Sordon, G.E. Garcia, M. Panunzio, Integrating model-based formal
timing analysis in the industrial developmen t process of satellite on- board software, in
Proceedings of the 2nd International Conference on Model-Driven Engineering and Software
Development (MODELSWARD) (2014), pp. 619–625
15. IEEE Standard for Standard SystemC Language Reference Manual (2012). IEEE Std 1666-
2011 (Revision of IEEE Std 1666-2005)
16. R. Kumar, V . Zyuban, D.M. Tullsen, Interconn ections in multi-core architectures: understand-
ing mechanisms, overheads and scaling, in Proceedings of the 32nd International Symposium
on Computer Architecture, 2005. ISCA’05 (IEEE, New York, 2005), pp. 408–419
17. K. Lu, D. Müller-Gritschneder, U. Schlichtmann, Hierarchical control ﬂow matching for
source-level simulation of embedded software, in Proceedings of the 2012 International
Symposium on System on Chip (SoC) (IEEE, New York, 2012), pp. 1–5
18. K. Lu, D. Muller-Gritschneder, U. Schlichtmann, Fast cache simulation for host-compiled
simulation of embedded software, in Design, Automation & Test in Europe Conference &
Exhibition ( DATE), 2013 (IEEE, New York, 2013), pp. 637–642
19. T.G. Mattson, M. Riepen, T. Lehnig, P. Brett, W. Haas, P. Kennedy, J. Howard, S. Vangal,
N. Borkar, G. Ruhl, S. Dighe, The 48-core SCC processor: the programmer’s view, in
2010 ACM/IEEE International Conference for High Performance Computing, Networking,
Storage and Analysis , November 2010, pp. 1–11. http://ieeexplore.i eee.org/xpl/articleDetails.
jsp?arnumber=5644880
20. MIRA Ltd, MISRA-C:2004 Guidelines for the use of the C language in critical systems (2004).
www.misra.org.uk
21. Mobileye (2015), mobileye.com . Accessed 18 March 2015
22. A. Monot, N. Navet, B. Bav oux, F. Simonot-Li on, Multis ource software on multic ore
automotive ECUs - combining runnable sequencing with task scheduling. IEEE Trans. Ind.
Electron. 59(10), 3934–3942 (2012)
23. Moving Closer to Automated Driving, Mobileye Unveils EyeQ4 System-on-Chip with its
First Design Win for 2018 (2015), http://www.mobileye.com/blog/press-room/moving-closer-
automated-driving-mobileye-unveils-eyeq4-system-chip-ﬁrst-design-win-2018/ . Accessed
18 March 2015
24. D. Nienhüser, Kontextsensitive Erkennung und Interpretation fahrrelevanter statischer
Verkehrselemente. Ph.D. thesis, KIT Karlsruhe (2014)
25. nVidia, Tegra K1 Technical reference manual (2014), https://developer.nvidia.com/tegra-k1-
technical-reference-manual. Accessed 18 March 2015310 J.M. Borrmann et al.
26. nVidia, Tegra X1 Super Chip (2015), http://www.nvidia.com/object/tegra-x1-processor.html.
Accessed 18 March 2015
27. S. Ottlik, S. Stattelmann, A. Viehl, W. Rosenstiel, O. Bringmann, Context-sensitive timing
simulation of binary embedded software, in Proceedings of the 2014 International Conference
on Compilers, Architecture and Synthesis for Embedded Systems (CASES) (2014)
28. S. Ottlik, J.M. Borrmann, S. Asbach, A. Viehl, W. Rosenstiel, O. Bringmann, Tr ace-based
context-sensitive timing simulation considering execution path variations, in 21st Asia and
South Paciﬁc Design Automation Conference (ASP-DAC) (2016)
29. M. Pressler, A. Viehl, O. Bringmann, W. Rosenstiel, Execution cost estimation for software
deployment in component-based embedded systems, in Proceedings of the 17th international
ACM Sigsoft Symposium on Component-Based Software Engineering (ACM, New York,
2014), pp. 123–128
30. S.J. Russell, P. Norvig, Artiﬁcial Intelligence: A Modern Approach , 2. edn. Prentice Hall Series
in Artiﬁcial Intelligence (Prentice Hall, Upper Saddle River, NJ, 2003)
31. Safer SoCs for safer driving. SemiWiki.com, the Open Forum for Semiconductor Profes-
sionals (2014), https://www.semiwiki.com/forum/content/3844-safer-socs-safer-driving.html .
Accessed 18 March 2015
32. D. Sanchez, G. Michelogiannakis, C. Kozyrakis, An analysis of on-chip interconnection
networks for large-scale chip multiprocessors. ACM Trans. Archit. Code Optim. (TACO) 7(1),
4 (2010)
33. K. Schmidt, J. Harnisch, D. Marx, A. Mayer, A. Kohn, R. Deml, Timing analysis and tracing
concepts for ECU development. Technical Report, SAE Technical Paper, 2014
34. T. Schonwald, A. Koch, B. Ranft, A. Viehl, O. Bringmann, W. Rosenstiel, Stereo depth map
computation on a Tilera TILEPro64 embedded multicore processor, in Proceedings of the 2012
Conference on Design and Architectures for Signal and Image Processing (DASIP) (2012)
35. S. Stattelmann, Source-Level Performance Estimation of Compiler-Optimized Embedded
Software Considering Complex Program Transformations (Verlag Dr. Hut, Munich, 2013)
36. S. Stattelmann, O. Bringmann, W. Rosenstiel, Fast and accurate source-level simulation of
software timing considering complex code optimizations, in Proceedings of the 48th Design
Automation Conference (DAC) (2011)
37. G. Stein, E. Rushinek, G. Hayun, A. Shashua, A computer vision system on a chip: a case study
from the automotive domain, in IEEE Computer Society Conference on Computer Vision and
Pattern Recognition ( CVPR’05) - Workshops , vol. 3 (2005), p. 130. doi: 10.1109/CVPR.2005.
387.http://ieeexplore.i eee.org/lpdocs/epic03/wrapper.htm?arnumber=1565445
38. STMicro and Mobileye are Developing Third-Generation SoCs for Driver Assistance.
John Day’s Automotive Electronics - Insight for Engineers (2011), http://
johndayautomotivelectronics.com/stmicro-and-mobileye-are-developing-third-generation-
socs-for-driver-assistance/ . Accessed 18 March 2015
39. Symtavision GmbH: Leading in real time - overview ﬂyer (2015), https://www.symtavision.
com/downloads/Flyer/Symtavision_Overview_Flyer_2015_SEPT.pdf . Accessed 20 Oct 2015
40. TDA2x SoC for Advanced Driver Assistance Systems (ADAS) (2015), http://www.ti.com/
tda2x . Accessed 18 March 2015
41. TDA3 SoC Processor Advanced Driver Assistance Systems (ADAS) (2015), http://www.ti.
com/pr oduct/td a3. Accessed 18 March 2015
42. D. Thach, Y. Tamiya, S. Kuwamura, A. Ike, Fast cycle estimation methodology for instruction-
level emulator, in Proceedings of the 2012 Design, Automation & Test in Europe Conference
& Exhibition (DATE) (2012)
43. The MathWorks, Inc. (2015), http://www.mathworks.com . Accessed 18 March 2015
44. Tilera goes pro with TilePro64 (2008), http://www.tgdaily.com/business-and-law-features/
39408- tilera-goes-pro-with-tilepro64 . Accessed 18 March 2015
45. Veripool Verilator (2015), http://www.veripool.org/ . Accessed 18 March 2015
46. N. Weste, D. Harris, CMOS VLSI Design: A Circuits and Systems Perspective , 4th edn.
(Addison-Wesley Publishing Company, New York, 2010)12 Advanced System-Level Design for Automated Driving 311
47. XILINX: UG585 - Zynq-7000 all programmable SoC technical reference manual
(2014), http://www.xilinx.com/support/documentation/user_guides/ug585-Zynq-7000-TRM.
pdf. Accessed 18 March 2015
48. J. Zimmermann, Applikationsspeziﬁsche Analyse und Optimierung der Energieefﬁzienz einge-
betteter Hardware/Software-Systeme. Ph.D. thesis, Universität Tübingen, Germany (2013).
Website http://nbn-resolving.de/urn:nbn:de:bsz:21-opus-73952Chapter 13
Systems Engineering and Architecting
for Intelligent Autonomous Systems
Sagar Behere and Martin Törngren
13.1 Introduction
This chapter provides practical insight s into speciﬁc systems engineering and
architecture considerations for building autonomous driving systems. It is aimed
at the ambitious practitioner with a solid engineering background. We envision such
a practitioner to be interested not just in concrete system implementations, but also
in borrowing ideas from the general theory of intelligent systems to advance the
state of autonomous driving.
The practical development of autonomous driving systems involves domain spe-
ciﬁc algorithms, architecture, systems e ngineering, and technical implementation,
as shown in Fig. 13.1. Of these, this chapter focuses on the latter three. Architecture
and its development may possibly be considered as a part of systems engineering,
but for the purpose of this chapter, we t reat it as a distinct area. This is because
of the extensive coverage of architecture in the chapter. The arrows in Fig. 13.1
represent an “impact” relationship. Thus, the arrow from architecture to systems
engineering implies that architecture h as an impact on systems engineering. The
impact can be of various types, but the key point is that the practical development
of autonomous driving systems must holistically consider all the areas and their
impacting interrelations. Such a holistic view is not always within the scope of
researchers “deep diving” into the speci ﬁcs of a particular area. Nevertheless,
for practicing engineers and concrete projects, it cannot (should not) be ignored.
This chapter presents the three areas within a holistic context, with the aim of
providing the practicing engineer with a grasp of key concepts in each area, and
how they all come together for autonomous driving. Within each area, references
to more detailed topics are also provided. This simultaneous consideration of
S. Behere (/envelopeback)  M. Törngren
KTH Royal Institute of Tec hnology, Stockholm, Sweden
e-mail: behere@kth.se ;martint@kth.se
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_13313314 S. Behere and M. Törngren
Fig. 13.1 The areas in focus of this chapter
three, typically disparate topics, is one of the innovative aspects of this book
chapter. Very often in research, the tec hnical aspects of the implementation are
considered less important. In our experience with autonomous driving, the technical
implementation aspects provide opport unities and strong constraints which must
be considered during the processes of architecting and systems engineering. This
prevents gaps imposed by “reality” when transitioning between different concerns
and a subsequent weakness in the applicatio n of theoretical results. Therefore, this
chapter devotes a complete section to the core tools and technologies supporting
architecting, systems engineering, and implementation. This is a second innovative
aspect of this chapter. The third innovation is an examination of key results in the
areas of machine consciousness and the theory of mind, which are usually omitted
from “hardcore” engineering discussions , because the gap between these areas and
pragmatic, safety critical engineering is v ery large. But by covering these areas,
we show how it can inﬂuence and provide guidelines for future developments in
autonomous driving. The chapter deliberately emphasizes breadth of coverage rather
than depth in one selected topic, becau se we have noticed a conspicuous lack of
literature in the ﬁeld that collects together the important considerations and topics
relevant to the practicing engineer. It must be noted that some of the presented topics
are not exclusive to the development of autonomous systems, but gain signiﬁcant
importance in that context.
The chapter thus contributes with a series of takeaways in the areas of archi-
tecture, systems engineering, technical implementation, and longer term evolution
of autonomous driving. For architecture, the reader will ﬁnd explicit descriptions
of key functional components needed for autonomous driving and a three layered13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 315
reference architecture showing the distribution of these components and their inter-
connections. For model based systems engineering (MBSE), the chapter outlines
four classes of models to aid MBSE methodologies for concrete projects. The model
classes may be viewed as a lightweight complement to methodologies advocated
by the “V-model” and functional safety standards like ISO26262. For technical
implementation, a development setup and key technologies are described. For
longer term evolution, the chapter provides a brief overview of stronger autonomy
concepts like machine consciousness and sel f-awareness, and relates them to current
engineering practices. This is used to point out directions for evolution of current
autonomous driving architectures. The impact of autonomy on architecting, systems
engineering, and technical implementations in the automotive domain is also brieﬂy
discussed.
The scope is delimited to a broad treatment of functional architectures and
systems engineering concerns relevant for autonomous driving. The emphasis is
on early stages of development and prototyping. Concerns exclusively related to
the engineering of safety critical system s, as well as human machine interaction,
metrics for architecture and systems engineering, and topics related to engineering
ethics are not covered.
The chapter is structured as follows: following this Introduction, Sect. 13.2
provides a description of the research method, followed by a summary of important
terms in the text. Section 13.3 provides a quick description of important terms in
the text. This is followed by Sect. 13.4 which provides a longer term perspective of
the research area, exploring more abstract concepts for enabling machine autonomy.
The paper then becomes progre ssively more concrete via Sect. 13.5 on Architecture,
Sect. 13.6 on Systems Engineering, and Sect. 13.7 on Technical Implementation.
These chapters cover the immediate and short term perspective in the ﬁeld. The
progression from abstract to concrete is de liberately selected to guide the reader’s
thinking from the more esoteric and principled notions of machine autonomy to a
practical immersion in the engineerin g state-of-practice. Finally, Sect. 13.8 presents
a synthetic discussion that reﬂects on each of the covered areas, and how they are
affected by the characteristics of autonomy.
13.2 Research Method
Research methods of Engineering Design have been used to generate this chapter’s
content. Engineering design is one of the research methods in systems engineering
[40] wherein researchers address a problem which is important and novel through
the activity of designing a solution [ 41]. The knowledge developed is primarily
for practical application. An additional outcome is some theoretical development
based on generalization of design experi ences. A potential weakness of engineering
design, as a qualitative research method, is that of external validity . This is addressed
here by a multitude of different case studies and engagement with experts in
different domains. Since 2010, we have designed solutions for, and engaged in316 S. Behere and M. Törngren
Table 13.1 Projects contributing to this chapter’s content
Year(s)
 Projects
 Vehicle
 Partners
 Outcome
2010–2011
 GCDC
2011
Heavy duty
commercial
truck
Scania CV
AB (OEM)
1. Autonomous longitudinal motion
in platooning scenario [ 54].
2. A reference architecture for
cooperative driving [ 21]
2011–2012
 CoAct
2012
Heavy duty
commercial
truck
Scania CV
AB (OEM)
Second, different instantiation of
above-mentioned reference
architecture for cooperative driving
2013–2014
 DFEA2020
+F U S E+
ARCHER
Passenger
cars
Vol vo C ar
Corporation
(OEM) +
Scania CV
AB (OEM)
Problem analysis, methods, and a
reference architecture for
autonomous driving [ 19,20]
2014–
 RCV
 Novel
research
vehicle
prototype
Departments
within KTH
(Academia)
Novel electric vehicle prototype
with -by-wire control of steering
and propulsion [ 77]
2015–
 RCV-2.0
 Novel
research
vehicle
prototype
KTH + A
private
company
Novel vehicle prototype with full
perception stack and urban
autonomous driv ing capabilities
(under development)
a variety of self-driving vehicle project s. The projects have involved a variety of
commercial and research vehicles, in academic and industrial contexts. A concise
summary is provided in Table 13.1. In 2010, an architecture for autonomous
longitudinal motion control was designed and implemented on an R730 commercial
truck from Scania CV AB. The truck participated in the Grand Cooperative Driving
Challenge (GCDC) 2011, wherein vehicles operated autonomously on a public
highway in a platooning scenario, with constant wireless communication between
participating vehicles and the environment. The communication contained operating
parameters of each vehicle, like its speed , acceleration, location, etc., as well
as the states of infrastructural elements like trafﬁc lights and prevailing speed
limits. The architecture was reﬁned and r e-applied an year later, on a different
truck (an R430 model), for the CoAct 2012 project. This project also involved
a platooning scenarios similar to the GCDC 2011 event, but it included more
demanding operational situations like splitting and merging lanes, and overtaking.
The accumulated architecture underwent f urther evaluation and analysis in the
course of three different projects with various industrial partners, including a
potential application to passenger cars. One of these projects was DFEA2020—
a large Swedish consortium project aime d at development of green, safe, and
connected vehicles. Another project is FUSE—also a Swedish project, with a
tighter focus on functional safety and architectures for autonomous driving. The
third project is ARCHER—which investigat es safety, reference architectures, and
testing and veriﬁcation techniques applicable to commercial trucks. The FUSE and
ARCHER projects are still in progress. St arting from 2014, the architecture was13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 317
then applied to a novel research concep t vehicle (RCV) at KTH, with a view to
endow it with autonomous driv ing capabilities. The RCV ha s an all-electric, drive-
by-wire powertrain with a propulsion moto r embedded inside each wheel, and active
steering and camber control of all four wheel s. The architecture was then adapted
to a second variant of the RCV (RCV-2.0), where it serves as the foundation for
autonomous urban driving capabilities in situations wh ere a human driver is not
expected to be available (or capable ) of taking over vehicle control.
13.3 Essential Termin ology and Concepts
In this section, we brieﬂy describe our speciﬁc usage of some important terms that
occur repeated ly in the text.
Autonomy is used in the practical sense as a machine’s ability to effectively (with
respect to its goals) operate in an uncertain environment, without constant human
supervision or intervention . Effective operation implies that the desired goals are
met in a safe manner with a desired level of performance. Safety implies absence of
unacceptable risk.
Architecture is deﬁned by ISO 42010:2011 as “..fundamental concepts or
properties of a system in its environment, embodied in its elements, relationships,
and principles of its design and evolution.” The architecture is thus the “blueprint”
of the system and one practical way to think of it is to decompose it into conceptual
and technical design aspects [ 28,29] as shown in Fig. 13.2. These aspects may
alternatively be referred to as “views” of the architecture, a term recommended by
ISO 42010 and pertaining to an architecture description from a speciﬁc “viewpoint.”
A detailed explanation of Fig. 13.2 can be found in [ 19]. Brieﬂy, the process
of architecting a system can be initiated by describing the functions which the
Fig. 13.2 An overview of system architecture318 S. Behere and M. Törngren
system shall offer to its user (service taxonomy), without stating how the functions
are internally realized by the system. The service taxonomy is realized by the
logical architecture, which shows the logical decomposition of the system into
its constituent components, without speci fying how those components are actually
realized in hardware and/or software. The logical architecture components are
subsequently mapped onto software elements, which are deployed on hardware
computation units. The computation and communication systems may further be
partitioned in time and space, depending on a variety of requirements related to
performance, availability, safety, prototyping tools, etc.
Systems engineering is deﬁned by INCOSE as an interdisciplinary approach
and means to enable the realization of successful systems . It integrates all the
disciplines and domain experts into a team effort forming a structured development
process that proceeds from concept to p roduction to operation. Functionality is
deﬁned early in the development lifecycle, requirements are documented followed
by design synthesis, testing, veriﬁcation, and validation all while considering the
complete problem which the system solv es. Systems engineering is especially
relevant to the construction of large, complex, and safety critical systems. The
formalized application of modeling to support various systems engineering tasks
is termed as model based systems engineering .
13.4 The Context of Machine Consciousness
When thinking about autonomous driving, it is very easy to get lost in practical
minutiae of sensors, hardware, programming, modeling, etc. However, staying
entirely at this level of thinking can lead to “not seeing the forest due to all the
trees.” As the complexity of systems rises, it is worth taking a step back and asking,
“What is it that we are really trying to do, and is this the right direction?”
In this section, we take a step back from the immediate engineering concerns,
and look at autonomous driving within the larger and somewhat “philosophical”
context of generally autonomous and int elligent machines. T he engineering of
autonomous driving systems rarely considers investigations into domains like
machine consciousness [ 45], self-awareness, and theories of mind [ 34]. This is
primarily due to two reasons: the technological/experiential background of the
engineers involved, and lack of clear mappings from the mentioned domains to
engineering concepts for cer tiﬁable, safety critical embedded systems. Nevertheless,
we believe that keeping abreast of key results in these domains is valuable for
practitioners of autonomous driving because it provides strategic guidance for future
architecture concepts and identiﬁes the gaps that prevents utilization of results from
these domains.
The ultimate goal for autonomous driving is not just human-like driving but to go
beyond human-like driving, in order to overcome human limitations and appreciably
increase road safety, trafﬁc efﬁciency, and environmental beneﬁts. To achieve
this goal, and to interact and coexist w ith human environments, machines would13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 319
need a level of consciousness that appr oaches human (admittedly under tightly
constrained notions). This is because c onsciousness is instrumental to reasoning,
decision making, and problem-solving capabilities in the face of uncertainty and
disturbances. There is a variety of literature [ 55] which suggests that robots’
problem solving capacities would be enhanced by the ability to introspect. This
is also a recurring theme across discip lines like computer systems-on-chip [ 68],
programming languages [ 52], robotics and even explorations for fault-tolerant on-
board computing for robotic space missions [ 81].
What would consciousness mean in the context of autonomous driving? A
dictionary deﬁnition [ 8]o f consciousness is “..the fact of awareness by the mind
of itself and the world” where awareness is further deﬁned as “Knowledge or
perception of a situation or fact. ” Within the ﬁeld of philosophy and cognitive
sciences, however, consciousness is recognized as an umbrella term covering a wide
variety of heterogeneous mental phenomena, often grouped under the categories
of Creature Consciousness, State Consciousness, and Consciousness as an entity
[76]. While comprehensive and precise deﬁnitions remain a topic of research and
debate, from an engineering perspective we are interested in deﬁnitions only insofar
as they help us to identify and characterize speciﬁc mach ine behavior. Indeed, as
far back as in the 1950s, researchers like Alan Turing believed that questions about
actual intelligence (and presumably consciousness) were too vague or mysterious
to answer. Turing instead proposed a behaviorist alternative [ 75] wherein if a savvy
human judge could not disti nguish a computer’s conversa tional abilitie s from those
of a real person1at a rate better than chance, then we would have some measure
of the computer’s intelligence. This measure of perceived intelligence could be
substituted for the computer’s real intelligence or actual consciousness. A loose
application to autonomous driving could be: If a savvy human judge can consistently
accept a computer’s driving abilities as equivalent to those of a competent human
driver, then we would have some measure of the computer’s driving capabilities.
Indeed, on 4th May 2012, one of Google’s self-driving Prius vehicles was granted
a “driving license” by the Nevada state D epartment of Motor Vehicles, after the
vehicle successfully passed driving tests similar to those administered to human
drivers [ 6].
At this point, it is useful to decompose consciousness into awareness of
the external and the internal, from the m achine’s perspective. Awareness of the
external world involves elements of sensing, data fusion, and perception, all of
which demonstrate progressive and on-going improvements within the domain of
autonomous driving (compare the sensors available for autonomous driving today,
with those from just a decade ago). This awareness of the external world is usually
explicitly represented in the internal world of the machine, by maintenance of data
structures reﬂecting perception of the external world. From a philosophical view
then, awareness of the external world is “ab sorbed” by the machine’s internal states,
to which engineering attention must be devoted, in order to achieve progressive
1This is the popular version. Turing actually framed a somewhat different test, as discussed in [ 37].320 S. Behere and M. Törngren
results in machine consciousness. However, for meaningful exploitation of any
internal awareness, the mach ine needs to be aware of the awareness, i.e., it needs to
beself-aware . This is supported by explicit conclusions in the domain of machine
consciousness, for example, McCarthy states [ 55] “..some consciousness of their
own mental processes will be required for robots to reach a level of intelligence
needed to do many of the tasks humans will want to give them.. consciousness
of self, i.e., introspection is essential for human level intelligence, not a mere
epiphenomenon.”
Which system characteristics and structures are instrumental for consciousness
and self-awareness? One approach to answering this is to understand how the human
brain functions, and mimic the biological structures found therein. The strongest
approach to understanding human consciousness (and the only one relevant to
autonomous driving) is that of computationalism [56] which is the theory that many
relevant aspects of the human brain can be modeled as having a computational
structure. This approach is the basis of the ﬁeld of Artiﬁcial Intelligence (AI)
which explores computational models of problem solving, although it reserves the
possibility that digital computers and brains-as-computers may compute things in
different ways. Research on computational models of consciousness has been driven
by researchers like Hofstadter, Minsky , McCarthy, Dennet, Perlis, Sloman, and
Cantwell Smith. A synthetic summary of th eir principal propositions is presented
in [56], where the dominant proposition is that “..consciousness is the property a
computational system X has if X models itself as experiencing things.” Thus, central
to the theory of computational consciousness is that introspection is mediated by
models.
As far back as in 1968, Minsky [ 58] introduced the concept of a “self-model”:
“To an observer B, an object A* is a model of an object A to the extent that B can
use A* to answer questions that interest him about A. A* is a good model of A, in
B’s view, to the extent that A*’s answers agree with those of A, on the whole, with
respect to the questions important to B.” This concept is semantically the same as the
engineering deﬁnition of model deﬁned by IEEE 610.12-1990, given in Sect. 13.3
above. Most engineers know that a model of a system is an abstraction of the system
which provides answers about desired pr operties and behavior of the system, with
desired accuracy. So we see that a speciﬁc category of models (the self-model) can
be the theoretical basis for a meeting point between the more abstract reasoning of
consciousness and the concerns of “everyday engineering.”
The computing models based on results from cognitive theory and specula-
tions on the structure of the human mind are explored in the ﬁeld of cognitive
architectures . There are a variety of cognitive architectures created to mimic
speciﬁc aspects of human reasoning an d decision making in machines. These
include RCS, ACT-R, SOAR, CLARION, NARS, YMIR, and others. A review of
the prominent architectures (with fu rther references) is presented in [ 67]w h i c h
is based on actively maintained online resources [ 3]. The review mentions 54
architectures, out of which 26 are described, and observes that virtually all take
their origin from biological inspiration, and different approaches are remarkably
similar in their basic foundations. A comparative review of these architectures with13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 321
speciﬁc relevance to machine autonomy is provided in [ 72], which draws some
important conclusions of relevance to practicing engineers working on autonomous
driving and other safety critical systems. The comparison is made along four
main themes of “Realtime,” “Resource management,” “Learning,” and “Meta-
learning.” The conclusions highlight a prevalent gap between cognitive architecture
design and concrete operation in real-world settings. This gap is fueled by the
observation that cognitive architectures ge nerally tend to ignore realtime operation
and resource management aspects. Ignoring such practical matters not only delays
useful technological application, but likely leads to ﬂawed theoretical foundations.
In turn, this limits the usefulness of the architectures to toy problems, “devoid of
the complexity of the real world that human beings live and operate in.” [ 72]. A
similar conclusion is drawn by other researchers exploring challenges in the domain
of embedded systems [ 46]. Fortunately, these limitations are not shared uniformly
by the cognitive architectures, promoting the possibility of designing architectures
with a more complete set of cognitive functions and usable operational capabilities.
The current approach to autonomous dr iving capabilities is bottom-up: based
on reﬁnement of features starting from t he automatic transmission and cruise
control, to adaptive cruise control, lane departure indications, and autonomous
emergency braking, to trafﬁc jam assist and advanced driving assistance systems,
eventually all converging on autonomous driving capabilities. This approach has
yielded excellent results so far; results which may not have been reachable (in
this timeframe) with a top-down approach that started inquiring into the nature
and structure of (human) consciousness. The current approach has heavily adopted
results from the robotics and AI domains. The adoption has exclusively involved
careful, manual construction of systems, where learning and decision making take
place on the data/content or module levels. Such a hand-crafted approach is referred
to as the Constructionist Design Methodology (CDM) in the AI domain [ 72,73].
However, to create systems that approach human level intelligence, signiﬁcantly
larger and more complex architectures are necessary. There is a very real danger that
methodologies based on constructionist AI will prove inadequate (Thórisson and
Helgason [ 72] state more strongly “..are doomed”) because of practical restrictions
on complexity and size of software based systems designed and implemented by
humans. These restrictions are captured in the term cognitive complexity [50], in the
domain of embedded systems architectures. The cognitive complexity attribute of
an architecture limits the ability of humans to hold the entire architecture in their
head and reason about it. As cognitive complexity rises, it becomes increasingly
more difﬁcult (and costly) to verify and validate the systems, and assure properties
like safety. Indeed, phenomena like feature interaction [48,57] have already started
occurring in automotive architectures (and generally, within cyber-physical systems)
and their study and control is an emerging area of research.
Within the AI domain, a relatively new constructivist approach [ 71] has emerged,
that advocates self-directed, introspective, learning, and dynamically adapting
conscious architectures instead of the “car efully handcrafted” approach prevalent
in the automotive domain. This is considered a paradigm shift, whereunder the
machine may proactively invoke stimulus-response cycles to continuously form322 S. Behere and M. Törngren
and maintain self-models, and reason about their characteristics. The evolution of
existing engineering approaches towards constructivist concepts requires develop-
ments in at least four relevant areas [ 69]: (1) temporal grounding (2) feedback
loops (3) pan-architectural pattern matching, and (4) small white-box components.
Temporal grounding comprises of an awareness of time in the real world, as well
as the time needed for the execution of software instructions, and how the two
are correlated. Such an awareness is already important in the design of distributed
realtime embedded systems, but as pointed out in [ 51], timeliness is a semantic
property that is not well captured in popular programming paradigms. At a behavior
level, temporal grounding involves predicting temporal result based on internal
models, and updating the internal models if/when the predictions do not match
the results. Traditional closed loop feedback is already prevalent in autonomous
driving. These loops typically control short-time horizon actuation in response to
the immediate sensing and perception of t he environment. When moving towards
constructivist AI, there need to be additional feedback loops that modify the control
structures themselves, based on their percei ved efﬁcacy. This is closely related to the
concept of self-modeling based on observations of stimulus-reaction experiments
in a given context. Such modiﬁcations enable an expansion of existing skills and
capabilities, which is an important characteristic of general purpose intelligence.
Pan-architectural pattern matching is useful for the self-induced comparison of
temporal versions of the architecture, as the system grows/evolves over time in
response to some speciﬁcation. Pattern matching is also useful for identiﬁcation
of contexts and operational scenarios, which in turn is useful for controlling
mechanisms of attention a nd recall. These mechanisms are important because they
enable the machine to ﬁlter out the large number of stimuli present in complex
operational situations, and focus only on those that have been learned as being
relevant. Existing autonomous driving architectures are composed out of integration
of large components like localization, trajectory planning, propulsion, etc. These
components are typically developed by different suppliers and are often “black-box”
components with well-deﬁned input/output in terfaces. However their large size and
black-box nature make it difﬁcult for a machine to reason about their internals based
purely on an observation of the input/output signals. This is a critical issue for self-
organizing and self-aware systems, because it is difﬁcult to reach self-awareness in
the presence of large, opaque internal components.
Constructivist AI certainly presents new challenges, some of which lie in the
determinism and predictability of state evolution, internal beliefs, and actions of
truly autonomous systems. These challenges currently run counter to requirements
on provable safety, determinism, and assurance of other critical properties, and
the constructivist approach is unlikely to be adopted for autonomous driving until
it evolves sufﬁcient tools, methods, reference architecture patterns, etc., to create
practical and demonstrably sa fe and predictable systems.13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 323
13.5 An Architecture for Autonomous Driving
In its current state, the tasks expected from an autonomous driving system are fairly
well constrained and speciﬁc. Therefore, it is possible to create domain speciﬁc
reference architectures for autonomous driving. Such architectures would include
deﬁnitions of the various architectural elements needed by an autonomous driving
system, the hierarchy and data-ﬂows bet ween these elements, and instantiation
guidelines for speciﬁc use cases. In this section, we present a brief introduction
to the required architectural components and some reasoning on their hierarchy
and distribution. As with most domain speciﬁc reference architectures, we restrict
the scope to the functional/logical views although some relevant technologies for
instantiation are later described in Sect. 13.7.
13.5.1 Main Architectural Components
The main functional components needed for autonomous driving are summarized in
Fig.13.3. We have chosen to categorize these components into three categories
1. Perception of the external environment/context in which the vehicle operates
2. Decisions and control of the vehicle motion, with respect to the external
environment/context that is perceived
3. Vehicle platform manipulation which deals mostly with sensing and actuation of
the ego vehicle, with the intention of achieving desired motion
Each category has several component s, whose functionality (from a strictly
architectural perspective) will now be bri eﬂy described. A deta iled description can
be found in [ 20].
Fig. 13.3 Main components of an autonomous driving system324 S. Behere and M. Törngren
Thesensing components are those that sense the states of the ego vehicle and the
environment in which it operates. The sensor fusion component considers multiple
sources of information to construct a hypothesis about the state of the environment.In addition to establishing conﬁdence values for state variables, the sensor fusioncomponent may also perform object association and tracking. The localization
component is responsible for determining the location of the vehicle with respect toa global coordinate system, with needed accu racy. It may also aid the sensor fusion
component to perform a task known as map matching , wherein physical locations
of detected objects are referenced to the map’s coordinate system.
The semantic understanding component is the one in which the balance
shifts from sensing to perception. More concretely, the semantic understandingcomponent can include classiﬁers for detected objects, and it may annotate theobjects with references to physical models that predict likely future behavior.Detection of ground planes, road geometries, and representation of drivable areasmay also happen in the semantic understanding component. In speciﬁc cases,the semantic understanding component may also use the ego vehicle data tocontinuously parameterize a model of the ego vehicle for purposes of motioncontrol, error detection, and potential d egradation of functionality. This component
comes closest to incorporating the “sel f-model” needed for g enerating machine
consciousness.
The world model component holds the state of the external (and possibly,
internal) environment, as perceived by t he ego vehicle. It can be characterized as
either passive or active. A passive world model is more like a data store and maylack semantic understanding of the stored data. It cannot, by itself, perform physicsrelated computations on the data it contains, to actively predict the state of the worldgiven speciﬁc inputs. The active world model, on the other hand, may incorporatekinematic and dynamic models of the objects it contains, and be able to evolvebeliefs of the world states when given a sequence of inputs.
The trajectory generation component repeatedly generates obstacle free tra-
jectories in the world coordinate system and picks an optimal trajectory from theset. The energy management component is usually split into closely knit sub-
components for battery management and r egenerative braking. Since energy is a
system-wide concern, it is not uncommon for the energy management componentto have interfaces with other vehicular systems like HV AC, lights, chassis, andbrakes. The diagnosis and fault management components identify the state of
the overall system with respect to available capabilities, in order to inﬂuenceredundancy management, systematic degradation of capabilities, etc. Reactive
control components are used for immediate (or “reﬂex”) responses to unanticipated
stimuli from the environment. An example is automatic emergency braking (AEB).These components typically execute in parallel with the nominal system, and if athreat is identiﬁed, their output overrides the nominal behavior requests.
The vehicle platform abstraction provides a minimal model of the vehicle,
whose data is used to ensure that the trajectories being generated are compatible,optimal, and safe for the physics and capabilities of the actual vehicle.13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 325
The platform stabilization components are usually related to traction control,
electronic stability programs, and anti-lock braking features. Their task is to
keep the vehicle platform in a controllable state during operation. Unreasonable
motion requests may be rejected or adap ted to stay within the physical capabilities
and safety envelope of the vehicle. The trajectory execution components are
responsible for actually executing the trajectory generated by decision and control.
This is achieved by a combin ation of longitudinal acceler ation (propulsion), lateral
acceleration (steering), and deceleration ( braking). Most recent vehicles already
incorporate such components and they ma y be considered “traditional” from the
perspective of autonomous driving development.
13.5.2 A Reference Architecture
Having introduced the necessary functional components in the previous section, we
now combine them into a suggested reference architecture, as shown in Fig. 13.4,
where the arrows show directed data-ﬂow s between the architectural elements.
Fig. 13.4 A functional architecture for autonomous driving architecture326 S. Behere and M. Törngren
The architecture is organized into three l ayers: the vehicle pl atform and cognitive
driving intelligence which are on-board the vehicle, and an off-board or “cloud”
based layer for potential tele-operation, remote monitoring, and/or vehicle man-
agement. The off-board layer may be optional for many use cases, nevertheless
it is almost always useful at least during the early phases of vehicle prototyping
and testing. For heavy commercial trucks, some form of ﬂeet management systems
are usually provided to the ﬂeet operators. Moreover, there are compelling drivers
for including vehicle-to-infrastructure (V2I) communication to improve trafﬁc
efﬁciency and safety by sharing information acquired from multiple vehicles and
other sources.
O n eo ft h ek e yd a t aﬂ o w si nF i g . 13.4 is between the cognitive driving intelli-
gence and the vehicle platform layers. Functionally, this contains motion requests in
the form of desired, instantaneous vehicl e velocities, accelerati ons (longitudinal and
lateral), and deceleration. These are typi cally in some absolute, global coordinate
space, rather than being relative to the vehi cle’s motion. In practice, it may contain
a short-time series of these values (trajectory fragments) rather than individual
requests, because knowing the anticipated fu ture setpoints is hel pful for achieving
more optimal control of the actuators. It is also feasible to include two different
sets of trajectory fragments: one which takes the vehicle to the desired destination,
and the other which takes it to a safe(er) state in case of system errors. The safe(er)
state trajectory is computed periodically and should ideally be executable by the
vehicle platform in an open loop fashion. The output of the localization function
contains at least the 2.5 dimensional vehicle pose consisting of the location in
two dimensional space, as well as the head ing. In practice, a lot more data and
meta-data is provided which includes altit ude, the latitude/long itude coordinates,
the same information in a variety of coor dinate spaces, detected known landmarks,
number of satellites in the GPS ﬁx, estimated accuracy, etc. The output of the
sensor fusion function depends heavily on the actual sensors and algorithms being
used. Since lidars are used very often it is not uncommon to see point clouds with
associated meta-information. The addition of a camera leads to the inclusion of
extracted image features, and possibly colored point clouds. The latter are especially
useful for classiﬁcation in the semantic understanding component. The usage of
automotive grade radar is more interesting. Typically, automotive radar sensors
come with an associated ECU which directly outputs (possibly classiﬁed) objects
and their properties like relative velocity and distance. The radar outputs can be used
for cross-correlation and plausibility testing of the data from the lidar and camera
sensors. However, in projects with a strong emphasis on sensor fusion, the raw radar
information may also be requested. It can be seen in Fig. 13.4 that the output of a
functional component goes to other components as well as the world model. This is
usually for performance reasons. In an ideal implementation, it would be possible
to have a “star” data topology where all the components exchange data only with
the world model. This is a simplifying abstraction, leading to a single source of
information and other beneﬁts. However, it raises concerns on performance, usually
latency, as well as increasing the extra-functional requirements on the world model,
such as robustness, reliability, and availability. The reference architecture permits13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 327
both topologies and each instantiation may tune the amount of information each
component receives from the world model, or directly from other components. Thecomponent interfaces are further reﬁned in the technical architecture, considering
the constraints imposed by the allocation of components to ECUs and the bandwidthof inter-component communications.
The on-board autonomous driving architecture admits a variety of distribution
possibilities for th e functional components. We c hoose to encourage a strong
isolation between the vehicle platform and the rest of the driving intelligence.This isolation is beneﬁcial from a number o f perspectives. Firstly, from a legacy
viewpoint, most aut omotive OEMs already have fai rly sophisticated functionality
in their existing vehicles for management of the vehicle motion. This includesfeatures like (adaptive) cruise control, tr action management, and brake management
including possible regeneration (for hybrid and electric vehicle platforms), and inthe case of heavy commercial trucks, additional features like control of multipleaxles, external brake requests, and overall powertrain control. One of the mostconvenient ways to introduce autonomous driving functionality is to introduce an
additional system (the cognitive driving intelligence) which generates the kindof operational setpoints that the various vehicle controllers are already setup toreceive. These setpoints are typically in the form of commanded acceleration,
velocity, and vehicle deceleration. S econdly, even if legacy is not a concern,
isolating the vehicle platform enables a clean separation of concerns and systempartitioning. The cognitive driving intellig ence needs to generate desired vehicle
motion in some world coordinate system. Thus, its concern is to specify theglobal motion parameters which the vehicle platform should fulﬁll. To do this, thecognitive driving intelligence requires only a minimum model (abstraction) of thevehicle dynamics and the vehicle platform conﬁguration parameters. Consequently,the entity responsible for answering the question, “Where and how should thevehicle move in the next N units of time?” need not have an intimate knowledgeof the various vehicle propulsion mechanisms and their continuous control. Inturn, the vehicle platform is not required to have knowledge of how and whythe motion requests are generated. It s responsibility is to fulﬁll the commanded
motion requests while assuring the safety of the vehicle platform in terms of basicvehicle dynamics (limiting longitudinal and la teral accelerations, anti-lock braking,
electronic stability control, etc.). This sort of encapsulation of functionality andseparation of concerns reduce the cognitive complexity of the architecture andare recommended best practices in the ﬁel d of systems architecting. Finally, the
isolation also facilitates product and platform variability management. Especiallyin the domain of heavy commercial vehicles, it is quite common to ﬁnd extremevariability in each manufactured vehicle, since it is speciﬁcally conﬁgured for eachcustomer’s needs. By separating the cognitive driving intelligence from the vehicleplatform, it can be reused on di fferent vehicle platforms.
The off-board layer, depending on its functionality, needs to tap into differing
parts of the on-board architecture. In our experience, the maximum amount ofdata exchange occurs with the world model, since it holds practically all usefulinformation needed by the off-board layer. This includes information regarding the328 S. Behere and M. Törngren
current state of the on-board systems, the perceived external environment, as well
as any upcoming motion decisions that may be in the execution pipeline. At the
remote end, all received information is typically accumulated in a database, which
in turn feeds application speciﬁc views of t he gathered data. Active tele-operation
[42] is foreseen in use cases where a ﬂeet of autonomous vehicles is overseen
by a command-and-control center. In such use cases, the vehicle may be able to
“call home” when it gets stuck, or the remote center may actively claim control in
potentially hazardous situations. In these cases, the tele-operation part of the system
architecture needs to communicate with the decision and control part of the on-
board systems. The commands sent are usually brief motion requests relative to
the current location of the vehicle (in case the vehicle is stuck), or reprogrammed
destinations. In our experience, the remote commands are directed at the cognitive
intelligence and have relatively low bandwidth requirements. Direct control of the
components in the vehicle platform requires signiﬁcantly higher bandwidth and
stricter timing constraints, which is rarely possible over large distances with existing
wireless communication technologies.
13.5.2.1 Comparison with Similar Architectures
Comparisons of the reference architectur e can be made with the architectures of
Junior—Stanford’s entry in the 2007 DARPA Urban Driving Challenge, the HA VE-
IT project, and a Mercedes Benz autonomous car. These architectures are relevant
because they represent a steady improvement of functionality and implementation,
over the past decade. Junior is a successful example of a self-dri ving vehicle from
the early days of the technology, and a l argely academic proo f-of-concept. The
HA VE-IT project consortium had strong representations from OEMs and Tier 1
suppliers from the automotive domain, as well as independent research institutes
and universities—the project focused on highly automated driving and advanced
driver assistance systems. The Mercedes Benz autonomous car development had
the automotive OEM Daimler AG as the majority stakeholder. The intent of the
comparison is to highlight similarities and differences, rather than make claims of
which architecture is “better.” An architecture needs to be evaluated in its context,
because the context imposes unique constrai nts with associated implications on the
design. Thus, we choose to believe that every architecture that works has merits
in its own context, and that there is rarely a deﬁnitively best solution to any given
architectural problem.
Stanford University’s DARPA Urban Challenge entry, Junior [ 59], provides an
early example of an autonomous driving architecture. The interface to the VW
Passat vehicle is via steering /throttle/brake controls, rat her than direct longitudinal
and lateral acceleration demands. This can probably be explained by the assump-
tion that the autonomous driving architecture was designed exclusively for tight
integration with one particular vehicle, which lacked general vehicle dynamics
interfaces for setting acceleration and deceleration setpoints. The architecture is
divided into ﬁve distinct pa rts for sensor interface, pe rception, navigation, user13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 329
interface, and the vehicle interface. The loca lization is integrated into the perception
part, and there seems to be no effort to classi fy detected obstacles . This architecture
also explicitly includes a component/la yer for “Global Services” dealing with
functionality like ﬁle systems, and inter-process communication. We do not describe
these services because they do not strictly ﬁt into an architecture’s functional view.
The architecture is not strictly divided into layers, nor is there an explicit component
to abstract the view of vehicle platform.
The layered approach to architectures and their description is also found in the
European HA VE-IT project [ 12], which had its ﬁnal demonstrations in June 2011.
This project architecture consists of four la yers: “Driver interface,” “Perception,”
“Command,” and “Execution.” The Perception layer consists of environmental
and vehicle sensors, and sensor data fus ion. There is no mention of localization,
perhaps because the system operates in close conjunction with a human driver. The
Command layer contains a com ponent named “Co-Pilot,” which receives the sensor
fusion data and generates a candidate trajectory. A “mode selection” component in
the Command layer then switches between the human driver and the “Co-Pilot” as
a source of the trajectory to be executed. The selected trajectory is then handed to
the Execution layer in the form of a mo tion control vector. The Execution layer
consists of the drivetrain control, which in turn controls the steering, brakes, engine,
and gearbox. This execution layer corresponds closely to our vehicle platform layer
in that it pertains to drivetrain control and “..to perform the safe motion control
vector” [ 12]. Also similar is the usage of a motion control vector as an interface
to the vehicle platform/execution layer. O ur architecture additionally incorporates
energy management as an explicit part of the decision and control component, which
is especially valuable for electric and hybrid drivetrains, since then considerations
of estimated range can be incorporated in the long term trajectory planning.
The HA VE-IT architecture evolved in th e context of Advanced Driver Assistance
Systems (ADAS) with a strong reliance on the human driver and emphasis on driver
state assessment components in the command layer; it remains unclear how well
it can be adapted to L4 autonomous systems, where a human driver may not be
present.
Close comparisons can be made with the architectural components of Bertha,
the Mercedes Benz S-class vehicle, t hat recently (2014) completed a 103 mile
autonomous drive from Mannheim to Pforzheim [ 80]. In the system overview
presented in [ 80], components like perception, localization, motion planning, and
trajectory control are clearly identiﬁed. These agree well with the components we
have described in this paper, however, this is hardly surprising. Every autonomous
driving system requires these functional components and they are likely to show
up in practically every architecture for autonomous driving. The system overview
in [80] does not explicitly acknowledge the e xistence of components for semantic
understanding, world modeling, energy management, diagnostics and fault manage-
ment, and platform stabilization. It is possible that some or all of these were present,
but not mentioned. This is especially true for diagnostics and fault management.
A part of semantic understanding related to classiﬁcation of detected objects can
(and often is) put in the Perception component, as in [ 80], but we see beneﬁts in330 S. Behere and M. Törngren
the explicit separation of sensor fusion and semantic understanding advocated by
our architecture. The isolation of semantic understanding from raw sensor fusion
enables faster and more independent iterations and testing of newer algorithms,
without affecting the rest of the system. This is directly relevant to the engineering
stakeholder concerns of independent development of individual subsystems, as well
as their virtualized simulation and testing. Further, the raw object data from sensor
fusion is still of value to the decision and control components, despite a lack of
accompanying semantic understanding. This is because, although knowledge of
whether a detected object is a pedestria n or motorcycle is useful for optimized
path planning, collision with the object still needs to be avoided regardless
of its classiﬁcation. In a similar vein, incorporating a distinct component for
world modeling enables incremental sophistication in internal representations while
retaining (backwards compa tible) interfaces. The existence of a distinct world model
components makes it easier to answer questions like, “How will the world evolve
if I perform action X instead of action Y?” Although [ 80] mentions the existence
of a “Reactive Layer,” it makes no mention o f any other layers in the architecture
and how the components are distributed across them. In our paper, we make a clear
distinction between the vehicle platform and cognitive driving intelligence layers
and provide a rationale for our proposed component distribution.
Comparison of these and a few other architectures with our proposed architecture
leads us to believe that the explicit r ecognition of semantic understanding, world
model, and vehicle platform abstraction components is unique to our architecture.
This is not entirely coincidental, since our incorporation of these components is,
to some extent, a deliberate action to resolve the short-comings we perceived
during our early state of the art surveys. Furthermore, our architecture has been
applied to a larger variety of vehicles (co mmercial trucks, passenger cars, as well as
novel, legacy free designs) and therefore n ecessarily incorporates features related
to greater isolation of functionality into di stinct components and abstraction of
vehicle interfaces. The aggressive partiti oning of architectural components provides
signiﬁcant freedom to the component developers to modify and test new algorithms,
without affecting the rest of the system. It also reduces the cognitive complexity of
the system, and makes it relatively easy to f oresee potential pitfalls and debug causes
of objectionable behavior.
13.6 Systems Engineering
Systems engineering concerns cover the methodology and artifacts related to the
engineering processes used throughout the development of the system. Ideally,
these concerns commence with an investigation of the needs which the system
intends to address, and then cover the entire development lifecycle until the
system is deployed. Beyond development, systems engineering also looks at
aspects related to the system’s operation, maintenance, potential upgrades, and
eventual decommissioning. In this chapter w e restrict the scope to the development13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 331
activities only. Within this restricted scope, we discuss the modeling steps and
associated classes of models that are important for the development of autonomous
driving systems. They are important not because the nature of autonomy directly
necessitates an increased focus on sys tems engineering, but because autonomy
requirements increase the complexity of the system being designed. The complexity,
together with the safety critical nature of the system, requires careful attention to all
aspects of the development processes, which is facilitated by systems engineering
and its associated methodologies, tools, and artifacts. Thus, the topics covered in
this section are not exclusive to autonomy, but they have a signiﬁcantly increased
importance within the context of autonomy.
In MBSE, the engineering processes are supported by an increasing set of
models, some of which become increasingly detailed. To guide the systems
engineering process, there exist a number of lifecycle development models and
engineering methodologies. Most lifecycle models are grounded in one of three
seminal models [ 38]: The Waterfall model [ 65], the Spiral model [ 23], and the
V-model [ 43,44]. Of these, the V-model and its variations have been extensively
applied to systems engineering and development. These lifecycle models are
leveraged by various MBSE methodologies, such as OOSEM, RUP-SE, Harmony-
SE, and JPL State Analysis. An overview of these prominent methodologies is given
in [38], which includes further information, including additional references for each
methodology. More methodologies have since been identiﬁed and they are gathered
and described online at the MBSE Wiki Page [ 13]. Beyond these relatively general
methodologies, there are also approaches to speciﬁc parts of systems engineering
that are more focused on embedded and auto motive systems. These deal with topics
like requirements engineering [ 27], formal semantics [ 31], multi-view modeling
[30], etc. Among other things, the methodologies deﬁne a number of development
activities. Example activities are the deﬁnitions of stakeholder needs, system
requirements, logical archit ecture, and system validation and veriﬁcation. In some
methodologies, the execution of these activ ities may be referred to as “phases.” Each
methodology involves a slightly differen t grouping and sequencing of activities
and phases. The MBSE methodologies may or may not recommend a speciﬁc
language or tool framework, however, they all involve the creation of models or
model views supporting each engineering phase. In this section, we propose four
classes of models, the contents of wh ich are independent of methodology, but
which can be mapped to different activities within a selected MBSE methodology.
Similarly, a project speciﬁc lightweight MBSE methodology may be created by
selecting speciﬁc models from each class a nd specifying the sequence(s) of their
creation using particular tools. Thinking in terms of model classes is valuable
because classes easily encapsulate a diver sity of modeling formalisms and tools. The
diversity is necessitated, at the very least, due to the state of practice in modeling
technologies—at the moment, there exis ts no comprehensive modeling formalism
that can completely capture al l relevant systems engineering stakeholder concerns.
Therefore, the various concerns need to be captured using heterogeneous sets of
possibly domain speciﬁc models.332 S. Behere and M. Törngren
Establishing and maintaining links between all the assorted models is an active
area of research [ 74], but in the meantime, project speciﬁc inter-model links need
to be selected manually by the practicing systems engineer, and these also need
to be manually maintained by the engineering team. The links represent relations
like reﬁnement, allocations, correspondence, etc., between the model elements. An
active risk to be guarded against is that in f ast moving projects systems engineering
models are assigned secondary importance. Therefore, either models are not created,
or the models and links are not updated as the implementation changes. Over time,
there is signiﬁcant divergence between the implementations and the models. This
leads to accumulation of systems engin eering “debt.” The d ebt accumulation can
be partially mitigated by via two inte rrelated choices: the methodology and the
tools used for the systems engineerin g process. Flexibility in the methodology and
automation support from the tooling reduce the “cost” or effort of model creation
and maintenance, making it more likely t hat the engineering team views systems
engineering as less of a “burden” and more of a beneﬁt.
Below, we discuss some key steps in systems modeling, sequenced as they would
occur in an ideal development processes. Realistically, it is very important that
the methodology and associated tools permit the engineering team to begin with
modeling multiple, arbitrary concerns, which can later be extended and linked to
other models in all directions. Thus it should be possible to start modeling the logical
architecture of the system, or a softwa re component, without having explicitly
modeled the preceding require ments, actors, and their inte ractions. Such knowledge
may be implicitly known/assumed by an engineer who is itching to sketch out
an architectural solution—forcing her/him to explicitly model requirements and
behavior ﬁrst merely results in annoyance and rebellion.
The main systems engineering model classes that support the steps we describe
are shown in Fig. 13.5. It should be noted that there may exist a variety of different
models within each model class. The ﬁrst s tep is to analyze and represent the
system’s users, their operational needs, an d the usage scenarios. Who are the actors
involved in interacting with the system? Actors can be human users as well as other
entities involved in autonomous driving like o ther road users, road infrastructure
like trafﬁc lights, etc. Once the actors are deﬁned, the next task is to determine
what they want the system to do. What behavior and services do they expect from
the system? What are the contexts within which the actors will interact with the
system? What will be the modes of interaction, and how are they related to the
operational contexts? Depending on the m odeling languages and tools used, there
Fig. 13.5 Systems engineering model classes13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 333
can be a variety of diagrams, process deﬁ nitions, allocation of actors to process
artifacts, etc., for capturing and represen ting the ideas at this phase. This phase helps
to identify the principal behavioral re quirements expected from the system and its
usage by the actors involved.
The second step is to identify the main system components, their contents,
relationships, hierarchies, properties, and behavior. This constitutes the logical orfunctional architecture of the system and it excludes concerns related to techno-logical implementation of the identiﬁed components. However, it does take intoconsideration all major extra-functional constraints (like safety, security, perfor-mance, reliability, etc.) so as to ﬁnd a suitable compromise between them (tothe extent this is possible without getting i nto implementation speciﬁc detail).
The logical architecture deﬁnes the com ponents and their int erfaces, including
formalization of all logical views and how these views are accounted for in thecomponent designs. The behavior requireme nts from the previous step are reﬁned
and allocated to the identiﬁed architectural components. Links between require-ments, operational scenarios, actors, and components are also established. The entireprocess of logical architecture can be applied repeatedly within the boundaries ofa single logical component or its sub-components. Thus, the logical architecturemay have multiple and differing “levels of zoom” for each of the componentsand their connections. Depending on the tools used, the logical architecture andits properties may be represented using a multitude of models, modeling tools andlanguages, or with a uniﬁed, all encompassing model, within which various relatedconcerns are represented using speciﬁc vi ews. Given a logical architecture including
behavioral views, one could use tools for static analysis (e.g., checking interfacecompatibility) and perform behavioral analyses. These may include simulation andmodel checking to assure speciﬁc system properties like absence of deadlocks,
reachability of speciﬁc states, etc. The speciﬁc analysis techniques of interest mayvery well dictate the choice of architecture representation languages. For example,it is not uncommon that a modeled architecture or its sub-component needs to beremodeled using a different language, just so that it can be veriﬁed by using aparticular model checker.
The third step is the modeling and grouping of application software compo-
nents within the system. The grouping may be in terms of individual softwareapplications, or for the purpose of simulation in tools like Simulink. These modelsinclude representations of the behavior of the software components, their resourcerequirements, runtime characteristics, in terfaces, properties and attributes, and
communication speciﬁcations. At this sta ge it is increasingly common to see the
usage of the so-called executable software models. Executable software modelsare those which can directly be transformed into compilable source code, whichguarantees that when the source code is executed under assumed conditions, itshould have the same behavior as the modeled software component. Dependencieson expected platform capabilities are usually explicitly mentioned for each softwarecomponent model.
The ﬁnal step is the modeling of the platforms on which the application software
components execute. The platforms consist of a “stack” incorporating the computing334 S. Behere and M. Törngren
silicon (micro-processors/controllers), an optional operating system which may or
may not provide realtime guarantees or alte rnatively, a native language runtime for
the chosen silicon, an optional middleware that abstracts the operating system and itsservices, and any libraries, daemons, and other services provided by the operatingsystem and hardware. Multiple applica tion software components may execute on
the same or similar platforms, and in cases of advanced experimental architectures,
application software components may migrate between similar platforms. In allcases, it is more convenient and useful to model a platform and its servicesas a whole, rather than embed this infor mation into each application software
component. However, we emphasize that this is largely a matter of preference.
Associated with all the four modeling steps is a continuous reﬁnement of require-
ments, test cases, safety viewpoints, and documentation artifacts. A comprehensive
taxonomy of models associated with each step is beyond the scope of this chapter,but each step must introduce additional mode ls representing requirements and test
cases relevant to that step. Requirements must be allocated to models that assurethem, and both requirements and test cases need to be assigned to unique membersof the engineering team. Safety considerations are usually generated by followingprocesses established by safety standa rds like ISO26262. Add itional models/views
like functional safety architecture will be introduced, along with their reﬁnementsto technical safety architectures and associated redundancies and switching modesfor application software and platform components. The number of models maygrow and shrink at each step as the syste ms engineering process is iteratively
applied during system development. Ultimately, the artifacts ideally exist as a webof interconnected models at each step and across the steps. Preserving the links
between the models, and keeping the models up to date with the implementation isa signiﬁcant challenge. One way to do this is via increasing toolchain automation,but given the relative lack of production r eady tools, it becomes the responsibility
of the architecting and systems engineering team to select and minimize thenumber of models used to represent the system. This in turn depends on avariety of technical and non-technical factors like the nature of the project and itsmaturity level, available tools, the importance attached to systems engineering byproject management, the skills and qualiﬁcations of the people involved, etc. Onerecommendation based on our experience is to always synchronize the software andplatform models with the actual technol ogies being utilized in the project. These
will change as the project moves through stages of proofs-of-concept, prototyping,to certiﬁable implementations. The models need to be updated correspondingly.For example, during the early prototyping phase, if the entire application softwareis modeled in Simulink and the execution platform is a rapid prototyping systemlike the dSpace MicroAutoBox, it makes little sense to model the system in termsof software threads, tasks, operating sys tem runtimes, etc., because the modeling
concepts and technical implementation concepts just do not synchronize in termsof relevance. Here, it is better to restrict the models to Simulink and coarsedSpace speciﬁcations. When an eventual move is made to AUTOSAR or similarinfrastructure, the associated models dealing with ﬁner platform details may becreated.13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 335
One of the conﬂicts that MBSE can help resolve is the need for fast development
cycles, while guaranteeing consistency of the various process and product artifacts.
In our opinion, this necessarily requires the support of advanced tooling and as such,
the details are highly tool speciﬁc. But the general underlying patterns involve inter-
model links, co-simulations, and model checkers. The inter-model links typically
represent relationships between the lin ked models, for example, B “realizes” A
or Q “is derived from” P, etc. An example of this is a facility offered by several
commercial toolsuits wherein requirements can be linked to speciﬁc blocks in a
Simulink diagram. When either of the models changes (the requirement or the
Simulink block), a ﬂag is raised to signify that the status of the link requires
investigation. Depending on the tool suppor t, additional data on what has changed
may also be presented. Even a simple facility such as this helps to prevent undetected
changes from propagating through the design. Prior to a release, the MBSE process
may require that no inter-model links have unaddressed “change ﬂags.” Similarly,
with the advent of technologies like Open Services for Lifecycle Collaboration
(OSLC) [ 7], the concept of “round-trip” ﬂows is gaining ground. In a round-trip,
a model created using some particular modeling technology can be “exported” to
a different tool, where it is enriched or analyzed, and the results can be sent back
to the original tool. Techniques like OSLC or Functional Mockup Interface (FMI)
[5] enable model exchange and co-simula tion of heterogeneous models. Such co-
simulations can be used to simulate an entire vehicle, comprised of different types
of linked models. Thus, it becomes possible to easily examine the impact of changes
deep within one particular model, on the overall vehicle behavior. For individual
models, the usage of model checkers can help assure that desired properties are
retained (for example, absence of deadlo cks and unreachable states) after model
modiﬁcation.
Based on the modeling steps described, and the classes shown in Fig. 13.5,a
partial view of modeling artifacts and their allocation links is shown in Fig. 13.6,
where the rightmost column describes some of the functionality provided by the
models. The dotted curved arrows crossing the vertical layers represent allocation
links. Thus arrows between the architecture representation and application software
components show the mapping between logical architecture elements and particular
application software components. For the sake of clarity, the continuous reﬁnement
and accumulation of requirements and test s are not shown in the diagram. Examples
for speciﬁcation, structuring, and reﬁnement of requirements can be found in
[78,79]. The tests description must include the tools and methods of conducting
the tests, templates for data logging during testing, component behaviors, and data
values/ranges that constitute an acceptable test result. Figure 13.6 represents a
concise takeaway of the contents of this section on systems engineering.336 S. Behere and M. Törngren
Fig. 13.6 Partial view of modeling artifacts and allocation links
13.7 Technical Implementation
In this section, we brieﬂy discuss some selected technologies that have proven useful
in our experiments for implementing autonomous driving systems. The emphasis is
on the early prototyping phase, since that is usually when it is possible to experiment
with novel technologies in a low risk manner. Similar to Sect. 13.6, the topics and
technologies covered in this section are not exclusive to autonomy, but they have
a magniﬁed importance in the context of the development of autonomous driving
systems, which makes them worthy for consideration.
Since the last 15 years, there has been a p roliferation of various Architecture
Description Languages (ADLs) in academ ia and industry. A systematic overview
is provided in [ 47], which discusses 102 ADLs with 33 from Industry and 69 in
Academia. Each has its own speciﬁc meta-model, notations, tools, and domain
applicability, with little chance of interoperability between them. Moreover, the
ADLs themselves have often undergone complete changes or remodeling between
versions. Capturing the vast variety of stakeholder concerns within a single nota-
tion is exceedingly impractical, as is the aim of creating a “universal notation.”
Consequently, domain speciﬁc ADLs have emerged, which focus on the properties
of a particular domain, and speciﬁc types of analyses and modeling environments
[53]. When different concerns need to be modeled in differing languages, the
individual models need to be synchroni zed, such that changes in one model are
propagated and reﬂected in the others. There are efforts for tool based and automated
synchronization but practically, this is still a manual process. Thus, domain speciﬁc
ADLs need to strike a sweet spot where they are expressive enough to model
all relevant stakeholder concerns in the domain, while minimizing syntax and
remaining usable. This needs to be compl emented with excellent tools, preferably13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 337
those which also enable bi-directional synchronization not just between different
models, but also between models and executable implementations. This is a steep
challenge. We have identiﬁed three ca ndidates that are broad and deep enough to
address a non-trivial number (but not all!) of stakeholder concerns, in the ﬁeld
of automated driving: EAST-ADL2 [ 36], AADL [ 39], and ARCADIA [ 9]. Of
these three, AADL and ARCADIA are generally applicable within the domain
of embedded systems architecture, while EAST-ADL2 is speciﬁcally intended for
automotive systems. All three enable the representation of requirements, behavior,
structure, mapping to technical implementations as well as traceability links among
them. Both EAST-ADL2 and AADL have reference tooling to import Simulink
models to form architecture representa tions. This is important, because Simulink
is the de facto simulation and modeling tool in the automotive industry. EAST-
ADL2 is supported by a language speciﬁc core methodology [ 1] which can be
complemented by additional extensions related to requirements traceability [ 18],
formal analysis and veriﬁcation [ 49], etc. Similarly, the ARCADIA method is
embedded strongly in the recently open-sourced tool Capella [ 11]. In our opinion,
Capella is the most mature, comprehensive, and user-friendly open-source tool
available for MBSE at the time of this writing. It is built on the Eclipse ecosystem,
and it been in use internally at the Thales company for over 5 years. The tool guides
the user through a series of top-down modeling activities deﬁned by the ARCADIA
method. It also offers a series of defau lt viewpoints for modeling, and within each
viewpoint modeling can be done by means o f a number of diagram types. Deﬁnition
of custom viewpoints is also possible within Capella. Note that although all these
tools have the word “architecture” in their names, their actual functionality goes
beyond traditional architecture and into th e various systems engineering modeling
activities we have covered.
An important consideration in the selection of tools and languages used for sys-
tems engineering and other modeling is the support they have for the platforms and
programming languages used in the system implementation. Automotive domain
speciﬁc languages like EAST-ADL2 have built-in support for AUTOSAR concepts,
enabling an easier mapping from the models to their implementation platforms.
For technical implementation of autonomous driving systems, we propose a
setup represented in Fig. 13.7. The setup consists of aggregations of components,
connected by a publish-subscribe bus with Quality of Service (QoS) ﬁlters. The
aggregations are represented by the boxes in Fig. 13.7 and agree well with the archi-
tectural layers presented in Sect. 13.5. The overall intent is to support development
of functionality in simulations and on target implementations, with the ability for
seamless transitions. Even when certain functionality has been implemented on
target hardware, it is still valuable to switch back-and-forth between simulations
and propagate changes in both directions. The setup consists of a physical platform
(a.k.a drivetrain) along with a simulation of it running on a general purpose
computer (the “soft” simulation) and a version running on a hardware-in-the-loop
(HIL) rig. Similarly, the various drivetrain controllers exist as soft simulations
and implemented on target hardware. The cognitive driving intelligence layer is
aggregated in an implementation, in addition to a synthetic 3D environment setup,338 S. Behere and M. Törngren
Fig. 13.7 Proposed implementation setup for autonomous driving
for example, within a 3D gaming engine like Unreal [ 16]. Within the synthetic
environment, techniques like ray-tracing are used to emulate radar, lidar, and camera
sensors. The environment incorporates physics engines for calculations of solid
body dynamics, collisions, etc. The setup a llows for combinations like driving the
real, physical vehicle in a real environment, driving a virtual vehicle in virtual envi-
ronment using the real, implemented driving intelligence, testing the implemented
drivetrain controllers on a simulated drivetrain, etc. Of course, depending on the
constraints and resources of a particular project, not all aggregations need to be
present.
The technical implementation platforms for the cognitive driving intelligence
and the virtual environments are typically (during prototyping) commercial off-
the-shelf (COTS), general purpose, multi-core computers with best-of-breed COTS
graphics processing units (GPUs). GPU vendors also provide a variety of graphics
and parallel processing libraries to leverage the capabilities of their platforms.
The computers usually execute the Linux operating system, with middleware like
ROS [ 64]o rO R O C O S[ 32]. Of these, ROS is more popular, with a large, open-
source community. It provides facilities for computation and communication across
processes running on the same and different computers. ROS does not support hard
realtime operation, but for prototyping this is usually not a limitation, provided
the hardware has sufﬁciently fast pro cessors and enough memory. Hard realtime
requirements are usually more critical for the drivetrain control, compared to the
cognitive driving intelligence. However, Linux does provide some hardened timing
guarantees with the help of the PREEMPT_RT kernel patch [ 15] or dual kernel
approaches like Xenomai [ 17]. The OROCOS middleware provides a component
framework that can leverage the hardened realtime properties and it also supports
inter-component communication on the same and different computers. The pro-
gramming language of choice for the cogniti ve driving intelligence is usually C++,13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 339
a choice often mandated by the used middleware and useful libraries2like OpenCV
[26] and the Point Cloud Library (PCL) [ 66]. The usage of Java for high level
tasks is not uncommon either, although there is a lingering perception that it suffers
from performance problems in comparison with C++. A modern alternative to Java
is the Scala programming language [ 61], which in our opinion, deserves greater
interest. Scala allows for strict functional programming, object-oriented procedural
programming, as well as a free combination of the two. It runs on top of the Java
Virtual Machine (JVM) enabling it to leverag e existing Java libraries. The functional
programming paradigm emphasizes stateless, side-effect free functions as building
blocks, which leads to greater ease of side-effect free composition of functionality.
The “soft simulations” of the drivetrain and its controllers are usually made in
Simulink, typically running on the Windows operating system on general purpose
COTS computers. The reason for choosing Windows here is that these simulations
are often executed on rapid prototyping systems like the Simulink RealTime and
dSpace autobox, the tooling for which is often Windows only.
There is a greater variety of platforms for the drivetrain controllers, where
constraints of realtime, scheduling, input –output, and computing resources are more
prominent. Relevant operating system standards here are OSEK/VDX [ 14], parts of
which are standardized in ISO 17356, and AUTOSAR [ 10], which reuses large parts
of OSEK. There are a large and diverse number of vendors supplying customized
realtime operating systems, and middleware stacks with varying capabilities. The
programming languages of choice are usually C or C++, where large portions of
the code are autogenerated from tools lik e Simulink. For both languages, safety
critical subsets are deﬁned by the Motor I ndustry Software Reliability Association
(MISRA), in the form of approved language usage rules and there are tools to
generate and verify C/C++ code against the MISRA rules. In our recent projects,
the usage of the Ada 2012 programming la nguage is receiving greater attention.
This is partially because of its reputatio n as the programming language of choice
in other safety critical domains, as well as its syntactic support for notions of
contract based programming in the 2012 version. The latest incarnation of the safety
critical subset of Ada, SPARK 2014, also deserves rising interest, in our opinion,
not least because of its accompanying tooling for code analysis, coverage and
testing. Ada provides a number of runtime proﬁles, including a multi-tasking proﬁle
named Ravenscar [ 33]. The language then provides built-in support for tasking and
inter-task communication, often negating the need for an explicit operating system
on embedded microcontrollers. The dominant embedded microcontrollers in this
domain are based on the ARM platform, which provides both uni- and multi-core
processors in 32 and 64 bit conﬁgurations. For drivetrain controllers, the matching
of the hardware platform with the operating system (OS), and the OS support for
low level hardware and peripheral drivers is a more important consideration than
2Although some libraries do prov ide bindings for other language s, in our experience C++ still
dominates the scene.340 S. Behere and M. Törngren
for the platforms used for the cognitive driving intelligence, since there is less
standardization in this area.
Communication middleware has not made signiﬁcant inroads in the automotive
domain, beyond the functionality provided by AUTOSAR with its Virtual Function
Bus (VFB) concept. At a lower level, the CAN bus remains the most common
technology for connecting distributed vehicle controllers. Autonomous driving
systems impose greater bandwidth requirements on the in-vehicle communication
links, which is especially true when high resolution sensors like cameras and multi-
beam lidars are utilized. The usage of gigabit Ethernet is exceedingly common in
autonomous driving projects, especially for connecting the computers executing
the cognitive driving intelligence. Considering that these computers use general
purpose operating systems and programming libraries, they are able to utilize
advanced communication middleware, beyond bare TCP/IP or UDP/IP socket
communication in client–server scenarios. Three facilities provided by advanced
communication middleware are: automatic de/serialization of data structures into
wire representation, high level functions for sending and receiving the data using
ﬁne-grained QoS guarantees, and automatic routing and service discovery within
the network. The middleware uses either th e brokered or broker-less architectures
and often uses uniform APIs regardless of whether the communication is between
threads in a single process, between multiple processes on the same computer
or across computers. It also makes available smarter communication patterns
like publish-subscribe, push-pull, N-to-M, f an-in, fan-out, etc. A relatively recent
communication middleware standard beco ming increasingly common for critical,
distributed realtime systems is the Object Management Group’s Data Distribution
Service (OMG-DDS) [ 62]. DDS supports message structure deﬁnition using an
interface deﬁnition language (IDL) simila r to CORBA, and thenceforth manages
all aspects of data transmission and wire representation with a large number of QoS
settings, using the publish-subscribe pattern. Another efﬁcient communication mid-
dleware is ZeroMQ [ 4], which provides no built-in support for data de/serialization
(it transmits given “binary blobs”), but supports substantially more patterns than
just publish-subscribe. ZeroMQ also provides bindings for over 40 programming
languages.
13.8 Discussion
In this chapter, we have touched upon some relevant topics on the nature of
autonomy, architectures, and systems engineering aspects for autonomous driving,
as well as implementation technologies for prototype systems. This section presents
a synthetic discussion highlighting how th ese areas affect each other, as well as the
how autonomy inﬂuences each of them.13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 341
13.8.1 A Holistic View
A holistic view, relevant for both long-term perspectives and contemporary engi-
neering, is shown in Fig. 13.8. The ﬁgure shows that each of Concepts, Architecture,
Systems Engineering, and Technical Implementation can be divided into two parts.
One part is for the relatively low leve l concepts of contemporary engineering,
and the other is for the higher level concepts arising from theories of general
autonomous and intelligent systems. The fo rmer part is shown in the inner circle
of Fig. 13.8, while the latter part is shown in the outer circle. Thus, the basic
functional components for the architecture, as described in Sect. 13.5.1 ,a n dt h e i r
interconnections form part of the inner architecture circle. The higher level concepts
like runtime system level reasoning, which would be useful to have, but are currently
not included in most contemporary architectures, are shown in the outer architecture
circle. Figure 13.8 also shows that the concepts and systems engineering areas drive
developments of architectures and technical implementations, for both high and low
level concepts. The state of the art in aut onomous driving still lies mostly within the
inner circle, with very brief and occas ional excursions to the higher levels.
Fig. 13.8 A holistic view of the concepts covered in this chapter342 S. Behere and M. Törngren
The construction of autonomous driving systems today very much follows the
Constructionist Design Methodology (CDM) which involves integration of a large
number of functionalities that must be carefully coordinated to achieve coherent
system behavior. For autonomous driving, the coordination is manual, and notions
of coherency are mostly implicit in the heads of the designers. This approach limits
how well systems scale with rising system complexity. These limits are already
acknowledged in research on AI systems integration [ 70], which is exploring a
fundamental shift from manually designed to self-organizing architectures that can
learn and grow [ 69]—the so-called constructivist approach. However, given the
safety, reliability, determinism, and r ealtime requirements o f autonomous driving,
it is not feasible to abandon the constructionist approach entirely. Therefore, it
is necessary to reason on the gap between the two approaches to determine the
direction in which autonomous driving architectures need to evolve. One way to
explore the gap is to think in terms of “missing components” and how they can be
injected into the existing architecture patters without breaking them. A key missing
component is an explicit representation of a “Self” or “Ego” within the vehicle,
along with a “Goals” module. Today, the automobile architecture is made up of a
variety of basic subsystems like the engine, the transmission, the brakes, steering,
etc., and some hierarchically higher subsystems related to traction control, trafﬁc
jam assist, and so on. These systems have limited knowledge of the existence, pur-
pose, and functioning of the other subsystems (following the excellent architectural
principal of “separation of concerns”) and consequently, in the presence of severe
uncertainty or disturbances within the operational environment or due to internal
failures, there is no particular subsystem that can perform system-wide reasoning,
revise previously held beliefs about the s ystem capabilities and its environment, and
act/adapt accordingly. When the operationa l situation exceeds the limits envisioned
by the system’s human designers, or when the carefully scripted responses fail, the
system as a whole also fails. The presence of explicit “Ego” subsystems could be
a ﬁrst step in addressing this problem. The “Ego” would be aware of the primary
behaviors the vehicle is expected to fulﬁll, as well as the various subsystems present
and how they work together to generate the desired behavior. The architecture of
the “Ego” is an interesting topic in itself: it could range from a “thick central” ego
component, to a hierarchical network o f ego components in each subsystems. The
self-awareness would be continuously represented and maintained in the form of a
self-model. The set of self-models can be “seeded” at the time of the architecture
deployment and the “Ego” would be free to evolve them and synthesize other
models throughout vehicle operation. Preliminary methods for automatic synthesis
of multiple internal models already exist (see, for example, [ 24]) and have been
proven to successfully increase machine resilience [ 25]. This directly contributes to
characteristics like fail-operational behavior and survivability, which are desirable
in autonomous driving. Initially, the operation of the Ego subsystem would be
limited to (de)activation of particular subsystems, dynamic reconﬁgurations of the
connections between the systems, tra nsfer of functional responsibility between
the subsystems, and triggering speciﬁc modes in individual subsystems. With
today’s technological means, all permissible system conﬁgurations need to be13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 343
proven for coherence, consistency, and safety in advance. The eventual transition
to constructivist architectures creates the possibility of runtime reasoning in the
Ego components, leading to runtime veriﬁcation of the desired properties. The AI
domain is already reporting some progress towards agents, design methodologies,
and programming paradigms following constructivist approaches [ 35,60,63]. We
feel that this is a good time to engage with researchers in the domain of AI systems
integration, in order to highlight the requirements relevant to practical embedded
systems. This is intended to prevent a repetition of the problem seen in the area
of cognitive architectures, wherein real world concerns are rarely accounted for in
theoretical development [ 72].
As noted in the outer circle of Fig. 13.8, there have been efforts to create
higher level concepts like consciousness and cognitive architectures, that mimic
some aspects of human decision making. However, corresponding developments
in systems engineering are conspicuously missing. We anticipate that an expan-
sion to the scope of existing systems engineering to constructivist architectures
will be adequate, without needing a revolution of the underlying methodologies.
However, particularly strong challenges still exist within the area of MBSE. These
challenges are in two general directions: maintaining consistency between various
models/views, as well as between the mode ls and implemented artifacts. The usage
of constructivist AI designs in upcoming architectures will also impact the testing,
veriﬁcation, and validation aspects of t he systems engineering processes. This is
because, if the system behavior is partly synthesized at runtime, and could take
forms not anticipated during design, it would be challenging to ﬁnd testing and
veriﬁcation methods that demonstrate correctness of behavior prior to deployment.
In our experience, the availability of suitable implementation platforms and
technologies is not a strong limitation in autonomous driving, with a possible excep-
tion being in the area of sensors for perception and localization. The capabilities
of state of the art silicon, programming tools, communicatio n technologies are
adequate to implement the elements found in existing and proposed autonomous
driving architectures. This is not to say that better tools for analyzing code, model
checking, translation of models to executables, etc., are not desired. All of this holds
true within the constructionist approach. The shift to a constructivist approach,
however, introduces paradigm shifts in implementation, notably for capabilities
of programming languages. The progra mming of autonomy requires language
constructs supporting autonomous knowle dge acquisition, realtime and any-time
control, reﬂectivity, learning, and massive parallelization [ 60]. Such constructs are
missing from the most common programming languages currently employed in the
development of safety critical embedded systems.
The four steps for systems engineering proposed in Sect. 13.6 are complementary
to the systems engineering processes based on the V-model, or those recommended
by ISO26262. The former chieﬂ y recommends activities, the latter introduces views
and requirements to analyze and assure functional safety. Models, views, and
other artifacts underlie both. In our experience, systems engineering and associated
modeling are usually given secondary impor tance during the prototyping phase.
Once a functional prototype is available, the focus shifts to writing extensive344 S. Behere and M. Törngren
requirements and acceptance criteria, whic h are then off-loaded to vendors and sup-
pliers for process adherent development. The usage of early lightweight modeling
with subsequent reﬁnement and additional models/views has the potential to keep
development consistent not only during the prototyping phase, but also for making
a smoother transition to high maturity implementations.
13.8.2 The Inﬂuence of Autonomy
For autonomous driving, the impact of autonomy on architecture is mostly related
to the need for speciﬁc functional components. These components are responsible
for perception of the external world and its internal representation, localization of
the vehicle with respect to some coordinate system, ﬁnding collision free trajectories
between detected obstacles while stayin g on a drivable surface, and reacting to
unexpected external and internal events w ith the intention of reach ing a safer state.
Also present are more “traditional” components governing basic motion of the
vehicle viz. lateral and long itudinal accelerations and decel eration. Finally, overall
energy management of the entire vehicle is also a concern. Beyond functional
components, the architecture is driven by n eeds of safety, surviv ability, fault-tolerant
operation, and cost. This includes aspects of redundancy management, systematic
degradation of available functionality in the presence of faults, movement of soft-
ware functionality between similar comput ational platforms, and dynamic changes
to inter-component data-ﬂows depending on context and failure conditions. Among
these, while redundancy has been a well-established pattern in the architecture of
safety critical systems, the rest are not yet established. For example, it is common in
AUTOSAR to statically specify inter-component data-ﬂows and their contents. In
case an architecture needs to modify the d ata-ﬂow routing and content at runtime,
all the possible combinations need to be determined and statically speciﬁed, along
with the conditions under which each combina tion will occur. Then , all the possible
combinations and their transitions would need be proven safe, to meet certiﬁability
and standards requirements. This is an ex cellent example of the “careful, manually
crafted” characteristic of the constructionist approach. It is also the approach taken
by the next generation Integrated Modular Avionics (IMA-2G) architectures, where
an architecture reconﬁguration is intende d to be triggered by a component referred
to as the “reconﬁguration supervisor” [ 22]. The approach of prior static deﬁnition
of all possible combinations is easier to certify, compared to the case where the
reconﬁguration supervisor contains algorithms to determine a conﬁguration’s safety
at runtime, and uses this to develop potentially new conﬁgurations at runtime, which
were not statically evaluated during the system design phase. This latter approach
of evaluating circumstances and generating viable new solutions “on-the-ﬂy” is a
characteristic of human level reasoning, emulated by experimental constructivist AI,
but is still a far cry from being implemen ted in domains like autonomous driving.
Given the rapid development of autonomous driving technologies and ever
shortening time-to-market needs, a key challenge for automotive architects is to13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 345
incorporate newer learning and keep the a rchitecture relevant for the expected
lifetime of the vehicle. Continuous deployment has hitherto not been a great concernin the automotive domain, but autonomy is pushing the envelope in this regard. Abig obstacle to continuous deployment is the veriﬁcation of any proposed changes,to assure system level safety propertie s are retained. To some extent, accelerated
testing via virtualization techniques is one mitigating solution, but techniquesfor correctness-by-construction via contract based design, modularization, andcomposability are needed to ﬁrst reduce t he amount of testing and veriﬁcation
required for any given change.
For autonomous driving, we see the impact of autonomy on systems engi-
neering to be mostly in the areas of testing, veriﬁcation, and validation, and
corresponding requirements management. This is driven by three characteristicsof autonomous driving architectures: Newer types of perception sensors, growingsystem state space, and complexity of exp ected operational scenarios. Perception
sensors like cameras, lidars, radars, e tc., each have multiple failure modes under
various operating conditions. Complex, probabilistic sensor fusion guards againstfull perception failure to some extent, but in turn leads to a more complex assuranceprocess and surprising common points of failure. For example, in one of ourprojects, similarity in ﬁlter time constants between pre-processing algorithms oftwo different types of sensors was questioned as a potential common failure mode.Such information is sometimes not even available to the systems integrator. Thegrowth of system state space and complexity of operational scenarios implies thatcapturing requirements comprehensively is an additional challenge. Traditional test-
ing and veriﬁcation methods cannot yield sufﬁcient test coverage within reasonabletimeframes. One solution is accelerated testing by means of 3D virtual worlds
and scripted unit tests. For example, the evaluation of a new trajectory planningalgorithm was conducted in one of our industr ial projects by letting the algorithm
drive a virtual vehicle in a synthetic 3D world. An indication of usefulness of thistechnique is that approximately a thousand tests were executed in parallel on aGPU based computing cluster, within a few hours. Each test executed a differentscenario from a scenario library (for examp le, trafﬁc intersections, unexpected
pedestrians running in front of the vehicle , etc.) and metrics were gathered for each
test. The metrics utilize parameters like resulting minimum distance to obstacles,accelerations within the cab in, etc., and help in rapid evaluation of the planning
algorithm. To the best of our knowledge, such testing infrastructure is not commonin traditional automotive OEMs. Beyond testing and veriﬁcation, we see little
immediate inﬂuence of autonomy on systems engineering processes, althoughautonomy may demand stricter discipline in their execution. For example, we seecomparatively lower inﬂuen ce to the process of gathering, analyzing, structuring,
and documenting requirements, beyond a rigorous enforcement of the processitself. Autonomous driving may, however, give an added push to development ofIntelligent Transport Systems (ITS) and conn ected systems-of-systems, increasing
the number of stakeholders in the systems engineering process.
The impact of autonomy on technical implementation tools for autonomous
driving is principally the introduction of technologies and platforms from other346 S. Behere and M. Törngren
domains to the automotive industry. This introduction would, in turn, drive various
ways to make the technologies and platforms more robust, in line with demands
of the automotive domain (e.g., greater emphasis on veriﬁcation, diagnosis, error
handling, etc.). The introduction of Linux in the form of Android is already
occurring in the area of automotive infotainment, but its use for propulsion guidance,
navigation, and control purposes is a relatively new phenomenon. The Automotive
Grade Linux (AGL) [ 2] is a Linux Foundation workgroup with over 50 members
including OEMs, Tier 1s, and system integrators. Although Linux may not be the
ﬁnal implementation of choi ce for safety critical ADAS functions, it is the de
facto platform for prototyping, and also making inroads into solutions for HMI
and telematics, which are crucial support functions for automated driving. The
usage of silicon (GPUs), programming libraries, and 3D engines from the computer
gaming industry is instrumental for acceler ated testing and veriﬁcation tooling.
Computation middleware like OROCOS and ROS from the robotics domains, and
communication middleware like DDS and ZeroMQ used in distributed information
systems are also useful implementation technologies for autonomous driving. These
middleware enable concrete component based software engineering techniques, as
well as smarter communication patterns like push-pull, router-dealer, N-to-M, fan-
in, and fan-out. This in turn introduces more options for technical architecture
implementations.
13.8.3 Concluding Remarks and Future Work
This chapter attempted to provide an ove rview of the architecture and systems
engineering for autonomous driving, ai med towards the ambitious practitioner.
We started by placing autonomous driving within the greater context of general
purpose intelligent, autonomous systems, and highlighted some philosophical and
practical gaps between two in terms of appr oaches and architect ures. Despite the
fact that the automotive industry practices a bottom-up approach to the engineering
of autonomous driving systems, we belie ve it is valuable for practitioners to
get ideas from the theories of Artiﬁcial Intelligence, Theory of Mind, Machine
Consciousness, and Self-awareness.
We then presented a functional architecture for autonomous driving, by intro-
ducing the key functional components and a way of connecting them together in an
example architecture. Supporting the architecting efforts are practices for MBSE.
We introduced four modeling steps to ai d the systems engineering process, each
of which needs to be supported by requirements and test cases for veriﬁcation
and validation. Finally, we touched upon some key technologies used to prototype
autonomous driving systems.
Future work lies along two dimensions: scientiﬁc and documentary. The scien-
tiﬁc part needs to elaborate on the theori es and algorithms for adapting concepts
from different domains to autonomous driving, keeping in mind concerns of safety,
certiﬁability, and engineering processes. The documentary part should add to our13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 347
ambition for eventually cr eating a “Handbook for Autonom ous Driving.” This then
needs to provide greater and in-depth treatment of model taxonomies, listings
of architectural and technological options, as well as guidance for selection and
application.
The engineering of Human Machine Interfaces was left unaddressed in this
chapter. From an engineering viewpoint, the functionality offered by the system
is somewhat distinct from the way it interacts with its users (HMI). But from
the viewpoint of the system’s users, the HMI isthe functionality, making HMI
issues of critical importance to autonomous driving. The topics of design space
exploration and extra-functional metrics for architecture evaluation, like cost,
reliability, performance, ﬂexibility also deserve an in-depth treatment.
Finally, the importance of standards and certiﬁcation of autonomous driving sys-
tems cannot be underestimated. Existing functional safety standards like ISO26262,
as well as industry speciﬁc norms like MISRA C, AUTOSAR, etc., need to be re-
evaluated and upgraded to meet the requirements of autonomous driving.
References
1. Methodology Guidelines When Using EAST-ADL2. Public deliverable 5.1.1 of the ATESST2
project (2010), http://www.atesst.org/home/liblocal/docs/ATESST2_Deliverable_D5.1.1_V1.
1.pdf
2. Automotive Grade Linux (2015), https://www.automotivelinux.org/
3. Biologically Inspired Cognitive Architectures (BICA) Society. The MAPPED Repository
(2015), http://bicasociety.org/mapped/
4. Distributed Messaging with Zero MQ (2015), http://zeromq.org/
5. FMI: Functional Mock-up Interface (2015), https://www.fmi-standard.org/
6. IEEE Spectrum. How Google’s Autonomous Car Passed the First U.S. State Self-Driving
Test (2015), http://spectrum.i eee.org/transportation/advanced-cars/how-googles-autonomous-
car-passed-the-ﬁrst-us-state-selfdriving-test
7. OSLC: Open Services for Lifecycle Collaboration (2015), http://open-services.net/
8. Oxford Dictionaries (2015), http://www.oxforddictionaries.com/deﬁnition/english/
consciousness
9. The ARCADIA MBSE method for systems, hardware and software architectural design (2015),
https://www.polarsys.org/capella/arcadia.html
10. The AUTOSAR Platform (2015), http://www.autosar.org/
11. The Capella Graphical Modeling Workbench (2015), https://www.polarsys.org/capella/index.
html
12. The HA VE-it EU project. Deliverable D12.1 Architecture document (2015), http://haveit-eu.
org/LH2Uploads/ItemsContent/24/HA VEit_212154_D12.1_Public.pdf
13. The OMG MBSE Wiki page on Methodology and Metrics (2015), http://www.omgwiki.org/
MBSE/doku.php?id=mbse:methodology
14. The OSEK-VDX portal (2015), http://www.osek-vdx.org/
15. The PREEMPT_RT patch for the Linux kernel. Real-Time Linux Wiki (2015), https://rt.wiki.
kernel.org
16. The Unreal gaming engine (2015), https://www.unrealengine.com/
17. The Xenomai solution for real-time Linux (2015), http://xenomai.org/
18. A. Albinet, J.L. Boulanger, H. Dubois, M.A. Peraldi-Frati, Y. Sorel, Q.D. Van, Model-
based methodology for requirements traceab ility in embedded systems, in Proceedings of348 S. Behere and M. Törngren
3rd European Conference on Model Driven Architecture Foundations and Applications,
ECMDA’07 , Haifa (2007), https://hal.inr ia.fr/in ria-00413488
19. S. Behere, M. Törngren, Architecture cha llenges for intelligent a utonomous machines: an
industrial perspective, in Proceedings of the 13th International Conference on Inte lligent
Autonomous Machines, IAS-13 (Springer International Publishing, Berlin, 2014). http://link.
springer.com/chapter/10.1007%2F978-3-319-08338-4_120
20. S. Behere, M. Törngren, A functional architecture for autonomous driving, in Proceedings
of the First International Workshop on Automotive Software Architecture, WASA ’15 (ACM,
New York, NY, 2015), pp. 3–10. doi: 10.1145/2752489.2752491 .http://doi.acm.org/10.1145/
2752489.2752491
21. S. Behere, M. Törngren, D. Chen, A reference architecture for cooperative driving. J. Syst.
Archit. 59(10, Part C), 1095–1112 (2013). doi: http://dx.doi.org/10.1016/j.sysarc.2013.05.014 .
http://www.sciencedirect.c om/science/ar ticle/p ii/S1383762113000957 . Embedded Systems
Software Architecture
22. P. Bieber, F. Boniol, M. Boyer, E. Noulard, C. Pagetti, New challenges for future avionic
architectures. Aerosp. Lab (4), 1–10 (2012)
23. B.W. Boehm, A spiral model of software development and enhancement. Computer 21(5),
61–72 (1988)
24. J. Bongard, H. Lipson, Automatic synthesi s of multiple internal models through active
exploration, in AAAI Fall Symposium: From Reactive t o Anticipatory Cognitive Embodied
Systems (2005)
25. J. Bongard, V. Zykov, H. Lip son, Resilie nt machines through c ontinuous sel f-modeling.
Science 314(5802), 1118–1121 (2006)
26. G. Bradski, The OpenCV library. Dr Dobb’s J. Softw. Tools (2000). http://www.drdobbs.com/
open-source/the-opencv-library/184404319
27. P. Braun, M. Broy, F. Houdek, M. Kirchmayr, M. Müller, B. Penzenstadler, K. Pohl, T. Weyer,
Guiding requirements engineering for software-intensive embedded systems in the automotive
industry. Comput. Sci. Res. Dev. 29(1), 21–43 (2014)
28. M. Broy, Model-driven architecture-centric engineering of (embedded) software intensive
systems: modeling theories and architectural milestones. Innov. Syst. Softw. Eng. 3(1), 75–
102 (2006). doi: 10.1007/s11334-006-0011-y .http://link.sp ringer.com/ 10.1007/s11334-006-
0011-y
29. M. Broy, Two sides of structuring multi-functional software systems: function hierarchy
and component architecture, in 5th ACIS International Conference on Software
Engineering Research, Management & Applications (SERA 2007) (2007), pp. 3–
12. doi: 10.1109/SERA.2007.129 .http://ieeexplore.i eee.org/lpdocs/epic03/wrapper.htm?
arnumber=4296910
30. M. Broy, Software and system modeling: structured multi-view modeling, speciﬁcation, design
and implementation, in Conquering Complexity , ed. by M. Hinchey, L. Coyle (Springer,
London, 2012), pp. 309–372
31. M. Broy, F. Huber, B. Paech, B. Rumpe, K. Spies, Software and system modeling based on
a uniﬁed formal semantics, in Requirements Targeting Software and Systems Engineering ,
ed. by M. Broy, B. Rumpe. Lecture Notes in Computer Science, vol. 1526 (Springer, Berlin,
Heidelberg, 1998), pp. 43–68
32. H. Bruyninckx, Open robot control software: the OROCOS project, in Proceedings 2001
ICRA IEEE International Conference on Robotics and Automation (Cat No01CH37164), vol.
3 (2001), pp. 2523–2528. doi: 10.1109/ROBOT.2001.933002 .http://ieeexplore.i eee.org/lpdocs/
epic03/wrapper.htm?arnumber=933002
33. A. Burns, The Ravenscar proﬁle. Ada Lett. XIX(4), 49–52 (1999).
doi:10.1145/340396.340450 .http://doi.acm.org/10.1145/340396.340450
34. D. Chalmers, The Conscious Mind: In Search of a Fundamental Theory . Oxford paperbacks
(OUP, New York, 1996)
35. A. Chella, M. Cossentino, V. Seidita, C. Tona, An approach for the design of self-
conscious agent for robotics, in Active Media Technology , ed. by A. An, P. Lingras, S. Petty,13 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 349
R. Huang. Lecture Notes in Computer Science, vol. 6335 (Springer, Berlin, Heidelberg, 2010),
pp. 306–317
36. P. Cuenot, P. Frey, R. Johansson, The EAST-ADL architecture description language for
automotive embedded software, in Model-Based Engineering of Embedded Real-Time Systems
(springer, Berlin, Heidelberg, 2010), pp. 297–307. http://link.spri nger.com/chapter/10.1007
%2F978-3-642-16277-0_11
37. D. Davidson, Turing’s test, in Modelling the Mind , ed. by K. Said (Oxford University Press,
Oxford, 1990)
38. J.A. Estefan et al., Survey of model-based systems engineering (MBSE) methodologies.
INCOSE MBSE Focus Group 25:8 (2007)
39. P.H. Feiler, B.A. Lewis, S. Vestal, The SAE Architecture Analysis and Design Language
(AADL) a standard for engineering performance critical systems, in 2006 IEEE Confer-
ence on Computer Aided Control System Design, 2006 IEEE International Conference on
Control Applications, 2006 IEEE Interna tional Symposium on I ntelligent Control (2006).
doi:10.1109/CACSD-CCA-ISIC.2006.4776814
40. T. Ferris, On the methods of research for systems engineering, in Annual Conference on
Systems Engineering Research (April 2009). http://cser.lboro.ac.uk/papers/S10-62.pdf
41. T. Ferris, Engineering design as research, in Research Methodologies, Innovations and
Philosophies in Software Systems Engineering and Information Systems, IGI Global , ed. by M.
Mora, O. Gelman, A.L. Steenkamp, M. Raisinghani (2012). doi: 10.4018/978-1-4666-0179-6 .
http://services.igi-global.co m/resolvedoi/resolve.as px?doi=10.4018/ 978-1-4666-0179-6
42. T. Fong, C. Thorpe, Vehicle teleoperation interfaces. Auton. Robots 11(1), 9–18 (2001)
43. K. Forsberg, H. Mooz, The relationship of systems engineering to the project cycle. Eng.
Manag. J. 4(3), 36–43 (1992)
44. K. Forsberg, H. Mooz, Application of the “vee” to incremental and evolutionary development,
inSystems Engineering in the Global Market Place (1995), pp. 801–808
45. D. Gamez, Progress in machine consciousness. Conscious. Cogn. 17(3), 887–910 (2008)
46. T. Henzinger, J. Sifakis, The embedded systems design challenge, in FM 2006: Formal
Methods , ed. by J. Misra, T. Nipkow, E. Sekerinski. Lecture Notes in Computer Science, vol.
4085 (Springer, Berlin, Heidelberg, 2006), pp. 1–15
47. S. Hussain, Investigating architecture des cription languages (ADLs) a systematic literature
review. Master’s thesis, Linköpings universitet, Linköping, 2013
48. A.L. Juarez Dominguez, Feature interaction detection in the automotive domain, in
2008 23rd IEEE/ACM International Conference on Automated Software Engineering
(IEEE, 2008), pp. 521–524. doi: 10.1109/ASE.2008.97 .http://ieeexplore.i eee.org/lpdocs/
epic03/wrapper.htm?arnumber=4639390
49. E.Y. Kang, E.P. Enoiu, R. Marinescu, C. Seceleanu, P.Y. Schobbens, P. Pettersson, A
methodology for formal analysis and veriﬁcation of east-ADL models. Reliab. Eng. Syst. Saf.
120, 127–138 (2013). doi: http://dx.doi.org/10.1016/j.ress.2013.06.007
50. H. Kopetz, The complexity challenge in embedded system design, in 2008 11th IEEE
International Symposium on Object and Component-Oriented Real-Time Distributed
Computing (ISORC) (IEEE, 2008), pp. 3–12. doi: 10.1109/ISORC.2008.14 .http://ieeexplore.
ieee.org/xpls/abs_all.jsp?arnumber=4519555 http ://ieeexplore.i eee.org/lpdocs/epic03/
wrapper.htm?arnumber=4519555
51. E.A. Lee, Computing needs time. Commun. ACM 52(5), 70–79 (2009).
doi:10.1145/1506409.1506426 .http://doi.acm.org/10.1145/1506409.1506426
52. P. Maes, Concepts and experiments in computational reﬂection, in Conference Proceedings on
Object-Oriented Programming Systems, Languages and Applications, OOPSLA ’87 (ACM,
New York, NY, 1987), pp. 147–155. doi: 10.1145/38765.38821 .http://doi.acm.org/10.1145/
38765.38821
53. I. Malavolta, H. Muccini, P. Pelliccione, D. Tamburri, Providing architectural languages and
tools interoperab ility thr ough model transforma tion technologies. IEEE Trans. Softw. Eng.
36(1), 119–140 (2010). doi: 10.1109/TSE.2009.51350 S. Behere and M. Törngren
54. J. Mårtensson, A. Alam, S. Behere, The development of a cooperative heavy-duty vehicle
for the GCDC 2011: team scoop. IEEE Trans. Intell. Transp. Syst. 13(3), 1033–1049
(2012). doi: 10.1109/TITS.2012.2204876 .http://ieeexplore.i eee.org/lpdocs/epic03/wrapper.
htm?arnumber=6236179 h ttp://ieeexplore.i eee.org/xpls/abs_all.jsp?arnumber=6236179
55. J. McCarthy, Making robots conscious of their mental states, in Working Notes of the AAAI
Spring Symposium on Representing Mental States and Mechanisms , Menlo Park, CA, 1995
56. D. McDermott, Artiﬁcial intelligence and consciousness, in The Cambridge Handbook of
Consciousness , ed. by P.D. Zelazo, M. Moscovitch, E. Thompson (Cambridge University Press,
Cambridge, 2007), pp. 117–150. http://dx.doi.org/10.1017/CBO9780511816789.007 . Books
Online
57. A. Metzger, Feature interactions in embedded control systems. Comput. Netw. 45(5),
625–644 (2004). doi: 10.1016/j.comnet.2004.03.002 .http://linki nghub.e lsevier.com/retrieve/
pii/S 138912860400043X
58. M. Minsky, Matter, mind, and models, in Semantic Information Processing , ed. by M.L.
Minsky (1968)
59. M. Montemerlo et al., Junior: the Stanford entry in the urban challenge. J. Field Rob. 25(9),
569–597 (2008). http://onlinelibrary.wiley.com/doi/10.1002/rob.20258/abstract
60. E. Nivel, K. Thórisson, Towards a programming paradigm for control systems with high levels
of existential autonomy, in Artiﬁcial General Intelligence , ed. by K.U. Kühnberger, S. Rudolph,
P. Wang. Lecture Notes in Computer Science, vol. 7999 (Springer, Berlin, Heidelberg, 2013),
pp. 78–87
61. M. Odersky, L. Spoon, B. Venners, Programming in Scala: A Comprehensive Step-by-Step
Guide , 2nd edn. (Artima Incorporation, Walnut Creek, 2011)
62. G. Pardo-Castellote, OMG data-distribution service: architectural overview, in Proceedings
of the 2003 IEEE Conferen ce on Military Communications - Vol ume I, MILCOM’03 (IEEE
Computer Society, Washington, DC, 2003), pp. 242–247
63. F. Perotto, R. Vicari, L. Alvares, An aut onomous intellig ent agent architecture based on
constructivist ai, in Artiﬁcial Intelligence Applications and Innovations, I FIP International
Federation for Information Processing , vol. 154, ed. by M. Bramer, V. Devedzic (Springer US,
2004), pp. 103–115. http://link.spri nger.com/chapter/ 10.1007%2F1-4020-8151-0_10
64. M. Quigley, K. Conley, B. Gerkey, J. Faust, T.B. Foote, J. Leibs, R. Wheeler, A.Y. Ng, ROS:
an open-source robot operating system, in ICRA Workshop on Open Source Software (2009)
65. W.W. Royce, Managing the development of large software systems: concepts and techniques,
inProceedings of the 9th International Conference on Software Engineering, ICSE ’87 (IEEE
Computer Society Press, Los Alamitos, CA, 1987), pp. 328–338
66. R.B. Rusu, S. Cousins, 3D is here: Point Cloud Library (PCL), in 2011 IEEE
International Conference on Robotics and Automation (ICRA) (IEEE, 2011), pp. 1–4.
doi:10.1109/icra.2011.5980567
67. A.V. Samsonovich, Toward a uniﬁed catalog of implemented cognitive architectures, in
Proceedings of the 2010 Conference on Biologically Inspired Cogn itive Archit ectures 2010:
Proceedings of the First Annual Meeting of the BICA Society (IOS Press, Amsterdam, 2010),
pp. 195–244. http://dl.acm .org/citation. cfm?id=1893313.1893352
68. S. Sarma, N. Dutt, P. Gupta, A. Nicolau, N. Venkatasubramanian, On-chip self-awareness
using cyberphysical-systems-on-chip (CPSOC), in Proceedings of the 2014 International
Conference on Hardware/Software Codesign and System Synthesis, CODES ’14 (ACM, New
York, NY, 2014), pp. 22:1–22:3. doi: 10.1145/2656075.2661648 .http://doi.acm.org/10.1145/
2656075.2661648
69. K.R. Thórisson, From constructionist to constructivist ai, in AAAI Fall Symposium: Biologi-
cally Inspired Cognitive Architectures (2009)
70. K.R. Thórisson, A New Constructivist AI: From Manual Methods to Self-constructive Systems
(2012). doi: 10.2991/978-94-91216-62-6_9
71. K.R. Thórisson, A new constructivist ai: from manual methods to self-constructive systems, in
Theoretical Foundations of Artiﬁ cial General Intelligence, A tlantis Thinki ng Machines ,v o l .4 ,
ed. by P. Wang, B. Goertzel (Atlantis Press, Amsterdam, 2012), pp. 145–17113 Systems Engineering and Architectin g for Intelligent Aut onomous Systems 351
72. K.R. Thórisson, H.P. Helgason, Cognitive architectures and autonomy: a comparative review.
J. Artif. Gen. Intell. 3(2), 1–30 (2012). doi: 10.2478/v10229-011-0015-3 .http://dx.doi.org/10.
2478/v10229-011-0015-3
73. K.R. Thórisson, H. Benko, D. Abramov, A. Ar nold, S. Maskey, A. Vaseekaran, Constructionist
design methodology fo r interactive intelligences. AI Mag. 25(4), 77 (2004)
74. M.Törngren, A. Qamar, M. Biehl, F. Loiret, J. El-khoury, Integrating viewpoints in the
development of mechatronic products. Mechatronics 24(7), 745–762 (2014)
75. A.M. Turing, Computing machinery and intelligence. Mind 59(236), 433–460 (1950). http://
www.jstor.org/stable/2251299
76. R. Van Gulick, Consciousness, in The Stanford Encyclopedia of Philosophy , Spring 2014 edn.,
ed. by E.N. Zalta (2014). http://plato.stanford.edu/entries/consciousness/
77. O. Wallmark et al., Design and implementation of an experimental research and concept
demonstration vehicle, in Vehicle Power and Propulsion Conference (VPPC), 2014 (IEEE,
2014), pp. 1–6. doi: 10.1109/VPPC.2014.7007042
78. J. Westman, M. Nyberg, A reference example on the speciﬁcation of safety requirements using
ISO 26262, in SAFECOMP 2013 - Workshop DECS (ERCIM/EWICS Workshop on Dependable
Embedded and Cyber-physical Systems) of the 32nd International Conference on Computer
Safety, Reliability and Security , France, ed. by M. Roy p NA (2013). https://hal.archives-
ouvertes.fr/hal-00848610
79. J. Westman, M. Nyberg, M. Törngren, Structuring safety requirements in ISO 26262 using
contract theory, in Computer Safety, Reliability, and Security , ed. by F. Bitsch, J. Guiochet, M.
Kaâniche. Lecture Notes in Computer Science, vol. 8153 (Springer, Berlin, Heidelberg, 2013),
pp. 166–177
80. J. Ziegler et al., Making bertha drive: an autonomous journey on a historic route. IEEE Intell.
Transp. Syst. Mag. 6(2), 8–20 (2014). doi: 10.1109/MITS.2014.2306552
81. H.P. Zima, M.L. James, P.L. Springer, Fault-tolerant on-board computing for robotic space
missions. Concurr. Comput. Pract. Exp. 23(17), 2192–2204 (2011). doi: 10.1002/cpe.1768 .
http://dx.doi.org/10.1002/cpe.1768Chapter 14
Open Dependable Power Computing Platform
for Automated Driving
Andrea Leitner, Tilman Ochs, Lukas Bulwahn, and Daniel Watzenig
14.1 Introduction
Future automated driving systems need to be able to handle any possible trafﬁc
situation safely without relying on human supervision. These systems have two
seemingly contradictory characteristics: ﬁrst, they must be veriﬁably highly reliable
because malfunctions could endanger passe ngers and other trafﬁc participants,
and second, they consist of complex and computer-intensive application software
components. Figure 14.1 shows that an automated vehicle will operate in an
ecosystem of infrastructure, cloud, and back-end systems, such as trafﬁc lights,
authority services, software distributio n services, or map services. The vehicle
will connect to those services via wide-ar ea wireless internet links or vehicle-
to-vehicle communication media deﬁned by ETSI.1Such an automated driving
system is composed of a network of redundant electronic control units (ECUs)
1www.etsi.org/
A. Leitner (/envelopeback)
Virtual Vehicle Research Center, Graz, Austria
e-mail: andrea.leitner@v2c2.at
T. Ochs
BMW AG, Munich, Germany
e-mail: Tilmann.Ochs@bmw.de
L. Bulwahn
Lukas Bulwahn, BMW AG, Munich, Germany
e-mail: Lukas.Bulwahn@bmw.de
D. Watzenig
Virtual Vehicle Research Center and Graz U niversity of T echnology, I nstitute of Electrical
Measurement and Measurement Signal Processing, Graz, Austria
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_14353354 A. Leitner et al.
Fig. 14.1 Schematic architecture of a highly automated vehicle
that are connected to the vehicle’s sensors and actuators through a highly reliable,
adequately responsive vehicle network.
Cars are becoming cyber-physical systems that need to respond in real time to
dynamic and complex environmental situations. Given the current and future road
infrastructure, it is mandatory to reach a safe vehicle state, i.e., pulling over a car at
a situation-dependent speed to a safe stop on every road in every condition in the
event of a single safety-critical system ma lfunction. This is especially challenging
because of the high complexity and the partially probabilistic nature of intermediate
results. Especially for active driving functions, shutdown of the system will not be
a safe state; instead, the system must tolerate certain failures and support a fail-
operational mode.
Automated driving therefore requires the introduction of a new type of automo-
tive systems called cognitive systems (marked as “C” in Fig. 14.1). Figure 14.2
illustrates the differences between this new type of system and well-known control
systems (marked as “D” in Fig. 14.1). A control system processes information
from inside the vehicle, while cognitive systems in addition receive and process
environmental information (Table 14.1). The basic elements of a cognitive system
are thus environment perception, decision making, and initiation of actions based
on machine learning and information fusion. In contrast to traditional deeply
embedded control systems, which are generally perceived as limited in scope,
cognitive systems require much more computational resources, e.g., to solve
complex optimization problems in real tim e. Furthermore, software architectures
for such systems are signiﬁcantly more s ophisticated than for t raditional control
systems. This paradigm shift necessitates the development of new platforms that
support these applications in an efﬁcient and effective manner.14 Open Dependable Power Computing Platform for Automated Driving 355
Fig. 14.2 Control software vs. cognitive software in automotive computing
Table 14.1 Characteristics of control and cognitive software
Control software
 Cognitive software
State machine and controller
 Dynamic models and artiﬁcial intelligence
Mature state of the art
 Rapidly evolving technology
Static software structure and conﬁguration
 Dynamic software structure and conﬁguration
Automotive microcontrollers
 High-performance mainstream hardware
The current state-of-the-art software platform for deeply embedded control ECUs
and early cognitive com puting ECUs is AUTOSAR.2The main concern with
the current AUTOSAR platform in this context is the static runtime environment
[1] together with the signal-oriented communication infrastructure (i.e., restricted
types and data formats). In particular, ﬁxed scheduling and ﬁxed communication
relationships are not ideal in a multi-core environment because they restrict the efﬁ-
ciency of these systems. A future dependable power-computing software platform
should therefore provide a more efﬁcient solution. Due to its m onolithic and highly
optimized design, a partial update of the AUTOSAR speciﬁcation is difﬁcult. This
means that the future of AUTOSAR will be an additional, new AUTOSAR Adaptive
Platform [ 2] supporting the needs for automated dri ving. Activities in this direction
have already been started but are of course currently only in the initial stages.
The software architecture for a cognitive computing ECU can be decomposed
into two layers: the application software layer and the software platform layer.
The higher-level application software layer contains the main cognitive software
functions (e.g., high-level recognition of trafﬁc situations, prediction of other trafﬁc
participants’ behavior, planning of the vehicle’s maneuvers) for automated driving.
2http://www.autosar.org/356 A. Leitner et al.
This part is the differentiating part for car manufacturers and suppliers. The software
platform layer provides basic services, e .g., communication between the software
functions, and abstraction of the concrete computing hardware—this is the non-
differentiating part. Collaboration at thi s level will accelerate the development of
advanced and innovative functions. The focus of this article is on this lower-level
software platform layer.
Key issues addressed in this article are as follows: Sect. 14.2 addresses a set
of initial requirements for a computing platform, including functional capabilities,
reliability, safety, and security demands.
Section 14.3 discusses why we think openness, and in particular open-source
development, is the most promising solution. Section 14.4 describes the basic ideas
of the envisaged in-vehicle dependable power-computing software platform for
reliable cognitive data processing. Section 14.5 describes the steps that need to be
taken in order to realize such a platform, and Sect. 14.6 sketches the requirements
for an open-source development process in a safety-critical context. Section 14.7
concludes the paper.
14.2 Requirements for an Open Dependable Power
Computing Platform
Cognitive systems and reliable cognitive data processing for advanced assisted and
automated driving functions have signiﬁ cantly different requirements compared
to those for systems using traditional automotive control algorithms. The most
important requirements are (i) very large and highly dynamic resource demands
with respect to communication bandwidth , memory and mass storage, and raw CPU
power; (ii) in-vehicle update of parameter d ata, models, and algorithms; and (iii) the
probabilistic nature of some basic algorithms.
Here we can only present a preliminary set of initial requirements for such a
platform, since the speciﬁc requirements will only become available in the course
of product development. We have extrapolated resource demands and use cases from
existing systems and research projects [ 3].
Openness in the context of a dependable power-computing software platform
can be understood in two ways. First, it must be open from a production point
of view (pushing toward an open-source approach), and second, the system must
be open to deal with the fast evolution of cognitive software, because continuous
learning from ﬁeld experience and short iteration cycles with frequent rollouts into
vehicles are essential for usability, robustness, safety, and security.
We strongly believe that future market differentiation will come from up-to-
date information and advanced functional software (application software) rather
than vehicle E/E architectures and softw are platforms. The latter are becoming
increasingly non-differentiating, and therefore joint development will help to share
signiﬁcant development efforts.14 Open Dependable Power Computing Platform for Automated Driving 357
The beneﬁts of an open-source approach furthermore include the possibility to
create a community able to contribute to the evolution of the platform as well
as the development of applications without depending too much on tool-chain
providers. Using an open-source approach enables research institutions and SMEs to
develop and test their applications on existing state-of-practice platforms. Currently,
research projects seem to be slowed down by focusing too much on the software
architecture [ 4,5] instead of the more innovative part: the application. An open-
source platform would thus reduce time to market for new innovative functions.
Complexity Software for automated driving functions has tens of thousands of
lines of code and makes use of complex and dynamic data structures, such as graphs
or sparse matrices. In order to support the development of this kind of software, the
platform needs to support (i) the integration of loosely coupled application software
components to minimize covert interferen ce, (ii) a rich interface deﬁnition language
to specify application software component interfaces unambiguously, (iii) high-level
programming languages to reduce code complexity, and (iv) mainstream software
engineering methods and technology. The latter fosters the use of mature and state-
of-the-art technology in order to leverage experience and progress in the general IT
industry (or other domains) while minimizing friction for application development
due to immature or unfamiliar niche products.
Computing Performance Research projects for automated driving use modern
personal computers to their full capacity. This means memory usage in the gigabyte
range, CPU usage in the gigaﬂop range, a nd heavy use of hardware acceleration
and parallel data processing. Hence, the platform should provide (i) a hardware-
independent programming interface for accel eration hardware to enable easy port-
ing of application software components, ( ii) symmetric multiprocessing to leverage
component level parallelism on mainstr eam processors, and (iii) performance-
optimized processor architectures to maximize computational throughput.
Typical control software utilizes predeﬁned ﬁxed scheduling in order to ensure
correct timing behavior. This is not meaningful for cognitive software with its
high computational power requirements. These systems require multi-core systems,
which are very inefﬁcient with ﬁxed scheduling. A possible solution could be the
speciﬁcation of dedicated timing properties (e.g., deadlines, criticality, etc.) in order
to support dynamic scheduling and thus mo re efﬁcient utilization of computing
power.
Mixed Criticality Automated driving functions ar e highly safety critical because
malfunctions can cause harm to passengers and other trafﬁc participants. In order to
assure the safe operation of an automated vehicle, a safety concept has to be deﬁned
at the vehicle level and decomposed to derive safety requirements for all relevant
vehicle components. Following the ISO 26262 standard [ 6] for the development of
safety-critical automotive E/E systems, v ehicle components are classiﬁed according
to four integrity levels from the lowest Automotive Safety Integrity Level (ASIL)
A to the highest level ASIL D, depending on the consequences of failures. The
platform should be able to host application software components with different358 A. Leitner et al.
integrity levels (mixed criticality) and must ensure that those with lower integrity
level do not interfere with higher-integrity components. This requirement is called
“freedom from interference” in ISO 26262, and it means that it must be ensured that
shared memory is protected from access vio lation, tasks are executed in the correct
order, and functions are able to ﬁnish within their real-time boundaries.
To execute mixed-critical software functions, the platform should support (i)
the coexistence of application software components with different integrity levels
(mixed criticality), (ii) misb ehavior detection for appli cation software components
and restart or shutdown of affected compone nts to increase robustness, (iii) control
ﬂow monitoring in application software components and misbehavior detection, (iv)
data ﬂow monitoring between application software components and misbehavior
detection, and (v) standardized software and error propagation models to support
automated safety analyses.
Decomposition Based on personal communication with various hardware vendors,
we assume that a platform will at most provide integrity levels up to ASIL B due
to a lack of high-integrity processing hardware with the required performance.
Furthermore, development of high-integrity software is very time-consuming and
limited to a certain level of complexity. Therefore, cognitive software should be of
limited ASIL, while hard safety functions should be shifted to more traditional and
static high-integrity computer systems.
If required, higher-integrity levels can be achieved by vehicle-level redundancy.
This concept is called ASIL decom position in ISO 26262 and means that ASIL D
can be attained by using two redundant, independent ASIL B components.
Of course, it would also be possible to qualify the platform itself, or the
applications implemented on it, at a higher level. Techniques such as safety kernels
[7], both hardware and software, allow failures of the cognitive processing software
to be tolerated and hence a higher ASIL to be achieved. Using architectural patterns
recommended by IEC 61508 [ 8] and other standards, an overall level of ASIL
C can be supported. Even ASIL D would be possible with formal proof of the
protection mechanisms (e.g., th e safety kernel). Wika et al. [ 9] have demonstrated
the feasibility of such a proof.
In order to support decomposition, the platform should support (i) the execution
of application software components with integrity levels up to ASIL B and
(ii) failure detection for hardware and platform software components and silent
shutdown of affected partitions/contai ners to support vehicle-level redundancy,
Time Sensitivity The timing properties of automotive systems are among the most
important properties. It is not only important to demonstrate that the system meets its
timing requirements; the developers also need to show that activities are performed
in the correct order, the system does not deadlock or live-lock, and the system
degrades in case of a failure.
Automated driving systems have add itional real-time requirements because
outdated environment data or lagging maneuver planning can lead to oscillating
dynamic behavior and collisions. From our experience, we assume that a spo-
radically occurring maximum jitter below 100 /c157s in the application components14 Open Dependable Power Computing Platform for Automated Driving 359
will not lead to a hazardous event. Recent w ork by the Open Source Automation
Development Lab (OSADL)3shows that interrupt latency below 100 /c157s can be
achieved on mainstream processing hardware using Linux with the RT Preempt
patch. Hence, the software platform must provide (i) deterministic timing behavior
with a maximum jitter of 100 /c157s to ensure replicable behavior, (ii) real-time
scheduling to meet the timing requirements of application software, and (iii) timing
monitoring of application software components and detection of timing violations
with 100/c157s tolerance.
Volatility Research in computer vision and artiﬁcial intelligence will evolve
rapidly in the near future, and several research projects are currently developing
infrastructure for automated driving.4,5As already argued in the paragraph on
openness, we assume that car manufacturers must supply software updates through
a remote connection to provide the latest functionality and integration of locally
available infrastructure services. Hence, the platform should support (i) agile devel-
opment practices for software components t o mitigate low concept maturity, (ii) safe
and secure remote update of application software components to maintain software
continuously, (iii) a modular safety concept t o integrate independently developed
application software components, and ( iv) safe and secure remote addition and
removal of application software components to provide extensibility.
Automotive Speciﬁcs Automated driving systems are integrated into vehicle net-
works, are managed by standardized diagnostic functions, and interact with vehicle
state management and energy management. Hence, the platform should support
(i) standardized diagnostic and vehicle ma nagement functions, (ii) integration of
vendor-speciﬁc diagnostic and vehicle mana gement functions, and (iii) automotive-
speciﬁc communication p rotocols such as Automotive Ethernet [ 10], CAN, or
FlexRay.
14.3 Why Qualiﬁable Open Source Is Appropriate
There are several possible approaches to provide software platforms. In the follow-
ing, we discuss the advantages and disadva ntages of the different approaches and
explain why we think that open source is the best choice:
Custom —The advantage of this approach is that the entire design and develop-
ment approach can be tailored to the speciﬁc application, but most companies do
not have the required specialist skills. Furthermore, it entails signiﬁcant cost.
3http://www.osadl.org
4http://kofas.de/
5http://www.simtd.de/360 A. Leitner et al.
COTS —Many COTS-based systems have the advantage of more “formal”
software engineering methods behind them than open-source development, but
this comes with signiﬁcant upfront and recurring costs. Additionally, the user is
dependent on the vendor to im plement required changes.
Qualiﬁable open source —Another approach is to build the platform from
existing open-source software and further develop and maintain it using an
open-source approach. With the qualiﬁable open-source approach, not only
the delivered software but also the software lifecycle, including speciﬁcation,
documentation, and safety case, is provided using free/libre/open-source soft-
ware (FLOSS) licensing concepts [ 11]. This approach has several advantages
compared to proprietary solutions:
– Higher quality: widely used software matures more quickly, since it incorpo-
rates experiences from various use cases.
– Higher conﬁdence: everybody , including educationa l institutions, can assess
and rate risk classiﬁcations and the effectiveness of safety measures.
– Higher agility: innovative car manufacturers, application software developers
and integrators who need additional platform capabilities can collaborate on
new features, implement them a dedicated branch, and use them in their
product development before the changes are integrated into the main branch.
– Lower cost: shared costs for development and qualiﬁcation of this complex
platform.
The most important and famous open-source operating system is the Linux
operating system (OS). A major advantage of the Linux real-time OS (RTOS) is
that it has been demonstrated as adequately (in terms of ﬂexibility and reliability)
supporting a wide range of different platforms and applications. In particular, it
has been proposed and evaluated for use in critical systems [ 12,13] and has been
used in cognitive systems and reliable cognitive data processing applications [ 14].
From an economic point of view, the Linux operating system is the most successful
open-source project and has been developed in a joint manner. It is hard to estimate
the cost of its development and consequently its worth. Nevertheless, there have
been studies that investigated what it would have cost to develop Linux in a typical
company in the USA. David A. Wheeler [ 15] determined in 2002 a cost of more
than $1.2 billion. An updated study in 2008 showed that it would cost $10.8 billion
to develop the Fedora 9 Linux distribution at this time by traditional proprietary
means. This shows the tremendous value which can be created by the open-source
community and which could be exploited by the automotive domain. For these
reasons, Linux RTOS is an efﬁcient and cost-effective option.
Of course, the Linux RTOS currently has one big disadvantage: there is presently
no appropriate qualiﬁcation approach for the Linux RTOS itself and no certiﬁcation
strategy for safety-related systems using this operating system.
Open-source projects, such as the Linux operating system, have the big advantage
that they employ stringent development processes [ 16,17] and deliver software of
very high quality, but they do not fulﬁll the requirements of current safety standards,
such as ISO 26262, for software in automotive systems. These standards impose14 Open Dependable Power Computing Platform for Automated Driving 361
strict demands on project management, dev eloper qualiﬁcation, risk management,
requirements management, quality assurance, and documentation. Therefore, open-
source software cannot be used in safety-c ritical systems without further activities.
Nevertheless, a related project called SIL2LinuxMP [ 18] is attempting to show that
open-source processes fulﬁll most of the requirements but by different means.
Still, the following issues need to be resolved: (i) a qualiﬁcation strategy for
Linux RTOS, which also supports the co-evolution of software and safety case,
(ii) a conﬁgured and ASIL B qualiﬁed version of Linux RTOS suitable for use in
safety-related cognitive systems, and (iii) guidance on how this conﬁguration can be
maintained.
The idea of using an open-source platform in a safety-critical context is not new.
An initiative in the railway domain has resulted in a project called OpenETCS,6
which aims to develop a software kernel for the European train control system
based on open source and open proof. Another project called SIL2LinuxMP [ 18]
plans to certify the base components, i.e., the boot loader, root ﬁle system, Linux
kernel, and C library bindings, of an embedded GNU/Linux real-time operating
system compliant with safety integrity le vel 2 (SIL2) according to safety standard
IEC 61508 [ 8], which roughly corresponds to ISO 26262 integrity level ASIL B.
For the automotive domain, GENIVI7is another example for an open-source ini-
tiative, though not in the context of a safety-critical system. Many industrial partners
have joined forces to develop a reusable, open-source in-vehicle infotainment (IVI)
platform.
14.4 Considerations for the Platform Architecture
Figure 14.3 shows an architectural overview of the dependable power-computing
software platform. The dependable power-computing software platform presumes
high-performance processor hardware that extends current mainstream microcon-
trollers for mobile devices by additional integrity mechanisms and reliability
ﬁgures that are able to fulﬁll the requirements of the ISO 26262 safety standard
for integrity levels up to ASIL B. The combination of this hardware and the
dependable power-computing software platform delivers the overall dependable
power-computing platform. An API built on the software platform abstracts the
underlying implementation from the application which uses it.
A dependable power-computing software platform consists of two layers: (i)
the platform foundation layer and (ii) the platform services layer. The platform
foundation layer consists of system software modules that expose APIs to appli-
cation software components and implem ent basic platform capabilities, such as
hardware abstraction, mass storage, network communication, power management,
6http://openetcs.org/
7http://www.genivi.org/362 A. Leitner et al.
Fig. 14.3 Envisioned architecture
and process control. In addition, low-level s afety and security mechanisms, such as
temporal and spatial isolation, mandatory access control and runtime monitoring are
provided here. A large part of this platform foundation layer can be implemented
by a qualiﬁed open-source RTOS based on the Linux operating system. The
platform service layer consists of software components that implement higher-
level management and monitoring functi ons, such as state management, graceful
degradation, update over the air, diagnostics, and real-time intrusion detection. This
layer should also be implemented using an open-source approach and should reuse
as much existing software as possible.
The differentiating part for OEMs will still be the application software. The
dependable power-computing software platform also allows the partitioning of
application software components and prov ides protection mechanisms for resilience
against malicious attacks, design ﬂaws, and hardware faults. Personalities allow
same base platform to be adapted to different application domains (e.g., IMA for
aerospace, ROS for robotics, etc.).
14.5 Steps Toward an Open D ependable Computing
Platform
For a driverless vehicle, a core component such as an operating system along
with its supportive environment (e.g., development tools) needs to be qualiﬁed.
Any qualiﬁcation is built around a well- speciﬁed set of traceable processes and
procedures. The qualiﬁcation of Linux as an operating system in a safety-critical14 Open Dependable Power Computing Platform for Automated Driving 363
context requires two main things: ﬁrst, selection of the kernel and core components
to be qualiﬁed, and second, deﬁnition of a qualiﬁcation strategy for open source thatis compliant with the automotive safety standard ISO 26262.
Linux is an existing component and has not only a broad range of functionality
but also varying maturity of concepts and implementations. The starting pointsfor OS selection are well-deﬁned selection criteria and evaluation of availableoperational data sources. While many of the criteria will need to remain qualitativecriteria, quantiﬁcation is important for managing the dynamics of open-sourceprojects, which often exhi bit change rates of multiple changes sets per hour.
Deﬁnition of quantitative selection criteria and implementation of their automationcan signiﬁcantly ease the utilization of open- source components in safety-related
and dependable systems. Based on these criteria, the Linux kernel and core OScomponents to be used as the qualiﬁcation target can be selected.
Relevant functional safety standards, notably IEC 61508 and ISO 26262, are
built around well-deﬁned processes to mitigat e risks related to systematic faults in
complex systems. Selection of methods fro m the set of accepted state-of-the-art
methods is a ﬁrst step, but not all of the traditional methods developed for custom
systems are suitable for open-source components. Thus, there might be a need fornew methods, processes, and procedures for the formal qualiﬁcation of a use-case-driven subset of functional and nonfunc tional capabilities of L inux, open-source
tools, and support libraries.
A starting point for qualifying open-source is to develop a complete map-
ping/interpretation of standards. Because c overage of systematic faults relies on the
development process, the main need is to develop documentation of the detailedprocedures that are used and follow-up gap analysis of the current development lifecycle. This should be based on the evaluation of available process data and assurancecriteria for data and procedures.
As mentioned before, the platform foundation and the platform service layer
should be built from existing and operationally proven open-source softwarewherever possible. This seems to be reas onable, because open-source is a vast
resource pool of technology. N evertheless, a key obstacle to utilizing it is the lack of
an accepted generic procedure to integrate these components into qualiﬁed systems.
Although key standards do give some high-level guidance, there is a lot of roomfor interpretation. Narrowing this range of interpretation is a key risk mitigationstrategy, in order to simplify the use of open-source components in industrialprojects in general. The open-source community has well-established methodsand policies, some of which need minor adjustments to satisfy the qualiﬁcationneeds set out in relevant standards. One k ey aspect therefore is active feedback of
modiﬁcations and procedural changes to the open-source community in order toachieve the long-term objective of a maintainable qualiﬁcation methodology.364 A. Leitner et al.
14.6 Open-Source Softwar e Development Process
As mentioned before, open-source projects employ stringent development pro-
cesses, which might need to be adapted f or the use in a safety-critical context.
Figure 14.4 describes the roles and interactions of an open-source development
process and the actions necessary to transform a common open-source process into
a qualiﬁable open-source process.
In any case, we distinguish between collaborative development, which is done by
the open-source community, and product development, which is subsequently done
within a company based on the jointly developed deliverables.
A central aspect of any open-source development is the management orga-
nization (e.g., the Linux foundation), which provides the infrastructure (e.g.,
repositories, etc.) and deﬁnes and monitors the processes.
The contributors of course play an impor tant role because they do the actual
work on the deliverables according to the deﬁned process. Before they are able to
contribute, they have to accept a Contribu tor License Agreement which governs
intellectual property rights. The u ser (OEM or Tier 1) has to accept the open-
source license and usually drives the dev elopment. The user therefore engages
service providers (software experts) to contribute to the open-source project. This
potentially leads to a huge business opportunity for service providers, who can offer
Fig. 14.4 From open-source software to qualiﬁable open-source software14 Open Dependable Power Computing Platform for Automated Driving 365
their services to the users. The big advantage for the user is that required changes or
adaptations can be implemented efﬁciently without depending on a single supplier.
A qualiﬁable open-source process needs to be enhanced by a more stringent
safety development process. This needs to be driven by the management organi-
zation, which also needs to ensure complia nce with the processes. The management
organization is furthermore responsible for establishing a safety culture. This
means that it must be clearly described and communicated to the contributors how
functional safety will be part of the product and how it should be handled within the
development process.
One important document in a qualiﬁable process is the Developer Interface
Agreement (DIA) as deﬁned in ISO 26262. The DIA is a multilateral contract that
determines each party’s respons ibilities. Especially in a safet y-critical context, there
is a need for additional deliverables which document the respective safety activities.
This is especially importa nt because the ﬁnal responsibility lies with the user (in
this case the OEM or Tier 1) who integrates the open-source development in the
ﬁnal product. At the end, there needs to be a safety case, which documents that all
relevant risks have been identiﬁed and t hat the corresponding mitigation measures
have been taken.
14.7 Conclusion
This article discusses the needs of an automated driving computing platform and
highlights the advantages of open-source development. Nevertheless, we are fully
aware that these goals are not easy to achieve without major efforts by various
parties. There are several open research questions which need to be targeted for the
successful implementation of complex cognitive systems. One of these questions is
related to functional safety and how it can be addressed in this complex and highly
dynamical context. The high degree of automa tion requires a transition from fail safe
to fail operational, because it is nearly im possible to determine a safe state for an
automated vehicle. This requires more advanced redundancy patterns for automotive
software architectures, as for example shown in Fig. 14.5.
Another important issue is the agility of cognitive systems, which requires a
modular safety model. Currently, a system has to be considered as a monolithic
entity. In order to support system properties required for future highly innovative
vehicle functions, for example, remote updates (or regular functional updates in
general) modularization is a key feature.
Cognitive systems are essential for automated driving but are still a challenging
topic. This new type of system requires completely new and more advanced software
platforms, which are able to cope with newly emerging requirements.
In this article, we describe the main requirements for such a qualiﬁable platform
and why we think that joint development using an open-source approach is the way
forward.366 A. Leitner et al.
Fig. 14.5 Sample architecture for fail-safe and fail-operational tasks
References
1. H. Martorell, J.-C. Fabre, M. Roy, R. Valentin, Improving Adaptiveness of AUTOSAR
Embedded Applications, in Proceedings of the 29th Annual ACM Symposium on Applied
Computing (SAC ’14) (ACM, New York, NY, 2014), pp. 384–390
2. M. Bechter, Softwareplattform für zukünftige automotive Anwendungen, http://www.
informatik.tu-cottbus.de/ase2015/Abstract01.pdf . Accessed 12.10.2015
3. S. Holder, M. Hörwick, H. Gentner, Funktionsübergreifende Szeneninterpretation zur Vernet-
zung von Fahrerassistenzsystemen. Automatisierungssysteme, Assistenzsysteme und eingebet-
tete Systeme für Trans portmittel (AAE T 2012) (2012)
4. S. Sommer, A. Camek, K. Becker, C. Buckl, A. Zirkler, L. Fiege, M. Armbruster, G.
Spiegelberg, A. Knoll, Race: A Centralized Platform Computer Based Architecture for
Automotive Applications (2013)
5. M. Goebl, M. Althoff, M. Buss, G. Faerber, F. Hecker, B. Heissing, S. Kraus, R. Nagel, F.P.
Leon, F. Rattei, M. Russ, M. Schweitzer, M. Thuy, C. Wang, H.-J. Wuensche, Design and
Capab ilities of the M unich Cognitive Automobile, in Proceedings of IEEE Inte lligent Vehicles
Symposium , pp. 1101–1107, Eindhoven, The Netherlands, Jun 2008
6. ISO 26262:2011, Road vehicles—Functional safety International Standard (Parts 1–10).
International Organization for Standardization, 1st edn (2011)
7. J. Rushby, Kernels for Safety? in T. Anderson (ed.), Safe and Secure Computing Systems
(Blackwell Scientiﬁc Publications, Malden, 1989), Chapter 13, pp. 210–220
8. CENELEC, IEC 61508 Functional Safety of Electrical/Electronic/Programmable Electronic
Safety-Related Systems. International Electrotechnical Commission (IEC), 2nd edn (2010)
9. K. Wika, J. Knight, On the Enforcement of Software Safety Policies, in Proceedings of the
10th Annual IEEE Conference on Computer Assurance , Jun 1995
10. Broadcom Corporation, BroadR-Reach®Physical Layer Transceiver Speciﬁcation for
Automotive Applications, http://www.ieee802.org/3/1TPCESG/public/BroadR_Reach_
Automotive_Spec_V3.0.pdf . Accessed 12.10.2015
11. K.-R. Hase, Open Proof’ for Railway Safety Software—A Potential Way-Out of Vendor Lock-
In Advancing to Standardization, Transparency, and Software Security, in FORMS/FORMAT
2010 , ed. by E. Schnieder, G. Tarnai (Springer, Berlin, 2011), pp. 5–38
12. CSE International Limited, Preliminary Assessment of Linux for Safety Related Systems, HSE
(2002)14 Open Dependable Power Computing Platform for Automated Driving 367
13. R. Kammerer, Linux in Safety-Critical Applications . OSADL Academic Works (OSADL,
Heidelberg, 2011)
14. M. Goebl, G. Farber, A Real-Time-Capable Hard-and Software Architecture for Joint Image
and Knowledge Processing in Cognitive Automobiles, in Intelligent Vehicles Symposium , 2007
IEEE, pp. 734–740, Jun 2007
15. D.A. Wheeler, More Than a Gigabuck: Estimating GNU/Linux’s Size (2001), http://www.
dwheeler.com/sloc/redhat71-v1/redhat71sloc.html
16. J. Corbet, How the Development Process Works (The Linux Foundation, San Francisco, 2011)
17. A. Mockus, R.T. Fielding, J.D. Herbsleb, Two Case Studies of Open Source Software
Development: Apache and Moz illa. ACM Trans S oftw Eng Methodol 11(3), 309–346 (2002)
18. OSADL Project: SIL2LinuxMP, http://www.osadl.org/SIL2LinuxMP.sil2-linux-project.0.
html. Accessed 12.10.2015Part V
Active and Functional Safety
in Automated DrivingChapter 15
Active Safety Towards Highly Automated
Driving
Klaus Kompass, Markus Schratter, and Thomas Schaller
15.1 Introduction
15.1.1 Motivation for Automated Driving
The increase of comfort, safety and efﬁciency is the motivation for introducing
Highly Automated Driving from the point of view of BMW. Highly Automated
Driving [ 1] allows the driver to withdraw from the driving task to a certain degree,
depending on the required takeover time needed by the driver [ 2].
Comfort
Maximum comfort is achieved when the driver can exploit his or her optimal
performance in any driving situation. The performance is strongly dependent upon
the situation and can be divided into three states: under-demanded, balanced
and over-demanded. The transition between these states is smooth and variable,
dependent on the current state of the driver. The relationship between the driver’s
workload and its performance is derived from the Yerkes–Dodson curve [ 3]a n d
visualised from the point of view of the driver assistance in Fig. 15.1.
There is no need for automated driving functions when the driver is in the
optimum range (competence). The driver can take advantage of his full capability
and perceives driving as pleasant. But, the need for and the opportunity to assist the
K. Kompass  T. Schaller
BMW Group, Munich, Germany
e-mail: thomas.sa.schaller@bmw.de
M. Schratter (/envelopeback)
Virtual Vehicle Research Center, Graz, Austria
e-mail: markus.schratter@v2c2.at
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_15371372 K. Kompass et al.
Fig. 15.1 Yerkes–Dodson curve—driver performance/driver workload
driver with HAD (Highly Automated Driving) functions and Active Safety Systems1
exist when the driver is over- or under-demanded. Driving in a trafﬁc jam or a
monotonous trafﬁc on the motorway can result in under-demand. In these situations,
the driver does not use his potential performance. In this case, potential exists for
Highly Automated Driving, if the driver delegates the driving task to the vehicle and
uses his additional available mental capacity for other tasks.
Safety
A goal of HAD functions is to increase trafﬁc safety. For this reason, a vehicle for
Highly Automated Driving must be at least as safe as current trafﬁc is; there must
be no worsening in the trafﬁc safety compared to today’s global safety level. To
fulﬁl this requirement and to bring HAD functions on the road, new and advanced
technologies are necessary (for further details, see Sect. 15.2). These technologies
can be used to improve Active Safety Systems for non-Highly Automated Driving
and thus address the “protection” workload (over-demanded) of the Yerkes–Dodson
curve (see Fig. 15.1).
Efﬁciency
A further motivation for Highly Automated Driving is to increase the efﬁciency by
reducing the energy consumption. Automated driving functions, for example, can
regulate more accurately in regard to upcoming speed limits or vehicles in front.
Route planning can be improved by vehicle connectivity; information provided
about the trafﬁc ﬂow of road sections collected by other vehicles can be considered
1Active Safety Systems in this chapter are systems which provide information to the driver or
intervene in the vehicle control.15 Active Safety Towards Highly Automated Driving 373
to calculate an optimal route. Thus, a micr oscopic efﬁciency enhancement can be
achieved in the short term. In the long term, optimised route planning with trafﬁc
ﬂow management is feasible, where vehicl es receive a proposed route from a global
instance to achieve an optimal total trafﬁ c volume. Thus, efﬁciency enhancements
are also possible on a macroscopic level.
15.1.2 Development of Automated Driving Functions
The ﬁrst steps have already been taken to bring Highly Automated Driving to the
road. In 2013, the partially automated driving function, trafﬁc jam assistant [ 4], was
introduced by BMW. More automated driving functions will follow in the next few
years to ﬁnally achieve—step by step—the preliminary goal: Highly Automated
Driving.
The expectations regarding the timeline should not be too high. It must not be
forgotten, with each increase in the degr ee of automation, the complexity of the
overall system increases considerably [ 5] and legal issues are still not solved.
15.1.3 Introduction of Highly Automated Driving: Motorway
As the ﬁrst use case for Highly Automated Driving, BMW sees HAD functions
exclusively on the motorway (Fig. 15.2). This is explained by the following two
reasons:
1. Motorways are in many cases monotonous and do not make high demands of
the driver. In such situations on the motorway, where the driving task is not
enjoyable, the driver can be assisted by HAD functions. The driver dedicates
his mental capacity for other tasks.
FUNCTION OVERVIEW
•Remains in the lane.
Overtakes.
Cooperative characteristics on en-
trances to the motorway.
Observes all traffic rules.
Speed 0 – 130 km/h.
In appropriate situations the driver 
can delegate the entire driving task 
to the vehicle. 
Highly automated changes between 
motorways.
Fig. 15.2 Function overview—Highly Automated Driving on the motorway374 K. Kompass et al.
Function Overview
 Remains in the lane
 Overtakes
 Cooperative characteristics on entrances to the motorway
 Observes all trafﬁc rules
 Speed 0–130 km/h
 In appropriate situations, the driver can delegate the entire driving task to the
vehicle
 Highly automated cha nges between motorways
2. The “low” complexity of the use case on the motorway is likely to be manageable
in the near future. Demonstrations with prototypes of different vehicle manufac-
turers [ 6–8] and suppliers have already shown on public roads.
The number of possible driving manoeuvres and interactions with other road
users is limited, compared with manoeuvres on urban and rural roads. Complex
crossing manoeuvres or situations with pedestrians/cyclists can be excluded as
far as possible. In addition, motorways have less complex road geometries and
also a more stationary environment with no permanent changes. Thus, a highly
accurate localisation of landmarks (e.g. guardrails, bridge piles, lane markings,
etc.) is easier to implement. Despite of the relatively simple use case on the
motorway, the vehicle validation is much more complex in comparison to today’s
available driver assistance systems. The average driver drives safely on the
motorway; a fatal trafﬁc accident occurs statistically approximately every 12
million km on German motorways [ 9]. These circumstances make it very difﬁcult
to validate the safety of HAD functions with traditional methods. Multitudes of
test kilometres on motorway would have to be covered to obtain a statistically
validated statement of evidence of safety [ 9].
15.1.4 Direct Safety Beneﬁt
HAD functions must not have negative effect on the trafﬁc; there must be no
worsening in the trafﬁc safety, compared to today’s global safety level. As a result, a
direct increase in safety on the motorway is expected, but this will not lead to a large
reduction of trafﬁc accidents and fatalities. The following three points explain why
HAD will not lead to a considerable reduction in road fatalities on the motorway:
1.The motorway is not an accident black spot
Accident and trafﬁc statistics from Germany show that 11 % of trafﬁc fatalities
are caused by accidents on the motorway [ 10], although 30 % of all journeys
are covered on motorways [ 9]. This shows clearly that on motorways, fewer
accidents occur per kilometre as on urban or rural roads (Fig. 15.3).
2.Accidents addressed with ADAS on market on motorway
In the beginning, no great beneﬁt is to be expected for road safety by
means of Highly Automated Driving. Re levant accidents can be already avoided15 Active Safety Towards Highly Automated Driving 375
Fig. 15.3 Trafﬁc fatalities on
German roads
or mitigated on motorway by ADAS offered today [ 11]. The distribution of
accidents on the motorway shows that 6 0 % of the accidents happen between
vehicles moving along in carriagew ay and 27 % of accidents are caused by
driving accidents, in which no other ro ad user contributed to the cause of the
accident [ 12]. Most of the accidents on motor ways are already addressable by
current ADAS, as they are available in the current BMW 7 series [ 13]:
 Adaptive cruise control with emergency brake
 Lane keeping assistant with active side collision protection
 Steering and lane control assistant
 Driver drowsiness detection
 Trafﬁc jam assistant
 Advanced eCall
 Active protection
3.Low market penetration
In the beginning, the market penetration of Highly Automated Driving
functions will be limited to high-priced fully equipped vehicles. The market for
this class of vehicle is small and, ther efore, a low market penetration of HAD
functions is initially expected in the entire vehicle ﬂeet.
15.1.5 Indirect Safety Beneﬁt
In addition to a direct increase in safety, there will be an indirect increase in safety
with the usage of technology from Highly Automated Driving. From the beginning,
HAD technology can be used for improving Active Safety Systems while the vehicle
is not in Highly Automated Driving mode. In the long term, a cost-down effect will
additionally result in a greater market penetration of HAD technology and derived
Active Safety Systems.376 K. Kompass et al.
Fig. 15.4 Possibility to use HAD tec hnologies during non-auto mated driving mode [ 14]. Automa-
tion Levels (BASt classiﬁcation [ 1])
1.Highly Automated Driving Technologies for non-Automated Driving
The ﬁrst use case for Highly Automated Driving on the motorway does not
address the majority of accidents, becau se most trafﬁc accidents occur in situa-
tions on urban and rural roads. Precisely, in these situations there is the possibility
to assist the driver by means of lower levels of automation (see Fig. 15.4).
Vehicles with HAD functions will be equipped with extensive technology for
environment recognition and automated v ehicle control. These technologies can
be used to improve Active Safety Systems. A more accurate detection of the
environment around the vehicle and a more detailed interpretation of the trafﬁc
situation are possible, which can be used for the design of advanced functions
(e.g. higher speed range, stronger decel eration) and for new Active Safety
Systems (e.g. evasion assistant). The pot ential of optimisation of Active Safety
Systems is discussed in Sect. 15.2.
2.“Democratisation” of HAD Technology
In the long term, a higher market penetration of Highly Automated Driving
functions can be expected in all vehicle classes. The past has shown how
new safety systems were introduced in upper class vehicles ﬁrst, then were
successively optionally available in all models and ﬁnally became part of the
standard equipment for all passenger v ehicles. Examples with a high impact
on vehicle safety are the airbag, ABS, DSC (ESP) and, most recently, the
Autonomous Emergency Braking (AEB) Systems.
The comfort function Adaptive Cruise Control (ACC) was available for the
ﬁrst time in the BMW 7 Series in 2000. Meanwhile, ACC is available in each
vehicle class offered by BMW in different variants. These variants, depending
on the vehicle class, use different sensor layouts from a mono camera to a fusion
system with stereo camera and radar for object detection. The safety function15 Active Safety Towards Highly Automated Driving 377
Fig. 15.5 Scaling system characteristics for ACC and AEB
Forward Collision Warning (FCW) incl uding Autonomous Em ergency Braking
assistant (AEB) has been derived from the comfort function ACC. In case of a
potential rear-end collision, the system detects the critical situation, warns the
driver and initiates autonomous braking. This safety function has high demands
on the overall system: it must be reliable; the strength of deceleration can vary
depending on the identiﬁcation and validation of the object in question up to
full deceleration levels and must be cont rollable for the rear trafﬁc at any time.
Despite these high safety requirements, this function has become part of the
basic equipment (e.g. in the BMW 2 Active Tourer) and will have an even higher
market penetration in future.
Different scalable variants of comfort and safety systems can be offered
across all vehicle classes; the variants differ in the offered speed range and the
maximum possible deceleration of the emergency brake assistant. Figure 15.5
shows exemplary differences between the basic variant in the 2 Series Active
Tourer and the high-end variant in the X5.
15.2 Future Development of Active Safety Systems
15.2.1 Required Technologies: Highly Automated Driving
In order to offer HAD functions, it is not sufﬁcient to combine existing driver
assistance systems. Necessary requireme nts pertaining to environment recognition,
trajectory planning and vehicle management cannot sufﬁciently be fulﬁlled by avail-
able driver assistance systems today. Existing systems must be improved and new
technologies need to be integrated into the vehicle. If these premises are fulﬁlled,
HAD functions can bring safety on the road. Figure 15.6 shows the necessary
captured environmental parameters and the required simpliﬁed technologies.378 K. Kompass et al.
Fig. 15.6 Detected environment and required technologies
15.2.2 Difference Between Hig hly Automated Driving
and Assisted Driving
From a vehicle’s safety point of view, the main difference between Highly Auto-
mated Driving and assisted driving is that the driver must not monitor the system all
the time in every driving situation. As a result, critical situations must be solved by
the system and not by the driver. To meet this requirement, all variables which are
necessary to describe the trafﬁc situation adequately within the limits of the system
must be determined and interpreted correctly.
During manual driving, a critical situ ation arises by means of a chain of
interacting parameters, which are ignored or not recognised by the driver. Driving
too fast for a speciﬁc situation creates a risk, but does not necessarily lead to an
accident. The accident happens only if additional critical parameters occur, such
as, e.g. an obstacle after a blind curve. T his chain leads to an accident, which is
generally due, in approximately 90 % of cases, to misbehaviour of the driver [ 12].
However, it must be noted that the driver solves a critical situation with the right
response in most of the cases.
Even in Highly Automated Driving mode, it is not possible to drive entirely
risk free because road transport is per se risky, since unexpected hazards cannot be
excluded. Therefore, an action is already initiated when a deﬁned risk level exceeds
a limit, in order to reach a safe state, for example, speed reduction or to abort a lane
change manoeuvre.15 Active Safety Towards Highly Automated Driving 379
Perhaps, Active Safety can or must learn from the described strategy in the
above paragraph, because a critical situ ation cannot be addressed by automated
intervention in the vehicle dynamics at any time. In an early stage, intervention in the
vehicle dynamics cannot be undertaken due to the uncertainties in the interpretation
of the trafﬁc situation. The uncertainties would result in a too high false positive
rate. An excessive frequency of false r eactions would lead to reduced acceptance
and would cause a negative impact on road safety [ 15]. Therefore, early intervention
can only occur if the critical situation is unavoidable and the driver has not addressed
the danger as such.
15.2.3 Beneﬁts for Active Safety Systems
Detailed recognition and correct interpretation of the environment are essential for
Highly Automated Driving functions to perform a safe trajectory planning and to
respond to oncoming threats [ 16]. To fulﬁl these requirements, a 360ıenvironment
recognition is needed, which provides much more details of the trafﬁc situation
than systems available today are able to prov ide. Sub-areas are covered by different
sensors (such as camera, radar, laser scanner); this leads to intended overlapping
areas in the sensor view (redundancy). Thus, a plausibility check of the provided
data is possible and an advanced functio n design can be implemented, such as a
higher deceleration or to initiate steering torque to evade an obstacle.
HAD vehicles will be connected with a backend . Necessary information is
exchanged in both directions via data connection to safely perform HAD functions.
The backend is a server infrastructure and provides data such as updated map data,
hazard points or track clearance for HAD functions. As an extended sensor, the
backend can indicate threats which are not collectable from the vehicle or are out of
the detection range of the onboard sensors. The backend collects data from different
sources and evaluates and processes this data to provide useful information for other
vehicles. A typical application could be the recognition and warning of a trafﬁc
jam. The backend analyses the trafﬁc jam from real time data and forwards this
information to relevant vehicles. If this information is available, a safe and efﬁcient
speed reduction can be realised, as shown in [ 17]. Another way to provide useful
data is by learning from ﬂeet data. From reco rded vehicle data, driver assistance-
related parameters are learned by the backend, such as speed limits, cornering
speeds or hold lines at intersections. These useful parameters can be used for a
better assessment of the trafﬁc situation [ 17]. This requires strict compliance to the
legal framework for data protection.
Highly accurate digital maps contain information such as, e.g. lane-accurate
track models, trafﬁc signs, lane markings and landmarks. This information offers the
opportunity to gain a better understanding of the trafﬁc situation. Other road users
can be associated on the road with the help of the environment recognition and the
highly accurate digital map [ 16]. Available spaces for move ment and possible points
of conﬂict can be determined. The map is continually updated by the backend.380 K. Kompass et al.
By use of highly accurate positioning [18] and highly available actuators,
automated vehicle control at the physical limits [ 19] can be used to showcase
Active Safety Systems and were in fact already demonstrated by BMW [ 20].
Emergency braking, evasion, automated lateral and longitudinal vehicle control at
higher speeds and a safe hold on the roadside in case of an emergency [ 21]a r e
possible.
Driver monitoring can be used for an advanced function of Active Safety
Systems. By analysing gaze behaviour, it i s possible to determine whether a critical
trafﬁc situation was theoretically recognised or not by the driver. In case of an
existing information deﬁcit, the driver can be speciﬁcally warned without increasing
unjustiﬁed warnings. As a result, greater ef fectiveness at an acceptable false positive
rate can be achieved [ 22]. Upcoming manoeuvres can be recognised with the help of
a driver’s gaze behaviour. The possible movement of the vehicle can be restricted;
with this information, a better interpretation of the trafﬁc situation can be realised
[23].
15.2.4 Development Process for Active Safety
Available Active Safety Systems already address a high proportion of the most
common accidents. However, not all accide nts can be addressed with the current
system design, because today a complete inte rpretation of the trafﬁc situation is not
possible. This limitation is based on a too large variation in trafﬁc situations and too
many parameters (road topology, road use rs, driver condition, etc.) which deﬁne a
trafﬁc situation. Therefore, the system d esign of Active Safety Systems is focused
on common types of accidents (e.g. rear-end collisions) with few possible causes of
accidents (e.g. insufﬁcien t stopping distance). This a pproach works very well and
a high coverage in the ﬁeld is reached, e.g. for rear-end collisions, as described in
[11].
A detailed analysis of accident data has shown [ 24] that there are 5313 meaning-
ful combinations of types and causes of acci dents, which covers all possible road
accidents. Interestingly, 50 % of all acci dents are covered by the 26 most common
combinations of types and cau ses of accidents (see Fig. 15.7).
An additional linear increase of the cove rage of types of accidents and causes
of accidents leads to an exponential increase in the effort that is necessary for
developing Active Safety Systems. To gain a greater coverage of accidents, this
approach is no longer practicable. Too great effort in the development of individual
Active Safety Systems is required to cove r only a small number of accidents. The
number of different system designs of Active Safety Systems would lead to a no
longer manageable complexity of the overall system. For a manageable system,
new approaches are needed, which are able t o address a larger variation of critical
situations.15 Active Safety Towards Highly Automated Driving 381
Fig. 15.7 Cumulative coverage of accidents depending on the type of accident and cause of the
accident combination [ 24]
15.2.5 Future Requiremen ts and Perspectives
For a greater coverage of critical situati ons, the variation of potential trafﬁc
situations is too great and can only be solved if all relevant properties are included in
the calculation of the criticality of the trafﬁc situation. New approaches are required
for the functional development of Active S afety Systems, especially when more and
more properties of the trafﬁc situations under consideration are recognised, due to
the increasing degree of automation. Particularly in the interpretation and evaluation
of trafﬁc situations, Rodemerk et al. [ 25] and Wachenfeld and Winner [ 26] demand
a more generic approach. Future approaches should not be restricted to a few types
of accident with a limited variation. They s hould interpret the trafﬁc situation as a
whole.
To address more accidents, an earlier resolution of the cause of the accident
is needed and not only a reaction at the latest possible time, when a collision is
unavoidable. To achieve this, it is necessary to interpret the trafﬁc situation correctly
and to derive the potential cause of accident. In the ﬁrst step, all relevant properties
of the trafﬁc situation must be determined and assessed; see Fig. 15.8.T h eﬁ r s t
challenge is to determine which properties are relevant (such as road topology) and
how these properties can be determined (e .g. with highly accurate digital maps).
Only if all relevant properties are captured, the cause of the critical situation can be
identiﬁed and addressed in the next step.
Not all properties can be captured w ithout additional n ew technologies. A
pedestrian who is hit by a vehicle, accide nt black spots on a road section or the road
conditions are not fully identiﬁable with currently available systems in the vehicle.
In the next step, the captured properties of the trafﬁc situation need to be
evaluated so that the critical variables of this situation can be derived. An example382 K. Kompass et al.
Fig. 15.8 Systematic information ﬂow of ADAS
would be: pedestrian is partially hit, crossing trajectory, wet road, driver distracted,
school on the left side, 07:09, etc.
After identifying the critical variables, an assessment of risk is performed in the
next step. The risk assessment must not only cover selected t ypes of accidents but
must be carried out using a generic approach. As a result, factors such as the type of
threat, criticality, probability of occurrence and time until threat are provided by the
risk assessment.
In the ﬁnal step, the vehicle reacts on the basis of the risk assessment. Depending
on the escalation level, the reaction can range from warning information to an
automated driving manoeuvre. The challenge here is not to disturb or to overstrain
the driver with too much information. To solve this problem, only dedicated
information can be distributed to the driver when there is an information deﬁcit.
New technologies from Highly Automated Driving move the function develop-
ment of Active Safety Systems in three directions:
1. An improvement of current Active Safety Systems (e.g. evasion assistant [ 27]),
with an interpretation of more properties of the trafﬁc situation and an advanced
actuation strategy.
2. New Active Safety Systems (e.g. emergency stop assistant), which resolve
critical situations when the driver is no longer able to control the driving task.
3. The development of a continuous risk assessment of the entire trafﬁc situation
to enable an earlier resolution of a critical situation by means of a better
interpretation of the trafﬁc situation. Thus, the driver can mitigate the critical
situation by himself with information provided speciﬁcally for this purpose, if an
information deﬁcit exists [ 23].15 Active Safety Towards Highly Automated Driving 383
15.3 Prospective Evaluation of t he Effectiveness of Active
Safety Systems and HAD Systems
15.3.1 Challenges
Highly Automated Driving functions and Act ive Safety Systems are safety relevant;
Daimler [ 28] also discussed the challenges and the safety-relevant validation
associated with HAD functions. It is cl ear that the development and the usage of
Active Safety Systems require prospective and quantitative statements regarding
the impact of Active Safety Systems on trafﬁc safety, requested in [ 15]. For
homologation of HAD functions, it has to be proven that there is no negative effect
on trafﬁc safety. Available driver assistance systems must provide evidence that
the driving functions are safe and manageable. This validation of available driver
assistance systems is still manageable; the trafﬁc situations in which the systems
operate are complex, but the systems evaluate and operate the driving function only
based on a limited number of properties of the trafﬁc situation.
It is not feasible to perform the validation of the safety aspects of Highly
Automated Driving functions on the road: according to Winner [ 9], HAD functions
for the highway would have to cover ar ound 100 million km road tests to generate
a statistically valid statement that the system can be classiﬁed as safe. Any changes
to the system require a renewed assessment. Both technically and economically, it
is not possible to provide the necessary evidence using road tests alone.
Another problem is the almost inﬁnite number of possible trafﬁc situations. This
necessitates a validation of perception and cognitive capability of the system. With
currently available methods, the validation of Highly Automated Driving functions
or complex Active Safety Systems is not possible.
15.3.2 Variability at the Model Design
HAD functions and Active Safety Systems are designed to perform automated
vehicle guidance and to avoid and minimise the consequences of critical situations.
To achieve this, all relevant parameters pertaining to the driver, the trafﬁc situation
and the system itself need to be captured and necessary reactions need to be
performed. This leads to a widespread of possible variations, shown in Fig. 15.9.
Each variation can entail thereby in principle positive or negative effects on trafﬁc
safety and must, therefore, be considered. For example, a stochastic modelling is
recommended to cover the variation of the relevant inﬂuencing factors [ 15].384 K. Kompass et al.
Fig. 15.9 Necessary variation in modelling, for example, emergency brake assistant [ 14]
15.3.3 Evaluation of the Effectiveness
An objective metric, as re quired by Kompass et al. [ 15,29], is necessary to deter-
mine a quantiﬁable prognosis regarding trafﬁc safety beneﬁts. Different interests of
vehicle manufacturers, suppliers, ofﬁcial decision makers, insurance companies and
consumer protection organisations need to be considered. This requires a careful
deﬁnition of a metric, which must deal with all necessary interests of stakeholders
as stated above to achieve the necessary acceptance.
In addition to the safety beneﬁt of new driving functions, also possible risks need
to be considered to enable an assessmen t of trafﬁc safety. Helmer shows in [ 30]a
way to perform an assessment of safety ben eﬁts and negative effects with the help
of an objective metric. By use of this, a driving function can be assessed in terms of
trafﬁc safety and optimised in the development process.
The overall consideration of a system must take into account the varying
boundary conditions of the situa tions contemplated. A complete assessment of HAD
functions and future safety functions can only be achieved with the help of virtual
testing and validation, where realistic trafﬁc scenarios must be taken into account. A
possible process for effectiveness assessm ent of HAD functions and Active Safety
Systems is described in detail in Chap. 20.
To come closer to a harmonised methodology, the “Harmonisation Group” was
founded with representatives from different domains in 2012 [ 31]. A pilot usage
of the methodology for the effectiveness analysis is applied in the project AdaptIVe
[32] to analyse the iterative process in the development and validation phase of HAD
functions.15 Active Safety Towards Highly Automated Driving 385
15.4 Conclusion
Highly Automated Driving will increase c omfort and safety on the roads. In the
ﬁrst HAD use case on motorways, the number of trafﬁc accidents will not decrease
enormously, because of the low number of accidents on the motorway compared to
urban or rural roads, the addressing of today’s available Active Safety Systems and
the low market penetration of Highly Automated Driving functions.
Highly Automated Driving can be the enabler for safety functions, which could
additionally increase the safety in the ﬁeld of assisted driving in any trafﬁc situation.
Current Active Safety Systems can be improved and new Active Safety Systems can
be implemented, which are able to addres s a large number of different accidents.
The effectiveness analysis of Active S afety Systems and the validation of HAD
functions require new and until now unresolved challenges. Currently available
methods do not sufﬁciently demonstrate evidence of the safety beneﬁts. Prospective
effectiveness analyses are needed to so lve this problem so that HAD function and
improved Active Safety Systems can be brought on the road.
References
1. T.M. Gasser, D. Westhoff, BASt-Study: Deﬁnitions of Automation and Legal Issues in
Germany, German Federal Hi ghway Research Institute, 2012
2. D. Damböck, M. Farid, L. Tönert, K. Bengler, Übernahmezeiten beim hochautomatisierten
Fahren, 5. Tagung Fahrerassistenz, Munich, 2012
3. R. Yerkes, J. Dodson, The relation of strength of stimulus to rapidity of habit-formation. J.
Comp. Neurol. Psychol. 18(5), 459–482 (1908)
4. S. Lüke, O. Fochler, T. Schaller, U. Regensburger, Stauassistenz und -automation, in Handbuch
Fahrerassistenzsysteme , 3. Auﬂage, ed. by H. Winner, S. Hakuli, F. Lotz, C. Singer (Springer
Vieweg, Wiesbaden, 2015)
5. B. Filzek, Schlüsseltechnologien zum Automatisierten Fahren, AAET 2014, Braunschweig,
2014
6. BMW Group PressClub Global, Ready for Takeover! (2011), [Online]
https://www.press.bmwgroup.com
7. AUDI AG, Long-Distance Test Drive Successfully Completed: Audi A7 Sportback Piloted
Driving Concept Arrives in Las Vegas Following 560 Mile Drive (2015), [Online]
http://www.audi-mediacenter.com
8. Daimler AG, Pioneering Achievement: Autonomous Long-Distance Drive in Rural and:
Mercedes-Benz S-Class INTELLIGENT DRIVE D rives Autonomously in the Tracks of Bertha
Benz (2013), [Online] http://media.daimler.com/
9. H. Winner, Absicherung automatischen Fahrens, 6. FAS-Tagung München, Munich, 2013
10. DESTATIS, Road Accidents 2012, Statistisches Bundesamt, Wiesbaden, 2013
11. T. Hummel, M. Kühn, J. Bende, A. Lang, An Investigation of Their Potential Safety Beneﬁts
Based on an Analysis of Insurance Claims in Germany, UDV (German Insurers Accident
Research), Berlin, 2011
12. DESTATIS, Road Accidents 2013, Statistisches Bundesamt, Wiesbaden, 2014.
13. BMW Group, BMW 7 Series (2015), [Online] http://www.bmw.com/7series
14. T. Schaller, Active Safety on the Road Towards Highly Automated Driving, in 8th Graz
Symposium Virtuelles Fahrzeug , Graz, 2015386 K. Kompass et al.
15. K. Kompass, T. Helmer, L. Wang, R. Kates, Gesamthafte Bewertung der Sicherheitsverän-
derung durch FAS/HAF im Verkehrssystem: Der Beitrag von Simulation, in Haus der
Technik—Tagung Fahrerassistenz und Aktive Sicherheit , Essen, 2015
16. N. Aeberhard, S. Rauch, M. Bahram, G. Tanzmeister, J. Thomas, Y. Pilat, F. Homm, W. Huber,
N. Kaempchen, Experience, results and lessons learned from automated driving on Germany’s
highway. IEEE Intell. Transp. Syst. Mag. 7(1), 42–57 (2015)
17. F. Klanner, C. Ruhhammer, Backendsysteme zur Erweiterung der Wahrnehmungsreichweite
von Faherassistenzsystemen, in Handbuch Fahrerassistenzsysteme , 3. Auﬂage, ed. by H. Win-
ner, S. Hakuli, F. Lotz, C. Singer (Springer, Wiesbaden, 2015)
18. R. Krzikalla, A. Schindler, M. Wankerl, R. Wertheimer, Vernetztes Automobil: Mehr Sicherheit
durch Positionsbestimmung mi t Sate lliten und Landmarken (Springer, Wiesbaden, 2014)
19. P. Waldmann, D. Niehues, Der BMW Track Trainer—Automatisiertes fahren im Grenzbereich
auf der Nürburgring Nordschleife, Garching, 4.Tagung Sicherheit durch Fahrerassistenz,
Germany, 2010
20. BMW Group PressClub Global, BMW at the Consumer Electronics Show: Highly Automated
Driving at the Limit (2014), [Online] https://www.press.bmwgroup.com/
21. N. Kaempchen, M. Aeberhard, P. Waldmann, M. Ardelt, S. Rauch, Der BMW Nothal-
teassistent: Hochautomatisiertes Fahren für mehr Sicherheit im Straßenverkehr, Elektronik
Automotive, 2011
22. M. Liebner, C. Ruhhammer, F. Kl anner, C. S tiller, Generic Dri ver Intent Inference Based on
Parametric Models, in IEEE Conference on Intelligent Transportation Systems, Pro ceedings ,
Netherlands, 2013
22. M. Liebner, F. Klanner, Driver intent inference and risk assessment, in Handbook of Driver
Assistance Systems , ed. by H. Winner, S. Hakuli, F. Lotz, C. Singer (Springer, Switzerland,
2015)
24. T. Heinrich, J. Ortlepp, J. Schmiele und H. Voß, Infrastrukturgestützte Fahrerassistenz, UDV
(German Insurers Accident Research), Berlin, 2011
25. C. Rodemerk, S. Habenicht, A. Weitzel, H. Winner, T. Schmitt, Development of a General
Criticality Criterion for the Risk Estimation of Driving Situations and Its Application to A
Maneuver-Based Lane Change Assistance System, Alcala de Henares, in IEEE Intelligent
Vehicles Symposium , Spain, 2012
25. W. Wachenfeld, H. Winner, Lernen autonome Fahrzeuge? in Autonomes Fahren—Technische,
rechtliche und gesellschaftliche Aspekte , ed. by M. Maurer, J. Christian Gerdes, B. Lenz,
H. Winner (Springer Vieweg, Berlin, 2015)
27. A. Seewald, C. Haß, M. Keller, T. Bertram, Emergency steering assist for collision avoidance.
ATZ Worldwide 117, 14–19 (2015)
28. R. Herrtwich, Autonomous Automobile Future, in 8th Graz Symposium Virtuelles Fahrzeug ,
Graz, 2015
29. K. Kompass, L. Wang, T. Helmer, Prospektive Wirksamkeitsanalyse von aktiven Sicher-
heitssystemen und HAF, VDA Technischer Kongress, 2015
30. T. Helmer, Development of a Methodology for the Evaluation of Active Safety Using the
Example of Preventive Pedestrian Protection, Springer Thesis, 2015
31. Y. Page, F. Fahrenkrog, A. Fiorentino, J. Gwehenberger, T. Helmer, M. Lindman, O. Lex van
Rooij, S. Puch, M. Fränzle, U. Sander, P. Wimmer, A Comprehensive and Harmonized Method
for Assessing the Effectiveness of Advanced Driver Assistance Systems by Virtual Simulation:
The P.E.A.R.S. Initiative, in International Technical Conference on the Enhanced Safety of the
Vehicles , Gothenburg, Sweden, 2015
32. AdaptIVe, European Research Project: AdaptIVe, Automated Driving (2015), [Online] https://
www.adaptive-ip.eu/Chapter 16
Functional Safety of Automated Driving
Systems: Does ISO 26262 Meet the Challenges?
Helmut Martin, Kurt Tschabuschnig, Olof Bridal, and Daniel Watzenig
16.1 Introduction
Science ﬁction stories about autonomous cars have inspired the imagination for
many years. In the early 1980s, the television series Knight Rider presented the
self-driving and artiﬁcial intelligent car named KITT,1and the slogan went, ‘Knight
Rider—A shadowy ﬂight into the dangerous world of a man who does not exist’.
Techies of the time were fascinated by the possibility of a technology and imagined
that it would be possible to drive or simply travel in cars of the kind in the near
future. Today, some decades later, that vision is starting to be made a reality,
which will change and further inﬂuence the common understanding of the existing
human road mobility system. For the last 30 years, the main innovations of vehicle
technologies have been achieved by E/E systems in the automotive industry [ 1], e.g.
anti-lock braking system (ABS) in 1978, electronic stability program (ESP) in 1995
and up to collision avoidance systems in 2010 (see Fig. 16.1).
New generations of the advanced drivin g assistance systems (ADAS) are more
complex than ever before in two aspects: ﬁrstly from a technical point of view in
1Knight Industries, 2000.
H. Martin (/envelopeback)
Virtual Vehicle Research Center, Graz, Austria
e-mail: helmut.martin@v2c2.at
K. Tschabuschnig
Magna Steyr Engineering AG & Co KG, Graz, Austria
O. Bridal
VOLVO Group Trucks Technology, Gothenburg, Sweden
D. Watzenig
Virtual Vehicle Research Center and Graz U niversity of T echnology, I nstitute of Electrical
Measurement and Measurement Signal Processing, Graz, Austria
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_16387388 H. Martin et al.
Fig. 16.1 Evolution of advanced vehicle functions
the context of the introduction of new technologies for implementing the functions
required and secondly from an organisational point of view concerning the whole
supply chain including the suppliers involved for a different kinds of services and
products during the lifecycle of an automotive vehicle. In this chapter, we will
focus on the technical aspect as well as on the discussion about the challenges of
automated driving functions and of how to apply the existing version of the ISO
26262 [ 2] standard concerning automotive functional safety.
16.1.1 From Driver Assistance to Highly Automated Driving
Systems
Today, almost every car in the market provides driver assistance systems (e.g.
electronic stability control—ESC). For safety reasons, high-class vehicles are
equipped with various additional ADAS func tions (e.g. adaptive cruise control—
ACC). The introduction of such systems has helped to reduce the number of fatal
accidents [ 3,4]. However, more than 90 % of accidents still occur as a result of
human misbehaviour or mistakes. Thus, it is an important topic for the European
Union to reduce the number of human-cau sed accidents by introducing the next
generation of ADAS for our cars, which are referred to as automated driving systems
(ADS).
The different deﬁnitions of driving automation for on-road vehicles by SAE in
the standard J3016 [ 5] and recommendations provided by BASt2and NHTSA3are
shown and compared with each other in Fig 16.2. The comparison between the
2Germany Federal Highway Research Institute (BASt)— http://www.bast.de .
3US National Highway Trafﬁc Sa fety Administration (NHTSA)— http://www.nhtsa.gov/ .16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 389
Fig. 16.2 Deﬁnition of SAE driving automation levels for on-road vehicles and comparison with
BASt and NHTSA [ 36]
levels proposed by the various standards/recommendations is possible up to the
BASt Level 4 ‘fully automated’ (see blue line in Fig 16.2).
Evolution of driving systems (based on the deﬁnition by BASt/Lx :::Level x):
L0. Driver only —Driver assistance comfort system (e.g. speed limiter).
Responsibility :D r i v e r .
Safe State : Driver always has the control of the vehicle.
L1. Assisted —Advanced driver assistance provides safety improvement; ADAS
supports the driver (e.g. EBA,4ACC, LKA5).
Responsibility :D r i v e r .
Safe State : Driver takes over full control of the vehicle.
L2. Partly automated —Driving system controls laterally and longitudinally for a
certain time in few situations (e.g. motorway assistant).
Responsibility :D r i v e r .
Safe State : Driver takes over full control of the vehicle.
L3. Highly automated —Driving system controls lateral and longitudinal movement
for a certain time in speciﬁc situations (e.g. motorway chauffeur).
Responsibility :D r i v e r orsystem.
4Emergency Brake Assist.
5Lane Keeping Assist.390 H. Martin et al.
Safe State : Driver takes over full control of the vehicle within a speciﬁc
timeframe orsystem has to control the vehicle in deﬁned driving situations,
if the driver did not take over full control.
L4. Fully automated —Driving system has complete control of lateral and longitu-
dinal movement within a speciﬁed situation of the application (e.g. motorway
pilot).
Responsibility :S y s t e m .
Safe State : System controls the vehicle in some driving situations.
In SAE J3016, the highest level is ‘Full Automation’, which means from our
perspective an autonomous vehicle that is able to drive without a driver. This level
is not reached in this chapte r because this scenario is too far away from today’s
technical practice.
The role of the driver will continue to be important for the introduction of
automation functions in vehicles over the next few years. For high levels of
automation, the driver should not be requi red to cope with any critical driving
situation. In such cases, the ADS should be able to handle any kind of driving
situation autonomously—but this is still a future perspective expected that is
expected to become r eality around th e years 2025–2035.
In the past, vehicle manufacturers rea lised their particular ADAS functions
independently on a do it alone basis and using different OEM6-speciﬁc trade names
(e.g. Adaptive Cruise Control (ACC), Active Cruise Control (ACC), Cooperative
Adaptive Cruise (CACC), Distronic Plus). The function itself as well as the handling
and the user interaction typically sligh tly differed from each other to guarantee
OEM-speciﬁc originality. The levels of automation have to be harmonised for the
introduction of ADS functions; otherwise, the driver will not be able to operate
different systems in the required way without training or a special extended driving
licence for automated vehicles as recommended by NHTSA [ 6]. One important
aspect for handling the challenges is the standardisation and harmonisation of ADS
functions of all OEMs on the market. The standardisation must include not only
the vehicle itself but also the overall as pects concerning the ecosystem that are
required to realise ADS functions like infrastructure (e.g. map data) or environment
(e.g. secure C2X7communication). In aviation, the rulemaking advisory committee
ARAC8harmonises all the aviation-speciﬁc standards (e.g. for system failures,
underdetermined air trafﬁc situation and human factor faults). The awareness of
the need for such a rulemaking advisory committee for road vehicles is also given
in the automotive industry as an automated vehicle will not be a closed system as
was the situation in the past.
6Original equipment manufacturer.
7Car-to-x means a communication between the car and any other external system, e.g. other cars
C2C or the infrastructure C2I.
8Aviation Rulemaking Advisory Committee— http://avstop.com/legal/2.htm .16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 391
Fig. 16.3 Overview of different safety levels
If we compare the situation of aviation with the road mobility standards
concerning safety, ISO 26262 today covers only a subset of those system safety
regulations. As an example, we wish to mention the interaction of ADS with
the driver in aspects such as warning of the driver, supporting the driver so that
an appropriate reaction can occur and feedback to the driver concerning his/her
reaction. Only if the reaction of the vehicl e is clearly deﬁned and the driver knows
which actions are carried out by the vehicle on its own, the right decision or reaction
can be expected from the driver within a s peciﬁc driving situ ation when needed.
16.1.2 Functional Safety According to ISO 26262
Safety is one of the key issues of road vehicle development. New innovative vehicle
functionalities are not only introduced as driver assi stance functions. Concerning
propulsion, vehicle dynamics control and active and passive safety systems increas-
ingly enter the domain of system safety engineering. Development and integration
of these functionalities will enforce the need for a serious consideration of safety
within the system development and the need to provide evidence that all reasonable
system safety objectives are reached [ 5].
There are different levels of safety (LoS) (see Fig. 16.3):
LoS1. Safety with Respect to Product Liability9where safety aspects of any kind
must be covered in order to achieve the permission for the launch of a
9For example, Austrian Federal Act—Govern ing the Liability for Def ective Produc t/Product
Liability [ 7]: §5. (1) A product §5. (1) A product shall be deemed defective if it does not provide the
safety which, taking all circumstances into account, may be reasonably expected, in particular with
respect to: (1) the presentation of the product, (2) the use to which it can reasonably be expected
that the product would be put and (3) the time when the product was put into circulation.392 H. Martin et al.
product on a speciﬁc customer market (e.g. electrical safety of high-voltage
systems)
LoS2. Functional Safety with a cross-divisional view of any type of malfunction in
mechatronic systems (e.g. failure of a mechanical part that could lead to a
hazardous event)
LoS3. Functional Safety with emphasis on any kind of malfunction of electrical
and/or electronic (E/E) sy stems (e.g. failure within the hardware which must
be monitored and handled to achieve the safe state of a system). This means
for the automotive industry, the ISO 26262 standard has to be applied.
ISO 26262 ‘Road Vehicles—Functional Safety’ is an automotive industry-
speciﬁc derivation of the generic industrial functional safety standard IEC 61508
[8]. ISO 26262 was released in November 2011 as the state of the art international
standard for E/E systems in passenger cars. It provides a structured and generic
approach for the complete safety lifecycle of an automotive E/E system, including
design, development, production, service processes and decommissioning. ISO
26262 deﬁnes the Automotive Safety Integrity Level (ASIL) as a risk classiﬁcation
parameter for the safety-critical hazardous situation of an item.10This is an
important parameter for all subsequent safety activities in the safety lifecycle. The
ASIL can be seen as a parameter that indi cates a reduction of risk requirement in
order to achieve a tolerable risk level.
The overall systems engineering must cover all kinds of system properties
such as reliability, availability, maintainability, security and (functional) safety.
Reliability engineering is closely related to safety engineering and to system safety.
Both use common methods for their anal yses and may require inputs from each
other. Reliability engineering typically focuses on costs through failure caused
by system downtime, cost of spares, repair equipment, personnel and the cost of
warranty claims. Safety engineering normally does not emphasise costs but rather
the preservation of life and nature. Therefore, it deals only with particular safety-
critical and dangerous system failure modes [ 9]. Safety and reliability are different
properties. A system can be reliable and unsafe while it can also be unsafe and
reliable (see Fig. 16.4). Furthermore, in some cases, these properties even come
into conﬂict with each other. Leveson discusses this problem with very interesting
examples from the military as well as th e avionic and chemical industries [ 10].
The ISO 26262 standard states ‘ISO 26262 does not address the nominal
performance of E/E systems, even if dedi cated functional performance standards
exist for these systems (e.g. active and passive safety systems, brake systems,
Adaptive Cruise Control)’. ASIL is not a nominal performance metric for other
system properties (e.g. maintainability, reliability, availability) of ADS functions.
Speciﬁc metrics for other concerns need to be examined in certain analyses of the
particular scope (e.g. mean time to repair (MTTR) for maintainable systems).
10An item is a system or array of systems for implementing a function at vehicle level, to which
ISO 26262 is applied.16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 393
Fig. 16.4 Relation of unreliable and unsafe scenarios
The ISO 26262 standard provides guidanc e by introducing requirements and
recommendations to reduce the risk of systematic development failures and to
handle the complexity of E/E systems. Nevertheless, compliance with the standard
presents a signiﬁcant challenge for com panies, because ISO 26262 sets require-
ments and recommendations but does not explicitly deﬁne how they should be
implemented in an efﬁcient way in the c ontext of a particular application. To
implement the requirements and recommendations of the ISO 26262 in a particular
application, expert knowledge in functional safety must create a thoughtfully argued
and documented interpretation of the ISO 26262 for the particular application.
ISO 26262 provides a systematic top-down engineering approach based on the
V-model.11A speciﬁcation starts from the system-of-systems (SoS) level down to
the subsystem and component level and subsequently to the implementation level
of hardware (HW) and software (SW) modules. After the implementation and
veriﬁcation of HW and SW, the integration a bottom-up approach follows on at
the right side of the V-model: integration of HW and SW modules in components
(e.g. HW CSW in ECU), components in subsystems (e.g. ECU in HV battery),
subsystems to system (e.g. HV battery in powertrain) and system in SoS (e.g.
powertrain in vehicle).
16.2 General Challenges of ADS
Some challenges are particularly relevant for automated systems in general terms
(compared to ‘classic’ automotive electroni c systems) and are related to complexity,
availability and reliability. This section provides an overview of different kind of
challenges that must be investigated for the development of safety-critical aspects
of ADS.
11See deﬁnition at http://v-modell.iabg.de/v-modell-xt-html-english/index.html .394 H. Martin et al.
16.2.1 Increasing Complexity of ADS
A system can be described as an aggregation of elements or components concerning
their cooperation and interaction with others to function properly. Interactions in a
system are exchange processes between components realised by ﬂow of material,
energy and information (component relationships). In the event of failure, the
system should be able to react in a fault-tolerant manner, which means that the
system is able to trap a fault—‘the system and its intended functions are able to
survive’ [ 11].
Safety is a system property intended to avoid system faults or malfunctions
from causing any substantial damage (e. g. injuries to people or damage to the
environment), which requires precise e rror detection. If an error is detected, the
system must switch into a passive safe state with the consequence that the system
is no longer available or reliable, but it is safe (failure integrity). The inﬂuence
of system attributes such as availability, reliability, safety and security12must be
harmonised, and a kind of trade-off is r equired, because the ADS can be safe but
that does not mean that the system is available or secure.
If a system is required to guarantee high availability and fail-operational
characteristics, the system architecture is expected to have higher complexity of
implemented functions. This means that the system grows in terms of the number
of components and the interactions between them. The effort involved for the
additional system safety causes increasing complexity. In addition unexpected
effects arise when repetitive interac tions are effected by increasing non-linear
functions between the components. The most important attributes [ 12]o fc o m p l e x
systems are:
Nontransparency —state, interconnection and behaviour of a system and its
components are only partly known.
Sensitivity —interference of results in the case of unexpected input changes.
Instability —smallest disturbances cause unknown, unwanted behaviour of the
system.
Internal dynamics —continuous change of the system’s state by the system itself
without any external inﬂuence.
The mentioned attributes promote the appearance of additional faults and
complicates their identiﬁcation. Despite simplest components and interactions, the
whole system generates forms, patterns and behaviour dynamics that could not be
derived from particular components. This property is referred to as emergence,13
which arises from various signal feedbacks of the system components.
One popular development method is to abst ract the reality, whi ch means building
a model to simplify or reduce the reality and capture the interesting major behaviour
12See also ‘dependability’—umbrella term to describe different quality attributes of a system.
13Emergent en tities (properties or substances) ‘arise’ out of more fundament al entities a nd yet are
‘novel’ or ‘irreducible’ with respect to them [ 13].16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 395
Fig. 16.5 Latent linkages between system components and integration levels
of the system. The state space of a model is always smaller than the state space of the
real world because not all parameters such as t emperature and friction that affect the
components are considered. The synthesis of the component models does not show
all operating states or all linking conditions. In particular, undesirable effects and
hidden links could occur (see Fig. 16.5).
Unidentiﬁed coupling of components and over different integration levels may
lead to systematic faults during the m odelling of the systems. These nontrans-
parency links and reactions to signals are the cause of unpleasant effects such as
emergence (spontaneous system behaviour caused by smallest state changes on
lowest level without direct derivation), common cause effects (single fault, cause
simultaneously multiple components failu re), powered run away (activation of a
not provided function and is not designated in the conception or signal ﬂow) and
hidden links (unwanted operation states in the system, not identiﬁed as failure). In
these cases, the system works incorrectly , while a faulty state is not visible. That
could cause the loss of all safety reserves in the system. The implemented safety
mechanisms are ineffective and cannot be activated because the functional chain
is unknown. These nontransparency links must be discovered during the system
design.
The mission of mastering complex systems is to control the above-mentioned
impacts in time and to prevent injurious effects. This could be done by a safe
system design and increasing system transparency. The quality, robustness and fault
tolerance of the design depends on prediction potential of the applied development
procedure.396 H. Martin et al.
16.2.2 Strict Requirements Concerning Availability
and Reliability of ADS
A high degree of automation means that many—and potentially all—of the tasks
usually carried out by the driver will now be executed by control systems in sucha manner that the driver relies fully on the correct operation of these systems.The unavailability of a function—for example, the inability to perform automatedbraking or automated steering—is more critical when the driver is ‘not in the loop’than it would be if the driver is ‘in the loop’. Regarding safety, it is generallyconsidered as acceptable that a semi-aut onomous function such as conventional
cruise control or adaptive c ruise control is suddenly deactiv ated, provided the driver
is informed about the deactivation. The d eactivation could be caused by a detected
error in the system, by the activation of a stability function such as ESP or ASRor by some other tri ggering condition. The sudden los s of the vehicle’s ability to
drive autonomously, perhaps after several hours of fully autonomous driving, wouldtypically be considered highly critical concerning safety, even if the driver is forcedto take over control of the vehicle. In an extreme case, the vehicle continues tooperate fully autonomously and to the extent that the driver does not even have anypossibility to take over control.
Thus, the closer we approach towards fully autonomous vehicles, the more
important it becomes to ensure that automated functions are fully available. Clas-sical ‘fail-safe’ design solutions that re ly on deactivating a f unction and informing
the driver are no longer sufﬁcient. Instead of fail-safe designs, fault-tolerant designswill be needed so that functions remain operational even when a fault is encounteredin the system.
In context of criticality of potential failures of functions for highly automated
driving, it is clear that systems providing the functions are able to signiﬁcantlyaffect the vehicle behaviour. Potential fa ilures can cause very bad effects, and highly
autonomous functions are, therefore, typically associated with strict requirementson safety integrity. However, it should be noted that many conventional systemsalso require high levels of safety integrity, for example, brake systems and steeringsystems. So, this aspect is not a fundamental difference between ADS functions and
other vehicle functions. In general, automated functions tend to be associated withstricter safety requirements.
16.3 Challenges to ADS Concerning Functional Safety
For relatively high levels of automation (i.e. closer to ‘autonomous driving’ than‘driver warning functions’), a complexity issue must be faced that makes the safety
analysis more difﬁcult than that of conv entional systems. In a ‘classic’ vehicle,
the driver is responsible for coordinating all the vehicle functions (propulsion,deceleration, steering, headlamps, directio n indicators, etc.). In principle, this means16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 397
that each independent system function can be investigated separately with respect
to functional safety and taking into account the possibilities that e xist for the driver
to handle a particular malfunction of that vehicle function. But with higher degrees
of automation, the driver is no longer the overall coordinator, which means that any
malfunction need to be handled by another function. In fact, the limits between these
functions become blurred and difﬁcult to deﬁne since the interaction between the
different functions grows which is now more complex. The ISO 26262 approach of
looking at one function (or ‘item’, which is the real or imagined system that provides
the function) at a time is less appropriate when the functions are heavily dependent
on each other. In the following section, more safety-related topics will be discussed
that must be taken into account for the engineering of ADS.
The innovations of today’s vehicles follow a continuing evolutionary approach.
The development of future technologies is based on existing automotive engineering
best practices and does not only reuse the existing ones. Some of these evolutionary
aspects will be discussed in the following.
16.3.1 Vehicle Platform for Basic Driving Functions
Many of the current discussions on ADS are concerned with the functional level
to replace the single driver tasks by additional ADS functions. Further important
issues that need to be covered are the bas ic actuation functions, such as accelerating,
braking and steering, to implement the required vehicle movement. For these
functions, today’s vehicles provide function-speciﬁc assistance for the human
driver through means such as force support in braking systems by a hydraulic
or an electromechanic brake. Systems f or automated driving functions need to
be improved to support the fully required brake force without a human driver.
Furthermore, the safety concepts of ex isting systems must be updated because the
ECU (e.g. of the steering system) needs t o detect any kind of malfunction and their
effects have to be mitigated, because without a driver the system has to monitor,
decide and react on its own. The steering s ystem’s safety goal can be formulated
like, ‘Avoid the reversible and irreversible steering request from the steering system
affected by any of the involved E/E systems’ (e.g. steering angle sensor or ECU)
[14]. The 3-level monitoring concept (EGAS concept) provides a possible technical
solution, which is a standardised principle for safety designs for vehicle engine
controls published by German OEMs [ 15].
Future vehicle architectures will introduce new safety concepts in the automotive
industry (e.g. steer-by-wire systems will change safety concepts in contrast to
the systems nowadays). In the event of any fault, a deactivation in a fail-silent
mode as a safe state will not be possible (e.g. a fail-operational mode can be
realised by redundant system architecture). As a conclusion, it is obvious that the
implementation of ADS functions in existing vehicle platforms cannot be seen as
only add-ons to existing functions. The overall safety concept of vehicles has to be398 H. Martin et al.
updated for upcoming requirements concerni ng fault-tolerant and fault-operational
behaviour of highly automated vehicles.
Issue :Are existing vehicle platforms ready for ADS ?
16.3.2 From ADAS to ADS Functions
Today, ADAS functions are used as a basis for the realisation of ADS functions.
However, these ADAS functions concern sp eciﬁc aspects of speci ﬁc automotive use
regarding:
Scenarios : from simple to complex scenar ios (e.g. from keeping a driving
distance by ACC on the motorway to city chauffeur at trafﬁc crossing)
Vehicle speed : from low to high speed (e.g. from park steering assist to high-
speed motorway chauffeur)
Vehicle Safety Risk : from ‘normal’ to ‘low’ risk (e.g. from emergency braking
assist to automated driving on the motorway)
The challenge is the combination and interaction of these basic functions. All
kinds of interactions between these basic functions need to be analysed and handledin such manner that no unintended interactions concerning timing and value couldoccur. Any kind of functional and technical interaction must be dealt with duringthe system design phase.
Issue :Is reusing of existing ADAS possible ?
16.3.3 Share of Sensors and Actuators
Different vehicle functions share the same sensors and actuators, and all functional
and technical condition has to be met. Sensor signals and actuator command signalsmay not be faulty in the case of feature interaction and synchronisation. In manyapplications an adequate fusion of sensor data and a voter mechanism for actuatorcommand signals are required. In particul ar, any kind of unwanted interactions has
to be handled so that no hidden links could affect any malfunction behaviour.
Issue :Is the available technology sufﬁcient and adequate for the required
functions ?
16.3.4 From Many ECUs to Host ECUs
Today, more and more functions of vehicles are implemented on existing single-core
ECUs. These existing technologies slowly reach their limits (e.g. clock frequency,heat dissipation, size of gates). The following challenge approach is a shift from16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 399
single-core to multicore ECUs, which means a shift from distributed functions
with many ECUs to a few multicore host ECUs. The latter offer many differentfunctions, but this rather new technology also requires new safety features. Forsafety-critical applications accord ing to ISO 26262, these m ulticore ECUs with
shared resources have to support speciﬁc safety measures in hardware (e.g. useof lockstep core or memory protection). F urthermore, safety measures have to be
supported by the software and software engineering constrains. Real-time (e.g. loadsof cores), functional (e.g. sequences) and safety (e.g. spatial redundancy) aspects
have to be considered by the operating system and the application software. Manynew algorithms from different vendors have to be integrated in these platforms,and coordination, conﬁguration and docum entation pose a further challenge. All
these aspects have to be compliant to ISO 26262 and require safety evidence for theassessment of those applications.
Issue :Is new technology ready for s afety-critical applications ?
16.4 Importance of the Concept Phase
The concept phase deﬁned in ISO 26262 focus on the functional abstraction of a
speciﬁc item by (1) deﬁnition of the item, (2) assessment of the potential risks of thatitem by performing the hazard analysis a nd risk assessment (HARA), (3) determi-
nation of the ASIL for each hazardous event, (4) deﬁnition of high-level functional
safety requirements as safety goals and (5) derivation of a functional safety concept(FSC), which covers all relevant safety m easures to achieve functional safety for
the deﬁned item. In the following, each of these activities is described and relevantsteps will be discussed in more detail.
16.4.1 Item Deﬁnition
This activity covers the deﬁnition of the item, the required functionalities, theintended behaviour, the interaction with other items/systems of the vehicle and theinteraction with the external environment of the vehicle. ISO 26262 is intended asan automotive-speciﬁc functional safety standard, and it should be usable for anykind of E/E system in a vehicle. This can be slightly different when consideredbeyond the scope of speciﬁc items. For example, if we compare a hybrid powertrainsystem component such as a high-voltage battery system with an automated drivingsystems for a motorway assistant (MW A): The MW A contains much more complexand networked functionalities that must to be coordinated with external items (e.g.other vehicles) and environmental systems (e.g. trafﬁc signs) and furthermore withvehicle internal functions related to fundamental vehicle platform functions.400 H. Martin et al.
16.4.2 Hazard Analysis and Risk Assessment
In the concept phase, the functional abstraction allows to have an abstract view of
the system. Functional safety concerns unintended behaviour of the item. Safety
analyses should be carried out in that phase to identify potential hazards of the item
(e.g. HAZOP14or Concept FMEA15) followed by risk assessment.
The following steps describe activities that need to be done during the HARA
including some proposed further extensions concerning ADS functions; these are
written in bold letters and described in more detail:
Step 1: Elaboration of Hazardous Events
 Step1.1: Driving scenarios by situation analysis
– Driving situation (e.g. manoeuvre at crossroads)
– Infrastructure (e.g. communica tion between car and environment)
– Environmental condition (e.g. weather)
– Operating mode of the vehicle (e.g. acceleration)
– Trafﬁc participants involved (e.g. pedestrian)
–Driver presence (e.g. driver in the loop/or not)
 Step 1.2: Hazard identiﬁcation (e.g. by HAZOP)
– From malfunctions
– To malfunction behaviour
– To hazard
 Step 1.3: Derivation of hazardous events
– Combine driving situation with hazards
– Potential source of harm to speciﬁc group of trafﬁc participants at risk
Step 2: Classiﬁcation of Hazardous Events
 Step 2.1: Severity classiﬁcation
 Step 2.2: Exposure classiﬁcation
S t e p 2 . 3 : Controllability classiﬁcation
Driver Presence and Controllability Classiﬁcation Each hazardous event is
classiﬁed by the risk parameters seve rity (S), probability of exposure (E) and
controllability (C) during the HARA. Parameter C denotes the estimation of
controllability of a hazardous ev ent by the driver or other persons potentially at risk.
Controllability classes are C0 to C3, where C0 meaning ‘controllable in general’
and C3 meaning ‘difﬁcult to control or uncontrollable’. In the speciﬁc context of
risk assessment for automated driving func tions, the parameters depend on the role
of the driver within a speciﬁc driving situation, which is why an ASIL should be
14Hazard and operab ility study.
15Failure mode and effects analysis.16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 401
determined for any potential hazardous even t. For ADAS and partially automated
functions, the driver must always be able to take over control of the vehicle within
a deﬁned reaction time. Concerning functionality, for highly or fully automated
functions, it is not required that the driver monitors the driving situation. Thus, it
might not be possible for the driver to consider any kind of controllability of the
vehicle. This may lead to a classiﬁcation of C3, which would result in ASIL C/D16
worst case.
16.4.3 Determination of ASIL and Safety Goals
The next steps concern the rating of ASIL and the deﬁnition of safety goals:
Step 3: ASIL Derived from Risk Parameters
A S I L Df (S, E, C) based on ISO 26262, part 3, Table 4
Step 4: Elaboration of Safety Goals
 Formulation of Safety Goals
Deﬁnition of Safety Goal attributes (e.g. safe state)
Deﬁnition of Safety Goal Attributes A safety goal must be speciﬁed as a top-level
safety requirement. We want to avoid an y unreasonable risk of a possible hazardous
event (e.g. ‘unwanted acceleration shall not occur’). Safety goals are not expressed
in terms of technological solutions but in terms of functional objectives. If a safety
goal can be attained by transitioning to, or by maintaining of one or more safe states,
then the corresponding safe state(s) shall be speciﬁed. Further relevant parameters
regarding a safety goal are safe state, fault-tolerant time interval (FTTI),17diagnostic
test interval (DTI),18fault reaction time (FRT)19and safe tolerance time (STT)20to
maintain safe state before a po ssible hazard may occur (see Fig. 16.6).
FTTI DDTICFRTCSTT
The deﬁnition of these parameters is very important in the case of FRT being
required to have critical driving situations handled by the system or by the driver
to maintain the deﬁned safe state (e.g. ADS function level 2 deﬁnes safe state as
‘driver takes over control’).
Further Inﬂuences to Deﬁne a Safe State The complexity of the driving situation
must be considered for the deﬁnition of safe states. Another important requirement
16Depending on the classiﬁcation as S and/or E.
17Time span in which fault(s) can occur in a system before a hazardous event ([ 2], Part 3, 1.45).
18Amount of time in which a safety mechanism takes online diagnostic tests ([ 2], Part 3, 1.26).
19Time span between detecting a fault and reaching the safe state ([ 2], Part 3, 1.44).
20Amount of time between achieving the safe state before a hazard could occur.402 H. Martin et al.
Fig. 16.6 Fault reaction time and fault-tolerant time interval [ 2]
Table 16.1 Overview of exemplary inﬂuences on the safe state
Item deﬁnition
 Low ADS
 Mid ADS
 High ADS
Driver presence
 YES
 YES
 NO
 NO
System availability
 Deactivation
not
available
Not
available
Available
 Available
Safe place
 –
 –
 Stop vehicle on the
same lane
Stop at the
rightmost lane
Safe state scenario
 Driver must
take over
Driver
must take
over
Vehicle must stop at
safe place
Vehicle must stop at
safe place
in ISO 26262 concerning the safe state is ‘ 8.4.2.4. If a safe state cannot be reached
by a transition within an acceptable time interval, an emergency operation shall be
speciﬁed’.
Based on this requirement, further constraints have to be taken into account:
Item Deﬁnition —provided functionality of ADS to maintain safe state (e.g. low
ADS level, only comfort functions vs. high ADS level, self-driving).
Driver Presence —difference between driver in the loop or not (e.g. driver’s
hands on the steering wheel vs. ch ecking e-mails at the touchscreen).
System Availability —possible or required degradation function depends on the
level of ADS and the driver reaction in the case of malfunction.
Safe Place —reachable safe place depends on th e current driving situation and
environmental conditions (e.g. safe state required during overtaking on the third
lane of the motorway).
Safe State Scenario —accessible safe state in speciﬁc driving situations including
all constraints.
An overview of different inﬂuences is given in Table 16.1.16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 403
16.4.4 Functional Safety Concept
The objective of the functional safety concept is to derive functional safety
requirements from the safety goals and to allocate them to preliminary architectural
elements of the item or to external measures.
The following aspects have to be addressed in FSC:
 Error detection and failure mitigation
 Transition to a safe state
 Warning and degradation concept
Fault tolerance mechanisms
Error detection and driver warning
Arbitration logic
The last three aspects will be discussed in the following in more detail:
Fault tolerance mechanisms means that a fault does not directly lead to the violation
of the safety goal(s). The mechanism maintains the item in a safe state with or
without any kind of degradation.
Error detection and driver warning are important to reduce the risk exposure time
to an acceptable interval (e.g. engine malfunction indicator lamp, ABS fault
warning lamp).
Arbitration logic is required to select the most appropriate control request from mul-
tiple requests generated simultaneously by different functions and is particularly
important for the interacting functionalities of ADS.
However, not all of these aspects are always relevant for every system. Some
systems do not offer any fault tolerance and some systems do not need any
arbitration logic. The relev ant safety measures concerning error detection, driver
warning and transition to the safe state are important topics that must be considered
in that phase.
16.4.4.1 Examples of FSC for Different ADS Levels
Depending on the type and degree of automation, there are several different
strategies for ensuring safe operation despite faults in associated systems. This is
illustrated in Fig. 16.7, which shows three potential event sequences unfolding after
the occurrence of an error. From top to bottom, these can be described as follows:
Anassisted or partially automated function can no longer be trusted to fully
function and as a consequence the driver is alerted to (re)take control of the vehicle.
During and after the handover, the partially automated function is prevented from
working unsafely, perhaps by deact ivating that function completely.
Example: Cruise control is deactivated due to a detected error. The driver is
informed and takes control of the longitudinal motion of the vehicle.404 H. Martin et al.
Fig. 16.7 Different concepts for transition to safe state
Ahighly or fully automated function determines that the driver needs to take
over due to a detected error. The driver is informed about the need for handover of
control. Due to the expected relatively long time for the handover, the automated
function needs to continue to operate fully or almost fully for some time. Note: This
means that the handover is initiated when the automated function is still either fully
or almost fully operational.
Example: An autonomous driving system detects an error that indicates that an
additional (subsequent) fault may lead to unsafe system behaviour. The driver is
informed and takes control of the vehicle.
Afully automated function without any possibility for the driver to take over
control determines that the vehicle shall be stopped in a deﬁned time interval to
avoid any hazardous event. As in the previ ous case, this means that the handover is
initiated when the automated function is still fully or almost fully operational.
Example: An autonomous driving system detects an error that indicates that an
additional (subsequent) fault may lead to unsafe system behaviour, so the automated
function brings the vehicle to a safe stop within a few minutes or possibly seconds.
For the second and the third case described above, i.e. in the lower part of
Fig. 16.7, it is shown that the automated function needs to be fully—or almost
fully—operational for several seconds after an error occurs. If there is no driver
to take over, the function has to remain operational, albeit potentially degraded,
for several minutes. Thus, the implementation of such highly or fully automated
functions needs to be fault tolerant in the sense that full or degraded functionality is
possible even when a fault occurs in the system.16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 405
16.4.4.2 Vital Role of the Driver in the FSC
ISO 26262 sets requirements concerning error detection, driver warning and
reaction of the driver. For today’s automotive E/E systems, the role of the driver
can be regarded as almost being covered in a cooperative manner. The driver must
be able to control the vehicle on every trip (in Europe see also: Vienna Convention).
By contrast, how the automated vehicles operate in a standardised way and how
safety-critical aspects should be handled in a standardised way is notdeﬁned.
Thus, the driver needs to be familiar with different speciﬁc automated driving
systems because the behaviour vehicles ma y differ. The training of the driver is
required for speciﬁc ADS functions to ensure the driver’s correct reaction within
the required reaction time.
An additional aspect that must be taken into account here, and this is the
‘habituation effect’, i.e. the introduction of ADAS and ADS functions, will change
the driving experience and require different skills of the driver. In HARA, the
parameter C for controllability might change to ‘uncontrollable’. In the near future, a
driver may be unable to handle a critical vehicle situation without assistance systems
within the required reaction time because of the lack of experience. Special driving
licences for automated driving systems c ould be a possible scenario. However, they
may not be accepted by customers who may hinder the introduction of such systems.
At present we do not train drivers to be able to deal with either a total brake
failure or total loss of steering capabilities. Both braking and steering systems are
extremely safe and reliable as a result so that the drivers do not need to worry about
such problems at all. An alternative solution is simply to make the future ADS so
safe and reliable that the drivers can fully rely on them at all times.
16.5 Supporting Methods to Handle Complexity of ADS
The complexity of these safety-critical systems must be considered, and negative
effects need to be detected and mitigated by fault identiﬁcation and fault mitigation
techniques. Today, in the development of automotive electronic systems, there are
established methods and technologies for s afety activities available (e.g. safety
analyses such as HARA for ASIL determination [ 2], failure mode and effect analysis
(FMEA) [ 16], fault tree analysis (FTA) [ 17]).
The available technologies that need to be improved and developed further for
their practical applicatio n in systems engineering:
 Formal/semiformal speciﬁcations by model-based systems engineering
 Formal veriﬁcation by contract-based design
 Simulation and co-simulation406 H. Martin et al.
16.5.1 Model-Based Systems Engineering
The following deﬁnition of MBSE can be found in Friedentahl [ 18]:
‘Model-based systems engineering (MBSE) applies systems modelling as part of
the systems engineering process :::to support analysis, speciﬁcation, design, and
veriﬁcation of the system being developed’.
The MBSE approach is a semiformal methodology to support engineers in the
speciﬁcation phase with analysis of the system and reduction of reality to an abstract
model representation. The requirements for a speciﬁc level are deﬁned and a virtual
solution for the system is elaborated and hierarchically divided into representative
components from system of systems, systems, subsystems and components. Models
at a lower hierarchy level provide more sp eciﬁc details concerning the realisation.
During the modelling phase, a separation of intended and unintended functions ( D
fault behaviour) is required, which is represented by speciﬁc functional properties
and safety-related properties of the system. The model-based engineering approach
is highly recommended by ISO 26262, part 6, for software development at ASIL C
and D. This approach should be enhanced for the system level of such software-
intensive systems. One of the major standardisation working groups concerning
MBSE is the Object Management Group (OMG), which is an international, open
membership, not-for-proﬁt technology standards consortium. OMG task forces
develop enterprise integration standards for a wide range of technologies and
industries. Various standardised genera l purpose modelling languages are available
for the system level (e.g. SysML,21MARTE22or EAST ADL23). These modelling
languages have been elaborated, improved, applied and evaluated by many EU
research initiatives by academia, resear ch and industry partners. MBSE presents
many possibilities f or how to model a system through the use of different modelling
elements, but for practical application, the reduction of the number of elements
to a subset and provision of guidance and modelling constraints for engineers
are requirements. A model-based systems engineering method24is a method that
implements all or part of the systems e ngineering process and produces a system
model as one of its primary artefacts. A system model provides the basis for
speciﬁcation of the intended behaviour of the system and is further used for iden-
tiﬁcation and derivation of error models. An error model handles fault propagation
over different hierarchy levels from si ngular components up to hazards at vehicle
level. Different safety analysis methods (e.g. FTA or FMEA) can be supported by
applying the error model. The output of the safety analysis deﬁnes safety measures
by safety requirements for mitigation of any potential fault by detection, prevention,
21Systems M odellin g Language— http://www.omg.org/spec/SysML/ .
22Modelling and Analysis of Real Time and Embedded systems— http://www.omgmarte.org/ .
23Electronics Architecture and Software Technology—Architecture Description Language— http://
www.east-adl.info/ .
24A method is a set of related activities, techniques, conventions, representations, and artefacts that
implement one or more processes and is generally supported by a set of tools.16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 407
degradation or warning actions in the safety concept. A possible approach for the
automotive domain by using SysML is d escribed by Martin et al. in the SAE
technical paper [ 19].
Biggs et al. [ 20] present a proﬁle for a conceptional meta-model to cover relevant
aspects of system safety and describes safety stereotype based on SysML (e.g.
hazard, harm, harm context, etc.). The p roﬁle models common safety concepts from
safety standards and safety analysis techniques. As a proﬁle of SysML, it can be
used to directly model the safety-related information of a system in the same model
as that system’s design. Furthermore, the proﬁle supports communication between
safety engineers and system developers; in order to improve the understanding on
both sides of the risks, a system is vulnerable to and the features the system uses to
mitigate those risks.
The MBSE approach by using SysML covers the following concerns [ 18]:
Provide a common and standardised description language to improve the
communication between system engineers a nd engineers from other disciplines.
Support of the performance of different kinds of checks of the system model
for the veriﬁcation of speciﬁcation rules (e.g. for the system design, to achieve
correctness and completeness).
Improve the processing of the system modelling artefacts by using transformation
of the system model to another description model and extension with other
relevant aspects (e.g. error modelling).
Traceability of relevant safety artefacts is provided, and so the change manage-
ment and impact analysis of particular sa fety concerns are possible. A further
beneﬁt of MBSE is the possible reuse of existing best practices by different kinds
of patterns for requirements deﬁnition, safety design and safety argumentation.
16.5.2 Formal Veriﬁcation by Contract-Based Design
Contract-based design (CBD) is a formal method for specifying what a componen-
t/system is able to offer (e.g. service, data, information, energy) for its environment
by means of so-called guarantees and what a component/system requires (e.g.
service, data, information, energy) from its environment by ‘assumptions’ [ 21].
Guarantees may be the performance and r estrictions of output interface/channels
which are only valid if all assumptions are conﬁrmed. Assumptions deﬁne the envi-
ronmental constrains for the input interface or channel of a system or component.
The coupling of software-intensive systems and their components is hard to handle.
It is difﬁcult to handle all potential hidden links that could affect the safety of
a system. CBD is able to guarantee that the system model only engages deﬁned
system states. By applying CBD, only speciﬁed system states are allowed and the
coupling and communication of systems is only permitted via deﬁned and well-
known channels.
It is possible to provide patterns to assume and guarantee contracts which are
deﬁned for different characteristic such as timing, safety, security, etc. or patterns408 H. Martin et al.
that are formalised to be checked automatically. The sum of all the system patterns
deﬁnes all possible contracts.
CBD describes system components to be black boxes and deﬁnes their behaviour
via interfaces with other system compone nts. All kinds of dependability aspects
are formulated as contracts, for example, timing (e.g. real-time contracts), safety
(e.g. ASIL x or reaction time) and security (e.g. authenti cation certiﬁcates) and are
manageable by this means.
Different hierarchical levels of contracts are deﬁned as follows:
 Contracts between different SW modules
 Contracts between SW modules and HW components
 Contracts between different HW components
 Contracts between HW components and subsystems
CBD is able to coordinate interopera bility and boundary limits of components
and services they provide and also data over different hierarchical organisations. By
modularization, it is possible to reduce the complexity of the components during
system design. Every component is described by a limited catalogue of properties
and constraints which establish safety. Conﬂicts between contracts are found very
easily by means of a consistency test, if all contracts are free of any contradictions.
Satisfactory tests check whether the implementation of a component is consistent
with the contract. Adequate tooling support is now ﬁnally available today (e.g. for
model checking). Several publications discuss the use of contracts in context of the
requirements of the engineering and safety standards such as ISO 26262 [ 22].
A new methodology to support the devel opment process of safety-critical
systems with contracts is presented by Baumgart et al. [ 23]. They compared existing
meta-models also stating their shortcomings in relation to their approach, and
they introduced the semantic foundation of our meta-model. They described their
concepts of abstraction levels, perspectives and viewpoints and provided a proof of
concept with exemplary use cases.
Westman et al. [ 24] shows that safety requirements can be characterised by
contracts for an item and its elements with guarantees that constitute the safety
requirements, by providing explicit require ments on their environments as assump-
tions. A contract therefore enriches a sa fety speciﬁcation for an item/element by
explicitly declaring what each element/item expects from the environment to ensure
that the safety requirements are satisﬁed. Furthermore, they showed that consistency
and completeness of safety requirements can be ensured through verifying the
dominance property of contracts.
Past and recent results as well as novel a dvances in the area of contracts theory
are presented by Benveniste et al. [ 25]. They show that contracts offer support to
certiﬁcation by providing formal arguments that can assess and guarantee the quality
of a design throughout all design phases. Furthermore, they showed that contracts
can be used in any design process: Contracts provides an ‘orthogonal’ support for all
methodologies and can be used in any ﬂow as a supporting technology in composing
and reﬁning designs.16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 409
16.5.3 Simulation and Co-simulation
Simulation methods are commonly used in the automotive industry where complex
embedded systems from different cooperative disciplines are referenced to realise
highly interdependent functions. In this context, simulation methods allow engineers
to predict the behaviour of complex embedded systems without an available
prototype of the entire system. Complex systems like ADS require a data structure
that considers the behavioural interac tions within the system because of their
multidisciplinary nature. A combina tion of simulation and MBSE methodology
supports modelling activities and improves the integration of simul ation activities in
the design process. This combination supports a system presentation for addressing
the overall behavioural aspects of the product (multi-physics, local and global
behaviours) and thus considers several system levels.
The ISO 26262 standard recommends the use of simulation methods for veriﬁ-
cation on different system integration levels (e.g. ISO 26262 part 3 for veriﬁcation
of the controllability parameter of HARA [ 26]). For system design veriﬁcation, ISO
26262, part 4, Table 3 suggests simulation as a highly recommended method and a
technique, e.g. fault injection and back-to-back test for ASIL C and D.
A model-based workﬂow for safety-critical embedded system is shown by
Karner et al. [ 27]. Their approach covers three main aspects during the development
of safety-critical systems, namely, system modelling, system simulation and system
veriﬁcation based on simulation. By using the Software Process Engineering
Metamodel (SPEM), the workﬂow is deﬁned in a consistent and seamless way,
allowing continuity from preliminary concepts up to the ﬁnal system veriﬁcation
report. Aligned with requirements given by ISO 26262, the demonstrated workﬂow
enables safety veriﬁcation at system lev el during an early stage of development by
using modelling and simulation.
A system modelling-based approach for the integration and test of automotive
embedded systems is proposed by Krammer et al. [ 28]. A V-model is introduced,
targeting process-oriented needs for safety, and indicates whether modelling lan-
guages in favour can be applied best. To establish a link between safety goals and
the structure of simulation models, the initial model is enriched with necessary
information and transformed to a language suitable for advanced simulation tasks.
SystemC has the cap abilities to s upport this approach for hardware and software
evenhandedly. The integration of SystemC into a co-simulation environment also
enables the usage of external simulation models within the proposed architecture.
The proposed system modelling-based appr oach enables safety veriﬁcation and
validation at an early stage of development.
Graignic et al. [ 29] propose a software framework based on a data model
that manages complex system structures. This data model structures behavioural
information that considers three major interactions: interactions between com-
ponents simulation models, interactions c onsidering multilevel behaviours (e.g.
use of component simulation for a module simulation) and interactions between
domain behaviours (e.g. thermal impact on mechanical components) in a so-called410 H. Martin et al.
co-simulation environment. Such methods can be used to perform early validation
of the speciﬁcations by the MBSE approach to provide early validation feedback of
adequate safety measures.
In the context of automated driving, different aspects beyond embedded systems
behaviour are simulated such as the interaction of a vehicle with its environment,
other vehicles or systems (e.g. Simulation of Urban MObility—SUMO [ 30,31]),
the interaction of a vehicle with a driver or the interaction of vehicle subsystems for
dynamic proof of a speciﬁed behaviour of systems and components [ 32].
16.6 Further Safety-Related Topics
In the following section, more safety-related topics will be discussed that must be
taken into account for the engineering of ADS.
16.6.1 Inﬂuence of Security on Safety Functions
One objective of system development is to ensure ‘freedom of unreasonable risks’
in any operational condition. This objective has different meanings depending on
whether safety or security aspects are cons idered. From the safety point of view, the
risk to the environment arising from inside of the system must be minimised (and
this apart from a system including human s). This can result in a technical failure
in the system, for example, ﬁre hazard due to a high-voltage battery system of an
electric vehicle or an accident because of an unintended acceleration of the ADS.
Regarding security, potential threats to the system through the environment, which
could result from intentional manipulations, e.g. a hacker attack, must be minimised.
While the term safety represents the system view on any potential hazards of the
system to the world outside, security concerns by contrast the aspects from the
outside world to the inside of the vehicle and the inﬂuence on the vehicle internal
systems. The goal of security measures is to protect the system from unauthorised
use and manipulation (hacker, low-cost spare parts, etc.). The discipline of security
in the automotive industry concerns the growth in vehicle functions and the
innovation potentials in the networking of vehicles with the environment (e.g. other
cars) or Internet of things (e.g. cloud services). The particular challenge on the one
hand is the linking of the two disciplines’ safety and security for utilising synergies
and on the other hand the prevention of conﬂicting effects. Different motivations for
unauthorised access scenarios in vehicles are possible [ 33]:
 Manipulation of the vehicle and its components as well as the corruption or
deactivation of vehicle functions—attacking of ‘availability of a service’ (e.g.
change of torque limits of the electric machine that could damage the powertrain)16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 411
 Vehicle tuning by changing functional p roperties—attacking of ‘functional
integrity’ (e.g. chip tuning, manipulatio n of the speedometer or deactivation of
warning messages)
 Illegal attempts to obtain personal data—attacks on ‘personal integrity’ (e.g. the
driving behaviour of the user, preferences for shops, restaurants or hotels)
ISO 26262 provides guidance for automotive development process issues con-
cerning functional safety lifecycles. Ho wever, a process for security concerns is
not state of practice for automotive engineering. Many similarities exist between
safety and security on a common abstraction level, and it would appear to be
useful to interweave ISO 26262 development processes with security concerns.
After deﬁning a security item, the result of these considerations could be the
consideration of security risks and the pre paration of hazard analyses. Security goals
with corresponding security measures can, hence, be derived from the analyses.
After system design, veriﬁcation and validation, a joint assessment should take
place to rate the functional safety lev el reached according to ISO 26262 and any
safety threat on the security side. Based on the similarities of these two disciplines,
it would appear to be wise and necessary to expand the ISO 26262 framework by
aspects of security topics. The extent to which these suggestions or other methods
are expedient will be established in the course of an ongoing discussion in different
standardisation communities [ 33].
16.6.2 Liability of ADS
Liability is a crucial topic in the context of future automated vehicles because legal
authorities need an answer to the question, ‘who was responsible?’ in case of an
accident.
Different responsibilities can be found under the law [ 34], e.g.:
Liability of the vehicle keeper : Any operational risk in connection with an
automobile is born by the vehicle keeper—ADS will not change the liability for
the operation of automatic systems in motor vehicles.
Liability of the driver : In damage event a fault of the driver is legally assumed
(under civil law) until proof of the contrary is provided. In case of a fault of the
ADS, the driver still has the option to insist on proof of exoneration.
Motor vehicle liability insurance : If a harmed third party raises claims against
vehicle keepers or drivers, they will be covered by the insurance—ADS will not
cause any relevant change of the liability principles of the motor vehicle liability
insurance.
Product liability of the manufacturer : The OEM is liable if a defective product
was brought to the market being subject to product liability. The OEM must
provide evidence that the product was not defective and did not cause damage.
The drivers must be instructed carefully in order to reasonably inﬂuence their
expectations about the system’s capab ilities and to encourag e drivers to perform412 H. Martin et al.
any necessary overriding functions. The safety of the system design is closely
linked to the instructions given to the driver.
Liability of the infrastructure : Future highly and fully automated vehicle func-
tions will require precise data. These data will refer to local conditions too and
will require a time stamp. The vehicle infrastructure should be able to provide all
necessary information and is also liable for safe and secure functionality.
Ethical aspects will also play a role. In co mplex driving situations, events may
occur that are difﬁcult to handle by human drivers and that could lead to so-
called dilemma situations. Sometimes, it is not possible to manage critical situations
without harming any people. Thus, a decision has to be made to determine the
minimum of harm. A decision between ‘plague or cholera?’ is a difﬁcult one for
humans to make, but it is even more difﬁcult for machines. Future highly and fully
automated systems will need certain risk determination algorithms that can rise to
situations of this kind.
For this reason an ‘event data recorder’ in the vehicles will be a requirement for
recording relevant information about crashes or accidents . Information from these
devices is collected and analysed after a crash to help in determining exactly what
happened. This will be similar to the ‘black box’ found in airplanes, which records
all critical data in the course of a ﬂight. Fur ther research is needed for the assessment
and classiﬁcation according to the level o f abstraction and degree of automation for
a standardised deﬁnition and understanding.
16.6.3 Validation of ADS Functions
Systematic testing methods are very important for the validation of ADS functions
(e.g. concerning safety aspects) [ 37]. For such complex systems, test methods must
comprise a combination of simulation and real-world testing for different levels of
integration like xiL (x in the loop) and model/software/processor/hardware/vehicle
in the loop approaches. The most widely used approaches for the validation
of driving functions are based on the V-model, endurance testing, xiL testing,
open-loop ofﬂine perceptions tests, ‘Trojan horse’ tests, stepped implementation
tests, complex tests and so on. All these testing methods have different potentials
and disadvantages, for example, ‘Trojan horse’ tests are functional tests without
hazardous effects in serial cars [ 35].
A further issue of ADS functions is that a strategy for safety conﬁrmation cannot
be implemented because a malfunction mech anism cannot be caused by the function
but by decisions of the system. Although a test is able to characterise safety-relevant
system states, there could be system reactions during automated driving situation
where the decisions cannot be affected by the ego-vehicle alone. The actions and
reactions of other road users must be anticipated, but a 100 % expectation cannot
be ensured. Adequacy here cannot yet be reached on basis of road user reaction
models. The system reaction is going to be probabilistic and the decision on16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 413
accuracy will become time dependent and as certainable only in simple situations.
The ﬁrst development of automated function was concentrated on technology goals.But without appropriate validation steps fo r safety-critical automated functions, the
vehicles cannot hope to be established on the consumer market.
16.7 Conclusion
The ISO 26262 standard is intended to be an automotive functional safety standardfor handling hazards caused by malfuncti oning behaviour of E/ E safety-related
systems including interaction of these systems. It does not address the nominalperformance of E/E systems such as powertrain control or any kind of ADAS.For this reason the ISO standard is also applicable to any level of automateddriving. But the complexity of such systems is much higher than today’s engineersare used to deal with, because of the high degree of networking functionalitiesthat must be handled. Different kinds of challenges must be considered to realiseADS functions in an adequate manner. Following challenges were discussed in thischapter: Increasing complexity of highly interconnected functions and inﬂuenceof system attributes, such as availability, reliability, safety and security, must beharmonised.
The concept phase of ISO 26262 becomes more important for ADS functions,
because the development of ADS requires t he engineering approaches and tech-
nologies beyond state of the art.
In particular, inﬂuence of the driver in the HARA, deﬁnition of safety goals and
corresponding attributes for speciﬁc levels of ADS (e.g. safe state) as well as thechanges of the functional safety concept from fail-safe to fail-operational strategies.
Today, several methods are available to support complex systems but they must
be improved for the development of ADS. Possible technologies were discussedto handle the increasing complexity: model-based systems engineering, formalveriﬁcation by contract-based developmen t, as well as simulation and co-simulation.
Which of those methods are adequate and applicable to meet a speciﬁc safety-critical demand still has to be deﬁned and argued in the individual safety cases withrespect to the speciﬁc context.
An enhancement of ISO 26262 that provides guidance for handling such highly
complex systems would be useful. In the near future, that kind of application-speciﬁc guidance has to be discussed within the working group of ISO 26262 forthe upcoming enhancement of the standard. This enhancement should be includedin the upcoming revision of the standard which is scheduled to be released by thebeginning of 2018. In particul ar part 3 of the standard n eeds additional guidance
to classify hazardous events during the hazard analysis and risk assessment todetermine the ASIL and the system level activities to handle highly networkedsystems.414 H. Martin et al.
16.8 Acknowledgements
The research work has been funded by the European Commission within the EMC2
under the ARTEMIS JU. The authors acknowledge the ﬁnancial support of the
COMET K2—Competence Centres for Excellent Technologies Programme of the
Austrian Federal Ministry for Transport, Innovation and Technology (BMVIT),
the Austrian Federal Ministry of Science, Research and Economy (BMWFW), the
Austrian Research Promotion Agency (FFG), the Province of Styria and the Styrian
Business Promotion Agency (SFG).
References
1. K. Bengler et al., Three Decades of Driver Assistance Systems: Review and Future Perspec-
tives, in Intelligent Transportation Systems Magazine , IEEE 6.4, 2014, pp. 6–22
2. International Organization for Standardization, ISO 26262—Road Vehicles—Functional
Safety, Part 1–10. ISO/TC 22/SC 32—Electrical and Electronic Components and General
System Aspects, 15 Nov 2011
3. European Commission, CARE Project: Road Safety Evolution in the EU , Mar 2015, [On-line]
http://ec.europa.eu/transport/road_safety/pdf/observatory/historical_evol.pdf . Accessed 12 Oct
2015
4. O. Carstena et al., Vehicle-based studies of driving in the real world: the hard truth? Accid.
Anal. Prev. 58, 162–174 (2013)
5. SAE International, SAE J 3016—Taxonomy and Deﬁnitions for Terms Related to On-Road
Motor Vehicle Automated Driving Systems. J3016-201401, 1 Jan 2014
6. National Highway Trafﬁc Safety Administration (NHTSA), Preliminary Statement of Policy
Concerning Automated Vehicles, 30 May 2013, [On-line] http://www.nhtsa.gov/staticﬁles/
rulemaking/pdf/Automated_Vehicles_Policy.pdf . Accessed 12 Oct 2015
7. Austrian Federal Act, Govern ing the Liability for a Defective P roduct (Product L iability Act).
21 Jan 1988, [On-line] www.ris.bka.gv.at/Dokumente/BgblPdf/1988_99_0/1988_99_0.pdf .
Accessed 12 Oct 2015
8. International Electrotechnical Commission, IEC 61508—Functional Safety of Electrical/Elec-
tronic/Programmable Electronic Safety-Related Systems , 2nd edn. TC 65/SC 65A—System
aspects, 4 Apr 2010
9. R.W.A. Barnard, What is wrong with Reliability Engineering? INCOSE Int. Symp. 18, 357–
365 (2008). doi: 10.1002/j.2334-5837.2008.tb00811.x
10. N. Leveson, Engineering a Safer World: Systems Thinking Applied to Safety . MIT Press,
Jan 2012, [On-line] https://mitp ress.mit.edu/books/engin eering-safer-world . Accessed 12 Oct
2015
11. H. Butz, Safety and Fault Tolerance in a Complex Human Centred Automation Environment.
Innovation Forum Embedded Systems, Munich, 24 Apr 2009, [On-line] http://bicc-net.de/
events/innovation-forum-embedded-systems . Accessed 12 Oct 2015
12. H. Butz, Systemkomplexität methodisch erkennen und vermeiden, in Anforderungsmanage-
ment in der Produktentwicklung , R. Jochem, K. Landgraf (Hrsg) (Symposion Publishing
GmbH, Düsseldorf, 2011), pp. 183–217
13.Stanford Encyclopedia of Philosophy , Emergent Properties, 28 Feb 2012, [On-Line] http://
plato.stanford.edu/archives/spr2012/entries/properties-emergent . Accessed 12 Oct 2015
14. D. Campos et al., Egas–collaborative biomedical annotation as a service. Proc. Fourth
BioCreative Challenge Evaluation Workshop 1, 254–259 (2013)16 Functional Safety of Automated Driving Systems: Does ISO 26262 Meet ... 415
15. IA V GmbH—Ingenieurgesellschaft Auto und Verkehr, Standardized E-Gas Monitoring Con-
cept for Gasoline and Diesel Engine Control Units, Version 6, 22 Sept 2015, [On-Line] https://
www.iav.com/en/publications/technical-publications/etc-monitoring-concepts . Accessed 12
Oct 2015
16. International Electrotechnical Commission, IEC 60812—Analysis techniques for system
reliability—Procedure for failure mode and effects analysis (FMEA), TC 56—Dependability,
26 Jan 2006
17. International Electrotechnical Commission, IEC 61025—Fault tree analysis (FTA). TC 56—
Dependa bility, 1 3 Dec 2006
18. S. Friedenthal, A. Moore, S. Rick, A Practical Guide to SysML: The Systems Modeling
Language , 3rd edn. (Morgan Kaufmann, Amsterdam, 2014)
19. H. Martin et al., Model-based Engineering Workﬂow for Automotive Safety Concepts. No.
2015-01-0273, SAE Technical Paper, 2015
20. G. Biggs et al., A proﬁle for modelling safety information with design information in SysML.
Softw. Syst. Model 15(1), 147–178 (2014). Springer
21. B. Meyer, Applying ‘design by contract’. Comput. IEEE 25(10), 40–51 (1992). 2015
22. J.-P. Blanquart et al., Towards cross-domains model-based safety process, methods and tools
for critical embedded systems: The CESAR approach, in Computer Safety, Reliability, and
Security , ed. by F. Flammini, S. Bol ogna, V . Vitto rini. Lecture Notes in Computer Science,
vol. 6894 (Springer, Berlin, 2011), pp. 57–70
23. A. Baumgart et al., A model-based design methodology with contracts to enhance the
development process of safety-critical systems, in Software Technologies for Embedded and
Ubiquitous Systems , ed. by S.L. Min, R. Pettit, P. Puschner, T. Ungerer. Lecture Notes in
Computer Science, vol. 6399 (Springer, Berlin, 2011), pp. 59–70
24. J. Westman et al., Structuring safety requirements in ISO 26262 using contract theory,
inComputer Safety, Reliability, and Security , ed. by F. Bitsch, J. Guiochet, M. Kaâniche
(Springer, Berlin, 2013), pp. 166–177
25. A. Benveniste et al., Contracts for System Design. INRIA, Rapport de recherche RR-8147,
Nov 2012, [Online] http://hal.inr ia.fr/ hal-00757488 . Accessed 12 Oct 2015
26. M. Fischer et al., Modular and scalable driving simulator hardware and software for the
development of future driver assistance and automation systems, in New Developments in
Driving Simulation Design and Experiments , 2014, pp. 223–229
27. M. Karner, et al., System Level Modeling, Simulation and Veriﬁcation Workﬂow for Safety-
Critical Automotive Embedded Systems. No. 2014-01-0210, SAE Technical Paper, 2014
28. M. Krammer, H. Martin et al., System Modeling for Integration and Test of Safety-Critical
Automotive Embedded Systems .No. 2013-01-0189, SAE Technical Paper, 2013
29. P. Graignic et al., Complex system simula tion: Propos ition of a MBSE frame work for design-
analysis integration. Proc. Comput. Sci. 16, 59–68 (2013)
30. D. Krajzewicz, Trafﬁc simulation with SUMO—Simulation of urban mobility, in Fundamen-
tals of Trafﬁc Simulation, Series: International Series in Operations Research and Management
Science , ed. by J. Barceló, vol. 145 (Springer, Berlin, 2010)
31. J. Erdmann, Lane-Changing Model in SUMO. German Aerospace Center (2014), [On-Line]
http://elib.d lr.de/89233/1/SUMO_Lane_change _model_Template_SUMO2014.pdf . Accessed
12 Oct 2015
32. A. Rousseau et al., Electric Drive Vehicle Development and Evaluation Using System
Simulation, in Proceedings of the 19th IFAC World Congress , 2014, pp. 7886–7891
33. M. Klauda et al., Automotive Safety und Security aus Sicht eines Zulieferers, 4 Oct 2013, [On-
line] http://subs.emis.de/LNI/ Proceedings/Proceedings210/13.pdf. Accessed 12 Oct 2015
34. T. M. Gasser, Legal consequences of an increase in vehicle automation. Bundesanstalt
für Straßenwesen, 2013, [On-Line] http://bast.opus .hbznrw.de/v olltexte/ 2013/723/pdf/Legal_
consequences_of_an_increase_in_vehicle_automation.pdf . Accessed 12 Oct 2015
35. H. Winner, W. Wachenfeld, Absicherung automatischen Fahrens, in 6.FAS-Tagung München ,
29 Nov 2013, [On-Line] http://tubiblio .ulb.tu-darm stadt.de/63810/ . Accessed 12 Oct 2015416 H. Martin et al.
36. B. Walker Smith, SAE Levels of Driving Automation . The Center for Internet and Society at
Stanford Law School, 18 Dec 2013, [On-line] http://cyberlaw.stanford.edu/loda . Accessed 12
Oct 2015
37. H. Winner et al., Handbuch Fahrerassistenzsysteme, 3. Auﬂage. ATZ/MTZ-Fachbuch,
(Springer Fachmedien, Berlin, 2015)Part VI
Validation and Testing of Automated
Driving FunctionsChapter 17
The New Role of Road Testing for the Safety
Validation of Automated Vehicles
Walther Wachenfeld and Hermann Winner
17.1 Introduction
There is a difference between developing a vehicle that is driving itself as safely as
today’s cars are driven and assessing this vehicle in terms of safety. But, in order
to introduce highly automated vehicles to public trafﬁc, both must be done and
remaining open questions for both must be answered. When trying to introduce
these vehicles not just for a few users with limited use cases but rather as a mass
product for a whole society, the safety has to be shown for many kilometers over
many years resulting in a vast number and combination of different situations.
For the introduction of highly automated vehicles that cover the SAE levels 4
and 5 (“High Automation” and “Full Automation”) [ 1] like an “Interstate Pilot
Using Driver for Extended Availability,” a “Full Automation Using Driver for
Extended Availability,” or a far advanced mobility concept like the “Vehicle on
Demand” [ 2], special challenges arise for assessing the vehicle in terms of safety
as the controller, being the human driver, isn’t available anymore to correct the
automation’s behavior [ 3]. In each and every situation, the automation needs to
choose an adequate behavior out of manifold possibilities.
In order to discuss the question: “How can road testing contribute to the safety
assessment of highly automat ed vehicles?” in the ﬁrst part of this chapter, we will
specify the goals for assessment before explaining the challenges for road testing.
Other test tools besides road testing are br ieﬂy introduced, and th eir demand for road
tests is derived. The second part of this chapter will lay down a new train of thought
on how to proceed with the “approval-tra p” for highly autom ated vehicles. The
W. Wachenfeld ( /envelopeback)  H. Winner
Institute of Automotive Engineering at TU Darmstadt, Otto-Berndt-Straße 2,
64287 Darmstadt, Germany
e-mail: wachenfeld@fzd.tu-darmstadt.de ;winner@fzd.tu-darmstadt.de
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_17419420 W. Wachenfeld and H. Winner
statistical approach will be developed further to get a ﬁrst idea how an introduction
strategy for a highway pilot could look like.
17.2 The Goal of the Validation in Terms of Safety
Wachenfeld and Winner [ 3] describe the necessary relation Vaccbetween additional
riskRaddand avoided risk Ravoto human beings that emerges from the introduction
of automated vehicles.
Vacc;pDRadd
Ravo(17.1)
The goal of the validation is to prove this relation. The exact level of this relation
that needs to be met is unclear and depe nds on the beneﬁt that comes with the
introduction. As long as the validation can prove that the advantages offset the
disadvantages for every stakeholder p, the vehicle can be released for production
and can be introduced into trafﬁc. The be neﬁts caused by automated vehicles
separate the people into two groups of stakeholders. On the one hand, the users
or passengers directly beneﬁt from the technology and can choose whether they
want to use the technology or not. On the other hand, there are those affected by
the technology outside the vehicle without being able to choose being affected or
not. When assuming that the ones affected are exposed uniformly to the technology,
we deﬁne these as the society. As both groups beneﬁt and are affected in different
ways, the validation has to take this into account. Dividing up the goal on users and
society considers the freedom of individuals to also take a higher risk for themselves
with the restriction not to endanger other s above the currently accepted threshold.
Examples are the usage of motorcycles and cars compared to trains for this freedom
of choice.
At this point, we propose two different goals for the validation of automated
vehicles in terms of safety:
1. A user or passenger who beneﬁts from the use of the automated vehicle can be
exposed to a higher risk than the one taken when driving by himself (reference
risk) as long as he is informed about this additional risk. The user should get the
option to weigh conservatively deﬁn ed advantages and disadvantages.
2. As long as no major additional beneﬁt for society is agreed on, we demand that
the society is not exposed to a higher risk than to being part of today’s trafﬁc.17 The New Role of Road Testing for the Safety Validation of Automated Vehicles 421
17.3 Challenges for Safety Validation of Automated Vehicles
Based on Road Testing
Road testing for safety validation of highly automated vehicles means bringing a
nearly ﬁnal version of the object under test (OUT) into real trafﬁc. In focus are
systems that could endanger humans if not functioning properly. It is a safety critical
unsupervised/non-correctable system [ 4] that will be released after the validation
step. As it is unknown if the required safety is reached, a trained test driver
is necessary to supervise the OUT although it is not originally made for being
supervised (like all demonstrators of self-driving vehicles presented up to now).
The idea of road testing is that the OUT is confronted with enough relevant
situations in real trafﬁc. If the OUT passes these situations without the intervention
of test drivers, the assumption is made that it will be able to do this in everyday use as
well. The question is: How many situations in real trafﬁc are enough? To answer this
question, the properties of road testing, meaning the way situations are formed in
public trafﬁc, need to be studied. The most important property of road testing is that
the reality is not manipulated, as the validity of the test would suffer. For example,
there should not be some kind of actor (trafﬁc participant) that imitates behavior
to test the OUT. As he or she is conscious about what happens, by deﬁnition the
behavior and especially his or her reactions will be artiﬁcial. If no manipulation on
real trafﬁc occurs, parameters of differe nt kind form situations. For example, the
authors in [ 5] distinguish dynamic objects, scenery, and actions that are described
by parameters like position in time, width of a lane, or a deceleration value.
These parameters can be classiﬁed by the possibility to consciously select or
cover situations that are formed by these parameters:
 By choosing the route (spatial), static objects and correlated effects can be
gathered consciously. For example, if a certain form of tunnel is relevant for
testing, planning a route along this tunnel easily leads to the OUT confrontation
with this situation.
 By choosing a certain time (temporal), the parameters like lighting, weather
conditions, season of nature, etc. can be selected consciously.
To a certain extent, both categories are predictable and as a result easy to aim for.
On the other hand, constellations and situations that can be inﬂuenced by a living
being, such as the two that follow, are more difﬁcult to aim for:
 The exposure to high trafﬁc density can, for example, be increased by choosing
the route and time in combination. This is possible as the large number of living
beings evens out different behavior. Some of many human beings, e.g., need to
commute back home at a certain time, thus making it predictable.
 What is difﬁcult to experience is behavior that is not correlated to time and
space, such as a human overlooking an obst acle or being distracted from another
passenger or his mobile phone.422 W. Wachenfeld and H. Winner
Different driving behavior and thus different trajectories are caused by different
combinations of these parameters. As not all parameters can be chosen actively
without manipulating the road test, trying to cover dangerous situations with
low exposure is challenging. It is more like a random selection that a certain
combination of parameters i s experienced during a test drive. The higher the number
of kilometers or time driven, the more probable it gets to come upon a certain
combination of parameters. The question of how many kilometers need to be driven
on the road to assure sufﬁcient coverage of combinations now arises.
It is relevant to highlight that the number of parameter combinations between the
different levels of automation (SAE 0–2 vs. SAE 3–5) differs signiﬁcantly. Today’s
vehicles (SAE 0–2) need to be assessed [ 3] for being a controllable tool supervised
by a driving human. The possi bility for the driver to brake, steer, and accelerate don’t
depend on the surrounding vehicles, whereas for more highly automated vehicles
(SAE 3–5), the whole vehicle behavior also depends on the other vehicles’ behavior
as well as the environmental conditions. Accordingly, the challenge explained in the
following is also valid for today’s vehicles but the human capabilities to perceive
and interpret the surrounding vehicles simplify the assessment and reduce the
relevant parameter combinations strongly. This human driver is removed for highly
automated vehicles, and therefore this simpliﬁcation is missing.
The challenge for assessment consequently follows from the high level of safety
that is deﬁned by the benchmark and by the random occurrence of situations for road
testing. Transferring the high level of safety into the theory of parameters forming
situations in real trafﬁc means that param eter combinations that end in challenging
situations for the OUT appear rarely.
One benchmark is accident statistics that provide numbers (see Table 17.1)o n
average distances between two accidents of different severity levels [ 7].
Accidents can consequently be seen as parameter combinations that are relevant
for safety assessment. To answer the question of how many kilometers need to
be driven, the probability distributio n function of a random number is necessary
in addition to the average distance between two events. When the number of
road accidents for a given amount of kilometers driven can be seen as a Poisson
distributed number [ 8,9], a statistical argumentation can be laid out how many
kilometers are necessary to scientiﬁcally prove safety. This leads to the so-called
“approval-trap” [ 3]. The approval-trap explains that although a safe vehicle is
developed, there is no economical way to prove its safety. For the example of the
Table 17.1 Average distance between two accidents for different sever ities on German highways
([6] according to [ 7])
Severity level
 Average distance between two accidents of this level (km)
S3
 660.0 /SOH106
S2
 53.2/SOH106
S1
 12.5/SOH106
S0
 7.5/SOH106
17 The New Role of Road Testing for the Safety Validation of Automated Vehicles 423
Highway-Pilot, this means that although a vehicle is developed that is twice as
good as today’s trafﬁc, approximately 10 times the distance between two events
is necessary to have a chance of 50 % to prove (level of signiﬁcance 5 %) that the
developed vehicle is safer than the compar ison group. For severity S3 (fatality), this
leads to 10 times 660 /SOH106kmD6.6/SOH109km, which is economically not feasible.
The safety can’t be shown by just driving on German highways, and thus the lack of
feasible safety assessment hinders the vehicle release. Up to this point, we haven’t
even discussed changes that would require retesting affected kilometers of the road
test.
A ﬁrst conclusion can be drawn: Road testing before start of production (SOP)
will not be suitable to statistically prove the same safety level of higher automated
vehicles compared to today’s trafﬁc. Thus, other ways out of the approval-trap need
to be found. The next two sections will focus on alternative ways. Firstly, alternative
approaches replacing the road test will be discussed before a new interpretation of
the statistical approach is motivated.
17.4 Challenges for New Approac hes on Safety Validation
Due to rising costs that are a consequence of increasing complexity of additional
functionality that is implemented in new ve hicles, the automotive industry is looking
for a way to optimize veriﬁcation and validation (V&V) processes. The question is
whether these approaches can solve the approval-trap for highly automated vehicles,
explained above.
17.4.1 New Approaches on Safety Validation
From the road test perspective, three a pproaches to optimize V&V processes are
described in literature:
First of all, one could improve road testing itself. Above, different parameters
of road testing were explained. Some of these can be actively aimed for. The
goal of this approach is to reduce irrelevant kilometers and to aim for potentially
relevant kilometers/events in real trafﬁc. In [ 10], this idea is laid out in more detail
for advanced driver assistant systems (ADAS). Based on a road test, events are
monitored and interpreted as relevant or irrelevant, and future test routes are planned
based on this monitoring.
Besides improving road testing, approaches are described to substitute road
testing by artiﬁcial or virtual tests [ 11]. For higher automated driving, Fig. 17.1
structures on a generic level the differen t tools used. A more detailed classiﬁcation
can be found in [ 12]. The distinction between real, artiﬁcial, and virtual is illustrated
by the example of a human as part of the environment: The human can either behave424 W. Wachenfeld and H. Winner
Environment
virtual artificial realVehiclevirtualSiL -
artificial
real -Real
drivingvalid
economical
Fig. 17.1 Classiﬁcation of tools for testing higher automated driving [ 3]
like he would in reality, or he could show artiﬁcial behavior like a person being
aware that he is monitored. In both cases the human is a living being. On the other
hand, the human can also be replaced by a tec hnical system like an artiﬁcial dummy.
The third approach would be a virtual representation of the human in software. In
this case, the behavior of the human is modeled by software in a virtual world.
The different tools like test tracks, Vehicle-in-the-Loop, Hardware-in-the-Loop,
and Software-in-the-Loop (SiL) replace some of the environmental or vehicle
parts with artiﬁcial or virtual parts. Virtu al and artiﬁcial part s can be manipulated
and observed more easily with the motivation to set up relevant test cases and
neglect irrelevant ones. Additionally, these tools try to reduce additional risk
that is introduced when testing technical systems. A special motivation for SiL
is the independence of time and hardware . Simulations can be parallelized and
accelerated, limited only by computational power.
The third approach tries to combine road testing with other tools like SiL. The
approach “Virtual Assessment of Aut omation in Field Operation” (V AAFO [ 13])
as well as other methods described in literature [ 14–16] follow a similar method:
Human- or ADAS-controlled vehicles are equipped with hardware to perceive and
interpret the situation as the OUT would. The virtual behavior of the OUT is
assessed in all situations covered by the real human driver. As the OUT cannot act
on the actuators, this method can be execu ted without introducing additional risks to
public trafﬁc. Not only test drivers, but in principle every driver with a driver license
can execute this combined road and SiL testing.
All three approaches are based on si mpliﬁcations and assumptions to either
replace real parts of a test with artiﬁcial/virtual ones or neglect irrelevant situations/
parameter combinations. These simpliﬁcations and assumptions can be invalid when
applied on OUT assessment.
17.4.2 Validation of Alternative Approaches by Road Testing
To avoid using simpliﬁcations and assumptions that are not proper for OUT
assessment, real driving such as road testing is necessary. This time road driving17 The New Role of Road Testing for the Safety Validation of Automated Vehicles 425
is used for safety validation of test tools a nd for safety validation of assumptions.
The validation of tools for a deﬁned number of test cases seems possible. But again,
who can tell whether the selection met the necessary situations? Therefore, we come
back to the challenge raised by the statistical train of thoughts. How can we show
that the tools and assumptions are valid for OUT safety assessment?
An advantage for tool and assumption validation is that the number of kilometers
doesn’t need to be driven with the OUT. This simpliﬁes the collection of kilometers.
Another factor that would reduce the huge amount of possible situations that need to
be covered for tool or assumption valida tion could be the independence of different
parameters of a situation. For example, p roperties of trafﬁc models are independent
of properties of radar sensor models and therefore don’t need to be modeled and
validated in combination. This independence doesn’t exist for the validation of
the OUT as errors in real sensors lead to different behavior depending on the
surrounding trafﬁc. A disadvantage is that even more things need to be validated.
For example, the behavior of other road participants needs to be reﬂected by the
tool, at least to a certain extent.
Until now we have not seen any proof that the advantages outweigh the
disadvantages resulting in less kilometers necessary to be driven (no matter who
collects the stated amount). On the one ha nd, the more components are replaced and
the more cases are neglected, the more validation effort for tools and assumptions
has to be made. On the other hand, the more cases are left for road testing, the more
validation of the OUT has to be done on the road. This seems to be a trade-off
between OUT validation on the one hand and tool validation for OUT validation
on the other hand. Additionally, the long-term perspective has to be considered as
well. It can be that the ﬁrst validation of tools needs a higher effort as the road
testing itself, but when validating another version, vehicle type, or new generation,
the overall effort could be reduced by or ders of magnitude. An example for that
effort reduction is described in [ 11] for ESC testing.
At this point, a second conclusion can be drawn: When pursuing approaches to
replace or reduce road testing, road tests will still be of interest as these approaches
need to be validated. At least until now, it’s unclear whether or not other approaches
reduce the validation effort for the ﬁrst vehicle.
Of course, if a tool or an assumption is va lidated, its advantag es and potential to
increase efﬁciency can be utilized. But up to that point, validation activities based
on real driving are and will be necessary.
17.5 A Confession About the First Introduction
of Automated Vehicles
The proof of safety of the OUT by simply road testing before SOP is economically
infeasible with statistical signiﬁcance. For alternative approaches, it is at least
uncertain if the required validation effort is reduced. Tool and assumption validation
could equal out the reduction of OUT validation.426 W. Wachenfeld and H. Winner
This leads to the conclusion that, from a statistical perspective, the ﬁrst vehicles
that will be introduced will not satisfy a scientiﬁc proof of comparable safety.
This seems to be an obstacle on the way to everyday automated driving. But,
if safety cannot be proved, the scientiﬁc question to ask is if the hypothesis “the
automated vehicle achieves the requirements in terms of safety” can be falsiﬁed. If
using a conservative approach to test for being worse without a result, one could
take the chance and the risk to introduce the vehicle.
For this introduction, the goals deﬁned in the beginning of this chapter must still
be achieved.
 The risk for society shall not be increased.
 The individual as the passenger should be able to weigh imminent risks and,
depending on that weighting, be able to choose whether or not to use the vehicle.
In the following, we will explain an argumentation that has the potential to enable
introducing automated vehicles based on the same statistics that before have led to
the approval-trap.
17.6 Argumentation for Introduction of Automated Systems
Motivated by Statistics
The following argumentation is based on th e assumption that accidents are Poisson
distributed. This Poisson distribution is explained before the generic theory is laid
out and, based on that, the introduction of automated driving on German autobahn
is illustrated with examples.
To represent the distribution of accident events, we use the Poi sson distribution
[8,9]:
P/NAK.k/D/NAKk
kŠe/NUL/NAK(17.2)
This distribution assumes that the occurre nce of an accident is an independent and
non-exhaustive random process P/NAK(k). In the equation, kcorresponds to the number
of accident events and /NAKto the expected value with which this event occurs. The
expected value /NAKis deﬁned by the quotient
/NAKDdtest
SP; (17.3)
Whereby dteststands for the observed test kilometers and SPfor the performance of
the system. The performance represents the expected number of kilometers between
the accidents. Two distributions of a probability distribution function with different
expected values are depicted in Fig. 17.2. For this example, it is assumed that a
certain number of kilometers dtestwere driven and one event occurred. Can we now17 The New Role of Road Testing for the Safety Validation of Automated Vehicles 427
0 2 4 6 8 1000.20.40.60.81
Number of events kProbability  PDF
1 event0 2 4 6 8 1000.20.40.60.81
Number of events kCumulated probability  CDF
1 eventProven worse then - = 0.01
Proven better then + = 6.64l
l
Fig. 17.2 Poisson probability distribution function ( left) and cumulative distribution function
(right ) for two different expected values: one for the proof of being worse and one for the proof of
being better when one event occurred
deﬁne a worse and a better performance level SPfrom this test? Equation ( 17.3)
connects this with the search of an expected value /NAK. Based on a probability of
error value1eD1%, these questions can be mathematically formulated with two
equations:
P/NAK/NUL.k>0/ /DC41% (17.4)
For which expected number /NAK/NULis the probability to have at least2one accident less
than or equal to 1 %? A numerical search provides the value /NAK/NULD0:01. This tells
us that when one accident occurs after dtestkilometers, we statistically prove with
eD1% error probability that the vehicle is worse in terms of safety compared to
a performance level of SPDdtest
/NAK/NULDdtest
0:01.I no t h e rw o r d s ,E q .( 17.4) tells that with a
probability of 99 %, no event occurs assuming /NAK/NULD0:01.
P/NAKC.k/DC41//DC41% (17.5)
The second equation ( 17.5)a s k sf o rw h i c h /NAKCthe probability that one or no
accidents happened is at most 1 %. In this cas e, the numerical search provides the
1The value (5 %, 1 %, 0.1 % etc.) that is taken needs further considerations but is just one variable
in that theory. For this chapter, we intentionally use 1 % and thus a different value as used in [ 3].
We don’t want to be misunderstood that one or the other is the “right” value for that.
2Please be aware that P.k>a/D1X
aC1/NAKk
kŠe/NUL/NAKis the cumulative distribution function. The same
counts for P.k<a/Da/NUL1X
0/NAKk
kŠe/NUL/NAK.428 W. Wachenfeld and H. Winner
value/NAKCD6:64. This tells us that when one accident occurs after dtestkilometers,
we statistically prove with eD1% that the vehicle is better in terms of safety
compared to a performance level of SPDdtest
/NAKCDdtest
6:64. Both probability functions
(PDF and CDF) are plotted in Fig. 17.2. With a chance of 99 %, the expected value
of the OUT is
/NAK/NUL/DC4/NAKOUT/DC4/NAKC: (17.6)
As the smaller the expected value, the better the OUT, the value for /NAK/NULdeﬁnes a
kind of best case and the value for /NAKCdeﬁnes similar a worst case in that sense.
Based on that theory of accidents being Poisson distributed, we explain in [ 3]
why using road tests for the proof being better than today’s human drivers are
economically not feasible.
In the following, we will use the test to the “other hand,” meaning how and when
one can be sure and state that the vehicle that is introduced into trafﬁc contravenes
the goals stated above.
17.6.1 Universal Theory on a “Brave Introduction”
of Automated Systems
Based on the explanation of the Poisson d istribution of accidents, we will now lay
out a universal theory on the introduction of automated systems where certain events
(accidents) exist which have to be considered that happen after a certain time or
distance of travel. Additionally, it is assumed that a comparison level (benchmark)
is known.
Let’s assume that the performance level for the benchmark is SPDSPbench.
So, in statistical average, after SPbench kilometers, one of the relevant events should
happen. Now we want to introduce the OUT after it was tested for
dtestDSPbench
/FS(17.7)
kilometers and one event occurred. /FSdescribes the ratio between the benchmark and
the test kilometers. We know from Eq. ( 17.4) that the performance level of the OUT
is equal or worse:
SPOUT/DC4dtest
/NAK/NUL: (17.8)
Combining both Eqs. ( 17.7)a n d( 17.8), the performance level of the OUT is
SPOUT/DC4SPbench
/FS/SOH/NAK/NUL: (17.9)17 The New Role of Road Testing for the Safety Validation of Automated Vehicles 429
Equation ( 17.9) tells us that the OUT is worse than1
/FS/SOH/NAK/NULtimes the benchmark. On
the other hand, we can only tell that the vehicle is better than
SPOUT/NAKSPbench
/FS/SOH/NAKC: (17.10)
With this test, we can’t prove that we are less safe than1
/FS/SOH/NAK/NULtimes the benchmark,
and on the other hand we only prove that we are safer than a /FS/SOH/NAKCtimes worse
system.
Why should this system not be introduced into trafﬁc when we can’t prove it is
less safe than1
/FS/SOH/NAK/NULthe benchmark? Why should we take the risk to introduce the
system when we just know that it is safer than a /FS/SOH/NAKCtimes worse system? Let’s
compare the result of the test with the goals stated above separately for the user and
the society.
17.6.1.1 User’s Perspective
From the user’s perspective, the system has a certain beneﬁt. This beneﬁt comes not
from safety but from mobility, freedom, money, etc. The user knows that he or she
probably needs to take a higher risk to access the beneﬁts, but as long as the counted
events don’t lead to a /NAK/NULbelow the line of Fig. 17.3, less safety can’t be proven.
This actually leads to an introduction that matches the goal for the user.
For the operating company of the system, there should be an option to stop
and block the automated mode when from a monitoring of relevant events a non-
acceptable safety can be proven. This limit is not necessary the whole area below
the line as the users’ acceptance deﬁnes this limit. How this monitoring should look
and how the option to stop should be implemented is intentionally left open.
Fig. 17.3 Area of proven
less safety than benchmark
system for eD1%
Number of counted events k-
0.010.150.440.821.281.792.332.913.514.13
0 2 4 6 8 100123456
Below the line less safety
is statistically provenl430 W. Wachenfeld and H. Winner
Fig. 17.4 Number of events
recorded each 23 years. These
numbers were ﬁtted by a
quadratic equation
0 5 10 15 20 25200400600800100012001400
YearstnevedetnuocforebmuN kfitted curve
recorded events
17.6.1.2 Society’s Perspective
On the other hand, for the society that in the ﬁrst place has no direct beneﬁt from
the individual using the automated system, it is justiﬁed to ask if the society is
exposed to a higher risk. The question is how to prove that society is exposed to that
higher risk. One way to study the risk this society faces when using this technology
would be to study the number of events t hat happened before the technology was
introduced. This number of events, reco rded, for example, each year, should not
be affected negatively by this introduction. Figure 17.4 displays such an example.
Each year, a discrete number of events were recorded. Over the year, the number
decreased following a certain monotonic trend. This trend is not given but can
be ﬁtted by, for example, a least square approximation of a suitable mathematical
function like a quadratic function3fﬁt. This is done for the example by the (red/solid)
line (see Fig. 17.4). All points differ from the trend line. These deviations are
still independent from the technology we wa nt to introduce. This fact leads to the
question: How does the next number of recorded events have to differ from the
values in the past, ﬁtted by the trend line, to be sure that it was affected negatively?
3kD0:18/SOHi2/NUL41:16 /SOHiC1202:17 The New Role of Road Testing for the Safety Validation of Automated Vehicles 431
To answer this, we derive the standard de viation of these events compared to the
trend line.
/ESCDvuut
1
NNX
iD1.ki/NULfﬁt.i//2(17.11)
In this equation, Nis the number of years and kiis the number of events recorded
in year i. We now deﬁne that
kNC1/DC4fﬁt.NC1/C/ESC
ˇ(17.12)
is indistinguishable for society, where/ESC
ˇexpresses the number of events caused by
the introduction of the new technology. We assume this being indistinguishable for
society as it is ˇtimes smaller than the standard deviation and therefore disappears
in the noise of numbers each year. There is actually no way to prove or detect that
the trend is affected negatively, as the number is too small and lies below the limit
of detection.4
To match the goal for society, we now want to prove that the risk will not increase
above the stated limit of/ESC
ˇ. This can be done by limiting the numbers of kilometers
driven on public roads. The slower the technology is introduced, the fewer events
will happen in a single year. The number of systems or correspondingly the time
of usage or number of kilometers will be limited by this approach. But how many
systems IOUTcan be introduced?
If we assume that one system covers an average of Ndeach year by introducing
IOUTsystems, we get d†DIOUT/SOHNddriven during 1 year. With the requirement
P/NAK†/DC2
k/DC4/ESC
ˇ/DC3
/NAK99%D1/NULe (17.13)
where/NAK†Dd†
SP_OUT. Equation ( 17.13 ) requires that the number of events caused
by the OUT should be smaller than1
ˇof the standard deviation with a probability of
error of 1 %. The value for /NAK˙can again be derived numerically. The performance
level of the OUT can be estimated from the test drive with Eq. ( 17.10 )w h i c h ,
together with the result from Eq. ( 17.13 ), results in
d†/DC4/NAK†/SOHSPOUTD/NAK†/SOHSPbench
/FS/SOH/NAKC: (17.14)
Equation ( 17.14 ) shows that if less than d˙kilometers with the new technology
are driven during 1 year, the danger to contravene the requirements from society is
smaller than 1 %.
4There exists more theory to deﬁne this limit but at this point we use a variable to keep it simple.432 W. Wachenfeld and H. Winner
17.6.2 EXAMPLE: Introducing Highly Automated Driving
on German Autobahn
Let’s try to apply this introduction approach on automated driving. Events in this
case can be accidents with different levels of severity. The most challenging and
best recorded number of accidents are the ones that involve fatalities. Focusing on
Germany, we can discuss this example for the highway pilot, as numbers are given
for this use case (see Table 17.1).
SPbenchD660/SOH106km (17.15)
Equation ( 17.15 ) expresses that on average on German autobahn, a fatality occurred
every 660 million km. This deﬁnes the b enchmark for the introduction. When
assuming that the OUT is tested for /FStimes less kilometers and maximum one
accident with fatality was generated, the test delivers two results. First, the vehicle in
best case has a certain maximum level of performance in terms of safety [conclusion
drawn from Eq. ( 17.9)]. Second, Eq. ( 17.10 ) shows the performance level is reliably
higher than
SPOUT/NAKSPbench
/FS/SOH/NAKCD660/SOH106km
/FS/SOH/NAKC: (17.16)
At this point, a conservative approach is chosen as the worst case estimation is
selected. Now we know the users’ perspective for the introduction of the highway
pilot.
For the society’s perspective, we refer to [ 17] where the accident statistic
(Destatis) for the years 1992–2014 is reported. These numbers and the ﬁtted curve
are depicted in Fig. 17.4.F r o mE q .( 17.11 )
/ESC/EM48 (17.17)
can be calculated. Combining the performance level from Eq. ( 17.16 ) with the
standard deviation from Eq. ( 17.17 ) and deﬁning a value for ˇ, the numerical search
delivers a certain /NAK˙(see Table 17.2). Together with Eq. ( 17.14 ), one gets
d†/DC4/NAK†/SOHSPbench
/FS/SOH/NAKC: (17.18)
All vehicles together shouldn’t activate the highway pilot for more than this amount
of kilometers d˙. Based on the numbers of 2013 wh ere 52.4 million vehicles were
registered and 224.2 billion k m where driven on autobahn
NdD224:2 /SOH109km
52:4/SOH106km/EM4278 km: (17.19)17 The New Role of Road Testing for the Safety Validation of Automated Vehicles 433
Table 17.2 Four chases for the introduction of automated driving on German autobahn. Assump-
tions are used to calculate examples
Parameter
 Case 1
 Case 2
 Case 3
 Case 4
ˇ
 1
 1
 10
 1
/FS
 100
 100
 100
 1000
e!/NAKC
1%!6:64
5%!4:75
1%!6:64
1%!6:64
e!/NAK†
1%!34:2
5%!38:08
1%!1:79
1%!34:2
Results
d˙
 34/SOH106km
52/SOH106km
1:7/SOH106km
3:4/SOH106
IOUT
 7947
 12384
 414
 794
This number can be converted into a number of vehicles:
IOUTDd†
Nd(17.20)
assuming the usage doesn’t change.
With these numbers for the German autobahn, we get different cases for
introduction depending on the variables we have deﬁned in the theoretical part (see
Table 17.2).
17.7 Conclusion
Besides the efforts spend on test tracks, today, road testing is the most important tool
to validate the safety deﬁned for a new vehicle. A huge effort is made to manage new
functionalities resulting in higher complexity of new vehicles. Since the statistical
proof of safety for highly automated systems (SAE-level 4 and 5) by classical road
testing is economically infeasible, other approaches are requested. Three ways can
be distinguished: improving road test efﬁciency; applying simpliﬁcations as well as
virtualizations to reduce the effort with tools like test tracks, test benches, or XiL;
and combining both with tools like the V AAFO concept. Unfortunately, up to now
the evidence that these approaches can reduce the effort for the validation of highly
automated systems is missing due to the reason that the approaches also need to be
validated. Today, this seems to be a trap for the approval of the vehicles.
But, when looking back to the safety requirements, these can be separated for
a user that beneﬁts and a society that is id eally not burdened with additional risks.
With these two goals, the statistical approach can be used for another second way
of argumentation: (1) Whether we only introduce a new technology when we have
unambiguously proven that the new technol ogy does not introduce additional risks
independently of every additional advan tages or (2) we focus on the additional
advantages and introduce the technology at a conservative estimate to proﬁt from
the advantages until one can reliable prove we are really introducing inappropriate434 W. Wachenfeld and H. Winner
risks. Both ways of argumentation are valid interpretations from today’s perspective,
but their consequences differ signiﬁcantly. Argumentation two could pave the way
for highly automated vehicles should it withstand the open debate of relevant
stakeholders.5
We have seen that road testing was and will be relevant for the introduction of
new vehicles. However, road testing will be used in a different way. One way will
be the validation of alternative approaches, their tools, and simpliﬁcations. This will
also lead to a big effort before one can proﬁt the new approach. A second way will
be the described partial validation for a cautious introduction strategy. Whether or
not these kilometers need to be run on a real road or with other tools remains open.
Acknowledgement The research work has been funded by the Daimler and Benz Foundation.
References
1. SAE International Standard J3016: Taxonomy and Deﬁnitions for Terms related to On-Road
Motor Vehicle Automated Driving Systems, SAE International (2014)
2. W. Wachenfeld et al., Use Cases for Autonomous Driving, in Autonomous Driving: Technical,
Legal and Social Aspects , ed. by M. Maurer, J.C. Gerdes, B. Lenz, H. Winner (Springer, Berlin,
2016)
3. W. Wachenfeld, H. Winner, The Release of Autonomous Vehicles, in Autonomous Driving:
Technical, Legal and Social Aspects , ed. by M. Maurer, J.C. Gerdes, B. Lenz, H. Winner
(Springer, Berlin, 2016), pp. 425–449
4. W. Wachenfeld, H. Winner, Do Autonomous Vehicles Learn? in Autonomous Driving:
Technical, Legal and Social Aspects , ed. by M. Maurer, J.C. Gerdes, B. Lenz, H. Winner
(Springer, Berlin, 2016), pp. 451–471
5. S. Geyer, M. Baltzer, B. Franz, S. Hakuli, M. Kauer, M. Kienle, S. Meier, T. Weißgerber,
K. Bengler, R. Bruder, Concept and development of a uniﬁed ontology for generating test and
use-case catalogues for assisted and automated vehicle guidance. IET Intell. Transp. Syst. 8(3),
183–189 (2013)
6. German Federal Statistics Agency (DESTATIS): Verkehrsunfälle 2013
7. H.-P. Schöner, Challenges and Approaches for Testing of Highly Automated Vehicles, in CESA
3.0—Congress on Automotive Electronic Systems , Paris, 4 Dec 2014
8. A. Nicholson, Y.-D. Wong, Are accidents poisson distributed? A statistical test. Accid. Anal.
Prev. 25(1), 91–97 (1993)
9. M. Gründl, Fehler und Fehlverhalten als Ursache von Verkehrsunfällen und Konsequenzen für
das Unfallvermeidungspotenzial und die Gestaltung von Fahrerassistenzsystemen (2005)
10. P. Glauner, A. Blumenstock, M. Haueis, Efﬁziente Felderprobung von Fahrerassistenzsyste-
men, in 8. Workshop Fahrerassistenzsysteme , ed. by UNI DAS e.V ., pp. 5–14, Wa lting ( 2012)
11. U. Baake, K. Wüst, M. Maurer, A. Lutz, Testing and simulation-based validation of ESP
systems for vans. ATZ Worldw. 116(2), 30–35 (2014). doi: 10.1007/s38311-014-0021-6
5This is what we would like to encourage at that point. Please give positive and negative feedback
on this introduction strategy to overcome the hindrances for introduction of higher automated
systems.17 The New Role of Road Testing for the Safety Validation of Automated Vehicles 435
12. F. Schuldt, T. Menzel, M. Maurer, Eine Methode für die Zuordnung von Testfällen für
automatisierte Fahrfunktionen auf X-in-the-Loop Simulationen im modularen virtuellen Test-
baukasten, in 10. Workshop Fahrerassistenzsysteme , ed. by UNI DAS e .V ., Wa lting ( 2015)
13. W. Wachenfeld, H. Winner, Virtual Assessment of Automation in Field Operation. A New
Runtime Validation Method, in 10. Workshop Fahrerassistenzsysteme , ed. by UNI DAS e.V.,
Waltin g (2015)
14. H. Winner, Einrichtung zum Bereitstellen von Signalen in einem Kraftfahrzeug, Patent DE
101(02), 771 (2001)
15. B. Hoye, D. Lambert, G. Sutton, Autonomous Driving Comparison and Evaluation, US Patent
20,150,175,168 (2015)
16.http://www.heise.de/newsticker/meldung/Autonome-Autos-Danke-dass-Sie-das-Auto-von-mo
rgen-testen-2760591.html . Accessed 23 Jul 2015
17.http://www.dvr.de/betriebe_bg/daten/unfallstatistik/de_autobahn.htm . Accessed 21 Aug 2015Chapter 18
Validation of Highly Automated Safe and Secure
Systems
Michael Paulweber
18.1 Introduction
The increasing importance of advanced driv er assistance systems is visible in the
intensive development in this area of automotive OEMs as well as in research
activities from nonautomotive companies . A well-known example of later activities
is Google’s self-driving car project, which works su ccessfully towards a fully
automated vehicle.
The potential of advanced driver assistance systems to actively increase the safety
of vehicles as well as the comfort of their passengers is currently discussed in many
newspapers and reports in various TV programs. Therefore, it is likely that new
passenger cars as well as heavy duty vehicles will be legally obliged to have certain
Advanced Driver Assistance Systems (AD AS) installed in the coming next years.
As a step in this direction, the EU has required new cars to be equipped with an
Electronic Stability Program (ESP) from 2011 onwards. Five years later, in 2016,
emergency braking assistant systems will be mandatory for new heavy duty vehicles
in the European Union.
The OEMs have actively taken on this trend and equip new vehicle models with
more and more advanced driver assistant systems. This development is driven by
two main societal challenges: The increasing age of the population, especially in
the western countries, and the continuing growth of the population on earth.
Mobility is one of the biggest values of the western countries. This can be seen
in the fact that many families, after buying a house or an apartment for living, spend
the second largest amount of money on vehicles. As people get older, they want to
keep the personal mobility they have been used to all their life. In order to keep the
trend of fatalities decreasing, it is necessary to support elderly people when driving
M. Paulweber (/envelopeback)
A VL List GmbH, Graz, Germany
e-mail: michael.paulweber@avl.com
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_18437438 M. Paulweber
cars even at age of 80 and older. Without advanced driver assistance systems, elderly
people have to stop driving or have an incr eased risk of fatal accidents. A statistics
from [ 1] shows this trend, which can be reversed by the use of advanced driver
assistant systems.
The growing global population makes space for one of the most precious goods
especially in megacities such as London, Beijing, or New York. Trafﬁc jams are
normal in those cities. They do not only annoy the drivers but also increase the
CO 2and exhaust emissions, which contribute to global warming. As it is nearly
impossible to build more or bigger streets in those cities, the only alternatives are
public transportation or taking better advantage of the available space of existing
streets for the personal mobility. Semi-automated vehicles which know where to
park a car as well as jam pilots are ﬁrst steps to keep personal mobility attractive also
under the difﬁcult environmental conditions of megacities. Vehicle-to-vehicle and/or
infrastructure communication as well as the usage of map data allow to ﬁnd energy
optimal control schemes for vehicles, which can be implemented in (partially)
automated vehicles. This can reduce the CO 2emissions in the transport sector
(especially in the transportation of goods using heavy duty trucks) signiﬁcantly.
This indicates that the introduction of new and more sophisticated advanced
driver assistant system up to fully automated vehicles will continue.
Depending on the degree of automation provided by ADAS, it partially or
completely takes over the control of the transversal and/or longitudinal vehicle
movement in many different situations, which may occur in the trafﬁc environment.
This requires the correct and reproducib le reaction of those ADAS in all possible
trafﬁc scenarios, which mi ght occur. Therefore, the va lidation of ADAS is already
very complex and will get even more complicated when the degree of automation
of the vehicles will continue to increase. Today, there are no test systems and
validation methods available, which can guarantee the complete functional safety
under all possibly trafﬁc and environmen tal conditions. Current validation methods
use catalogues of test scenarios, which deﬁne the trafﬁc scenario as well as the
expected correct reaction of the ADAS in this situation [ 2]. OEMs test vehicles with
ADAS functions use scenarios of the catalogues either in proving grounds, in real
trafﬁc situations, or more and more in virtual (simulated) environments.
Testing on proving grounds or in real trafﬁc does not require sophisticated
simulation environments and is therefore often used at early functional prototypes
of new ADAS or in partially or highly automated vehicles (in the remaining part of
this chapter, ADAS shall also include the control systems of partially, highly, or fully
automated vehicles). Unfortunately, those testing methods have severe drawbacks:
Tests are difﬁcult to reproduce. Therefore, it takes long testing times to check, if
corrections in ADAS functions really solved identiﬁed problems of previous tests.
Many trafﬁc scenarios of the validation databases are difﬁcult to reproduce or even
dangerous for the test driver to execute. This also contributes to the high validation
costs and long validation duration.
The development of simulation environments for validation in virtual trafﬁc
scenarios on the other hand is also very costly. A prominent company develop-
ing advanced driver assistant functions predicts the effort to develop validation18 Validation of Highly Automated Safe and Secure Systems 439
environments for highly automated vehicles 10–20 times higher than the effort to
develop the vehicle automation function to be validated. The ratio increases for fully
automated vehicles to 20–50 times higher.
This chapter tries to summarize the most promising upcoming trends in the
validation of advanced driver assistant systems [ 2].
18.2 Complexity of Automated Vehicles
ADAS controllers offer unprecedented values to the drivers of vehicles: ADAS
were initially introduced to im prove the safety of vehicles (active safety measures
compared to previously passive safety measures). But they also increase the comfort
in releasing the driver from stressful situations such as driving in trafﬁc jam.
Additionally, they are used to decrease the negative impact of vehicles to the
environment (e.g., trafﬁc light assistant minimizes the energy consumption and
exhaust emissions in optimizing the vehicle speed depending on the current and
future status of the upcoming trafﬁc signals on the route of the vehicle).
Figure 18.1 depicts the basic structure of ADAS. Contrary to conventional
control units in automotive vehicles such as engine control units (ECU) or battery
control units (BCU), ADAS control units (ACU) communicate with a signiﬁcantly
more complex environment using sensors which are new in the automotive industry.
Many of these sensors provide information about the outside world in object
lists updated periodically (video sensors, radar sensors, LiDAR sensors, ultrasonic
sensors). Vehicle-to-vehicle communication as well as vehicle-to-infrastructure
communication also sends information about the environment around the vehicle.
A third source of information for ADAS c ontrollers is the information of accurate
Fig. 18.1 Structure of ADAS440 M. Paulweber
maps together with GPS sensors. All these information together with classical online
data in vehicles, e.g., engine speed, velocity, gear number, etc., are used to get animage of the world surrounding the car as accurate as possible.
Unfortunately, all these information sources have their insufﬁciencies. Therefore,
sensor fusion is used to combine the information of various sources and improve theimage of the outside environment. This sensor fusion increases the complexity ofthese systems signiﬁcantly, as it requires the synchronized acquisition of data frommany sensors to test or to reproduce the result of sensor fusion and the calculationsin ADAS controllers.
The physical signals are in most cases already preprocessed in the sensor data
acquisition subsystems and periodically sent to the sensor fusion algorithms. Theresults of the sensor fusion are used to generate an image (position, velocity, typeof object, etc.) of the outside objects at the current instance of time as well as aprojection into the future. The next step is the calculation of an optimal trajectoryfor the vehicle in order to fulﬁll the requested mission (e.g., driving from point Ato point B or parking the car in a parking space). The controllers for the lateral
and longitudinal movements of the vehicle calculate the set value for the variousactuators in the vehicle as steering actuator, throttle value, brake pressure, etc.
The control strategies of ADAS controllers have to interact with many conven-
tional cars around the vehicle which is steered by the ADAS (ego-vehicle), as wellas with human beings, animals, and other objects such as trafﬁc signs, road borders,stones, or objects ﬂying in the wind.
Additionally, the accuracy and trustworthiness of the different ADAS sensors
are heavily inﬂuenced by the environmental conditions (like rain, snow, fog, night,glaring sun light, etc.). These effects need to be simulated in virtual environmentsfor validation of ADAS too.
An additional difﬁculty with ADAS are the increasing threads of security
breaches from vehicle-to-vehicle or vehicle -to-infrastructure c ommunication. Vehi-
cles with ADAS, for example highly automated cars, have to be safe under everyenvironmental condition. This requires sophisticated ADAS control algorithms aswell as extensive validation of these systems.
18.3 Validation Challenges
Vehicles equipped with ADAS reach an unpr ecedented complexity. This has various
reasons:
 There are a lot of new sensors such as video sensors, radar sensors, LiDAR sen-
sors, ultrasonic sensors, vehicle-to-vehi cle (V2V) and vehicle-to-infrastructure
(V2I) communication, GPS sensors, d ata from digital maps, etc. Many of
these sensors are intelligent subsystems, which have signiﬁcant data processingcapabilities built in. Validation systems have to cope with streams of object listsgenerated by these sensors.18 Validation of Highly Automated Safe and Secure Systems 441
 As all of the new sensors have their weaknesses, sensor fusion is needed to
create an image of the outside world. This image includes information about
surrounding objects as well as their most likely future trajectories, which has two
impacts on validation: it is necessary to either simulate all sensors or stimulate
them simultaneously. Especially, if applying physical signals to the sensors of
the ADAS via stimulators, which are directly connected to data from an on-
line simulation of the surrounding environment, all time delays of these different
actuators have to be compensated. Otherwise, the sensor fusion algorithms might
lead to wrong results as the data from the different sensors are not exactly time
aligned.
 ADAS equipped vehicles interact with the external world. Other vehicles driven
by human drivers change their trajectory based on the reaction of the ADAS
automated vehicle (e.g., whether it brakes rapidly at a road crossing or it
smoothly decelerates and stops ). Therefore, it is necessary to take also different
behaviors of human actors into account when validating ADAS.
 Weather conditions heavily change the behavior of ADAS sensors. This requires
tests under many different environmental conditions.
 Vehicle security has to be tested t oo, as security breaches may lead to wrong
images of the outside world, which creates unwanted trajectories and might even
result in accidents.
Vehicles equipped with ADAS functionalities (e.g., fully automated cars) have to
be safe under uncountable environmental c onditions and scenarios. Therefore, most
of the validation of automated research vehicles is currently done on the road.
Prof. Winner from the Technical Univers ity in Darmstadt, for instance, estimated
the distance that needs to be tested with validation vehicles on German roads in
order to prove that an automated vehicle is as safe as a manual driven car [ 3]. The
calculated distance of 100 million km takes into account the average number of
fatal accidents on German more than roa ds and the average driving performance
on these roads. Considering that OEMs develop up to 25 different variants of one
vehicle model and the fact that complex software systems, such as ADAS, typically
have a new software version update every few months, very large test vehicle ﬂeets
would be required. Even if not all variants have different ADAS software, some
modiﬁcations will lead to additional validation effort. The test vehicles would have
to perform more than 100 million km testing several times a year.
When trying to perform validation road testing in short periods of time, it is
difﬁcult to ensure that almost all possible environmental conditions (hot, cold, low
or high altitude, snow, rain, fog, ice, etc.) occur within this time frame. Additionally,
many validation sequences require danger ous maneuvers, which are safety critical to
test drivers piloting vehicles with new ADAS versions. Also costs of the additional
objects (other vehicles, test robots, etc.) needed to validate ADAS systems in
different scenarios are signiﬁcant.
The replacement of pure road testing by v alidation in a virtual environment can
reduce the validation time signiﬁcantly, if eliminating those portions of test time on
the road, where no safety relevant events o ccur, in the tests executed in the simulated442 M. Paulweber
Fig. 18.2 MIL (Model in the loop) or SIL (Software in the loop) validation environment
environments. Currently, several project s deal with the collection of databases of
safety relevant scenarios for the validation of ADAS-based vehicles with many
control units as transmission control unit (TCU), vehicle control unit (VCU), engine
control unit (ECU), and many more.
In order to cope with the unrealistic required test time on roads discussed so far,
it is common agreement that validation of ADAS require testing in simulated envi-
ronments (see Fig. 18.2), which allow to perform testing faster than wall clock time
and provide the possibility to stimulate d ifferent environmental conditions during
the validation sequences. Currently, the required complex simulation models, which
can simulate realistically “all” safety critical trafﬁc and environment scenarios for
ADAS equipped vehicles, do not yet adequately exist.
In order to get a better understanding if validation in a virtual environment can
solve the problem, the following rough calculation is done:
 Road testing: The duration to perform 100 million km road testing with 100 test
vehicles assuming 18 hours per day driving lead to a test duration of 8 years
 Virtual environment testing: Assuming testing of 300 safety relevant scenarios
on 25 test beds under all combinations of environmental conditions will lead to
test duration of 2 years (see Fig. 18.3)
This indicates that validation in a simulated environment is clearly a way to
investigate in more detail; nevertheless, 2 years of testing is too long to perform
validations for several variants of vehicles and several new ADAS software versions
per year. The validation of highly automated systems is therefore still an unsolved18 Validation of Highly Automated Safe and Secure Systems 443
Fig. 18.3 Rough estimation
of duration of validation in
virtual environmentTest duration per safety 
relevant scenario5 min
Number of safety relevant 
validation scenarios300 scenarios
Number of virtual validation 
testbeds used25 testbeds
number of testing hours per 
day18 h
# of vehicle variants 1 variants
Clear / Rain / Snow 3 variations
No fog / Fog 3 variations
Day / night 3 variations
warm / cold 3 variations
low altitude / high altitude 3 variations
Driver type 3 variations
heavy traffic / low traffic 3 variations
Low GPS reception 2 variations
Vehicle load 3 variations
Number of scenarios under 
different env.conditions3,936,600 scenarios
time to test all scenarios in all 
conditions2.0 yearsNumber of variations of environmental conditions
problem; the “state-of-the-art” validation methods and tools are not sufﬁcient
anymore.
Safety means the absence of unacceptabl e or unreasonable risk. Validation is the
activity to determine that the requirement s are the right requirements and that they
are complete. Veriﬁcation checks ensure that a developed systems fulﬁlls all deﬁned
requirements. Therefore, it is necessary to foresee all potential dangerous situations
during the requirement phase of a new product. As ADAS heavily interact with the
outside world, an uncountable number of saf ety critical situations can occur. It is
very likely that many of them are not foreseen at speciﬁcation time of a new system.
Therefore, the most difﬁcult validation challenge in highly automated vehicles is
the functional insufﬁciency [ 4]. It results from unknown requirements, which are
consequently neither implemented nor veriﬁed. As validation shall ensure that all
relevant requirements are foreseen, it is necessary to think about concepts to handle
functional insufﬁciencies.444 M. Paulweber
18.4 Validation Concepts
In order to reduce the validation time even further, concepts from combinatorial
testing together with validation in a virtual environment should be applied. This
leads to the validation tool chain depicted in Fig. 18.4.
Validation scenarios deriv ed from several sources:
 Test vehicles record data from ADAS sensors, environment and road data, and
vehicle data (e.g., engine speed, vehicle velocity). These dat a are then analyzed
and checked whether safety critical even ts occurred and whether these events are
already part of a data base of safety criti cal ADAS scenarios. If it is not already
existent, a new validation scenario is generated from the recorded data and added
to the data base.
 Scenarios deﬁned from ofﬁcial bodies (e.g., consumer organizations as EURO-
NCAP) are also added to the data base of safety critical ADAS scenarios.
 Safety analysis of ADAS will also lead to additional validation scenarios.
Especially the ﬁrst source, which derives validation scenario s from data recorded
on the road, allows to create a learning cycle over time, which helps to overcome
the problem of functional insufﬁciency. It is thinkable to extend this learning cycle
also over data recorded during operation of ADAS equipped vehicles as long as the
buyers of those vehicle agree to this procedure.
Fig. 18.4 Validation tool chain for ADAS equipped vehicles18 Validation of Highly Automated Safe and Secure Systems 445
Fig. 18.5 ADAS Validation tool box
The test infrastructure components in Fig. 18.5 allow to set up ADAS validation
environment to reduce the validation time to a reasonable length. In order to allow
the use of combinatorial testing concepts, all ADAS scenarios need the possibility
to execute them in different combinations of environmental conditions. They are
described by different sets of values of the scenario parameters as amount of rain
(0–100 %), fog (0–100 %), daylight (0–100 %), etc. All ADAS scenarios contain
a test maneuver sequence with external inputs for the scenario parameters and a
procedure to calculate, if an executed va lidation scenario has successfully passed.
When preparing the test sequence for the validation, those ADAS validation
scenarios are taken from the ADAS scenar io database, which are relevant for the
ADAS function to be validated. An inte lligent test generator based on methods
of design of experiments (e.g., combinatorial testing methods as described in [ 5])
deﬁnes a set of values for the scenario parameters used during the execution of
the scenario. Not all scenarios are tested w ith all possible combinations of scenario
parameters. This reduces the number of necessary tests signiﬁcantly.
In order to execute the test sequences, simulation models for the non-existing
components of the ADAS equipped vehicle and the outside environment are needed.
They are taken from the data base of environment models. The environment model
components can also have the additional s cenario parameter inputs (similar to the
scenario sequences).
The last step to reduce the validation effort is the reuse of test sequences in
different steps of the development V-process. This requires, on the one hand, a
standardized scenario sequence description and, on the other hand, a simulation
environment, which always provides the same functionality in combination with
the unit under test components available i n reality. The standardized scenario
description language can be based on well-established standards as ASAM-ODX446 M. Paulweber
Fig. 18.6 HIL (HW in the loop) validation environment
[6] or Open Scenario [ 7], which will require extensions to cover the needs of ADAS
validation.
The test sequences are reused during the development process:
 In MIL (model in the loop) environment during functional development in early
phases of the V-model (see Fig. 18.2)
 In SIL (software in the loop) environment during ADAS software development
in early phases of the V-model (see Fig. 18.2 MIL (Model in the loop) or SIL
(Software in the loop) validation environment)
 In HIL (hardware in the loop) environment during ADAS development in early
phases of the V-model (see Fig. 18.6)
 In power in the loop (xIL) environment during ADAS vehicle integration and
validation in early phases of the V-model (see Fig. 18.7)
 Potentially also in vehicle in the loop (VIL) environment during vehicle valida-
tion when using remotely controllable platforms as described in [ 8].
18.5 Virtual Validation Environment
The accelerated validation procedure descr ibed in the previous chapter requires
a complex simulation environment. It combines real components with simulated
components in different variations. The r eal components shall be equivalent in the
behavior of the simulated components functionally as well as in its timing behavior.18 Validation of Highly Automated Safe and Secure Systems 447
Fig. 18.7 PIL (Power in the loop) validation environment
Component                    \                Testbed typeMIL (Model in 
the loop)SIL  So/g332ware 
in  the loop)HIL  HW in the 
loop)xIL 
(Powertrain 
in the loop)Proving 
groundRoad
Vehicle Simulated Simulated Simulated Simulated Real Real
Powertrain Simulated Simulated Simulated Real Real Real
Driver Simulated Simulated Simulated Simulated Real Real
S/g415muli needed no no yes / no yes / no no no
Sensors Simulated SimulatedReal / 
SimulatedReal / 
SimulatedReal Real
Sensor fusion Simulated Real Real Real Real Real
Trajectory building Simulated Real Real Real Real Real
Controllers Simulated Real Real Real Real Real
Actuators Simulated SimulatedReal / 
SimulatedReal / 
SimulatedReal Real
Road Simulated Simulated Simulated Simulated Real Real
Traﬃc and environment objects (pedestrians 
etc.)Simulated Simulated Simulated SimulatedReal / 
SimulatedReal
Environmental condi/g415ons (rain, snow, fog, 
night, ice, etc.)Simulated Simulated Simulated Simulated Simulated Real
Fig. 18.8 Simulated/real components in ADAS validation environments
Figure 18.8 shows the combination of real, s imulated, and em ulated objects,
which are used at the different test bed types described above. The table also448 M. Paulweber
indicates where a conversion from simulat ed values to real physical quantities such
as ultrasonic signal reﬂections, torque, GPS satellite signals, etc., exists. These
connectors between the simulated world a nd the real world are called stimuli. They
have to introduce energy into the real worl d according to the current values in the
simulated world. An example are GPS coordinates indicating the current position of
a simulated world driving on a simulated road via simulated satellites. Navigation
units in vehicles but also on mobile phone s can receive these emulated satellite
signals and show the correct position of the simulated vehicle when using navigation
software packages.
ADAS validation systems can need the following stimuli:
 Ultrasonic stimuli, which send the reﬂection of an ultrasonic signal from a
parking sensor back according to the dist ance to objects next to the ego-vehicle
and according to the current situatio n in the simulated virtual world
 Radar stimuli: same function as ultrasonic stimuli for radar sensors. This stimuli
are very difﬁcult to build and currently not adequately available
 LiDAR stimulus
 Video camera stimuli, which show vid eo cameras of ADAS equipped vehicle
the image of the currently surrounding environment via replayed or artiﬁcially
created video sequences on video screens
 GPS stimulus, which convert simulated GPS coordinates in a simulated environ-
ment to HF signal, which an antenna of a navigation system would receive from
one or several GPS satellites.
 Vehicle-to-infrastructure and vehicle-to-vehicle communication stimuli, which
simulate the communication between ego-vehicle and infrastructure control
center and surrounding vehicles
 Torque stimulus as used in powertrain test beds
 Steering system stimulus, which emul ates the mechanical feedback from the
wheels on the road to the steering syste m sensor of a vehicle even if the wheel is
not turning (either on a chassis dyno test bed or a powertrain test bed)
 Climatic stimulus (climatic chamber)
Stimuli need to ensure that the simulated output of a component matches the real
measureable input of a physical component. Therefore, a lot of energy is needed in
many cases to minimize the control error of a stimulus.
The connection between different simulated components requires a co-
simulation framework, the combination of different simulated and real components
needs a special co-simulation framewo rk which is for example described in [ 9]. In
order to mix and match the vehicle components, the environmental components,
and the components to build ADAS controller and the driver models, it is necessary
to deﬁne several interfaces:
 Inputs and outputs of real/simulation components. They connect the outputs of
simulated components with the inputs of other simulated components. In case of
a connection to a real component, a stimulus is needed in between the output of
the simulated components and the physical input of the real component.18 Validation of Highly Automated Safe and Secure Systems 449
Fig. 18.9 Validation simulation environment
 Inputs of scenario parameters. Scenario parameters are changed at the beginning
of a test scenario, but stay unchanged during the test sequence of the scenario.
Also stimuli must react to scenario para meters (e.g., modiﬁcation of a video
image in case a scenario is tested in simulated rain).
In order to allow also ADAS function development on MIL systems, the
main function blocks of ADAS are also needed as simulation components (e.g.,
sensor fusion block). Figure 18.9 shows these main building blocks in a simulated
environment. It also indicates that the s imulated ego-vehicle model interacts with
the trafﬁc and environment simulation (outside upper gray connection between left
and right side of the ﬁgure).
The last validation building block is an executor of the test sequence. It is of
advantage, if the test sequence is store d in a standardized format, which allows
easily to reuse test sequences in different phases of the development process of
ADAS. This saves signiﬁcant costs as the creation of validation environments, and
test sequences is 5–25 times more expensive than the development of the ADAS
function itself.
18.6 Conclusion
This chapter presented a summary of the challenges to validate the functionality
and especially the safety of ADAS for ve hicles. It explained why new approaches
are required to allow the validation of ADAS in reasonable time frames and at450 M. Paulweber
reasonable costs. Only then it is possible to achieve the full potential of ADAS and
consequently to ensure personal mobility to ageing society and a reduction of CO 2
and exhaust emission of trafﬁc at a growing population. In transport, automated
vehicles offer an excellent solution to meet the societal challenges due to their
capability to increase safety by avoiding human errors, to improve efﬁciency by
better usage of road space, and especially to signiﬁcantly reduce emissions in
mobility applications. In addition, automated driving can also enable handicapped
or elderly people to participate i n social life self-determined.
References
1. J. Oxley, B. Fildes, E. Ihsen, J. Charlton, R. Day, Differences in trafﬁc judgements between
young and old pedestrians, Accid. Anal. Prev .26–29(6), 839–847 (1997)
2. H. Winner, S. Hakuli, G. Wolf, Handbuch Fahrerassistenzsysteme: Grundlagen, Komponenten
und Systeme für aktive Sicherheit und Komfort (Vieweg CTeubner, Wiesbaden, 2011)
3. H. Winner, W. Wachenfeld, Absicherung automatischen Fahrens, in 6.FAS Tagung , Munich,
Germany, 2013
4. Müller, Bernd; Robert Bosch AG, Challenges in Demonstrating Safety for Highly Automated
Systems, in Safetrans Industrial Day 2015 , Renningen, 2015
5. L. Yu, Y. Lei, N. Kacker, R. Kuhn, ACTS: A Combinatorial Test Generation Tool, in IEEE
6th International Conference on Software Veriﬁcation and Validation , Neumunster Abbey,
Luxembourg, 2013
6. A. eV, ASAM Connects—Standard Details, ASAM eV, May 2015, [Online] http://www.asam.
net/nc/home/standards/standard-detail.html?tx_rbwbmasamstandards_pi1%5BshowUid%5D=
525. Accessed 10 08 2015
7. V.S. GmbH, OPen Scenario Bringing Content to the Road, VIRES Simulationstechnologie
GmbH (2015), [Online] http://www.openscenario.org/ . Accessed 10 08 2015
8. M. Schmidl, H. Steffan, ADAS Testing with UFO Test System, in Autonomous Vehicle Test &
Development 2015 , Stuttgart, 2015
9. G. Stettinger, J. Zehetner, H. Kokal, M. Paulweber, M. Wierse, B. Toye, Control of an
Engine Test-Bench via Hardware-Software-Co-Simulation, in 14.Internationales Stuttgarter
Symposium Automobil- und Motorentechnik , Stuttgart, 2014Chapter 19
Testing and Validating Tactical Lane Change
Behavior Planning for Automated Driving
Simon Ulbrich, Fabian Schuldt, Kai Homeier, Michaela Steinhoff, Till Menzel,
Jens Krause, and Markus Maurer
19.1 Introduction
19.1.1 Motivation
During the last 25 years, the driving abilities of automated vehicles have progressed
rapidly. This went along with a huge increase of complexity for automated vehicles,
regarding the multiplicity of interacting components bei ng required to implement
the functionality of automated vehicles.
To keep this complexity manageable, many teams use modularity and hierarchi-
cal abstraction to break down the overall driving task into separate modules. One
possible abstraction is descr ibed by Matthaei and Maurer [ 8].
For efﬁcient and targeted testing, it is useful to test modules of an automated
vehicle separately to ensure their correct functionality. Above this, the interoper-
ability of modules needs to be tested on differe nt integration level s, culminating in a
test of the system as a whole (system test). A possible development and test process
for those systems is the V-model, which is described, e.g., in the ISO 26262 standard
development process [ 6, Part 3]. The V-model describes the development and test
S. Ulbrich (/envelopeback)  F. Schuldt  T. Menzel  M. Maurer
Institute of Control Engineering, Technische Universität Braunschweig, Hans-Sommer-Str. 66,
38106 Braunschweig, Germany
e-mail: ulbrich@ifr.ing.tu-bs.de ;schuldt@ifr.ing.tu-bs.de ;menzel@ifr.ing.tu-bs.de ;
maurer@ifr.ing.tu-bs.de
K. Homeier  J. Krause
Volkswagen Group Research, Berliner Ring 2, 38440 Wolfsburg, Germany
e-mail: kai.homeier@volkswagen.de ;jens.krause1@volkswagen.de
M. Steinhoff
IA V GmbH, Carnotstraße 1, 10587 Berlin, Germany
e-mail: michaela.steinhoff@iav.de
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_19451452 S. Ulbrich et al.
Fig. 19.1 “Jack,” the Audi A7 piloted driving concept vehicle
process of systems on the abstraction levels of unit tests, module tests, integration
tests, system tests, and acceptance tests. These levels are also used in the test process
for the tactical behavior planning, which will be described in this chapter.
The test levels are realized with differen t simulation-based tests and real world
driving tests. Real world driving tests often come along with signiﬁcant cost and
time efforts. Additionally, real vehicles or prototypes are needed for testing. Often,
such prototypes are not available at an early stage in a research project. Therefore,
real world driving tests alone are often insufﬁcient.
Accordingly, the authors propose to use situation-based open-loop tests and
scenario-based closed-loop tests for module and integration tests. Simulation-based
testing in a software-in-the-loop setup does not require prototypes and can be
executed faster than in real time. Thus, the effects of little changes in the software
can be tested with less efforts. Hence, si mulation-based testing can be used during
the development process and allows to tailor scenarios speciﬁcally to the needs of
the developers.
The test procedure presented in this article has been used by our team to develop
“Jack,” the Audi A7 piloted driving concept vehicle shown in Fig. 19.1. “Jack” has
been demonstrated at the Consumer Electronics Show 2015 in the USA1and in
1www.audi.com/content/com/brand/en/vorsprung_durch_technik/content/2014/10/piloted-
driving.html19 Testing & Validating Tactical Lane Change Behavior Planning 453
February2and April3on a German highway to the media. For this, the vehicle
drove a stretch of 550miles on a highway from Stanford to Las Vegas and around
Braunschweig as well as around Ingolstadt.
19.1.2 Article Outline
This article is structured as follows: In Sect. 19.2 we deﬁne the terms scene,
situation, and scenario. Section 19.3 gives an overview about the usage of scenario-
based and situation-based testing. Section 19.4 presents testing on four suggested
levels of abstraction. A case study with an exemplary implementation for lane
change behavior testing is presented in Sect. 19.5. Last of all, Sect. 19.6 ﬁnalizes
this article with conclusions and a research outlook.
19.2 Deﬁnition of Terms Scene, Situation, and Scenario
To differentiate separable test levels and to have uniﬁed interfaces between different
components, it is necessary to deﬁne the terms scene ,situation ,a n d scenario .A
more extensive discussion as well as a literature review can be found in Ulbrich
et al. [ 19]. The authors deﬁne the term scene as follows:
A scene describes a snapshot of the environment including the scenery and dynamic
elements as well as all actors’ and observers’ self-representations, and the relationships
among those entities. Only a scene representation in a simulated world can be all-
encompassing (objective scene, ground truth). In the real world it is incomplete, incorrect,
uncertain, and from one or several observers’ points of view (subjective scene).
Similar to Geyer et al. [ 5], the term scenery subsumes all geo-spatially stationary
elements of the scene. Dynamic element s are elements that are moving, or have
the ability to move. The scene representation is completed by a self-representation
containing the current skill levels and general system skills as well as the states and
attributes of all actors and observers (cf. Maurer [ 9] and Bergmiller [ 3]).
Vice versa, we deﬁne a situation by:
A situation is the entirety of circumstances, which are to be considered for the selection
of an appropriate behavior pattern at a particular point of time.4It entails all relevant
conditions, options, and determinants for behavior.5A situation is derived from the scene
by an information selection and augmentation process based on transient (e.g., mission-
speciﬁc) as well as permanent goals & values. Hence, a situation is always subjective by
representing an element’s point of view.
2www.stern.de/auto/news/jack-das-selbstfahrende-auto-von-audi-erstmals-auf-einer-deutschen-
autobahn-2174446.html
3www.volkswagenag.com/content/vwcorp/info_center/en/news/2015/04/dobrindt.html
4Cf. Wershofen and Graefe [ 20].
5Cf. Meyer [ 4]. Determinants as in determining factors.454 S. Ulbrich et al.
Situation SceneGoals & 
Values
Function-relevant aspects of 
scene, e.g., dynamic elements, 
scenery and self-representationFunction-relevant goals 
& values like the 
mission or regulatory or 
societal constraints
Relevant function-specific 
situation aspects from 
subjective perspectiveSGoal- & value-
related aspects of a 
scene, e.g., domain 
or local regulatory 
related aspectsFunction-relevant and
goal- & value-related 
aspects of a scene
© 2015IEEE
Fig. 19.2 Venn diagram of scene, situation, and an element’s goals & values [ 19]
A situation consists of several situation aspects to be interpreted or compre-
hended by situation assessment modules. A situation can be an input and output
of such modules at once. Within these situation assessment modules, the situation is
augmented with additional information.
According to the authors’ deﬁnition of a situation, it can be fully derived from
a scene and the system’s goals & values, as illustrated by the Venn diagram in
Fig.19.2. There is a wide overlap between a scene and a situation to include, e.g., all
relevant parts of the scenery, all relevant dynamic elements, and all relevant aspects
of the self-representation. This information selection helps to simplify the situation
representation and by this the driving function development.
Moreover, the situation is implicitly or explicitly augmented , e.g., by goals and
values. For instance, by explicitly labeling the usefulness of roads or lanes to reach
the mission goal or implicitly by characterizing a playing child on the side to be
more relevant than a ﬂying around plastic bag. The remaining part of the situation,
not overlapping with the scene or the goals & values, represents situation aspects
evaluated and populated with information by situation assessment modules.
According to Fig. 19.3,ascenario contains scenes, actions, and events as well as
goals & values. The authors sugge st the following deﬁnition:
A scenario describes the temporal development between several scenes in a sequence
of scenes. Every scenario starts with an initial scene. Actions & events as well as
goals & values may be speciﬁed to characterize this temporal development in a scenario.
Other than a scene, a scenario spans a certain amount of time.
Depending on what a scenario is used for, it may also be sufﬁcient to specify
only situations instead of entire scenes plus goals & values. This may be true for a
test setup solemnly designed to test, e.g., a situation assessment as in the situation-
based open-loop test described in Sect. 19.4.
Furthermore, the functional descriptio n of the system (use-case) needs to be
deﬁned in the early phases of the system design according to the V-model, e.g.,
in the ISO 26262 standard development process [ 6, Part 3]. A use-case entails a19 Testing & Validating Tactical Lane Change Behavior Planning 455
Fig. 19.3 Elements of a
scene, scenario, and use-case
[19] Scene
Dynamic 
Elements
Self-
Repre-
sentationSceneryScenario
Actions & 
EventsFunctional
RangeUse-Case
Functional
System 
BoundariesDesired
Behavior
Goals & 
Values
© 2015IEEE
Fig. 19.4 Elements of a
test-caseTest-Case
Pass-Fail-
CriteriaScenario
Scenario-
Parameters
description of the functional range and the desired behavior, the speciﬁcation of
system boundaries, and the deﬁnition of one or several usage scenarios.
In software testing, scenarios need to be sp eciﬁed to generate speciﬁc test-cases.
Thus, each test-case entails a scenario with a speciﬁc set of parameters and pass–fail
criteria to evaluate it (see Fig. 19.4).
Therefore, it is possible to detail use-cas es with scenarios, s cenes, parameters to
generate speciﬁc test-cases to test the requirements, and the desired behavior within
and beyond the system boundaries.
19.3 Background
The introduction pinpoints the signiﬁcance of testing during system development
and for system validation. For this purpose, test methods can be differentiated by
their open-loop or closed-loop nature.
Among often used closed-loop test techniques are x-in-the-loop techniques, like
software-in-the-loop testing, driver-in-the-loop testing, vehicle-in-the-loop testing,
or hardware-in-the-loop testing [ 7,11]. The fraction of simulated versus not-
simulated, physically real aspects may vary in any of them. The differentiation of
x-in-the-loop techniques rather addresses the physical test setup than the method of456 S. Ulbrich et al.
testing itself: For instance, scenario-bas ed closed-loop testing may be applied to any
of the x-in-the-loop test techniques. In this article it will only be demonstrated in its
application for software-in-the-loop testing.
A second dimension is the scope of testing, referring to the level of abstraction
from units to the entire system as in the V-model in the ISO 26262 [ 6,P a r t3 ] .T h e
right half of the V-model subsumes ﬁne granular unit and model tests up to higher
level integration, system and ﬁnally acceptance testing. Thus, test methods may be
differentiated by their level of abstraction, open/closed-loop nature, and fraction of
simulated vs. real world aspects. The inte rrelation of the abstraction levels in the V-
model and situation-based open-loop as well as scenario-based closed-loop testing
methods is described in Sect. 19.4 of this article.
Winner [ 22] illustrates the infeasibility of pure real world driving tests (cf.
240 million test kilometers) for sufﬁcient test coverage of a software release for
an automated vehicle for highway usage. Bridging the gap between the infeasible
amount of real world driving tests and open-loop testing, Winner [ 21] patented
the idea of real world driving, open-loop testing by integrating a—to be tested—
function into an existing vehicle sold to customers. The function obtains real world
input data but the output is only recorded and not translated into real driving
maneuvers. By running such a system in big ﬂeets of vehicles, it is possible to
achieve a high test coverage for a later rel eased system. The scope of this concept is
limited to, e.g., intervening driving functions; driving functions focused on a closed-
loop interaction with the environment cannot sufﬁciently be tested by this approach.
By using recorded measurement data durin g the development process for testing
algorithms, another variant of real world open-loop testing is implemented to the
core of development platforms like the Robot Operating System (ROS)6or the
Automotive Data and Time-Triggered Framework (ADTF).7A measurement-data-
based open-loop testing and evaluation of the lane change situation assessment
algorithms in “Jack” have been demonstrated by Ulbrich and Maurer [ 17,18],
already. Thus, it is not further pursued for this article.
Arnold et al. [ 1] survey the use of scenarios in different industrial projects. They
show that scenarios can be used for genera ting test-cases in different domains, e.g.,
in medical systems, for telecommunication systems, ﬁnancial systems, and also in
software development. They analyze the kinds of the scenarios, the content of the
scenarios, and the kind of representatio n of the scenarios. The broad usage of the
scenario-concept indicates a transferability of the different test levels towards other
domains.
Ryser and Glinz [ 10] describe a scenario-based approach for validating and
testing software. They suggest the so-called scenario-based validation and test of
software by systematically traversing pa ths in scenario state charts. Other than
in this article, Ryser and Glinz primarily focus on the structured generation of
scenarios.
6www.ros.org
7www.elektrobit.com/products/eb-assist/adtf19 Testing & Validating Tactical Lane Change Behavior Planning 457
B a ie ta l .[ 2] and Tsai et al. [ 15,16] elaborate the concept of scenario-based
testing. Tsai et al. [ 16] use scenario-based testing as an integration test method.
Complex scenarios are compiled of simpler sub-scenarios. According to Bai et al.
[2], a sub-scenario is instantiated based on a template data structure. Bai et al. and
Tsai et al. suggest to structure scenarios i n multiple levels of scenario groups. Tsai
et al. [ 15] focus on integrating scenario-based testing into an object-oriented test
framework. They demonstrate the feasibility of their approach by a case study for a
banking transaction system. Touseef and Qaisar demonstrate in [ 14] an approach for
scenario-based tests on an overall system level. It is demonstrated in a case study of
an inventory system.
The authors are only aware of few references for situation-based open-loop
testing. Bai et al. [ 2] mention the so-called looping scenarios as a special case of
scenario-based testing, where the same scenario is repeated over and over again.
Given that a situation is based on a scene in a scenario, looping a scenario without
considering the outputs of a device under test will result in something similar to a
situation-based open-loop testing.
Tadjine et al. [ 13] mention to use a scene-based test catalog for the development
of a pedestrian detection driver assistance system. Given the open-loop nature of
the perception part and given that their “s cenes” are tailored speciﬁcally to the
goals & values of the driving function (which we consider as a “situation,” as in
Sect. 19.2), Tadjine et al.’s approach seems like an example of what the authors call
situation-based open-loop testing.
Unit tests are a commonly used test approach in software engineering. A
literature review is out of scope fo r this publication. Sommerville [ 12] provides
details on different aspects of unit tests in software engineering.
19.4 Integrating Unit Tests, S ituation-Based Open-Loop
Testing, and Scenario-Based Closed-Loop Testing into
the V-Model
This section provides an overview over the testing and simulation efforts to ensure a
correct functionality of an item under test. Th e testing and validation efforts follow
a four-step procedure as illustrated on the right side in Fig. 19.5. This four-step
procedure can be integrated into the testing in the V-model [ 6, Part 6] according
to the checkmarks in Fig. 19.5.
On a very basic level, unit tests are ex ecuted to test and ensure the correct
functionality of aspects of atomic functions. As a next step, a situation can be
generated as a stimulus to test a driving function as a whole in an open-loop test
by a situation-based testing. Such testing is limited in its scope to the driving
function itself; it does not test the situation extraction from a scene. If this situation
extraction needs to be tested as well, the authors propose a scene-based open-loop458 S. Ulbrich et al.
Scenario -
Based Closed-
Loop TestingAcceptance
Testing
Module 
TestingIntegration 
TestingSystem 
Testing
Module 
SpecificationTechnical 
SpecificationRequirement
Specification
Functional
Specification
Unit TestingProgram
Specification
Unit Tests
Situation-
Based Open -
Loop Testing
Driving TestsImplemen-
tation
Abstraction Level
Test Approach
Fig. 19.5 Four-step test procedure for software validation and testing
testing. Anyway, in the test process for Jack it was not necessary to implement the
intermediate step of scene-based open-loop testing.
When all situation-based test-cases ar e passed successfully, scenario-based
closed-loop testing is used to test an item under test in its interaction with strategic
level modules and stabilization level modules as a whole. As a last step, testing
is completed by real world driving tests. The test steps will be explained in detail
in the following subchapters. The situation-based open-loop testing and scenario-
based closed-loop testing are presented in Sect. 19.5 by the case study of a lane
change planner module.
Figure 19.6 illustrates the differences between miscellaneous levels of testing.
Unit tests allow only to test particular code parts of the driving function. This is
depicted by single parts of a jigsaw puzzle of the driving function in Fig. 19.6.
Situation-based open-loop testing generates situations for one or several different
timestamps from the test-case description and evaluates the behavior response
without feeding this behavior response back into future situations. Scenario-based
closed-loop testing speciﬁes an entire scen ario in a test-case. This includes scenes,
events to alter the following scenes, and goals & values for situation extraction
and as an input for the driving function. The control and behavior response from
the driving function is used to inﬂuence future scenes and by this implicitly future
situations as well. A test system generates the inputs in Fig. 19.6.19 Testing & Validating Tactical Lane Change Behavior Planning 459
Driving
Function
Scene
TimeSituation
ActionDriving
Function
SceneSituation
SceneScenario-Based
Closed-Loop TestingSituation-Based
Open-Loop Testing Unit Tests
Goals &
Values
Events
DDDD
r
i
vv
ii
nn
gg
FF
unnun
ctcttct
iiii
oooo
nnnn
SSSSS
ccccc
ennenenen
ee
SSS
iiiii
ttttt
uuuuu
aaaa
ttttt
iiii
onon
SSSSS
cccc
ennenene
ee
© 2015IEEE
Fig. 19.6 Illustration of the differences between unit tests, situation-based open-loop testing, and
scenario-based closed-loop testing [ 19]
19.4.1 Unit Tests
On a basic level, unit tests are executed to test basic software functionalities. These
unit tests are of particular value to reduce the amount of errors in basic functions,
e.g., to calculate distances, time gaps, tim e to collisions, or similar physical-law-
based numbers that follow clear calculation rules and numeric properties. However,
unit tests are not an eligible method for testing situation assessment functions as
they typically require knowledge about the past development of a situation. Thus, it
is hard to evaluate the results of a single processing cycle of situation assessment.
To test these more abstract functions, it is far easier to broaden the scope and use a
situation-based testing instead of a traditional unit testing scheme.
19.4.2 Situation-Based O pen-Loop Testing
The situation-based open-loop testing uses a broader scope for testing. While unit
tests focus on testing single functions and lines of code, the focus for the situation-
based testing is wider: According to Fig. 19.7, a situation data structure is generated
as a mock-up for a particular simpliﬁed real driving situation. The situation is fed
unchanged into the tactical behavior pl anning module in the guidance block.
In the guidance block, the tactical behavior planning module evaluates the
situation and derives tactical driving d ecisions accordingly. Th e driving decisions460 S. Ulbrich et al.
Test-CaseTest-Case
Pass-Fail-
CriteriaSituation
Situation-
ParametersTest-Suite
ActuatorsStabilizationNavigation
Feature 
Extraction and 
Model-Based 
FilteringContext-/ Scene 
ModelingPlanning & 
Control
Road-Level
Environment 
ModelingEnvironment &
Self PerceptionGlobal Localization 
& Mapping
Communication (HMI/V2X)Guidance
Feature-Level
Localization & 
Map ProvisionRoad-Level 
Localization & 
Map Provision
Lane-Level 
Localization & 
Map Provision
Environ. 
SensorsVehicle 
SensorsLocalization SensorsTest System and Test BedSituation
Fig. 19.7 Situation-based open-loop testing as a middle ground between unit tests and scenario-
based testing in a generalized, not project-speciﬁc functional system architecture based on [ 8]
from the tactical behavior planning modules are compared with an a-priori-known
ground truth of correct driving decisions. Deviations from that ground truth of
expected behavior are evaluated and marked as a pass or fail of such a particular
test. Other than in traditional unit tests, the same situation may be used repeatedly
as a stimulus for a planning module. Thereby, steady states of dynamic, model-free
ﬁltering components (e.g., low pass ﬁlters) can be reached and tested. Moreover,
modules can be tested as a whole, not only single classes of them.
Advantage of this test method is its applicability for fast testing of gradual
software changes. Additionally, the test suite can easily be expanded with new
test situations. Moreover, the tests can be executed faster than in real time.
Thus, situation-based open-loop testing is a versatile tool for testing during the
development process and a necessary step to be executed and passed for any
releases.
A limitation of this test procedure is that the temporal development of a situation
is currently not predicted by a situation prediction model. This renders it possibly
insufﬁcient for testing components containing model-based ﬁlters. Moreover, the
approach is clearly limited by its open-loop nature: The situation is not modiﬁed
and predicted based on the tactical behavior decisions of the module under test.19 Testing & Validating Tactical Lane Change Behavior Planning 461
19.4.3 Scenario-Based Cl osed-Loop Testing
Scenario-based closed-loop testing lifts some of the above-described limitations
of the situation-based open-loop testing. A test-case in scenario-based closed-loop
testing speciﬁes an entire scenario with its parameters and pass–fail criteria. This
includes scenes, events to alter these scenes, and goals & values used for situation
extraction and as an input for the driving function. The device under test is not
only one module like the tactical behavior planning module but rather any subset
of modules of the automated vehicle as a whole. Figure 19.8 illustrates a scenario-
based closed-loop testing of the feature extraction, scene modeling, guidance, and
stabilization.
By the scenario-based closed-loop testi ng, the interaction of ideally the whole
chain can be tested. The control and behavior response from the driving function is
used to inﬂuence future scenes and by this—implicitly—future situations.
As illustrated in Fig. 19.6, scenes will be modiﬁed over the course of the scenario
according to prediction models in the test s ystem. Thus, this mode of testing allows
to test model-based ﬁltering approaches. Other than in the situation-based open-
loop testing, objects may move ahead and initiate maneuvers over the course of the
simulation time. Such maneuvers may either be triggered by driver models in the
test system or deﬁned externally by events in the scenario.
The strengths of scenario-based closed-loop testing are short development cycles
for driving function development. In fact, a certain complexity level of scenarios
Test-Case
Pass-Fail-
CriteriaScenario
Scenario-
ParametersTest-Suite
ActuatorsStabilizationNavigation
Feature 
Extraction and 
Model-Based 
FilteringContext-/ Scene 
ModelingPlanning & 
Control
Road-Level
Environment 
ModelingEnvironment &
Self PerceptionGlobal Localization 
& Mapping
Communication (HMI/V2X)Guidance
Feature-Level
Localization & 
Map ProvisionRoad-Level 
Localization & 
Map Provision
Lane-Level 
Localization & 
Map Provision
Environ. 
SensorsVehicle 
SensorsLocalization SensorsdeB tseT dna metsyS tseTScenario
Fig. 19.8 Example for scenario-based closed-loop testing of perception and planning and control
modules in a generalized, not project-speciﬁc functional system architecture based on [ 8]462 S. Ulbrich et al.
can only be tested in a simulation framework in a resource efﬁcient manner. This
test technique allows to create scenarios to m atch the particular needs of a developer
within minutes. The closed-loop test allows to test the interaction of several modules
and helps to identify and analyze signal latencies or functional instabilities.
The authors see potential in using scenario -based closed-loop testing to obtain
meaningful test results for system validation, but proofs for it are yet to be provided.
Among the limitations of scenario-based closed-loop testing is the representa-
tiveness of the results. In fact, the simulation is based on several models of the
real world; starting with behavior models and vehicle dynamic models, via sensor
models, up to the design patterns of the scenery. The big caveat of such a simulation-
based design process is that a solution may get particularly well tailored to a
simulation environment but not necessarily to the challenges in the real world.
At the time of writing, the modeling of perception-induced measurement errors
and uncertainties is not yet sufﬁciently close to the real issues. While there are
certain sensor models to emulate certain artifacts of certain sensor systems, today’s
error models still lack the modeling of high-level errors like false classiﬁcations,
false segmentations, model-incompliant movement behavior, or false semantic
associations between perceived entities.
Moreover, a sophisticated simulation tool chain comes along with a signiﬁcant
overall complexity. Therefore, it often takes a lot of time to achieve the intended
results. In particular, switching back and forth between a development based on
recordings from driving in a real vehicle and a simulation-based development is
currently often a time-consuming issue.
19.4.4 Real World Driving Tests
Real world driving tests are the last step in the presented test process. They are used
for system and acceptance tests in the V-Model and simulation model veriﬁcation.
Necessitating a real vehicle or prototype , they should be executed after successfully
passing all situation-based open-loop and scenario-based closed-loop tests.
A test of driving functions with real environment conditions and resulting
uncertainties is only possible in real world driving tests. Real world driving tests
require also test-cases with scenarios, scen ario-parameters, an d pass–fail criteria.
The scenario parameters are given indirec tly, e.g., by actually driven trajectories
or a hereof resulting physical arrangement of other trafﬁc participants. Figure 19.9
illustrates the modules in a system architecture, which can be tested with real world
driving tests.
The advantage of real world driving tests is that they do not require simulation
models and thus do not induce errors by incorrect models. Real world driving tests
are to some extend random tests. Thus, many scenarios can be tested, without any
particular test-case generation.
The aspect of—to some extent—random testing simultaneously imposes a
severe limitation of the test method: Due to the random behavior of other trafﬁc19 Testing & Validating Tactical Lane Change Behavior Planning 463
Test-Case
Pass-Fail-
CriteriaScenario
Scenario-
ParametersTest-Suite
ActuatorsStabilizationNavigation
Feature 
Extraction and 
Model-Based 
FilteringContext-/ Scene 
ModelingPlanning & 
Control
Road-Level
Environment 
ModelingEnvironment &
Self PerceptionGlobal Localization 
& Mapping
Communication (HMI/V2X)Guidance
Feature-Level
Localization & 
Map ProvisionRoad-Level 
Localization & 
Map Provision
Lane-Level 
Localization & 
Map Provision
Environ. 
SensorsVehicle 
SensorsLocalization SensorsdeBtseTdnametsyStseTScenario
Fig. 19.9 Real world driving testing in a generalized, not project-speciﬁc functional system
architecture based on [ 8]
participants, the test-cases are not fully reproducible. Moreover, the test-cases
cannot be performed faster than in real tim e. Because of this, executing a large
number of test-cases is directly linked to high costs and expenditure of time.
19.5 Case Study: Testing and Validating Tactical Lane
Change Behavior Planning
This section presents a case study for testing and validating a module for tactical
lane change behavior planning. Section 19.5.1 describes the module under test in
brief. After this, the simulation-based testing for module and integration tests is
demonstrated. Section 19.5.2 presents situation-based open-loop testing for this
modules. Section 19.5.3 illustrates a scenario-based closed-loop testing for the lane
change behavior planning. Real world driving tests are excluded from this paper.
They can be found in Ulbrich and Maurer [ 17,18].
19.5.1 Item Under Test: Behavior Planning for Lane Changes
To demonstrate testing on the earlier introduced levels, a module for tactical lane
change behavior planning is used as an item under test. This module is part of the
guidance block in a functional system architecture as in Figs. 19.7,19.8,o rF i g . 19.9.464 S. Ulbrich et al.
Within the guidance block, a goal- and value-independent scene from the perception
modules is translated into a situation by an information selection and augmentation
process speciﬁcally based on the automated vehicle’s goals & values. This situation
is used as an input for the module for tactical behavior planning for lane changes.
It entails a situation assessment to estimate non-measurable aspects of the situation.
Moreover, the module encompasses the behavior decision making itself. This is
based on a situation prediction and a cost and reward model. This model estimates
how future behavior alternatives and resulting future situations have an affect on
the possibility and beneﬁt to execute a lane change. Based on this planning into the
future, the immediate next behavior actio n is used to command a trajectory target
point, e.g., in front of the automated vehicle in the ego lane, on a neighbor lane,
or with a targeted velocity and position difference to adjust towards a gap on a
neighbor lane.
19.5.2 Situation-Based O pen-Loop Testing
Figure 19.10 illustrates three exemplary test-cases out of a test suite of 29 test-cases
that are used for situation-based testing. Each of these situations is generated by
a set of support functions. Each situation is fed into the tactical behavior planning
module for planning lane changes for several cycles until a steady state of any low
pass ﬁltering component can be assumed. Fo r the moment, each situation is repeated
400 times resulting in an evaluation speed ﬁve times faster than real time ( 3:2s
per test-case). After such a cycle the tactical behavior of the lane change planning
module is compared to the expected behavior noted in the test-case. If the behavior
is identical, a test-case is passed. In this case study, the situation contains value-
continuous and value-discrete elements. To evaluate the behavior response of the
lane change planning module, value-discrete behavior choices were evaluated.
It is possible to execute a human-designe d set of the 29 most essential test-cases
on a standard computer in less than 2 min. This fact renders this test procedure very
efﬁcient for iterative testing even after minimal source code changes. Apart from
the test-cases itself, Fig. 19.10 illustrates the expected resulting behavior for each
of these test-cases and if it matches the obtained resulting behavior from the lane
change planning module. As indicated in the ﬁgure, all three test-cases have been
passed successfully.
19.5.3 Scenario-Based Cl osed-Loop Testing
For the scenario-based closed-loop te sts, Vires’ Virtual Test Drive (VTD)8is used
as a test system. It is a simulation tool chain for road trafﬁc, railroad, and ﬂight
8Vires Virtual Test Drive, www.vires.com19 Testing & Validating Tactical Lane Change Behavior Planning 465
Fig. 19.10 Test cases for situation-based lane change testing
simulation. It provides tools for creatin g road networks and scenarios as well
as a simulation backbone and rendering tools for the visualization. Moreover, it
encompasses several simulation models for vehicle dynamics, driver behavior, and
pedestrians. As a test bed, an ADTF ﬁlter graph is used to translate between VTD’s
simulation interfaces and the appropriate interfaces of the driving function.
Figure 19.11 illustrates scenario-based closed-loop testing showing the same
scene of a scenario side by side in VTD’ s scenario editor and the ADTF driving
function ﬁlter graph with an enabled visualization.
In Fig. 19.12 , an exemplary highway scenario for lane changes is depicted.
Initially, the automated vehicle drives with 35m/s on the rightmost lane of a
highway. It is approaching a slower vehicle in front of it. The dynamic disadvantage
of following a slower vehicle motivates the automated vehicle to perform a lane
change to the left (cf. subﬁgure (1) in Fig. 19.12 ). Since there is no slow vehicle466 S. Ulbrich et al.
Fig. 19.11 Scenario-based closed-loop testing in Virtual Test Drive (VTD) and ADTF [ 17]19 Testing & Validating Tactical Lane Change Behavior Planning 467
(1)
(2)
(4)(3)
Fig. 19.12 Illustration of a highway simulation scenario to test a lane change left due to ( 1)
dynamic beneﬁts, ( 2) longitudinal gap adjustment, ( 3) a lane change right, and ( 4) exiting a
highway to an exit ramp for an automated vehicle ( blue)
in front to follow, the automated vehicle accelerates to reach the target velocity of
vtargetD35m/s.
After passing several slower vehicles on the right lane by driving on the center
lane of a three lane highway, the automated vehicle gets close to an exit, where it is
commanded to leave the highway. Given the r elative speed difference, the gaps on
the right lane are too small for a direct la ne change. Hence, the automated vehicle
initiates a longitudinal gap adjustment to cen ter itself to the best reachable and best
sized gap. To achieve this, the automate d vehicle decelerates to reduce the speed
difference of itself and the trafﬁc on the right target lane (gap adjustment). This is
followed by a lane change to the right into the selected gap (cf. subﬁgure (2) in
Fig.19.12 ). Last of all, the automated vehicle exits the highway by changing once
more to the right on a deceleration lane of t he targeted highway exit (cf. subﬁgure (3)
in Fig. 19.12 ). The automated vehicle adapts its speed to the upcoming curvature of
the exit ramp (cf. subﬁgure (4) in Fig. 19.12 ).
Figure 19.13 illustrates selected state variables relevant for the lane change
behavior planning in the before-mentioned scenario. The ﬁrst three ﬁgures depict
relevant state variables of the situation the automated vehicle is facing: namely, the
(automated) ego vehicle’s velocity longit udinally to the lane, the lateral offset to
the center of the ego lane, and the distan ces to other objects directly in front of the
automated vehicle in the ego lane and the right neighbor lane.468 S. Ulbrich et al.
50 60 70 80 90 1001520253035vEgo[m/s]
50 60 70 80 90 100−101dPos,Ego [m]
50 60 70 80 90 100050100150Distance [m]Front Ego
Front Right
−100−500Distance [m] Rear Right
50 60 70 80 90 10000.10.20.30.40.5LcBeneﬁcialLcBeneﬁcial Left
LcBeneﬁcial Right
50 60 70 80 90 10000.250.50.751LcPossibleLcPossible Left
LcPossible Right
50 60 70 80 90 100−202 NormalDriving
PrepareLcRightIndicateLcRightDoLcRight DoLcLeftIndicateLcLeft
Time [s]Lc State
Fig. 19.13 Measured data for scenario-based closed-loop testing scenario on a highway19 Testing & Validating Tactical Lane Change Behavior Planning 469
Moreover, Fig. 19.13 visualizes some hidden state variables resulting from a
situation assessment (cf . Ulbrich and Maurer [ 17]). The two most relevant and here
depicted ones are the lane change possible estimate and the lane change beneﬁcial
estimate. Last of all, Fig. 19.13 shows the lane change action resulting from the
overall lane change planning process.
The earlier described scenario can be traced in the measured data. The longi-
tudinal ego velocity plot visualizes the before-mentioned velocity proﬁle. Initially,
the automated vehicle drives with vegoD35m/s. After experiencing a marginal
slow down by a vehicle in front of it, it activates the indicator to the left (cf.
LcState DIndicateLcLeft in last subﬁgure of Fig. 19.13 ), and executes a lane change
by building up a lateral offset to the left (cf. dego;posD1:8m; subﬁgure (1) in
Fig.19.12 ). After crossing the left lane boundary, the lane detection changes the ego
lane from the highway’s rightmost lane to the center lane of the three lane highway.
As the reference lane switches, it causes a jump in the lateral ego lane offset from
dego;posDC1:8mt o dego;posD/NUL1:8m. After this jump, the automated vehicle re-
centers itself to the new lane. On this middle lane of the highway is no other vehicle
closely in front of the autom ated vehicle. Hence it accelerates to reach the target
velocityvTargetD35m/s.
Several vehicles are passed or overtaken. This is illustrated by the distance of the
immediate next vehicle in the ego lane and the right neighbor lane. Several slower
vehicles are approached from b ehind (decreasing d istance) until they are overtaken.
In total, ten vehicles get overtaken by the automated vehicle.
After a certain time of driving the scenario requires the automated vehicle to exit
the highway at an upcoming highway exit on the right. Therefore, the automated
vehicle is required to change back to the rightmost lane of the highway. To achieve
this, the automated vehicle activat es a longitudinal gap adjustment at tD78s
(cf.LcState DPrepareLcRight in last subﬁgure of Fig. 19.13 ; subﬁgure (2) in
Fig.19.12 ). To simplify a lane change, the relative velocity difference between
the automated vehicle ( vEgoD35m/s) and the objects/gaps on the right lane
(vTarget D22m/s) has to be reduced. After a few seconds, a lane change becomes
possible and the automated vehicle changes to the rightmost lane of the highway at
tD90s by activating the indicat or right and building up a lateral displacement to
the right (cf. LcState DDoLcRight ). At tD95s, the lane change is ﬁnished and
the automated vehicle is fully re-centered to the rightmost lane. After a few more
seconds it reaches the beginning of the exit ramp (cf. subﬁgure (3) in Fig. 19.12 ).
Even before the exit ramp is actually next to the automated vehicle, the right
indicator is activated based on the inform ation from an a-priori map that there is
the exit ramp about to appear on the right.
This predictive indicator mode helps to prevent conﬂicts with other vehicles
changing faster to the exit lane and possibly blocking the automated vehicle from
being able to change to the exit ramp. After the exit ramp has reached its full width,
the automated vehicle changes onto the exit ramp and slowly adapts its speed (cf.
vEgoD18m/s; subﬁgure (4) in Fig. 19.12 ) to follow the right turn of the exit ramp.470 S. Ulbrich et al.
19.6 Conclusions
In this article, the concept of situation-based open-loop testing and scenario-based
closed-loop testing has been developed as a concept and illustrated in a casestudy. This has been founded on a terminology for relevant terms. The terms areused to present different levels of testing that proved to be useful for the test ofdriving function modules: unit tests, situation-based open-loop tests, scenario-basedclosed-loop tests, and real world driving tests as different steps for system testingand validation. The different advantages and limitations of the test methods areintroduced. Moreover, a comparison bet ween the introduced test steps and real
world driving tests is given. The situation-based open-loop and scenario-basedclosed-loop test methods are demonstrated by a case study of a lane change behaviorplanning.
The article does not address a systematic approach to generate test-cases. So far,
they were manually designed by a human expert. Moreover, the test-case evaluationis not automated for the scenario-based closed-loop simulation. At the moment a
human expert needs to deﬁne and evaluate p ass–fail criteria for each test-case. While
this works well for testing during the development phase, it scales unfavorably forvalidation tests with thousands or millions of test-cases automatically executed on a
simulation server farm.
The next step is to use the situation-base d open-loop and scenario-based closed-
loop test methods combined with a systematic test-case generation to automaticallyﬁnd system boundaries and scenarios, where the system under test shows a lowerperformance. This includes an automatic test-case evaluation based on eligible pass–fail criteria.
References
1. M. Arnold, M. Glinz, M. Erdmann, Survey on the scenario use in twelve selected industrial
projects. Technical Report 98-7, Rheinisch-Westfälische Technische Hochschule Aachen, 1998
2. X. Bai, W.T. Tsai, K. Feng, L. Yu, R. Paul, Scenario-based modeling and its applications,
inProceedings of the Seventh IEEE International Workshop on Object-Oriented Real-Time
Dependable Systems (WORDS 2002) (IEEE Computer Society, New York, 2002), pp. 253–260
3. P. Bergmiller, Towards Functional Safety in Drive-by-Wire Vehicles (Springer, Berlin, 2015)
4. Bibliographisches Institut: Situation. No. 21 in Meyers Enzyklopädisches Lexikon (English
title: Meyer’s Encycl opedia). Bibliographische s Institut AG, Mannheim (1977)
5. S. Geyer, M. Baltzer, B. Franz, S. Hakuli, M. Kauer, M. Kienle, S. Meier, T. Weissgerber, K.
Bengler, R. Bruder, F. Flemisch, H. Winner, Concept and development of a uniﬁed ontologyfor generating test and use-case catalogues for assisted and automated vehicle guidance. IETIntell. Transp. Syst. 8(3), 183–189 (2014)
6. International Organization for Standardization (ISO): ISO 26262:2011 Road vehicles - func-
tional safety (2011)
7. S. Khastgir, S.A. Birrell, G. Dhadyalla, P.A. Jennings, Identifying a gap in existing validation
methodologies for i ntelligent automotive systems: i ntroducing the 3xD simulator. in IEEE
Intelligent Vehicle Symposium (IV) (2015), pp. 648–65319 Testing & Validating Tactical Lane Change Behavior Planning 471
8. R. Matthaei, M. Maurer, Autonomous driving - a top-down-approach. at - Automatisierung-
stechnik 63(3), 155–167 (2015)
9. M. Maurer, EMS-vision: knowledge representation for ﬂexible automation of land vehicles, in
IEEE Intelligent Vehicles Symposium (IV) (2000), pp. 575–580
10. J. Ryser, M. Glinz, A scenario-based approach to validating and testing software systems using
statecharts, in 12th International Conference on Software and Systems Engineering and their
Applications (ICSSEA) (1999). [Without pagination]
11. F. Schuldt, T. Menzel, M. Maurer, Eine Methode für die Zuordnung von Testfällen für automa-
tisierte Fahrfunktionen auf X-in-the-Loop Verfahren im modularen virtuellen Testbaukasten (Amethod to assign test-cases for automated driving functions towards x-in-the-loop techniquesin a modular virtual test framework). Works hop Fahrerassistenzs ysteme 2015. Wa lting ( 2015),
pp. 171–182
12. I. Sommerville, Software Engineering , 9th edn. (Addison-Wesley, Harlow, 2010)
13. H. Tadjine, K. Schulze, R. Ro ellig, H. Daniel, Ne w methods and tools for the development
and veriﬁcation of safety functions during development of pedestrian detection systems, in 8th
International Conference on Computing Technology and Information Management (ICCM) ,
vol. 1 (2012), pp. 434–438
14. M. Touseef, Z.H. Qaisar, A use case driven approach for system level testing. Int. J. Comput.
Sci. Issues (IJCSI) 9(1) (2012), p. 78
15. W. Tsai, A. Saimi, L. Yu, R. Paul, Scenario-based object-oriented testing framework, in Third
International Conferen ce on Quality Software (2003), pp. 410–417
16. W.T. Tsai, X. Bai, R. Paul, W. Shao, V . Agarwal, End-to-end integration testing design, in 2001
IEEE Computer Society International Conference on Computers, Software & Applications
(COMPSAC) (IEEE, New York, 2001), pp. 166–171
17. S. Ulbrich, M. Maurer, Situation assessment in tactical lane change behavior planning for auto-
mated vehicles, in 18th International IEEE A nnual Conference on Inte lligent Transportation
Systems (ITSC) (2015), pp. 975–981
18. S. Ulbrich, M. Maurer, Towards tactical lane change behavior planning for automated vehicles.
in18th International IEEE Annual Conference on In telligent Transportation Systems (ITSC)
(2015), pp. 989–995
19. S. Ulbrich, T. Menzel, A. Reschka, F. Schuldt, M. Maurer, Deﬁning and substantiating the
terms scene, situation and scenario for automated driving, in 18th International IEEE Annual
Conference on Intelligent Transportation Systems (ITSC) (2015), pp. 982–988
20. K.P. Wershofen, V. Graefe, Situationserkennung als Grundlage der Verhaltenssteuerung eines
mobilen Roboters (Situation perception as basis for behavior control of a mobile robot), inFachgespräch AMS , Munich (1996)
21. H. Winner, Device for providing signals in a motor vehicle WO Patent App. WO2002058975
A1 (2002)
22. H. Winner, Quo vadis, FAS? in Handbuch Fahrerassistenzsysteme , ed. by H. Winner, S. Hakuli,
F. Lotz, C. Singer, ATZ/MTZ-Fachbuch (Vieweg+Teubner, Wiesbaden, 2015), pp. 1167–1186Chapter 20
Safety Performance Assessment of Assisted
and Automated Driving in Trafﬁc: Simulation as
Knowledge Synthesis
Thomas Helmer, Klaus Kompaß, Lei Wang,
Thomas Kühbeck, and Ronald Kates
20.1 Introduction
20.1.1 Driver Assistance and Automation
Based on comprehensive, sensor-based detection of vehicle surroundings, the vision
of self-driving vehicles has already become a reality in research vehicles (e.g.,
[1,2]). Today, advanced driver assistance systems (ADAS) or partial automation,
in which the vehicle assumes the role of a “copilot,” can assist the driver in
demanding situations, support him in complex or hazardous situations, and, if
necessary, perform maneuvers automatically. Higher levels of automation can, at
least temporarily, free the driver entirel y from the driving task and enable him to
fulﬁll other tasks. Thus, automation could cause a considerable improvement in the
quality of individual mobility [ 2].
In addition to individual mobility, collect ive and socioeconomic impact of vehi-
cle automation have a central role regarding further development and dissemination
of those functions. In highly developed and industrialized countries, especially
within metropolitan areas, satisfaction of the “mobility demands” often requires
additional infrastructure and induces impacts on environment and quality of life.
High percentages of automated vehicles could enable technological strategies that
This chapter is largely based on: Klaus Kompaß et al.: Fahrerassistenz und Aktive Sicherheit.
Wirksamkeit—Beherrschbarkeit—Absicherung. expert verlag, Renningen 2015
T. Helmer (/envelopeback)  K. Kompaß  L. Wang  T. Kühbeck
BMW AG, Munich, Germany
e-mail: thomas.helmer@bmw.de
R. Kates
REK Consulting, Otterﬁng, Germany
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_20473474 T. Helmer et al.
increase the capacity of streets and th e “mobility supply” an d thus allow a more
environmentally friendly and efﬁcient use of resources.
Reliability and safety criteria are key factors for homologation and operation
of advanced driver assistance systems and especially automated driving functions.
Only when the overall safety level of a t echnology reaches (or exceeds) a generally
accepted threshold should secondary criteri a, such as comfort or efﬁciency, be
considered.
Since the individual customer is hardl y able to independently evaluate the
safety features when purchasing a vehi cle, he has to rely on trustworthy and
objective evaluations by third parties. In addition to automotive manufacturers and
suppliers, public decision-makers, regulatory agencies, insurance companies, and
consumer protection organizations are key stakeholders in the evaluation of vehicle
safety. In particular, demonstration of equivalent or superior safety in all operating
scenarios is an important prerequisite for the introduction and homologation of
novel technologies, such as automated driving functions (ADF).
Ideally, it should be possible to derive quantiﬁable predictions of safety impacts
for new technologies in such a way that all stakeholders can agree on their rele-
vance, objectivity, validity, and reproducib ility—despite their som etimes divergent
interests. A prerequisite for this is a careful deﬁnition of an appropriate safety metric
with respect to the speciﬁc context.
Thus, for example, in the context of pedestrian protection, the reduction of
pedestrian injury by mitigating or avoiding collisions is the primary objective. The
quality of pedestrian protection system could be objectively quantiﬁed by a metric
which relates to injury reduction (see below).
An objective metric of trafﬁc safety also includes possible side effects [ 8,13,
22,33]: preventative pedestrian protection, for example, can result in occasional
unwanted system actions due to the underlying physics. As a consequence, sec-
ondary risks can occur (e.g., rear-end co llisions following an emergency braking
maneuver). With the help of an objectiv e metric, the ratio of desired safety
improvements to unwanted side effects can be quantiﬁed. Based on this ratio, the
function can be optimized with respect to trafﬁc safety (Fig. 20.1).
Several important aspects of vehicle safety such as integrity of communication,
data protection, and technical reliability are beyond the scope of this paper. The
focus here is on the effects of ADAS and current as well as future fully operational
automated systems on trafﬁc safety.
Although ADAS are generally designed to minimize well-known accident risks
or mitigate the consequences of unavoidable accidents, the optimal design of ADAS
in terms of trafﬁc safety is a complex task. ADAS usually rely on sensor-based
decision algorithms, which often depend on certain parameter settings. However,
any interaction with the driver or interference with the driver’s task can in principle
have a positive or negative impact on trafﬁc safety, for example:
Lane departure warning : A typical criterion for an alarm or intervention in
case of impending lane departure would be “time to lane crossing” (TLC),
calculated using sensor data. It could be assumed that earlier warnings (large20 Safety Performance Assessment of Assisted and Automated Driving ... 475
Fig. 20.1 Changes in trafﬁc safety due to advances in driver assistance and automation (after [ 19])
TLC—thresholds) are “safer.” However, too many unnecessary warnings could
lead to negative feedback, such as a lack of acceptance.
Emergency braking systems : It could be assumed that earlier system interventions
avoid more rear-end collisions. However, some drivers might still execute an
evasive maneuver, even if accident avoi dance by braking was no longer possible
(this is a well-known dilemma regarding braking and steering). Moreover, if
the system reacts in such situations too early with a correspondingly strong
intervention, the risk of accidents for th e driver (loss of control) as well as for
subsequent vehicles (rear-end collisions) can arise.
20.1.2 Assessment and Optimization of ADAS and ADF as Key
Processes During the Development
The examples illustrate that design of advanced driver assistance systems or auto-
mated driving functions is a complex task, especially with regard to optimization of
trafﬁc safety.
One approach for structured analysis o f impacts on trafﬁc safety of existing
ADAS is retrospective analysis of accident databases linked to vehicle equipment
data (if feasible). However, large sam ples from accident databases and long
observation times [ 8] are required for retrospective s tatistical evaluation of accident
avoidance due to ADAS. Statistical challenges for evaluation of a particular ADAS
arise due to multifactorial data characteristics: vehicles in the sample may differ
in several aspects, not only regarding the equipment with the system in question.
Vehicles from different manufacturers may have different functional characteristics,
interaction concepts with the driver, or activation conditions. Differences of driver
population or exposure to trafﬁc scenarios can be correlated with the equipment.
Such properties of retrospective studies act statistically as confounders and make an
unambiguous interpretation of results an d conclusions about causality challenging.476 T. Helmer et al.
Comprehensive statements regarding cha nges in trafﬁc safety (“effectiveness”) are
therefore often problematic [ 13,22].
In addition, evaluation of the consequences of unwanted system actions is
practically impossible based on retrosp ective studies alone, since the relevant
accident types in general relate to a r ange of possible secondary effects.
Summarizing, retrospective studies can enable ex post evaluations, but can hardly
be used for any optimization of ADAS or ADF, due to the long feedback loop of the
development, retrospective evaluation, and redesign.
Interestingly, retrospective surveys are also considered as second best for assess-
ment of new treatments or therapies in health care: the standard of quality is rather
a prospective, randomized, controlled trial in a representative sample.
There is an urgent need for reliable and valid predictions of trafﬁc safety for
design and optimization of ADAS and especially for ADF. The evaluation and
optimization of such systems using trafﬁc safety predictions should be an integral
part of the development process.
However, truly prospective, randomized, controlled, and representative studies of
ADAS are not feasible on public roads due to ethical and practical considerations.
This dilemma could be resolved using virtual, simulation-based trafﬁc safety
predictions of ADAS and ADF.
20.2 Overall Safety Assessment
20.2.1 Safety and Economy
Currently, passive, active, and integral safety functions contribute to the goal
of improved vehicle safety [ 23,25]. In the future, automation is also expected
to exert a decisive inﬂuence on vehicl e safety. It is increasingly necessary to
assess and compare competing, technically feasible safety measures regarding their
effectiveness in order to deﬁne appropriate priorities. Therefore, a comprehensive
approach for safety assessment of n ew technical concepts is required.
Since automation affects the entire trafﬁc ﬂow, it can also have an impact on
individual driving comfort and efﬁciency. Thus, in assessing ADF, comfort as well
as social and economic aspects will play an important role in addition to safety.
20.2.2 Conﬂicting Objectives in Vehicle and Trafﬁc Safety
In assessing effectiveness of ADAS and ADF, both positive inﬂuences as well as
risks and side effects need to be considered and included [ 8,13,22,33].
Considering active safety systems, som e conﬂicting objectives are well known,
for example, during the precrash phase: if a system classiﬁes a risk situation20 Safety Performance Assessment of Assisted and Automated Driving ... 477
Table 20.1 Categorization
of possible system actions
(following [ 21])
System action
Yes
 No
Objective risk
 Yes
 True positive
 False negative
No
 False positive
 True negative
very late, “false negatives” or too late system actions can occur, reducing the
effectiveness of the ADAS. Conversely, if a system responds to a potential hazardous
situation very early, “false positives” can result (see Table 20.1): in these cases, the
driver could possibly have avoided the accident even without system intervention.
Excessive frequency of false positives can reduce acceptance and even result in
negative feedback on trafﬁc safety [ 8,13,20].
For future automated systems, even more complex trade-offs between conﬂicting
objectives can be expected during the design phase.
The comparison of effectiveness and conﬂ icting objectives is part of an integrated
development and assessment process of adv anced vehicle safety systems. Current
methods based on single tests usually cannot properly take conﬂicting objectives
into account [ 22,33].
In order to quantify the effectiveness of ADAS in a target scenario by a
virtual experiment (see below), an appropriate metric for characterization of the
safety beneﬁts is required. An ideal me tric includes both avoided accidents and
reduced injury severity as well as reduced fatalities in the remaining accidents.
Probability models can be used to derive injury severity based on detailed accident
characteristics in the target scenario. To cal culate the metric, two steps are required:
ﬁrst, calculating the impact of the syste m on accident characteristics in the target
scenario and, second, applying a conditi onal probability model of injury severity
depending on these characteristics.
To model injury severity—quantiﬁed as MAIS (maximum abbreviated injury
scale), for example—dependi ng on accident characteristics, there are several com-
plementary approaches. A commonly used method is the construction of statistical
models (e.g., regression models) fro m existing accident databases (e.g., [ 11,14–
16]). Another approach is “co-simulation.” Here, a representative sample of time
series from accident simulations is genera ted and analyzed using a high-resolution
crash simulation, which is capable of rapidly calculating injury indicators [ 9,35].
As mentioned above, certain interventions of ADAS, such as automatic braking
or evasive maneuvers, can induce serious side effects into trafﬁc, for example, loss
of controllability.
Milder side effects, for example, decr ease in user acceptance, can also be caused
by controllable interventions or warnings, if they are perceived as superﬂuous (false
positive). Since ADAS can only fulﬁll their purpose once they are activated, a
high alarm rate, lacking comprehensibl e justiﬁcation for the driver, can lead to
disproportionate non-utilization rates or frequent lack of response to warnings.478 T. Helmer et al.
Such unintended side effects impact the overall quality of an ADAS and should
therefore be considered as part of an assessment. For this purpose, it is necessary
to classify false-positive actions and other unintended side effects regarding their
frequency and severity.
A key characteristic, borrowed from m edicine, is the NNT (“number needed to
treat”). In terms of ADAS, NNT can be deﬁned as the ratio between all system
actions and true positives, i.e., desired system actions [ 5,11,31]. NNT can be
calculated separately for each type of syst em action (warnings, interventions).
It is useful to distinguish false positives occurring due to technical limitations
from those occurring due to situational uncertainties (such as a possible mitigation
of a hazardous situation by other trafﬁc par ticipants). A camera-based sensor, for
example, can cause false positives if a phantom object is detected due to light
and shadow that apparently poses a hazard. Eliminating technically induced false
positives may sometimes be accomplished w ithout compromising effectiveness
using, for example, test drives.
However, a portion of “unnecessary” syste m actions arises, as described above,
due to essential conﬂicting objectives and cannot be eliminated without impact on
effectiveness. Therefore, a systematic ba lancing in terms of “beneﬁts” and “costs1”
is useful during design of most ADAS: each system action is assigned a value for
“costs,” and each avoided adverse event (e.g., accident) is assigned a value for
“beneﬁt.” The safety effect of an ADAS can then be optimized based on this balance
(e.g., using NNT).
In practice, it is hardly feasible to carry out such an optimization based solely
on empirical driving tests or other classical testing setups. Due to the rarity and
variability of accident scenarios, it is virtually impossible to obtain a statistically
reliable proportion of avoided accidents in t he test time available. Therefore, it can
be considered current practice to design advanced driver assistance functions to have
a false-positive rate below a given threshold. The dependence of effectiveness on
control parameters (such as threshold TTC value for triggering) may show trends
in individual experiments; however, this approach does not allow optimization with
respect to effectiveness and false positives. True ADAS optimization requires feed-
back between the assessment and development processes. Finally, the assessment of
ADF will also require meaningful methods allowing an integration of optimization
into the development process [ 8,23,33].
1“Costs” in this context is used as collective term for unintended side effects, not necessarily in the
monetary sense.20 Safety Performance Assessment of Assisted and Automated Driving ... 479
20.3 Design and Optimizatio n of ADAS Using Virtual
Experiments
20.3.1 Paradigm of Design of Virtual Experiments
The concept of virtual experiment plays a central role in the comprehensive safety
assessment of ADAS. A typical design of a virtual experimental uses the paradigmof a prospective, randomized, controlled, and representative trial. The difference to a“real” experiment is the substitution of the actual trafﬁc ﬂow with a simulated trafﬁcﬂow and the representation of other “real” components by simulated components.Quality and validity are central requirements in this paradigm.
As in prospective, randomized trials, “treatments” (here one or more variants
of an ADAS) are compared to a reference (control or “baseline”)—for example a
vehicle without the system. In the virtual trial design, target variables are statistically“captured” and used to calculate the rel evant metric of trafﬁc safety, analogous
to empirical tests. Effectiveness of a system to the baseline can be quantiﬁed
objectively using the metric. Just as in a randomized, controlled trial, the detectionof small differences of effectiveness using statistical tests requires correspondinglyhigh numbers of cases or long observation periods in virtual trials. Unlike inempirical studies or test driving, high virtual sample sizes can be produced withrelatively modest resources.
20.3.2 Representation of Safety-Relevant Processes
in Simulation
In principle, all relevant dynamic and human processes are represented as time series
of states within the simulation. The simulated changes of those states can haveboth “deterministic” and “stochastic” characteristics. For example, the yaw rate of avehicle on a dry surface is primarily deterministically dependent on steering wheelangle and speed, but slippage introduces an effectively stochastic component. Theduration from a collision warning to braking by the driver can vary widely withina population of drivers and therefore must be regarded as stochastic. Simulationmodels must therefore be capable of repr esenting not only deterministic but also
stochastic properties.
Using safety assessment for the design and development of ADAS must therefore
consider the stochastic properties of all relevant technical and human processes.480 T. Helmer et al.
20.3.3 Knowledge Synthesis and Integration of Other Test
Domains
All safety-relevant processes are modeled in sufﬁcient detail in the simulation. The
strategy is to capture the effects of ADAS o n these processes. These processes are
related to exposure variables, trafﬁc ﬂow, and dynamics of the driver-vehicle unit
including human factors, technical systems, and so forth. There are many possible
interactions within a driver-vehicle unit and between trafﬁc participants and their
surroundings. For ADF, the interaction between driver and vehicle may possibly be
very limited (Fig. 20.2). Trafﬁc safety is a result of all elements of the driver-vehicle
control loop [ 26], together with other factors, such as infrastructure or regulations.
For technical systems, the entire process c hain must be represented. The process
chain generally consists of sensors, trafﬁc environment modeling, algorithms
(logic), and vehicle dynamics controllers and actuators (Fig. 20.3). Additionally,
the system impacts and feedback loops on driver, vehicle, and trafﬁc are modeled.
The models must in particular take the stochastic nature of physiological,
psychological, and phys ical phenomena into account. Each warning or any direct
intervention of an ADAS may trigger or affect a driver’s individual response.
In this paradigm, simulation serves as a form of knowledge synthesis. The models
are synthesized to obtain realizations of al l process chains and ﬁnally the safety
metric. The validity of any result from the virtual testing of ADAS will depend,
of course, on the quality of the underlying knowledge base (i.e., the models). The
development of an appropriate knowledge base therefore represents one of the
central tasks of a holistic assessment approach.
Fig. 20.2 Possible interactions of driver-vehicle-surroundings including ADAS or ADF; each
including possible interactions with another human driver (after [ 3])20 Safety Performance Assessment of Assisted and Automated Driving ... 481
Fig. 20.3 Generic process chain of ADAS/ADF (without interaction with the driver) [ 24]
A wide range of existing data sources on vehicle, trafﬁc, and human factors
is used for modeling: accident databases and trafﬁc surveys, NDS (“naturalistic
driving studies”), FOT (“ﬁeld operational test”), static trafﬁc observations (e.g.,
highly instrumented research intersections), as well as classical testing methods
such as tests on test tracks, laboratory experiments, and software, hardware, and
“vehicle in the loop” (see, e.g., [ 7,11,12,34,36]).
In order to create relevant scenarios w ith a representative frequency in the
simulation, “exposure models” are required. Exposure models, i.e., insights about
the frequency of certain constellations of risk factors, are supported by trafﬁc
surveys, NDS, and FOT, for example.
Test methods are subject to certain ethical and practical limitations, for example,
they need to be risk-free. Although classical testing methods alone hardly enable
overall conclusions about effectiveness and the optimal design of ADAS, they
provide valuable information to describe human or technical factors in a limited con-
text. Functions can be tested on test track s under varying conditions (road classes,
weather) using a real vehicle with full experimental control. The obtained ﬁndings
are used in virtual experiments to calibrate and to validate various simulation models
(Fig. 20.4). Modeling can be performed empirically and/or on a theoretical basis.
For comprehensive assessments, represe ntative scenarios are needed. From the
set of relevant scenarios, individual situati ons are “sampled,” i.e., created virtually.
The values of all stochastic variables are drawn from appropriate distributions.
Sampling may be repeated or independe nt. In repeated sampling, each randomly
generated scenario is simulated multiple times (e.g., with/without ADAS), whereas
in independent sampling, new samples are drawn for each run.
Using simulation-based knowledge synthesis, it is possible to derive comprehen-
sive and representative conclusions regarding effectiveness of ADAS.482 T. Helmer et al.
Fig. 20.4 Schematic process of modeling and validation [ 24]
20.3.4 Process Description for Assessing Pedestrian Protection
Some of the typical process models used for virtual testing can be illustrated in more
detail using the example of a hypothetical camera-based ADAS for preventative
pedestrian protection [ 18]. In an exemplary scenario, a pedestrian crosses a straight
one-way street (one lane) between two intersections without occlusion. In this
scenario, trafﬁc ﬂows with typical (daytim e dependent) urban speeds, and there is
no evasive maneuver possible for the vehicle.
If there is a conﬂict between the veh icle with ADAS and a pedestrian, the
pedestrian protection system can issue a warning, reduce brake assist thresholds,
or brake automatically.
In addition to models for the pedestrian protection system, process models are
required for trafﬁc participants, especially for pedestrians, for directly involved
vehicles, and for trafﬁc ﬂow in general. The models describe exposure (i.e., how
often certain constellations of variables occur), trafﬁc environment, and dynamics
of all road users.
As part of the exposure model for pedestrians, samples for the initial situation
can be drawn from (possibly correlated) model distributions, including:
– Context variables: frequency of pedestrian crossings by age and sex depending
on time of day and day of week
– Physiological attributes of pedestrians: height and weight as functions of age and
sex; fatigue and blood alcohol depending on age, gender, day of week, and time
of day
– Cognitive characteristics: attention, visual performance, and reaction skills
(related to age, sex, alcohol, fatigue)
After a “virtual pedestrian” has been “drawn” and “generated” with his char-
acteristics, the crossing processes are simulated using these features. Included are
decision-making processes, such as gap acceptance, walking vs. running, selected
destination and walking direction, initial velocity (which of course depends on the
estimate crossing time), etc.20 Safety Performance Assessment of Assisted and Automated Driving ... 483
The modeling of a process such as gap accep tance often requires a considerable
degree of complexity: high trafﬁc density, for example, can increase the waiting time
for a larger time gap; hence, some pedestri ans become “impatient,” with the result
that they also accept smaller gaps after a certain waiting period. Various causes of
cognitive estimation errors can lead to misjudgment of the time gap or the time
required for crossing and thus provoke trafﬁc conﬂicts.
Simulated safety metrics exhibit an inﬂuence of observable variables, such
as age or impairment. The dependence o n these variables can be compared to
corresponding dependencies in published s tudies in order to validate detailed
modeling aspects. For the assessment of ADAS, such detailed modeling aspects
are at least indirectly relevant, because they determine the composition of the risk
factors in conﬂicts and thus the potential effectiveness of ADAS.
Other stochastic process models describe perception of acute conﬂict, responses,
and actions of the pedestrian (retreat, anticipation, etc.). The corresponding proba-
bility distributions of actions can, e.g., depend on the cognitive and physiological
requirements and states at the time of reaction.
There are also corresponding process models for the driver. The cognitive state,
for example, is essential for the driver’s safety performance. The perception models
consider, for example, geometric relations, environmental conditions, and dynamics
of the situation. Following initial perception, reaction processes are modeled in
accordance with establis hed model paradigms [ 10,17,27,28], depending on the
element of surprise and cognitive status.
The actual simulation run includes dynamic models for pedestrian and vehicle
movement, which in turn depend on the other process models. For both pedestrians
and drivers, strong individual differences can be observed. Individual differences,
such as reaction time of the driver or brakin g intensity, are especially important for
the assessment of trafﬁc safety. As a result, a random number of individual, but
in sum representative, situations can be created on the basis of a trafﬁc scenario
(Fig. 20.5).
At the end, time series of all virtual state variables can be extracted from
every run—including those variables that are difﬁcult to detect in standard lab
experiments. An example is the determination of which stimulus has led to the
reaction and deceleration by the driver, i.e., his own perception of the critical
situation or a system warning. The corresponding cognitive processes may occur
in parallel. These ﬁndings can be incorporated directly into the design of a warning
strategy.
20.3.5 Simulation of ADAS Effectiveness
In addition to the simulation of trafﬁc ﬂ ow, vehicle dynamics, other trafﬁc par-
ticipants, as well as human factors, such as perception and reaction, the process
of virtual evaluation (Fig. 20.6) also requires an appropriate model of the driver
assistance system.484 T. Helmer et al.
Fig. 20.5 Schematic representation of different individual situations as a result of stochastic
processes in a trafﬁc scenario [ 24]
Fig. 20.6 Process of virtual assessment of ADAS: overview with example of preventive pedestrian
protection (after [ 24])
The precise technical realization of an A DAS plays in general an indirect role for
effectiveness assessment. For example, the detection of a pedestrian by means of a
camera and the detection of the distance an d the relative speed to a preceding vehicle
are highly complex and device-speciﬁc t echnical processes. In order to assess the
potential effectiveness of an ADAS, it is often useful to begin with an abstract
model: system concepts can be analyzed at an early stage, without being limited
by the exact technological realization.20 Safety Performance Assessment of Assisted and Automated Driving ... 485
Models of performance, detection characteristics (sensors, object classiﬁcation,
etc.), algorithm logic, and actuator models are in many cases important for
simulation and assessment of ADAS.
The effectiveness of ADAS is, among other things, determined by the system
boundaries. These can theoretically depend on the trafﬁc context (such as vehicle
speed or road class given by a digital map), environmental conditions (light condi-
tions, weather), or on conditi ons for automatic system activation or deactivation.
Furthermore, e.g., system activation by the driver or other human factors can
inﬂuence effectiveness.
Detection systems in trafﬁc are subject to system limits and to various uncer-
tainties and latencies. As a consequence, in practice, detection systems often show
stochastic characteristics. For example, the time for stable object recognition by
means of a camera can depend on partial occlusion of the object or complexity
of the trafﬁc scene. The algorithms for situation detection and action usually
rely on measurements from the detection systems; the derived characteristics
(such as estimated “time to collision” for a detected object) are therefore also
subject to corresponding latencies and uncertainties that require appropriate, mostly
stochastic, modeling. Also, system actions often act indirectly by stimulating a
driver reaction (e.g., warnings) or interact with (stochastic) driver actions (e.g., by
lowering the threshold for brake assist). Overall, stochastic characteristics have a
major impact on the overall safety assessment of ADAS.
With increasing complexity of the systems, an abstract representation of the
functionality of an ADAS may require considerable effort. Also, verifying that
an abstract system model actually behaves like the real technical system poses a
challenge with increasing system complexity. To meet this challenge, alternative
approaches are possible.
Instead of abstract models, real components of ADAS can be directly connected
to the simulation using an appropriate test facility (e.g., hardware in the loop)
[12]. In addition, ﬁndings from such test benches can be used for calibration and
validation of relevant models in the simulation even without a direct connection.
The actual code may be used in the simulation instead of an abstract model of the
system logic. This results new challenges for the simulation and the models used
due to the technical interfaces used.
20.3.6 Interpretation of ADAS Effectiveness
In the example scenario of “preventative pedestrian protection,” millions of virtual
crossings in the reference scenario (without pedestrian protection system) lead to
several thousand collisions between pedestri ans and vehicles. The attributes of these
collisions are “known” from the simulation, i.e., speed, vehicle characteristics,
collision constellation, age group, body hei ght and weight of the pedestrian, etc.
Using an appropriate model (see above), the distribution of the injury severity in
collisions without ADAS can be determined. T his distribution is used as reference
for comparison.486 T. Helmer et al.
A lower number of collisions occur in the virtual experiment after the same
number of crossings with a pedestrian protection system. The properties of thecollisions (such as reduced collision speeds) are changed due to the ADAS, andconsequently the distributions of injury severity are modiﬁed. In this case themetric of injury severity represents the effectiveness of the preventative pedestrianprotection system. The overall safety performance includes also NNT and anassessment of possible secondary risks, such as rear-end collisions in upstreamtrafﬁc.
20.4 New Challenges for Virtu al Assessment of Automated
Driving Functions
20.4.1 Impact of Automated Driving Functions
on Safety-Related Processes in Trafﬁc
The monitoring function of systems of active safety is carried out in continuous
operation; however, warnings and interventions are sporadic events. Apart fromtheoretically possible feedback, for example, through changes in user behavior, theperceived inﬂuence on the driving task usually remains very limited.
In contrast ADAS with regular control operations, such as active cruise control
(ACC) or ADF, operate continuously. Safety assessment of these functions requiresconsideration of their effect on safety-related processes in trafﬁc ﬂow as a whole, notonly in certain target scenarios. Overall tra fﬁc safety includes both positive effects
and potential risks. This assessment requires a variety of additional exposure andprocess models.
20.4.2 Contributions to Safety Impact in Existing Risk
Scenarios
A portion of possible positive contributions of ADF (similar to ADAS) comes from
consideration of relevant and potentially hazardous scenarios where the advantages
of ADF help avoid potential accidents or mitigate their consequences. “Scenario”in this context refers to all potentially h azardous trafﬁc situations that can lead to a
certain type of conﬂict.
Using virtual experimental design (as for ADAS), an appropriate reference
sample of relevant scenarios can be deﬁn ed and considered. The contribution to
effectiveness due to ADF can be quantiﬁed using a sample of virtual experiments,once the scenarios and their frequencies are known.20 Safety Performance Assessment of Assisted and Automated Driving ... 487
Example, rear-end scenario on a freeway : Without ADF (or ADAS), an inat-
tentive driver (failure “a”) or a driver with unadjusted speed (failure “b”) has
an increased accident risk in a rear-end scenario. The rear-end scenario could be
provoked by very slow or stationary downstream trafﬁc behind a sharp curve or a
hill. The driver experiences a surprising, sudden speed drop.
Lack of attention (a) is a typical consequence of insufﬁcient driver activation, for
example, after a long and strenuous journey in stop-and-go trafﬁc. Inappropriate
speed (b) can have various causes, for example, the latent danger of a freeway
curve or a hill (due to the inherent visual restriction) might have been inadequately
addressed by trafﬁc signs, or the driver might have failed to recognize this hazard
despite warning signs.
It seems likely that an ADF will not exhibit these two failure types and thus
can avoid the impending rear-end collision—assuming adequate object detection by
ADF. On the one hand, technology is always “attentive” (a). On the other hand,
automatic adjustment of speed (b) is lik ely to be part of ADF and thus also reduces
the accident risk in this scenario. In a virt ual experiment, the safety effects of ADF
in this scenario can be comp ared to the performance of human drivers in various
reference situations, e.g., with and without emergency braking assistance.
20.4.3 Expanding the Spectrum of S afety-Relevant Scenarios
In general, automation has not only a potentia l for selective accident prevention from
the perspective of the ADF vehicle, but could, given sufﬁcient penetration, increase
overall trafﬁc safety due to collective effects such as harmonization of trafﬁc ﬂow
(see, e.g., [ 32]). For example, trafﬁc literature shows (e.g., [ 4]) that inappropriate
speed is not only limited to individual drivers but may be a collective phenomenon
of the trafﬁc stream. A high penetration of trafﬁc with ADF vehicles could thus
also avoid accidents for non-e quipped vehicles (due to the collective effects of early
speed adjustment).
On the other hand, due to the continuous action of ADF in trafﬁc, the spectrum
of relevant scenarios is considerably la rger than for most ADAS. As a consequence,
fundamentally new issues and methodological challenges arise for the virtual safety
assessment of ADF.
In general, trafﬁc has a very high complexity—due to the numerous direct
interactions between trafﬁc participants and indirect interactions between individ-
uals and the collective trafﬁc ﬂow. Neverth eless, trafﬁc ﬂow has several collective
or “macroscopic” characteristics. Examples are “fundamental diagram” (empirical
relationship between trafﬁc ﬂow and average speed on a freeway section) or
“capacity” (characteristic trafﬁc demand above which trafﬁc ﬂow tends to become
unstable). Changes in macroscopic characteristics of trafﬁc ﬂow, in this context, due
to ADAS or ADF, may in turn have effects on trafﬁc safety.488 T. Helmer et al.
Automated vehicles can aff ect direct interaction between vehicles, interaction
between individual vehicles and trafﬁc ﬂow, as well as collective characteristics of
trafﬁc ﬂow. Since all of these changes can affect conﬂict and accident probability,
they must be included in trafﬁc safety assessment.
To this end, many processes in normal, non-assisted, and nonautomated trafﬁc
will need to be reassessed. On the one hand, particularly relevant trafﬁc pro-
cesses include those in which potential conﬂicts are normally avoided by human
anticipation, intuition, cooperative driver behavior, strategic defensive driving, etc.,
and thus do not necessary require emergency action. Moreover, human drivers
frequently have a very high context sensitivity, which further increases trafﬁc safety
performance. These skills are a typical strength of human drivers (see also [ 6,12,
18,22,25,26]).
An open question and subject of the research and development is to what extent
automated vehicles will have capabilities comparable to those of human drivers?
Some safety-relevant characteristics, such as anticipation and defensive driving,
could be even more pronounced with ADF than with human drivers.
ADF could have an impact on cooperative interactions between automated
vehicles and individual human drivers. Cooperative behavior between human drivers
can be illustrated on a freeway with a “keep-right” rule: consider a vehicle driving
on the right lane behind a slow truck. On t he adjacent lane, another driver recognizes
this situation and strategically creates a gap to “let in” the other vehicle. The driver
on the left lane intentionally slows down slightly; the other driver recognizes his
intention, signals, and begins his lane change while monitoring the gap. Ideally, he
can complete the lane change with minimal impact on steady trafﬁc ﬂow.
The ADF vehicle on the left lane must be able to complete two important tasks in
order to fulﬁll the example of the lane change: ﬁrst, it must recognize the situation
of the vehicle on the right lane, and second, it must have an appropriate cooperative
action strategy. Whereas cooperation between human drivers can be inﬂuenced
by factors such as emotion or time pressure, these factors are hardly relevant for
automation.
The rate of success of cooperative interactions between human drivers and their
sensitivity to context is still subject of transport research. In addition, any inﬂuences
due to automation are currently being explored. The modeling of cooperative
processes in trafﬁc ﬂow and road safety i s a current research topic that presents
further challenges for simulation.
It is also important to model indirect interactions with impacts on cooperative
driving. For example, in dense freeway trafﬁc, automated vehicles might tend to
keep larger time gaps than are currently common and thus might even be recogniz-
able as automated vehicles. These large r time gaps could conceivably encourage
individual human drivers to cut in more frequently. If automated vehicles react
with corresponding braking decelerations to vehicles cutting in, trafﬁc dynamics
will change. The occupants of an automated vehicle may even get the subjective
impression of an increase in travel time, wh ich would theoretically affect acceptance
and thus indirectly trafﬁc safety. A high penetration of ADF might also lead20 Safety Performance Assessment of Assisted and Automated Driving ... 489
to macroscopic consequences (fundamental diagram, capacity, platoon formation,
frequency of shocks in trafﬁc ﬂow, etc.).
However, objective increases in travel time of automated vehicles are expected to
be imperceptibly small and likely to be accepted. Moreover, the process of cutting
in during dense “synchronized” trafﬁc is not very rewarding anyways.
In general, the presumption seems natur al that the overall effectiveness of
automated functions regarding trafﬁc safety will be positive. The objective is a
quantiﬁcation of this hypothesis by comprehensive assessment.
20.4.4 Philosophy and Procedural Approaches for Validation
and Assessment of Automation
While design of ADAS usually involves balancing desired and unintended system
actions with regard to trafﬁc safety, more complex trade-offs between conﬂicting
objectives can be expected in the development and design of ADF.
A proportion of positive contributions to the safety record of automated functions
can be estimated using virtual experime nts (analog to ADAS) in which existing,
potentially hazardous trafﬁc scenarios are in vestigated. However, due to the contin-
uous operation of ADF, the overall safety performance could be strongly inﬂuenced
by additional scenarios and constellati ons, taking into account low-probability
events. These scenarios are not known a priori and may be “hidden” in the situation
space. Furthermore, their relevance can al so depend on context or function design
(e.g., partial or high automation).
For example, the reaction of automatio n to lane keeping of other drivers might
depend on local driving characteristics. If an automation function is designed for a
trafﬁc context with “very precise” lane k eeping, as is common in parts of Central
Europe, application to regions with less precise lane keeping could require an
adaptation to local driving strategy. Otherwise, undesirable effects, for example,
frequent braking in response to “vehicles cutting in,” such as platoon formation,
could increase.
The development of ADF presents considerable additional challenges: the
situation space will be substantially larger than for current ADAS, and prediction of
all relevant situations will be difﬁcult. These issues complicate the assessment and
optimization of key system characteristics, such as stability, robustness, and safety
impact. A possible approach is an integrated and agile development and assessment
process using a comprehensive tool chain.
Any methodology for continuous safety assessment during the development
requires a comprehensive understanding of various existing methods and their
speciﬁc role and contribution in s uch a complex process. Figure 20.7 provides an
abstract overview of the roles of different testing instances within an integrated
process.490 T. Helmer et al.
Fig. 20.7 Development and assessment process including exemplary testing instances
The core of the process is virtual simulation, i.e., software in the loop. The virtual
test run can be executed for each major functional step in the development phase
and tested against the generated set of scen arios. These virtual test runs are held
on system level and identify the most criti cal, relevant, and failed scenarios which
require a more detailed evaluation with a specialized testing instance (e.g., driving
simulator, hardware in the loop, ﬂeet testing, etc.).
Data and ﬁndings from empirical testing methods are used for modeling, as
common for ADAS assessment. In particular, data from NDS, FOT, ﬂeet tests,
etc., could be used to form a database including an appropriate (possibly country-
speciﬁc) model of exposure, behavior, and other key aspects.
Referring to Fig. 20.7, the scenario database as well as other models plays a
key role for all development and test tools. The scenarios and their frequency (in
terms of an exposure model) can be stored in a scenario database and reused for
different test instances. In addition to tra ditional research methods (e.g., theoretical
risk assessments, testing on the road, etc.), virtual continuous simulation offers new
opportunities for “discovery” of relevant s cenarios, especially, when it comes to
combinations of factors which are rare and difﬁcult to derive from the theory.
One approach to discovery of “unknown” scenarios is observing longer durations
or distances by long-running c ontinuous simulation: safety-critical scenarios are not
explicitly generated (e.g., by certain given constraints), but arise spontaneously from
a stochastic comprehensive model of trafﬁc ﬂow.20 Safety Performance Assessment of Assisted and Automated Driving ... 491
This approach implies challenging requi rements for comprehensive modeling.
These include reproduction of all relevant processes (also error processes) in trafﬁc
ﬂow, with their respective frequencies. Modeling the frequencies of all relevant
processes and scenarios essentially constitutes an advanced exposure model.
An initial set of scenarios can be speciﬁed using expert knowledge, ﬁeld opera-
tional tests, and virtual test runs. Virtual testing generates many representations of
stochastic processes in trafﬁc based on models of trafﬁc contexts, sensors, drivers,
vehicles, and trafﬁc dynamics. The objective is to provide a representative sample
of the overall situation space taking into account the large number of potential
scenarios including low-probability events [ 38].
In a virtual test operation, these scenarios could be checked automatically
representing a kind of safety cycle. Th e frequency of scenarios could depend on
different factors, for examp le, countries or environmental conditions. Virtual testing
would fulﬁll the requirements of a safety a ssessment in this construct, as described
above.
Virtual testing by simulation of a single scenario results in quantiﬁcation
of effectiveness of an automated system in this particular scenario. The safety
performance of automation then resu lts from the sum of effectiveness in allrelevant
scenarios weighted by their respective frequency (exposure).
A key issue concerns the validation of process models and, by extension,
plausibility of simulation results. Validation of models involves utilization of
appropriate testing procedures for each par ticular method in the development chain.
Each method, for instance, test driving or a driving simulator, is used for validating
the vehicle model or for MMI concepts. A va lidated model database increases the
reliability of virtual testing; the quality of the models is of key importance for the
development chain and the validity of the assessment result.
Veriﬁcation of simulated system actions re presents another important element of
the validation process, by drawing samples from all simulations and testing these in
recognized test institutes. Validation (an d development) of process models could be
accompanied by impartial sci entiﬁc organizations.
Consequently, the objective would be an international consensus and implemen-
tation of scenarios, models, and the overa ll assessment approach by all relevant
stakeholders in an international context.
20.5 Conclusion and Outlook
The task of safety assessment and optimi zation of automated functions raises
new issues. In contrast to ADAS assessment, quality measures of trafﬁc safety
are principally related to all trafﬁc scenarios in which a function is active. Since
automation may change collective trafﬁc c haracteristics, safety analysis must go
beyond isolated human errors in currently occurring trafﬁc processes and the impact
of automation on these. Newly emerging, automation-related, scenarios have to be
considered for a comprehensive safety assessment.492 T. Helmer et al.
Validation and safety assessment of automated functions have to be understood
as continuous and iterative tasks during t he development, not as singular activities
at the end of the development phase. Due to the variety of possible inﬂuences, the
necessary assessment of automation approaches during the development would be
extremely problematic based, for example, solely on ﬂeet testing, since detection of
rare effects requires corre spondingly long observation periods. In addition, testing
would have to be repeated, in principle, after every single change of the function.
The approach of simulation-based virtual experiments can be interpreted as
knowledge synthesis. Still, some challenges for the assessment of automated
systems arise. Relevant scenarios for automation are a priori unknown and can only
partially be identiﬁed using existing methods. Due to the generally larger situation
space involved in automation, modeling results in considerably more complexity as
for the assessment of ADAS.
Quality requirements for trafﬁc simulatio n are correspondingly higher, especially
in terms of process models used. Trafﬁc simulation will need to consider error
processes and their resolution in normal trafﬁc in more depth. The challenges
include improved modeling of psychological processes, e.g., attention or activation
(Yerkes-Dodson) [ 37]. An important aspect of the safety potential of ADF arises
from avoidance of errors resulting from lack of driver activation and resulting
attention lapses.
Despite sophisticated technology, systems will still be subject to system limits
within the near future. Virtual experiments could make an important contribution to
design and optimization of take-over requests to human drivers, in addition to safety
assessment.
Critical trafﬁc situations can require a decision among several unfavorable
alternatives for action. Here again, virtual assessment can support the development
of transparent decision algorithms. A general discussion of such alternatives has
already begun in public [ 30]. Possibly all stakeholders can achieve consensus
and agree on guidelines for the prioritization of alternative actions before market
introduction.
Many (novel) projects, initiatives, organizations, and research activities are
focusing on the effects of ADAS regarding trafﬁc safety. So far, however, an
international consensus on methodological issues in the context of an overall safety
assessment of ADAS and ADF is still lacking.
Considering the importance and complexity of decisions and challenges, the
initiative “Prospective Effectiveness Assessment for Road Safety” (PEARS) has
the objective of developing a standardized and harmonized method for the overall
effectiveness assessment of new systems, such as ADAS or ADF, which is accepted
by all stakeholders [ 29]. Both beneﬁts and potential risks should be quantiﬁed
as part of the assessment. The objectives are, among others, a higher degree of
legal predictability and adequate and objective consideration of individual and
societal interests. This open platform provides important prerequisites for a global
harmonization and standardization.20 Safety Performance Assessment of Assisted and Automated Driving ... 493
References
1. M. Aeberhard, S. Rauch, M. Bahram, G. Tanzmeister, J. Thomas, Y. Pilat, F. Homm, W. Huber,
N. Kaempchen, Experience, results and lessons learned from automated driving on Germany’shighways. IEEE Intell. Transport. Syst. Mag. 7(1), 42–57 (2015)
2. M. Bahram, Z. Ghandeharioun, P. Zahn, M. Baur, W. Huber, F. Busch, Microscopic Trafﬁc
Simulation Based Evaluation of Highly Automated Driving on Highways, in 17th International
IEEE Conference on Intelligent T ransportatio n Systems - ITSC 2014 , ed. by IEEE (IEEE,
2014)
3. R. Bernotat, Anthropotechnik in der Fahrzeugführung. Ergonomics 13(3), 353–377 (1970)
4. T. Connolly, L. Åberg, Some contagion models of speeding. Accident Anal. Prevent. 25(1),
57–66 (1993)
5. R.J. Cook, D.L. Sackett, The number needed to treat: A clinically useful measure of treatment
effect. Br. Med. J. 18, 452–454 (1995)
6. C. Domsch, W. Huber, Integrale Sicherheit - ein ganzhe itlicher A nsatz für die Fahrzeugsicher-
heit. 17 (Aachener Kolloquium Fahrzeug- und Motorentechnik, Aachen, 2008)
7. A. Eskandarian (ed.), Handbook of In telligent Vehicles (Springer, Heidelberg, 2012)
8. F. Fahrenkrog, A. Zlocki, L. Eckstein, Bewertung Aktiver Sicherheit: Vom Test zur Wirk-
samkeitsanalyse. ATZ 1(116), 34–39 (2014)
9. I. Ferenczi, T. Helmer, P. Wimmer, R. Kates, Effectiveness Analysis and Virtual Design
of Integrated Safety Systems Illustrated Using The Example Of Integrated Pedestrian AndOccupant Protection, in 12th International Symposium and Ex hibition o n Sophis ticated Car
Occupant Safety Systems (Fraunhofer-Ins titut für Chemische T echnologie ICT, 2014)
10. M. Green, “How long does it take to stop?” Methodological analysis of driver perception-brake
times. Transport. Hum. Factors 2(3), 195–216 (2000)
11. T. Helmer, Development of a Methodology for the Evaluation of Active Safety using the
Example of Preventive Pedestrian Protection , Thesis (Springer, Heidelberg, 2015), ISBN 978-
3-319-12888-7
12. T. Helmer, T. Kühbeck, C. Gruber, R. Kates. Development of an Integrated Test Bed and Virtual
Laboratory for Safety Performance Prediction in Active Safety Systems (F2012-F05-005), inFISITA 2012 World Automotive Congress - Proceedings and Abstracts, 2012 (ISBN 978-7-
5640-6987-2)
13. T. Helmer, M. Neubauer, S. Rauscher, C. Gruber, K. Kompass, R. Kates, Requirements and
Methods to Ensure a Representative Analysis of Active Safety Systems, in 11th International
Symposium and Exhib ition on Sophisticated Car Occupant Safety Systems (Fraunhofer -Institut
für Chemische Technologie ICT, Pﬁnztal, 2012), pp. 6.1–6.18, ISSN 0722-4087
14. T. Helmer, R.R. Samaha, P. Scullion, A. Ebner, R. Kates, Injury risk to speciﬁc body regions of
pedestrians in frontal car crashes modeled by empirical, in-depth accident data, in Proceedings
of the 54th Stapp Car Crash Conference, 2010
15. T. Helmer, R.R. Samaha, P. Scullion, A. Ebner, R. Kates. Kinematical, Physiological, and
Vehicle-Related Inﬂuences on Pedestrian Injury Severity in Frontal Car Crashes: Multivariate
Analysis and Cross-validation, in Proceedings of the International Research Council on
Biomechanics of Injury (IRCOBI) (IRCOBI, Hannover, 2010), pp. 181–198
16. T. Helmer, P. Scullion, R.R. Samaha, A. Ebner, R. Kates, Predicting the injury severity of
pedestrians in frontal vehicle crashes based on empirical, in-depth accident data. Int. J. Intell.Transport. Syst. Res. 9(3), 139–151 (2011)
17. W.E. Hick, On the rate of gain of information. Q. J. Exp. Psychol. 4, 11–26 (1952)
18. W. Huber, J. Steinle, M. Marquardt, Der Fah rer steht im M ittelpunkt - Fahrerassistenz und
Aktive Sicherheit bei der BMW Group, in 24. VDI/VW-Gemeinschaftstagung - Integrierte
Sicherheit und Fahrerassistenzsysteme , vol. 2048 VDI-Berichte (VDI Verlag, Düsseldorf,
2008), pp. 123–137494 T. Helmer et al.
19. C. Hydén, The Development of a Method for Trafﬁc Safety Evaluation: The Swedish Trafﬁc
Conﬂicts Technique , Bulletin 70 (Department of Trafﬁc Planning and Engineering, Lund
University, Sweden, 1987)
20. R. Kates, O. Jung, T. Helmer, A. Ebner, C. Gruber, K. Kompass, Stochastic Simulation of
Critical Trafﬁc Situations for the Evaluation of Preventive Pedestrian Protection Systems (VDI-
Tagung Erprobung und Simulation in der Fahrzeugentwicklung, Baden-Baden, 2010)
21. D.G. Kleinbaum, M. Klein, Logistic Regression. A Self Learning Text. Statistics for Biology
and Health (Springer, Heidelberg, 2010)
22. K. Kompass, C. Gruber, C. Domsch, Der Beitrag von Fahrerassistenzsystemen zur Aktiven und
Passiven Sicherheit - die Integrale Sicherheit als Antwort auf die wachsenden Anforderungenan die Fahrzeugsicherheit, in 4. Tagung Sicherheit durch Fahrerassistenz, 2010 .
23. K. Kompass, T. Helmer, C. Blaschke, R. Kates, Ganzheitliche und integrale Fahrzeugsicher-
heit. ATZ - Automobiltechnische Zeitschrift 116, 10–15 (2014)
24. K. Kompass, T. Helmer, L. Wang, R. Kates, Gesamthafte Bewertung der Sicherheitsverän-
derung durch FAS/HAF im Verkehrssystem: Der Beitrag von Simulation, in Fahrerassistenz
und Aktive Sicherheit. Wirksamkeit – Beherrschbarkeit – Absicherung (expert Verlag, Rennin-
gen, 2015), pp. 45–66
25. K. Kompass, W. Huber, Integrale Sicherheit – Effektive Wertsteigerung in der Fahrzeugsicher-
heit(VDA, Technischer Kongress, Berlin, 2009)
26. K. Kompass, W. Huber, T. Helmer, Safety and Comfort Systems: Introduction and Overview,
inHandbook of In telligent Vehicles , ed. by A. Eskandarian (Springer, Heidelberg, 2012)
27. N. Lerner, Brake Perception–Reaction Times of Older and Younger Drivers, in Proceedings of
the Human Factors and Ergonomics Society Annual Meeting , vol. 37 (1993), pp. 206–210
28. P.L. Olson, M. Sivak, Perception-response time to unexpected roadway hazards. Hum. Factors
28, 91–96 (1986)
29. Y. Page, F. Fahrenkrog, A. Fiorentino, J. Gwehenberger, T. Helmer, M. Lindman, O. op den
Camp, L. van Rooji, S. Puch, M. Fränzle, U. Sander, P. Wimmer, A Comprehensive andHarmonized Method for Assessing the Effectiveness of Advanced Driver Assistance Systemsby Virtual Simulation: The P.E.A.R.S. Initiative, in 24th International Technical Conference
on the Enhanced Safety of Vehicles (ESV 2015) , number 15-0370, 2015
30. H. Prantl, Error. Süddeutsche Zeitung 37, 13 (2015)
31. E. Schechtman, Odds ratio, relative risk, absolute risk reduction, and the number needed to
treat – which of these should we use? Value Health 5(5), 431–436 (2002)
32. C. Steinhoff, R. Kates, H. Keller, B. Färber, B. Färber, Problematik präventiver Schaltungen
von Streckenbeeinﬂussungsanlagen (BMVBW Forschung Straßenbau 853, Bundesanstalt für
Straßenwese, 2001)
33. A. Weitzel, H. Winner, C. Peng, S. Geyer, F. Lotz, L. Sefati, Absicherungsstrategien
für Fahrerassistenzsysteme mit Umfeldwahrnehmung (BASt-Bericht F98, Bundesanstalt für
Straßenwesen, 2014)
34. R. Wertheimer et al., Ko-PER – Fahrerassistenz und präven tive Sicherheit m ittels k ooperativer
Perzeption: Partnerübergreifender Schlussbericht , Schlussbericht (Bundesministerium für
Wirtschaft und Technologie (BMWi), 2014)
35. P. Wimmer, A. Rieser, W. Sinz. A Simulation Method for Virtual Design and Evaluation of
Integrated Safety Systems, in NAFEMS World Congress , 2013
36. H. Winner, S. Hakuli, G. Wolf (eds.), Handbuch Fahrerassistenzsysteme (Vieweg CTeubner
Verlag/GWV Fachverlage GmbH, Wiesbaden, 2009)
37. R.M. Yerkes, J.D. Dodson, The relation of strength of stimulus to rapidity of habit-formation.
J. Comp. Neurol. Psychol. 18, 459–482 (1908)
38. A. Zlocki, L. Eckstein, F. Fahrenkrog, Evaluation and sign-off methodology for automated
vehicle systems based on relevant driving situations, in Transportation Research Board (TRB),
94th Annual Meeting , Washington DC, USA, 11–15 Jan 2015Chapter 21
From Controllability to Safety in Use: Safety
Assessment of Driver Assistance Systems
Alexander Huesmann, Mehdi Farid, and Elke Muhrer
21.1 Introduction
Controllability of driver assistance systems is the topic addressed by the “Code of
Practice for the Design and Evaluation of ADAS”, and controllability in general
is already mentioned in the Vienna Convention on Road Trafﬁc of 1968 [ 1].
Nevertheless, in the automotive development context, the statement that drivers must
at all times be able to control their vehicles can be interpreted very differently. Very
often the thought of controlling the vehicl e in a critical road scenario is present.
However, controllability associated with assistance systems and automation has an
entirely different facet. The aim here is, that the driver contro ls the vehicle in its
nominal function, at the system limits and in case of system failures, meaning the
driver is able to cope with trafﬁc situations without harming himself or others.
In the context of automation, aspects of, the to-be-avoided, systems-over-
conﬁdence and mode awareness increase in importance and must be considered in
the system composition.
The basis for the development of higher automation functions in the vehicle is
the established methods and procedures for t he controllability of driver assistance
systems. Such approaches largely c onsider single scenarios isolated.
Due to the increasing complexity and networking of future systems, such singular
considerations of single scenarios are not likely to be sufﬁcient. Thus, a holistic
consideration of the trafﬁc situation is required.
This chapter is based on: Klaus Kompaß et al.: Fahrerassistenz und Aktive Sicherheit.
Wirksamkeit—Beherrschbarkeit—Absicherung. expert verlag, Renningen 2015.
A. Huesmann (/envelopeback)  M. Farid  E. Muhrer
BMW AG, 80788 Munich, Germany
e-mail: Alexander.Huesmann@bmw.de ;Mehdi.Farid@bmw.de ;Elke.Muhrer@bmw.de
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_21495496 A. Huesmann et al.
Initially, the controllability of driver a ssistance systems and the corresponding
references will be addressed. Following this, the method of analysis of safety in
use will be introduced and explained. This includes the deﬁnition of terms and their
delimitations.
21.2 Controllability of Driver Assistance Systems
Nowadays, if controllability is mentioned in the context of driver assistance systems
(DAS), it immediately is associated with two documents. The older one is the
Vienna Convention on Road Trafﬁc of 1968 [ 1]. Herein, the international rules
of road trafﬁc were agreed upon. The other is the code of practice (CoP) for the
design and evaluation of advanced driver assistance systems (ADAS) [ 2]. The CoP
emerged from the work of a series of European projects, in particular as a report in
the RESPONSE 3 [ 2] project which was part of the integrated project of PReVENT
[3].
The launch of the RESPONSE projects started out just before the new millen-
nium, when the ﬁrst driver assistance systems such as active cruise control (ACC)
became available on the market and other s in the automotive industry were under
way. The central question was how to generate and verify the product safety of such
assistance systems.
First, for formulating development standards, the ﬁeld of application has to be
determined. One of the questions in the project RESPONSE was what was meant
by ADAS. For this purpose the three levels into which driving tasks can be divided
were used: navigating, maneuvering, and stabilizing the vehicle [ 4].
It was agreed to observe rule-based systems under normal driving conditions,
which are acting on the maneuver level, such as a lane change assistant. Fur-
thermore, systems have been taken into account that are in transition between
maneuvering and stabilizing, namely, assistance systems in emergency situations,
such as an automatic emergency brake system.
A systematic assessment of emerging risks ultimately distinguished two cate-
gories: the technical safety and the safety of the human–machine interaction.
The technical safety of systems and how to develop appropriate safety concepts
were excluded, because around the same tim e, the ISO 26262 standard for functional
safety in the vehicle [ 5] was under development; hence, an appropriate set of
procedural rules to ensure safety in E/E errors emerged.
The main focus within the research pr oject RESPONSE 3 is the safety of the
human–machine interaction, which is made possible by the controllability of the
driver. Controllability is divided into three steps:
 The ability of the driver to perceive the criticality of a situation
 The ability of the driver to decide on an appropriate countermeasure
 The ability of the driver to also perform this countermeasure
Controllability is the focal point in the project RESPONSE 3.21 From Controllability to Safety in Use: Safety Assessment of Driver ... 497
Controllability has already been mentioned as a criterion in the Vienna Conven-
tion on Road Trafﬁc of 1968 [ 1].
Thus, Article 8.5 states that:
 Every driver shall at all times be able to control his vehicle or to guide his
animals.
And in Art. 13.1, it is written that:
 Every driver of a vehicle shall in all circumstances have his vehicle under control.
Herein it is implied that in the context of driver assistance, the driver also has
to be able to manage trafﬁc situations when using driver assistance systems. This
includes handling the various trafﬁc situations while driving with the support of the
system, at the system boundaries, and in case of system errors.
A system error is considered as mentioned above in the standard for functional
safety. Development guidelines for the nominal function and its system boundaries,
in particular the human–machine interac tion of assistance systems, are considered
in the code of practice (CoP) for the design and development of ADAS which was
published on the website of the ACEA and thus made publicly available in 2009 [ 2].
In the CoP the procedure for safety-oriented development and evaluation of
safety aspects of driver assistance systems are described with a clear focus on
the human–machine interaction. This is based on the identiﬁcation of risks and
the preparation of hazard and risk analys is as well as risk assessments. During
the development process, measures aimed at ensuring the controllability of the
assistance systems are derived from these actions.
When looking at the relationship of driver performance and automation [ 6], it is
clear that with increasing automation, the controllability of situations, in which the
driver has to take over the driving task or correct the trajectory, is not necessarily
given. A common classiﬁcation of automation levels in terms of requirements for
the driver can be found in [ 7].
Here, the transition between partly automated driving and highly automated
driving is essential. While partly automated driving, the driver needs to monitor
the system permanently and has to be able to take over the driving task at any given
moment. At the next higher level of automation, the highly automated driving, the
driver no longer has to permanently monitor the system, and in case of a takeover
request, the driver is given sufﬁcient time to react. However, when the driver no
longer needs to monitor the system, percei ving the criticality of a situation can
no longer be fulﬁlled continuously, hence impairing already the ﬁrst point of the
abovementioned criteria of controllability. In addition, such functions would stand
in contradiction to the Vienna Convention, where control of the vehicle is required.
This triggered a proposal for amendment to the Vienna Convention [ 8]a n dw a s
ofﬁcially put to vote in 2014. This proposal also included an amendment to Art.
8, which states, that “a vehicle meets the requirements of Art. 8 paragraph 5 and
Art. 13 paragraph 1, if it meets the requirements of the international certiﬁcation
regulations” (e.g., UN ECE rules). In add ition, the requirements referred to in
Article 8 and 13 are met if the driver is given the opportunity to turn off or override498 A. Huesmann et al.
the assistance system. This amendment of the wording is intended to ensure the
conformity of highly automated driving functions with the Vienna Convention.
It is becoming obvious that the criterion of controllability for a holistic safety
assessment of functions with increasing levels of automation will not sufﬁce any
longer. Thus a holistic consideration of the trafﬁc with all inﬂuencing components
is required.
21.3 Safety in Use: A Holistic C onsideration of the Driver,
Vehicle, and Environment
In Sect. 21.2 we addressed the factor controllability. When evaluating the controlla-
bility, the overall situation of the driver, his vehicle, and its environment is of special
importance (Fig. 21.1).
By that, controllability arises not only thr ough the skill level and the performance
of the driver but is heavily inﬂuenced by components of the trafﬁc situation. On the
one hand, every drivers’ proﬁle differs by the extent of long-term experiences and
long-term knowledge, short-term intentions and states, and different perceptions
of the environment; thus, every driver most likely reacts in a different way. The
environmental conditions vary in weathe r, visibility, road conditions, and trafﬁc
density. Vehicles have different engines and different assistance systems on board.
Depending on the chassis, vehicles also r eact differently in certain dynamic driving
situations. This is not an exhaustive list of possible inﬂuences but is intended to show
that all of the inﬂuencing components may take various forms. The driver steers the
vehicle, reacts to the feedback of the vehic le, and moves it within its environment. A
holistic approach of the trafﬁc situations to be managed by the driver has to include
these three interacting components. In other words: depending on the ratio of the
components, the driver has to perform different maneuvers to safely navigate his
vehicle through trafﬁc.
For example, the driving task of paying attention and maintaining the speed level
when driving on a route with low trafﬁc density changes rapidly in a high-density
environment (i.e., a trafﬁc jam ahead of the driver), where stopping and starting
Fig. 21.1 A holistic trafﬁc situation integrates the interaction of the driver, the vehicle and the
environment21 From Controllability to Safety in Use: Safety Assessment of Driver ... 499
the vehicle is the main task. For these situations, different “levels” that have to be
included in the risk assessment arise. Therefore, all factors in the assessment of risksin road trafﬁc must be complied with. However, the complexity of trafﬁc situationsrequires that the situations are systemati cally assessed. Without such, an exhaustive
assessment of risks is not possible.
In this article, the methodology of safety in use is introduced. For this purpose the
system behavior of an “error-free” function in regular use cases and at the systemlimits is systematically analyzed. Here, both the intended use and the likely misuseare mostly relevant. The term “error-free” case requires a more pr ecise speciﬁcation.
This will take place in the following chapter. The aim of the analysis of safety in useis to know the total risk, which is evident from the use of a function in the differentsituations that may occur. Based on this a ssessment, the decision for speciﬁc actions
in the system development can be made.
21.3.1 Systematic Analysis of Safety in Use
The initial focus of the safety assessment needs to be clariﬁed ﬁrst, in order to carryout a systematic analysis of whether a function is safe to use.
Safety must always be seen in the context of risks, where risks are described as
the product of the likelihood of a negative event to occur and its damage severity.
The likelihood of occurrence of adverse events relating to road transport in the
context of driver assistance is determined by the likelihood of occurrence of therespective trafﬁc situation, the ability of an assistance system to suitably handlethese situation, and, if necessary, the ability of the driver to master the situation. Aholistic consideration does not limit the focus of technology and driver merely tothe ego vehicle but may also take partic ipating road users’ skills into account.
The damage in trafﬁc ranges from property damage to personal injury. The
following analysis of safety in use is, according to the ISO 26262, oriented towardthe avoidance of personal injury.
The well-known procedures of risk anal ysis and risk assessments form the basis
for the analysis of safety in use. During this, the nominal function is consideredas well as the anticipated misuse of it. What is not considered is the case of atechnical error (E/E error according to ISO 26262). However, the limits of thesensors’ performance are very well considered. In the drivers’ perception, both casesshow the same effect and are called “errors”, for example, when the vehicle does notdetect a risky situation in due time. The cau se, however, can be different (e.g., the
technical error resulted from an error in t he control unit). By technical measures
the likelihood of errors occurring can be downsized to the required extent. Anyobject not detected by the sensors because of its systematic blur is understood as a
system boundary and thus part of the function in its nominal state, which includesthe system limits.500 A. Huesmann et al.
A team of experts further combines their knowledge about the system develop-
ment, the sensor development, the driver behavior, and the trafﬁc situation, and as
part of the risk analysis, the collective presents a list of likely events.
These events are evaluated in terms of their likelihood of occurrence in the trafﬁc
situation, their manageability by the technical solution, and the drivers’ ability
to control the system. If necessary, measures are derived from the evaluation to
reduce the likelihood of occurrence, on the one hand, as a technical measure (e.g.,
as requirements for the sensory detection of the environment), and on the other
hand, as a constitutive measure to increase the drivers’ controllability of the system.
Figure 21.2 shows an example of the structure of such an analysis of safety in use.
In some cases, a more detailed consideration of the events may be required. This
is the case if there is ambiguity about the overall likelihood of occurrence and where
the impact in terms of the damage is important for a holistic consideration of the
safety in use. An example could be the event of personal injury when using the
autopilot on the highway. In such cases it makes sense to disassemble the event
into the parts that must occur collectivel y in order for the entire event to occur. Its
methodological approach is the event tree.
The event tree is comparable to the error tree simply that the interesting situation
was not an error but an event, as part of the regular use of the system.
In the disassembly the causes are identiﬁed and linked logically. For one thing,
this approach can be used qualitatively to illustrate the cause mechanisms and
to make them plausible. On the other hand, the individual events may also be
quantiﬁed, thus creating greater transparen cy for the overall evaluation. A detailed
sensitivity analysis is also possible on this basis.
Figure 21.3 shows an example of an event tree in the event of personal injury
when using the autopilot system on the highway.
The event of the collision with a person on the highway is located at the top of the
event tree. The level below describes the trafﬁc situation (trafﬁc jam) in which the
event occurred. At the same level, the proportion of trafﬁc jams within the overall
operating time of the vehicle is taken into account. The next level describes how
the event takes place. Here, the preceding vehicle performs a lane change maneuver
very close to the obstacle to avoid a collision but does this too late for the driver to
react in time and the on-board safety systems do not respond sufﬁciently.
The aspects that relate to the driver are displayed at the next level. At the bottom
layer of the event tree, the likelihood to encounter a person on the highway can be
speciﬁed for different causes for this partic ular trafﬁc situation (i.e., trafﬁc jam).
By no means this example is complete but it is merely intended to illustrate the
approach.
By this simplistic and incomplete example, it is obvious that a great deal of
information, for the controllability of a speciﬁc trafﬁc situation, is needed. This
is information about the trafﬁc situation, the technical performance of the system
and its event chain, as well as the perform ance of the driver. Some approaches and
examples, to obtain information in terms of the trafﬁc situation and the drivers, are
described in Sect. 21.4.21 From Controllability to Safety in Use: Safety Assessment of Driver ... 501
Evaluated 
Scenario : 
Functional 
characterist
ics in 
specific 
operating 
situationsClassificati
on of the 
SituationAccident 
ScenarioAssessmen
t of the 
accident 
consequen
cesAverting 
of dangersAssessment 
of the 
controllabil
ityJustificati
on for
'No'
or
proposal 
for action
Customer 
uses the 
function A in 
situation 
B…i.e. 
exceptional 
Situation, 
misuse of 
system, …, Scenario 
may lead 
to 
accident 
XY …consequen
ces of the 
accident 
may be 
averted by 
XYProposed 
action n 
(1) 
Proposal 
A
(2) 
Proposal
B
Customer 
drives with 
active
highway
traffic jam 
assistant in 
the use case. 
Vehicle 
leaves the 
lane and
people are 
on the side
track.Vehicle 
leaves the 
lane and
people are
on the side 
track 
-> 
likelihood 
of 
occurrence
very rare.Vehicle 
leaves the 
lane and 
collides 
with 
people.Collision
with
people: 
very high 
risk of 
injury.The driver 
brakes or 
pedestrians 
leave the 
danger 
zone.Situation for 
observant 
driver at 
low speed 
easily 
controllable.ye
sBased on
a high
automatio
nt r u s t
prolonged 
response 
time can 
be 
expected: 
1) avoid
high
automatio
nt r u s t
2) 
detection 
of 
pedestrian
sa t
highway
traffic jam 
assistant.
Customer 
drives with 
active
highway
traffic jam 
assistant in 
the use case. 
Preceding 
vehicle
changes 
lanes, since
the current
lane is 
blocked due 
to a broken 
down 
vehicle /
accident
vehiclePreceding 
vehicle
changes 
lanes
because of
an accident 
vehicle
accident in 
its' 
immediate 
vicinity
-> 
likelihood 
of 
occurrence
is very rare.Vehicle
continues
unrestrain
ed, 
collides 
with
person
outside 
the broken 
down 
vehicle.Collision 
with 
people: 
very high 
risk of 
injury.Driver 
brakes or 
people 
leave 
danger 
zoneSituation for 
observant 
driver at 
low speed 
easily 
controllable.ye
sBased on
a high
automatio
nt r u s t
prolonged 
response 
time can 
be 
expected: 
1) avoid
high
automatio
nt r u s t
2) 
detection 
of 
pedestrian
sa t
highway
traffic jam 
assistant.
Fig. 21.2 Exemplary presentation of an extract from a possible analysis of safety in use502 A. Huesmann et al.
Fig. 21.3 Presentation of an incomplete event tree
21.3.2 Reference Values for Safety in Use
The previous section explained how to systematically arrive at a holistic risk
assessment to determine the likelihood of personal injury when using driver
assistance systems. In addition it was described how to employ the results as a basis
for deriving safety-oriented measures.
So far, there is no reference for the regular use of an automobile. However,
there are risk assessments in the area of mobility and consumer protection that
could be used as a starting point. Two exem plary approaches that are considering
the safety risk of accidental errors and o f high-risk product characteristics shall
be introduced here: ﬁrst, the DIN EN 50126, which is used for the safety of the
European railways and, secondly, the RAPEX procedure which develops guidelines
for the rapid exchange of information on r isks of general product safety in Europe.
The DIN EN 50126 was given the headline “The speciﬁcation and demonstration
of the Reliability, Availability, Maintainability and Safety (RAMS)” with the
footnote “railroad application” [ 9].
Within the document, methods for man aging the issues referred to in the title
are given. Of particular interest here is the paragraph on risk and the assessment
and acceptance of risks. Literally, it is written: “The acceptance of risks should be
based upon commonly accepted principles”, a nd in addition, as the criterion used in
Germany, the minimum endogenous mortality (MEM) is speciﬁed.
In the Annex of the standard, the MEM is described in more detail by examples of
risk acceptance principles. The MEM is based on the classiﬁcation of death causes21 From Controllability to Safety in Use: Safety Assessment of Driver ... 503
Fig. 21.4 Presentation of the age-related mortality [ 10]
including a group named “technological facts”. This includes categories such as
entertainment and sports, home improvement, engines and machines, and trafﬁc.
Not included therein are death events due to illness and congenital malformation.
The term “endogenous mortality” refers to the proportion of a group to the whole
extent of fatalities, which in turn can be broken down depending on age. In
economically developed countries, the age-related minimum is the group of 5–15-
year-olds (Fig. 21.4).
A normalized simultaneity of inﬂuencing systems is determined by the approach
that new technical systems should not have a higher risk than already existing
ones and that humans are always exposed to multiple systems simultaneously. This
simultaneity factor is 20 and thus the reference value of the minimal endogenous
mortality is again divided by 20 [ 10].
A second approach for a possible reference value provides the RAPEX proce-
dure, which is described in the Directive 2001/95/EC on general product safety
[11]—a community system for the rapid exchange of information among the
European countries for product safety risks. This Ofﬁcial Journal of the European
Commission also addresses risk assessment. The details of the RAPEX are laid out
in the Commission’s decision “on establishing guidelines for the management of the
System for a Rapid Exchange of Information ‘RAPEX’ established under the Article
12 and the notiﬁcation procedure under the Article 11 of the Directive 2001/95/EC
on general product safety” [ 12].
Different degrees of risks are deﬁned and can be determined from the sum of the
degree of injury and the likelihood of occurrence. Cases which pose a serious health
and safety risk to the consumer, i.e., the highest risks, are to be reported.
In the Annex of the document, injury scenarios, from bruises to death, are
subdivided into four categories of injury. The likelihood of occurrence is expressed
as a percentage value of the damage during the life span of a product and is further504 A. Huesmann et al.
Fig. 21.5 Classiﬁcation of risks. Severity of injuries: (1 DConsequences completely reversible;
2DFunction affected for < 6 months; 3 DFunction affected > 6 months or permanent loss of
function; 4 DDeath or disability > 10%) [ 12]
subdivided into eight levels between 50 % and 1 /STX10/NUL6. Finally, for the evaluation
and classiﬁcation of the risk determined, a reference table is given, as shown in
Fig.21.5.
Rather than using existing procedures of dealing with safety risks occurring from
errors or risky product features, the approach of a risk–beneﬁt analysis seems also
reasonable. Here, the security risk is assessed in relation to the gain of safety by
using the systems. An effectiveness analysis could provide such a methodological
approach [ 13]. The performance of the driver inc reases considerably in importance,
and the issue of which performance would be recognized as a benchmark would be
raised: here, the reference depends on wh ether the driver is averagely experienced
or has more than average driving skills. In addition, results from the accident
statistics could give orientation, when the question of “how often a driver error is
responsible for an event” is considered. A lso a legitimate appro ach in analogy to the
abovementioned MEM, to not cause any adverse effect on the relevant risk group,
would be the issue of the share of accidents r elated to the overall trafﬁc situation.
It is obvious that there is still a need for the development of appropriate
references and criteria.21 From Controllability to Safety in Use: Safety Assessment of Driver ... 505
21.4 Informative Sources for the Creation of an Analysis
of Safety in Use
In Sect. 21.3.1 , the systematic approach to the cr eation of an analysis of safety in
use was described. On the one hand, all possible scenarios are collected; on the
other hand, a quantiﬁcation of the risk is tried to be achieved. Thereof, measures are
derived in order to suitably contain the risk of damage.
Basically, there are three approaches to reduce risk:
The ﬁrst category includes increasing the systems’ controllability by the user and
other road users. This, for example, can be achieved by enabling drivers to easily
override the system or by other measures of the human–machine interaction, like
takeover requests to improve the so-called mode awareness.
The expansion of technologies for situational awareness and control by the vehicle
constitutes the second category. For exa mple, the use of additional and redundant
sensors for reliable and accurate object detection or the optimization of the
detection algorithm in the classiﬁcation of the relevant objects could be possible
measures.
The third category includes functional adjustments, which limit or preclude the
use of the system in potential risk scenarios. By that, the use of the systems
in scenarios with a high risk of safety in use will be restricted. Examples of
functional limitations are limiting of the speed reduction in automatic emergency
brake systems to a level that is manageable for the following trafﬁc or to limit
the steering assistance of lane-keeping s ystems to scenarios where track lines are
available and detected.
To ensure that the measures derived from an analysis of safety in use are
necessary and can fulﬁll the desired out come, the consideration must be very
detailed and carried out with great care. This requires experts who have sufﬁcient
in-depth knowledge of the ﬁeld.
At this point, it shall be brieﬂy mentioned that studies from different scientiﬁc
disciplines show that expert judgments that are not based on a sufﬁciently large
and valid data base but are associated w ith signiﬁcant inaccuracies concerning
speciﬁc forecast predictions [ 14]. The inaccuracy of the for ecasts increases with the
increasing complexity of relationships within the observation unit. Driver assistance
systems show an especially high complexity, since many interacting factors are
involved (driver, vehicle, environment) , each, which in turn show a high complexity
of their own. Accordingly, for a reliable and sufﬁciently detailed analysis of safety
in use, experts need data sources of which statistical data and facts can be derived
as input variables for the event tree, and questions of the following type can be
answered.
“Which transport scenarios with a pot ential safety hazard may occur during
the system use?” or “How often do relevan t trafﬁc scenarios and relevant scenario
parameters occur?” or “How well do diffe rent drivers and other road users handle
the relevant trafﬁc scenarios?” For a realistic assessment of the controllability, both506 A. Huesmann et al.
Fig. 21.6 Some methods for obtaining data in the ﬁel d of controllability/driver performance
likelihood of occurrence of trafﬁc scenarios
the performance of the driver in the ﬁrst encounter of the system and the medium-
and long-term handling of the assistance system are of signiﬁcance. A further
question to be addressed is “How does the system perform in the scenarios under
consideration?”
Thus, a key challenge in the conduct of an analysis of safety in use is to provide
the data required in sufﬁcient quality.
In principle two categories of data sources can be distinguished: the scenario-
based and driver performance-related data sources. Some methods provide answers
for both categories, while others only provide data for one. Figure 21.6 gives an
overview of different methods for data generation. It is evident that the validity of
the data increases depending on the complexity of each method.
Complexity here refers to the sum of the organizational, ﬁnancial, and technical
requirements for the preparation, implemen tation, and analysis of the data obtained
from each method. For example, a literature review, based on a targeted analysis of
“relevant” literature, is associated with much less effort in terms of the technical and
organizational requirements than a driving simulator study with subjects.
On the other hand, a driving simulator study is, in turn, associated with far less
effort than the so-called naturalistic driving study (NDS) or a ﬁeld operational
test (FOT). Both, the NDS and the FOT, involve several months to years of
organizational and technical preparations before results can be obtained. However,
the knowledge gained by a well-prepared and broadly based NDS/FOT study
is tangible, reliable, and informative, because these methods are based on the
observation of the driver behavior in dealing with one or more systems in a natural
ﬁeld environment and in a real vehicle.
Often, several of the methods described above must be used in the context
of an analysis of safety in use in order to increase the reliability of the data to
a sufﬁcient level. In general, it is unlikely that a single method provides all the
necessary data and facts. Different methods must therefore be used in parallel and
complementary to close the knowledge gaps in the conduct of consumer safety21 From Controllability to Safety in Use: Safety Assessment of Driver ... 507
analyzes. Below, the mentioned methods are brieﬂy described and examples in the
context of semiautomated driving functions are provided. It is important to note thata further method is the method of simulation, while these method is not addressedin this paper.
21.4.1 Data Collection: Literature Review
Literature reviews can be used for answering questions of relevant trafﬁc sce-narios and their frequencies, as well as questions related to the performanceand controllability of systems by the driver. Particularly, in the ﬁeld of driverperformance and controllability, relevant literature sources are available. In thecontext of driver assistance systems, scientiﬁc contributions in the ﬁelds of generalcognitive psychology, trafﬁc psychology, e rgonomics, human–computer interaction,
and norms and standards of such may provide a ﬁrst basis for evaluating thecontrollability and driver performance.
Starting with a limited number of relevant sources, the advantages of this method,
if standard sources are used, lie in the lim ited effort and the general acceptance of
the facts.
A disadvantage of the method is that the standard literature often provides only
ﬁrst generic advice and information for the use of safe design systems.
A disadvantage of the method is that the standard literature often provides only
ﬁrst generic advice and information of the safety in use of systems. Also, thereported facts of the assessed driver performance and controllability are often quitesystem speciﬁc. In addition, due to the increasing complexity of innovative driverassistance systems, they have not yet been studied in a high level of detail.
Consequently, the results of a literature review need to be interpreted carefully
due to the lack of the informative value and reliability for a speciﬁc questionfor the system-speciﬁc safety in use. In re gard to scenario-speciﬁc data, similar
advantages and disadvantages, when conduc ting a literature review, apply. Factors
for the evaluation of relevant trafﬁc scen arios, such as the characteristics of the
road and trafﬁc, congestion time, average travel time and travel distance, weatherconditions, velocity, and much more, have been studied and described in varioussources. However, their codependency is often not considered (e.g., the likelihoodof congestion depending on the weather conditions).
21.4.2 Data Collection: Questionnaires
Interviewing specially selected driver groups is another way to obtain basic data
for an analysis of safety in use. Different groups can often give relatively goodindication of the occurrence of relevant and potentially critical trafﬁc situations.Especially where only few publications exist, a questionnaire study may provide508 A. Huesmann et al.
ﬁrst qualitative and quantitative indications. An advantage of surveys is they can be
used to gain insight into speciﬁc experiences of a relatively large number of people.Additionally a survey can be carried out in diff erent places and in different countries,
thus facilitating a quick data collection of different regions’ trafﬁc situations. Tothe advantage that the necessary infrastructure for the preparation, implementation,and evaluation of such studies compared to other methods is relatively low. Due topossible different interpretations of ques tions, linguistic and cultural peculiarities,
and the objectivity of the respondents, a survey study is often associated withuncertainties regarding the reliability of the results. Surveys in the ﬁeld of assessingthe controllability of critical situations are less advisable, as several studies haveshown that respondents without experience of the situation in question oftenoverestimate their own performance.
As an example of a questionnaire study, a study of the likelihood of certain trafﬁc
situations in China will be introduced (internal study of BMW). The backgroundof the study was the need to acquire knowledge about the trafﬁc situation inChina for the safety in use of partially automated assistance functions. Due to therelatively short history of motorized road trafﬁc and the ever-changing structuresin the country, hardly any publication sources exist, which provide the latest andquantiﬁable picture of the trafﬁc situation in China. The aim was to compare thefrequency of safety-relevant trafﬁc situations on Chinese motorways with those inGermany and to use them as an initial estimate for assessing the safety in use ofassistance systems in China.
In preparation of the study, several inte rviews with German employees, working
in China, and Chinese employees were conducted to identify the main differencesof road trafﬁc between China and German y. It quickly became apparent that the
opinion of respondents remained vague in interviews and did not allow for aquantiﬁcation of the so-called exceptional situations. With exceptional situationssuch trafﬁc situations were meant w hich pose a potential accident risk due to
road users’ unlawful conduct of their vehicle in trafﬁc. Examples of exceptionalsituations are, among others, reverse driving on the motorway, wrong-way drivers,and cyclists and pedestrians on the motorway.
The development of the questionnaire and the implementation and evaluation
of the study included several steps. Firs t the deﬁnition of the questionnaires’ main
focus took place on the basis of interviews with Chinese experts. Subsequently, thequestionnaire was developed, the rating scale selected, and the questionnaire wastranslated into English and Chinese language. A test phase in China was carried out,to optimize the questionnaire until it was ﬁnally distributed to selected participantsin China and Germany. The analysis and interpretation of results marked the end ofthe study.
Three different samples of participants took part in the study: German employees
working in Munich ( nD25), Chinese employees working in Beijing ( nD34), and
German employees sent to work in Beijing ( nD26). In addition to the demographic
items, the questionnaire included further que stions about driver behavior and driving
experience as well as the perception of the frequency of some exceptional situations.21 From Controllability to Safety in Use: Safety Assessment of Driver ... 509
The results of the survey revealed that Chinese respondents, on average, drive
260 hours per year on a highway in a trafﬁc jam. Thus, Chinese participantsexperienced on average 23 times more often congestions on highways than theGerman participants. According to the results of the study, the German participants,on average, experience approximately 12 hours of trafﬁc jam driving on Germanmotorways, in 1 year.
The analysis of the questions regarding the exceptional situations has shown that
all exceptional situations included in the survey were ten times more frequentlyexperienced on Chinese motorways than on German highways, some even moreoften. Striking was that the results of the assessment of Chinese respondents inChina partially differed from the assessment of the German respondents: Germanrespondents who worked in China rated the likelihood of occurrence of theexceptional situations higher than the Chinese respondents.
Different perceptions of the criticality of trafﬁc situations, due to cultural
differences, driver training, or habituation effects of the local population, are justsome of the possible explanations for this discrepancy. The different assessment ofthe frequency of trafﬁc situations genera lly raises the question of how objective the
results of survey studies are and highlights the need to validate the results. Never-theless, such results provide an initial orientation or tendency of the differences inthe two countries.
The example described shows how data about trafﬁc situations and exceptional
situations can be obtained with relatively little effort and in a s hort time through the
use of questionnaires. However, the results also show that such questionnaire studymust be validated or supplemented by more sophisticated methods.
21.4.3 Data Collection: Studie s in the Driving Simulator
or in Real Vehicles
Alongside with volunteer studies in the real vehicle, different types of driving
simulator studies, assessing driver performance, controllability of driver assistancesystems, and developing human–machine int erfaces are increasingly being applied.
Both methods, with their advantages and disadvantages, can be applied in the
course of the development and validation of the assistance system. Real studies holdthe advantage of participants experiencing real driving dynamics in the examinedscenarios, which is important for observing realistic driver reactions. However, thedesign of a real driving study is limited by safety issues and obvious limitations ofthe surrounding infrastructure.
Basically, to conduct a study with real vehicles, safety-oriented modiﬁcations
have to be taken in order to reduce the risk of participants getting harmed. Theseinclude limiting the scenario s studied to low or medium vehicle dynamics, carrying
out studies on safe and enclosed test routes and areas, excluding particularly criticaltrafﬁc scenarios, and some other. Further, the inﬂuence of secondary and tertiary510 A. Huesmann et al.
driving tasks on the driving performance can only be observed to a very limited
extent, due to safety issues.
Another infrastructural limitation of real driving studies that, if at all, can be
managed with great effort is the presentation of complex trafﬁc scenarios that
require several vehicles and other road u sers. Further, ensur ing the reproducibility
of the study trafﬁc scenarios is often im peded because of external factors such
as the changes in weather conditions. The conduct of real driving studies outside
of the public trafﬁc space may result in t he examined trafﬁc scenarios as being
too artiﬁcial, leaving the issue as to whether the collected data of the driver’
performance corresponds to the actual performance of the subjects.
An example of a study in the real vehicle, which provides basic data for an
analysis of safety in use, can be found, for example, in [ 15]. The study exam-
ined two error categories to assess potential steering system disorders. Here, the
controllability of the leap in the steering angle by switching off the active steering
system and the controllability of the manipulated errors in different amplitudes was
observed at various levels of velocity. Based on the analysis of the driver behavior,
two different reaction phases can be distinguished: on the one hand, the initial
response, i.e., the time interval until the end of the ﬁrst driver engagement, and,
on the other hand, the error compensation phase in which the occurring driving
dynamics and lane tracking errors are compensated. Both the subjective assessment
and the characteristics of the vehicle opera tion and the vehicle reactions show that a
resulting leap from the system shutdown in the steering ratio is easy to control, even
with demanding steering maneuvers. For the positioning error, there is apparent
that up to a positioning error amplitude of 0.3ıof the front wheel angle, no safety-
relevant implications apply.
In [16], the drivers’ performance was studied in approaching a stationary obstacle
in the low speed range with an active ACC stop & go system. The study showed
that all drivers were able to stop the ego vehicle in case of loss of the target object
during the approach in time. In addition, strong learning effects were found in the
study during the repetition of the test scenario.
In driving simulator studies, most safety-related and infrastructure-related con-
straints of a real vehicle study can be overcome, depending on the type of the
simulator. The lack of driving dynamics in the static simulator or the limited
dynamics in the dynamic simulators remains a signiﬁcant weakness of the simulator
methods. In recent years, a new method of volunteer studies has been deployed.
It is called the vehicle-in-the-loop method. Here, the strengths of the simulator
technology (e.g., the virtual driving environment) and the real vehicle (e.g., real
dynamics) are combined. However, resultin g from the combination, new challenges
arise that need to be addressed [ 17,18].
Simulator studies have been increasingl y used in recent years for studies on driver
performance and controllability of partial and highly automated assistance systems
and provide valuable information that can be used in an analysis of safety in use.
In [19] a simulator study is described where the drivers’ performance was studied
in three different takeover request scenarios. The ability of the driver to take over
is one main topic in automated systems. Depending on the scenario, subjects had21 From Controllability to Safety in Use: Safety Assessment of Driver ... 511
to handle different driving maneuvers after the takeover request was given (e.g.,
stabilizing, maneuvering, and navigating). In the study, each scenario was run with
takeover times of 4, 6, and 8 s. The driving speed during the highly automated
driving was set to 100 km/h and test subjects had to simultaneously perform a
tertiary driving task.
It has been found that a drop in the takeover period from 6 to 4 s leads to a
particular high loss of comfort in subjective evaluations of the subjects. In contrast,
no subjectively perceived comfort proﬁt could be established when the takeover time
was increased from 6 to 8 s.
In [20], a simulator study demonstrated the quality of the takeover by the
inﬂuence of certain environm ental parameters and different non-related driving
tasks.
It was shown that visual–acoustic takeover request lead to signiﬁcantly faster
takeover times and improved lane-keeping performance in contrast to a strictly
visual takeover request.
Depending on the request stimulus, the time the drivers needed to put the hands
back onto the steering wheel, respectively, to take over the driving task while driving
highly automated and given different com plex takeover requests, was investigated
in [21].
The examples described illustrate the advantages of simulator studies in the
investigation of a variety of complex and reproducible trafﬁc scenarios, non-related
driving tasks, and risky takeover scenarios without endangering the driver or other
road users.
21.4.4 Data Collection: Observation of Trafﬁc
The observation of trafﬁc can be performed either from a static or a dynamic
observation point. In the case of static trafﬁc observations, observation platforms are
built at the relevant transport nodes, to capture the ﬂow of trafﬁc and the behavior of
road users. In this case, road users refer to vehicles but also pedestrians and other,
so-called, vulnerable road users. By analyzing the data of the observed trafﬁc nodes,
insight into the behavior of road users can be gained. A disadvantage of this method
is that seldom other sensors than cameras are being used. Thus important parameters
such as intervals between vehicles, vel ocity, and acceleration, among others cannot
be determined sufﬁciently.
Alternatively to the static monitoring station, the detection of mundane road
trafﬁc situations can be realized from a ﬁr st-person view by establishing one or more
vehicles with sensors and environmental monitoring equipment. By this approach,
the technical, ﬁnancial, and organizati onal effort to carry out the measurements
can vary greatly, depending on the amount of the used monitoring equipment, the
number of vehicles, and the overall required length of the route. Often, this approach
is used to selectively look for trafﬁc events and their likelihood of occurrence. Since
the effort of extracting the relevant events from the raw data can be extremely time512 A. Huesmann et al.
Fig. 21.7 The graphical user interface used in the above described study
consuming and costly, it is advisable to instruct drivers or passengers, to additionally
code for trigger signals while driving. Subsequently, this facilitates the discovery of
relevant situations.
As an example, a recent trafﬁc observatory study was conducted in China and
will be presented here. The study used test vehicles to gain insight into the trafﬁc
situation in China. As part of a pilot study, two test vehicles have been set up in
order to acquire ﬁrst data on the trafﬁc situation in congested trafﬁc in China. Each
vehicle has traveled about 8 hours a day for 4 months, with much of the travel
time consisting of congested trafﬁc. Due to the built-in measurement technology,
consisting of four cameras and four radars, the trafﬁc situation in the front, rear, and
side regions of the vehicle were recorded.
The vehicles were driven in two selected cities by two Chinese drivers. During
the journeys, the codriver coded the relevant scenarios and objects that have been
deﬁned prior to the study.
For this purpose, the codriver was given a control panel with a graphical user
interface (Fig. 21.7) to mark predeﬁned road characteristics, such as the type of
the road (urban, expressway, and interstate), speed limit, number of lanes, physical
separation to opposing trafﬁc, and observed objects, such as pedestrians, cyclists,
and lorries. For a better understanding of the scenario, the codriver also recorded
additional details, such as light conditions and of special sections of the road (tunnel,
junction, roundabout, etc.).
During the analysis of the data, the search for the relevant situations was
considerably facilitated by the trigger signals and captured characteristics of the
situation set by the codriver. In addition, all site features tagged by the codriver
were reviewed and, if felt necessary, co rrected. 90 % of the codrivers’ captured site
features were identiﬁed and va lidated in the video analysis.21 From Controllability to Safety in Use: Safety Assessment of Driver ... 513
During the study an overall travel distance of 8400 km was recorded, with
about two-thirds of the travels corresponding to congested trafﬁc. A total of 4610situations were marked by the codrivers. 1345 cases refer to pedestrian situationsand 430 cases to cyclists’ situations. If the number of captured pedestrian situationsis set in relation to the distance and time traveled, a pedestrian situation occurs every47 minutes on a Chinese motorway (interstate). The likelihood of occurrence ofpedestrians on the expressways (city ring roads) is about ten times higher. Cyclistsoccur once, every 8.5 hours on interstate roads and on approximately every 15minutes on the expressways.
By conducting a trafﬁc observation with vehicles, the likelihood of occurrence
of trafﬁc situations, which have to be considered in an analysis of safety in use,can relatively well be objectiﬁed. The main disadvantage of this approach is that bythe use of professional drivers in the test vehicles, in respect to the driver’s drivingstyle, a low variability arises. Also possible inﬂuences due to the drivers’ behaviorin emerging trafﬁc situations cannot be excluded.
21.4.5 Field Operational Test
The following section is intended to present a speciﬁc method which is particularlyuseful for collecting in-depth knowledge of the driver, the vehicle, and the envi-ronment within their speciﬁc constellations. The ﬁeld operational test (FOT) is amethod where participants drive specially equipped vehicles under normal trafﬁcconditions, in order to gain insight and to det ect a drivers’ natural driving behavior.
When conducting a FOT, a large number of aspects must be considered. Theseaspects will shortly be described based on a study conducted by BMW. In contrast tothe FOT, in the naturalistic driving study, subjects use their own vehicles. However,with both methods, the vehicles are equipped with the appropriate instrumentationsto measure drivers’ inherent behavior in the ﬁeld.
Recently, a FOT was performed in Germany i n order to collect in formation from
daily trafﬁc situations. This information can be used for the safety in use assessmentand therefore for the safe development of assistance systems. Additionally, a lot canbe learned about how drivers handle and interact with the assistance systems andhow to incorporate this knowledge into a customer value in the development offuture systems. The focus is on the questions of how often certain events (e.g.,emergency lanes, congestions, etc.) occur in trafﬁc, how critical they are (e.g.,minimum distances to the front vehicle), and how drivers handle them. Here, themethod is different to the aforementioned trafﬁc monitoring: the ego driver is theessential factor of this measurement method.
In the current study, seven vehicles were equipped with appropriate measurement
technology. They were used by selected drivers for a period of 3 months during thedaily driving process. Before making such a time- and cost-intensive study, differentfactors must be considered and planned accu rately. These factors are divided into
the following working packages: the general experimental planning and design514 A. Huesmann et al.
phase, vehicles and measurement technology, driving phase, documentation, and
evaluation.
In the following paragraphs, these steps are explained in detail and the ﬁrst results
are displayed.
First, the aspect of the “general experimental planning and design” phase
will be considered. This includes factors like question selection, sampling, andquestionnaire development. A wide range of issues is the basis for all furtherdecisions of the experimental design, e.g., the sample selection. Because vehicles
are usually available only for a limited time period, you have to decide whether youwant to investigate a lot of different drivers who drive only a short time or a fewdrivers who can collect long-time experience with the vehicle and the assistancesystems. In this study, for example, it was of interest how drivers behave with theassistance systems for an extended period. Questions such as “Adapt drivers theirbehavior?” and “Can they deal with assistance system limits?” can be addressed.
For the selection of the drivers, certain criteria were applied. Thus, drivers
should often take longer routes with a high trafﬁc density, should not work inthe development of driver assistance systems, and should not be a novice or aprofessional test driver. Seven drivers were selected (mean age 32 years; 2 women,5 men). In addition to the sampling, the d evelopment of questionnaires is equally
of importance. Therefore, understanding which questions cannot be detected byobjective data and need to be covered with other methods are included in this phase.The occurrence of critical events, for example, is particularly important: “Whichtrafﬁc situation led to the critical event?” and “How was the situation assessed bythe driver?” are questions that can be covered with the method of questionnaires.
Next, we take a closer look to the aspect of “vehicles and measurement
technology.” This aspect includes factors such as “What kind of assistance systemsthe vehicles have on board?” and “Which m easurement technology and/or additional
sensors must be implemented?” Answering these questions and the decision for aspeciﬁc measurement technology is mainly depending on the issues to be answered.For example, if additional sensors are required, the measurement technology has toensure that this data will be integrated, and a synchronized recording of the vehicledata and the advanced sensor data is possible. For the questions of the current FOT,the trafﬁc environment was particularly relevant. That is why in addition to theexisting sensor technology of the vehicles, four side radars and four cameras wereinstalled in the vehicles. The cameras were each directed to one side, forward, andto the driver.
If the technical modiﬁcation c ompleted, the sample sel ected, the test materials
and questionnaires ﬁnalized, and the participants instructed, starting the drivingphase of the ﬁeld study is feasible. During the conduction the measurementtechnology should be checked regularly. In complex technical structures in whichmultiple components must be synchronized , it is advisable to consider not only the
functionality of these components but also the quality of data to detect any failuresand to correct errors. Another aspect is the support of the participants during theyhave the vehicle. In addition, the participants had to complete weekly and monthly21 From Controllability to Safety in Use: Safety Assessment of Driver ... 515
Fig. 21.8 Absolute number of measured functional overrides by the driver (From: Intern FOT
conducted by the BMW AG, 2014)
given questionnaires, which were related to certain aspects of driving events or the
evaluation of the experienced assistance systems.
In parallel to the execution of the driving, the analysis of the data available can
be started. In the following some results will be shown.
A system often used by the drivers was the trafﬁc jam assistant. This system
helps the driver in longitudinal and lateral control and keeps the vehicle in trafﬁc
jams to 60 km/h within certain system limits in the lane. Especially of interest was
in which cases the driver overrides this function? What are the causes for the drivers’
wishes to drive differently than the system? To answer this question, a number of
parameters can be used. On the one hand, the driving data shows us how many times
the function has been overridden by the driver (Fig. 21.8).
This frequency of overrides seems high at the ﬁrst glance. However, during the
study, the trafﬁc jam assistance function was 1812 times active, thus qualiﬁes the
absolute number of overriding. On the other hand, you can use the results from the
questionnaires to assess how often the driver has experienced a function override. In
Fig. 21.9, we can see how drivers evaluate these override moments throughout the
study.
This result can be supported with the question of what was the reason for the
override. Figure 21.10 shows that vehicles cutting in the drivers’ lane are most
often cited as responsible for overriding the function. With some distance, vehicles
veering out and after those too little distances to the lane marks are stated reasons
for an override.
These results can now be synchronized with the video data and the data of the car.
So the information that is available is, for example, whether it was really necessary
that the driver reacts or whether the situ ation could actually have been handled by
the system. Using the example “function overdrive”, one can see that it makes sense
to refer to various parameters to answer questions. Over time, the drivers are able to
detect system deﬁciencies and system behavior and to decide whether an override is
necessary. Therefore, the observation of this parameter throughout the course of the
experiment is particularly relevant.516 A. Huesmann et al.
Fig. 21.9 Absolute number of functional overrides, estimated by the driver (From: Intern FOT
conducted by the BMW AG, 2014)
Fig. 21.10 Reasons for the functional override by the driver (From: Intern FOT conducted by the
BMW AG, 2014)
In principle we can summarize that fro m such extensive studies, a variety
of information can be obtained. These are—regarding the driver reactions and
driver behavior—especially valid because they were obtained in the natural trafﬁc
environment.
21.5 Conclusion
With the method of analysis of safety in use, a systematic approach for a holistic
assessment of possible risks has been presented, which can be applied with respect
to automated systems in road trafﬁc. An essential point is the difference of the
concept of system errors in accordance to the ISO 26262 of functional safety. In
the ISO 26262, the E/E failure of systems is considered, but not, for example, the21 From Controllability to Safety in Use: Safety Assessment of Driver ... 517
limits of sensor performance. This often perceived by customers as a failure of the
functions properties is in the system development per deﬁnition a known limit of
the function or sensors and no error. Therefore, the system limit is also included in
the analysis of safety in use.
For a detailed assessment of the likelihood of personal-hazardous events, exten-
sive knowledge on driver behavior and driving situations is required. The more
accurately the quantiﬁcation of probabilities, the more basic knowledge must be
known. For that reason, well-known methods of driver performance studies in the
driving simulator to studies in regular trafﬁc or ﬁeld operational tests, respectively,
naturalistic driving studies, are carried out. Aspects like country-speciﬁc factors and
cultural differences increas e the complexity of the analy sis, hence, can increase the
cost of data collection signiﬁcantly.
The questions for accepted comparative values in the framework of the quan-
tiﬁcation of risks are still not answered in the context of automated driving
today. In this paper, two approaches , the minimum endogenous mortality and the
RAPEX procedure, were explained, which supply as a result of comparable values.
Another approach could be to derive indications from a risk–beneﬁt assessment. The
development of such reference values and t he scientiﬁc and social establishment is
one of the most important tasks on the way to highly automated driving.
References
1. Convention on Road Trafﬁc done at Vienna on 8 November 1968 (1968), http://www.unece.
org/ﬁleadmin/DAM/trans/conventn/crt1968e.pdf . Accessed 28 Sept 2015
2. Code of Practice for the Design and Evaluation of ADAS (2009), http://www.acea.be/uploads/
publications/20090831_Code_of_Practice_ADAS.pdf . Accessed 28 Sept 2015
3.http://www.transport-research.info/web/projects/project_details.cfm?id=20297 . Accessed 28
Sept 2015
4. E. Donges, Aspekte der Aktiven Sicherheit bei der Führung von Personenkraftwagen. Auto-
mobil - Industrie 27, 183–190 (1982)
5.ISO 26262, Road Vehicles – Functional Safety .
6. Bengler K, Grundlegende Zusammenhänge von Automatisierung und Fahrerleistung, Beitrag
inFahrerassistenz und Aktive Sicherheit , 16./17.4.2015 (Haus der Technik, Essen, 2014)
7.Rechtsfolgen zunehmender Fahrzeugautomatisierung , Bericht der Bundesanstalt für Straßen-
wesen, Fahrzeugtechnik Heft F83, 2012
8.Report of the sixty-eighth session of the Working Party on Road Trafﬁc Safety, ECE/-
TRANS/WP .1/145 (2014). http://www.unece.org/ﬁleadmin/DAM/trans/doc/2014/wp1/ECE-
TRANS-WP1-145e.pdf
9.EN DIN 50126, Speziﬁkation und Nachweis der Zuverlässigkeit, Verfügbarkeit, Instandhalt-
barkeit und Sicherheit (RAMS)
10.Human Morta lity Database (University of California, Berkeley and Max-Planck-Institut für
Demographische Forschung, Rostock, 2015). www.mortality.org orwww.humanmortality.de .
Accessed 18 Feb 2015
11. Richtlinie 2001/95/EG des Europäischen Parlaments und des Rates vom 3 . Dezember 2001
über die allgemeine Produktsicherheit (2001). http://eur-lex.europa.eu/legal-content/DE/TXT/
HTML/?uri=CELEX:32001L0095&from=DE518 A. Huesmann et al.
12. Entscheidung der Kommission, zur Festlegung von Le itlinien für die Verwa ltung des gemein-
schaftlichen Systems zum raschen Informationsaustausch “RAPEX” gemäß Artikel 12 unddes Meldeverfahrens gemä ß Artikel 11 der Richtlinie 2001/95/EG über die allgemeine
Produktsicherheit (2009).
13. Kompaß K, Helmer T, Wang L, Kates R, Gesamthafte Bewertung der Sicherheitsveränderung
durch FAS/HAF im Verkehrssystem: Der Beitrag von Simulation, Beitrag in Fahrerassistenz
und Aktive Sicherheit , 16./17.4.2015 (Haus der Technik, Essen, 2014)
14. P. Tetlock, Expert Politic al Judgment (Princeton University Press, Princeton, NJ, 2005)
15. Neukum A, Krüger H-P, Fahrerreaktionen bei Lenksystemstörungen - Untersuchungsmethodik
und Bewertungskriterien, in VDI-Gesellschaft Fahrzeug- und Verkehrstechnik (Hrsg.), Reifen-
Fahrwerk-Fahrbahn (VDI-Berichte, Nr. 1791) (VDI-Verlag, Düsseldorf, 2003)
16. Neukum A, Lübbeke T, Krüger H-P, Mayser C, Steinle J, ACC-Stop&Go: Fahrerverhalten
an funktionalen Systemgrenzen, in 5. Workshop Fahrerassistenzsysteme - FAS 2008 , ed. by
M. Maurer, C. Stiller (FAS, Karlsruhe, 2008), S. 141–150
17. T. Bock, Vehicle in the Loop – Test- und Simulationsumgebung für Fahrerassistenzsysteme.
Audi Dissertationsreihe, Bd 10 , 1st edn. (Cuv illier Verlag, Göttinge n, 2008)
18. G. Berg, Das Vehicle in the Loop – Ein Werkzeug für die Entwicklung und Evaluation
von sicherheitskritischen Fahrerassistenzsystemen , Dissertation, Universität der Bundeswehr
München, 2014
19. D. Damböck, M. Farid, L. Tönert, K. Bengler, Übernahmezeiten beim hochautomatisierten
Fahren . Paper presented at the 5, Tagung Fahrerassistenz, München, 2012
20. Radlmayer J, Gold C, Lorenz L, Bengler K, How Trafﬁc Situations and Non-Driving-Related-
Tasks Affect the Take Over Quality in Highly Automated Driving (HFES, Chicago, 2014)
21. Naujoks F, Mai Ch, Neukum A. The effect of urgency of take-over requests during highly auto-
mated driving under distraction conditions. Proceedings of the 5th International Conference on
Applied Human Factors and Ergonomics AHFE 2014 , Kraków, Poland 19–23 July 2014Chapter 22
Testing Autonomous and Highly Conﬁgurable
Systems: Challenges and Feasible Solutions
Franz Wotawa
22.1 Introduction
Quality assurance has always been an important topic in the automotive industry
leading to standards like ISO 26262 [ 1] where automotive safety integrity levels
(ASILs) are deﬁned based on hazard analysis and risk assessments. Often failure
mode and effect analyses (FMEAs) are us ed to identify potential hazards occurring
when particular system components fail. Alternatively, such systems might be
analyzed accordingly to Leveson [ 2] where the author focuses mainly on a system
theoretic perspective. In order to assure that the implementation does never lead
to such dangerous situations, tests have to be carried out. Although the automotive
industry has spent a lot of effort in quality assurance, there has been a lot of vehicle
recalls during the past years, many of them caused by software bugs detected after
deployment. As discussed by Altinger et al. [ 3], such recalls also have a huge
economical impact. When considering that even today’s quality assurance measures
used in the automotive industry cannot prevent recalls, the question arises about
consequences for safety of autonomous driving vehicles. For this purpose we discuss
ﬁrst the differences between ordinary cars and autonomous driving vehicles and
second identify means for dealing with these differences.
Autonomous systems like autonomous mobile cars or robots have to provide
a certain task, for example, driving from one place to another, while interacting
with their surrounding environment. This interaction is based on observations such
systems obtain from the environment using sensors and their internal current state
from which actions are derived. These actions are executed using the attached
actuators. In the case of autonomous driving vehicles, the information about the
current position, the speed, other vehicles, a nd obstacles are obtai ned using attached
F. Wotawa (/envelopeback)
Institute for Software Tec hnology, Technische Universität Graz, Graz, Austria
e-mail: wotawa@ist.tugraz.at
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_22519520 F. Wotawa
Fig. 22.1 From “classical” vehicles to autonomous driving vehicles and beyond
sensors like GPS, laser range ﬁnders, or vision systems. Given this information
and the planned journey, such an autonomous vehicle decides on the next step like
changing the lanes on a highway or initializing an emergency braking action. All
such decisions may harm others, and thus such systems have to be thoroughly tested
to assure that all safety critical requirements are fulﬁlled. This situation becomes
worst in case of self-adaptive systems like systems that learn during operation or
systems having a huge conﬁguration space. It is interesting to note that even in the
case assuming that all such systems behave deterministically from the point of view
of the implemented algorithms and behav iors, there might be cases where small
deviations of the measured input signals have a huge impact to decisions. Thus,
from outside such a system might look like as behaving non-deterministically.
In Fig. 22.1 we depict the main difference between classical cars, vehicles with
assistive technology, autonomous driving vehicles (ADVs), and ADVs with adaptive
technology. Whereas ordinary vehicles and vehicles with assistive technology
always have an external supervisor in the loop, i.e., the driver, there is no external
supervision in case of ADVs and adapti ve ADVs. Hence, any failure occurring
during driving has to be detected by the ADV itself. Furthermore, appropriate
countermeasures have to be taken into account immediately in order to prevent
hazardous situations. For this purpose the ADV has to have access to necessary
information from which a failure can be deduced. This includes not only the internal
state of the vehicle itself but also its surrounding environment.
When allowing systems more and more autonomy, the question arises of how
to ensure a proper behavior under all circumstances? Due to variations of sensory
inputs, changes in the environment, e.g. , change of lighting conditions, faults that
might occur, or different conﬁgurations, the whole space of possibilities grows very
quickly and it is very likely to not consid er certain cases during development. For
example, there are a huge variety of different trafﬁc signs around the globe. Some
of them are outdated but might be still found. Hence, the vision system of an22 Testing Autonomous and Highly Conﬁgurable Systems: Challenges ... 521
autonomous vehicle responsible for detecting and classifying trafﬁc signs has to
be tested using many different versions of signs. Even worst the signs might be
damaged, the color might not longer be the originally speciﬁed color, and so on.
However, in any circumstances the autonom ous vehicle has to react appropriately.
From the stop sign example, we are also able to see that the variants depend on
the region, which allows us to specify a certain context, e.g., the country where
an autonomous vehicle is going to operate, in which certain rules, assumptions, or
properties are valid.
In this chapter we assume that the subcomponents of the whole system already
have been thoroughly tested and focus on the integration and system test. There
we are in particular interested in assuring important requirements of autonomous
vehicles under all circumstances. We will discuss the inﬂuencing parameters, which
also entail consequences on how to test such systems. Depending on the degree of
autonomy, we will see that testing during development might not be sufﬁcient and
thus require introducing monitoring at run time for assuring meeting requirements
like safety.
In the following we discuss related research of testing where we specially
focus on autonomous adaptive systems. Afterward, we discuss the underlying
problem and propose a testing method that takes the huge variety of conﬁgurations,
parameters, and situations into account. Finally, we conclude the paper.
22.2 Related Research
Validation and veriﬁcation (V&V) is an important part within the system develop-
ment process. Under validation we subsume all activities necessary to check whether
a developed system is the system that was indented to be developed, whereas
veriﬁcation is for checking that the syst em follows its speciﬁcations. Testing can
in principle cover both parts of V&V . However, it is obvious that testing is only
for detecting failures but not for ensuring that there are no faults in the system.
Nevertheless, testing is currently the most important activity in V&V . In Fig. 22.2
on the left, the V process is depicted that is often used as a standard process in
the automotive industry. In this process the different phases of the process like
requirement analysis are paired with th eir corresponding testing activities.
For a general introduction into testing, we refer the interested reader to [ 4]a n d
[5]. Testing as an activity generally speak ing deals with search for interactions
between the system under test (SUT) and a user in order to reveal an unexpected
behavior. In general there might be an unfeasible number of potential interactions.
Hence, testing as a discipline tries to identify the most relevant interactions with a
SUT. Relevant in this context mean to cover sequences of interactions that if fulﬁlled
assure that the SUT works as originally indented.
In order to reduce the testing effort, the automation of testing has been in the
focus of research and development for seve ral decades. Test automation comes with
two favors: (1) automation of test execution and (2) automation of the generation522 F. Wotawa
Fig. 22.2 From system development to its use
of interaction sequences. The former requires the implementation of frameworks
that allows to program sequences of interactions with the SUT directly. The latter
deals with the automated extraction of interaction sequences. This can be done
from information about the input domains or models of the SUT. In case of model,
we speak about model-based testing (MBT), which has gained a lot of attention.
For an introduction of MBT, have a look at [ 6]o r[ 7]. A model in the context
of MBT is usually a state-space representation of the relevant parts of a SUT
from which interaction sequences can be obtained via traversing the state space.
In addition MBT also allows for checking whether the output generated by the SUT
when stimulated with an extracted interaction sequence follows the expectations.
Hence, there is no need to have an additi onal oracle, which allows for full test
automation. Test automation including the use of models is very much in use within
the automotive industry. For a detailed discussion on testing methods used, we refer
to [3] where the authors present the results obtained from a questionnaire survey
carried out in the context of automotive system development.
In the context of autonomous and self-ada ptive system, quality assurance has
become more and more important. Cámara et al. [ 8] compiled several articles
dealing with methods for quality assurance of self-adaptive systems that are also
of particular interests for ADVs. The main methods further outlined in [ 8]m a k e
use more or less of monitoring and runtime veriﬁcation to identify critical situations
to be handled directly whenever they occur after deployment of such self-adaptive
systems. Nafz et al. [ 9] introduced the concept of allowed deviations from the
expected behavior and propose a method that allows for guaranteeing that self-
adaptive systems always do not exceed these boundaries. Steinbauer and Wotawa
[10] described methods that make use of model-based reasoning to adapt in case of22 Testing Autonomous and Highly Conﬁgurable Systems: Challenges ... 523
internal faults or changes in the surrounding environment. There the underlying
idea is to reason from the models of the system and the environment to ﬁnd a
current conﬁguration of the system that explains the current observations. In this
way the given models describe more or less the behavioral boundaries of the
system and the degree of adaption. In other chapters of [ 8], authors make use of
runtime veriﬁcation for iden tifying potential hazards. In runtime veriﬁcation formal
models of properties that are checked during operation are used to identify potential
behavioral deviations. For more information about runtime veriﬁcation and its use,
consult [ 11]o r[ 12].
In contrast to the mentioned previous related research, the methodology proposed
in this chapter focuses on identifying potential hazards that might occur during
operation at development time. We will see that such an endeavor requires dealing
with multiple conﬁgurations and a huge para meter space in addition to dealing with
the oracle problem in an appropriate manner. The oracle problem in this context can
be solved when formalizing operational re quirements and properties. For carrying
out the tests, simulation environments have to be used for automation.
22.3 Problem Deﬁnition
Quality assurance of ADVs or adaptive ADVs has to consider two important issues.
One is due to the fact that the ADV after delivery makes decision without human
operators in the loop and thus requiring assurance that no unsafe decisions are
taken at any circumstances. Therefore, testin g has to consider all possible situations,
which lead to a huge parameter space to be handled. Inputs for testing are formal
descriptions of properties that have to be fulﬁlled always, e.g., safety requirements,
the ADV conﬁguration, external conditions, as well as internal faults that might
occur during operation and that should be handled appropriately.
In Fig. 22.3, we depict some of the inﬂuencing parameters that fall into one of
the three categories, i.e.:
 ADV conﬁguration
 State of the ADV
 External conditions inﬂuencing the behavior of the ADV
All these categories have a lot of different parameters. An electrical ADV
may have conﬁguration parameters for the engine used, the availability of an air
conditioner, the driving mode, and the used battery, all of them inﬂuencing the
driving distance, the driving experience, and the functionality. The internal state
of the ADV comprises information about internal faults, e.g., a broken wire, or even
wrongly perceived external objects, all of them inﬂuencing the ADV’s behavior.
External environmental conditions include the current weather or light condition
and also the context information, e.g., the country where an ADV is used. Here we
might have to consider, for example, different stop signs during operation.524 F. Wotawa
Fig. 22.3 The parameter space to be considered when testing ADVs
When considering nparameters each being able to take kvalues, we ﬁnally would
have to consider kndifferent combinations during testing. This is not feasible in
practice and cannot be done within a reasonable amount of time. When assuming
only two different values for all parameter s and in total 100 different parameters
falling in one of the three categories, we would require 2100/EM1.27/STX1030different
tests. Assuming that each execution of one test needs one second, we need more
than 1022years to ﬁnalize testing. Hence, ther e is a strong need for a testing method
requiring less tests but still assuring high quality.
Testing ADVs is somehow different fro m testing ordinary cars. Even in the
case that there is also a high number of potential conﬁgurations and faults to be
considered, we are able to test the differe nt parts of the vehicl e separately before
performing an overall system test. In a ddition, because of knowing that there is
a driver in the loop supervising the overall vehicle, testing can be more focused.
This cannot be done in case of ADVs. Therefore, we have to consider both a high
number of potential conﬁgurations and different situations that are inﬂuenced by the
environment and its corresponding conditi ons. In the next part of this chapter, we
introduce a solution to the testing challenge of ADVs that allows for keeping the
testing overhead as low as possible. Besides complexity reduction the approach can
also be fully automated.22 Testing Autonomous and Highly Conﬁgurable Systems: Challenges ... 525
22.4 Combinatorial Testing for Autonomous Adaptive
Systems
In order to solve the testing problem for ADVs, we have to provide a solution
that reduces the number of test cases and i s also able to solve the oracle problem.
The oracle problem in testing is the problem of classifying the output of a test as
being correct or faulty. In case of MBT, the used models handle the oracle problem
directly. In other test case generation a pproaches where the aim is to provide a set
of input stimuli, solving the oracle problem is an important task for automating test
execution. In the following we ﬁrst describe how to solve the problem of generating
test inputs. Afterward, we discuss how to solve the oracle problem, and ﬁnally, we
bring all these parts together to provide a general and feasible solution.
22.4.1 Combinatorial Testing
Within the past decade researchers thought about the question of how to generate
test inputs for highly conﬁgurable products or products having a large input space in
a feasible way. For example, when providing software for mobile phones, someone
has to take care of the different hardware devices as well as the different releases
of the operating system among other important parameters like special settings
of the phone network provider, the conﬁguration of the software under test, or
other software installed that might interact. Any combination of such parameters
or factors might be relevant for revealing a faulty behavior. However, this cannot
be done. Hence, someone thinks about the question whether combinations of two,
three, or more parameters might be sufﬁcient for fault detection.
From this deliberation researchers come up with combinatorial testing where
only combinations of a ﬁxed number of parameters are considered for test case
generation. In Kuhn et al. [ 13], the authors give an introduction into combinatorial
testing. For being self-contained, we brieﬂy discuss the underlying ideas behind
combinatorial testing. The basic idea is that a combination of values for tparameters
is enough to cause the system to be executed in a faulty way that ﬁnally leads
to an observable failure. Such a fault is called t-way interaction fault. Instead
of considering all combination of parameters, we only consider all combinations
fortparameters, which obviously reduce the number of generated test cases
substantially. Another important ﬁnding is that the number of parameters tto be
considered needs not to be too high to r eveal all faults in software. Kuhn et al. [ 14]
showed that for a larger variety of diffe rent programs, at most 6-way interactions
have been enough to detect all faults. In many cases a lower number of interactions
is sufﬁcient to detect most of the faults. Hence, combinatorial testing is a good
method for reducing the test suite size while keeping the failure detection rate high,
which is a prerequisite for testing ADVs in practice.
In the following we formalize the concept of t-way combinatorial tests. We
assume that we have a model of the input space comprising a set of parameters
PDfP1,:::,Png, where each parameter Pihas a domain D i, i.e., a set of values.526 F. Wotawa
Atest suite TS is a set of tuples ( v1,:::,vn) assigning a value vi2Dito each
parameter Pi. Such a test suite TSis at-way combinatorial test suite if and only if
the following hold: For any selection of tparameters, all combinations of values for
these parameters are represented in TS. Note that there might be larger parameter
sets in a t-way combinatorial test s uite where all combina tions are represented.
Hence, a 2-way combinatorial test suite might capture 3-way interaction faults for
some (but not for all) parameters.
Given a model of the input space and the parameter t, there are algorithms
that compute all input tuples, i.e., the test cases, where the condition for t-way
combinatorial tests hold. The ACTS combinatorial testing tool [ 15] developed
jointly by the US National Institute St andards and Technol ogy (NIST) and the
University of Texas at Arlington can be used for this purpose. It is worth noting
that ACTS also allows for specifying constraints among the input parameters. For
example, when adding an air conditioner into a car, the car requires a larger battery.
This information restricts the potential combinations. In a combinatorial test suite
with constraints, all tuples not fulﬁlling constraints are removed, and some new
might be added such that the condition for combinatorial test suites is always
fulﬁlled.
The selection of the parameter tfor combinatorial testing inﬂuences the number
of interaction faults to be detected. In Kuhn et al. [ 14], the cumulative error detection
rate reported ranged from almost 75 to more than 90 % for 2-way interaction faults
and from 87 to 98 % when setting tD3. Hence, in practice the value of thas to
be chosen having the error detection rate into mind. It is worth noting that given
practical requirements like a ﬁxed budget for testing, a deadline for ﬁnalizing
testing, or other restrictions, it is very unlikely to detect all faults during system
development. Therefore, there is always a trade-off between those requirements and
the number of tests to be carried out, which of course has consequences on the error
detection rate. Whether a certain reduced error detection rate is acceptable or not
relies on the application domain and within the domains on given standards and
regulations.
Let us take the parameter space depicted in Fig. 22.3 and formalize the input
parameter space such that we are able to extract a test suite. We take the car
conﬁguration as part of the example from [ 17]. There the electrical motor emot
can take the two values standard orpowerful . The air conditioner acmight be
none ,manual ,o relectronic . The driving mode dmcan be leisure orrace,a n dt h e
battery bathas the domain ftype1 ,type2 ,type3 g. For this example, we ignore faults
occurring. For the environmental conditions, we assume street conditions strcond
to be highway ,city,o rcountry road and three different stop signs stop1 ,stop2 ,a n d
stop3 . The following table summarizes th e parameters and their values:
Parameter
 Values
 Parameter
 Values
emot
 standard ,powerful
 bat
 type1 ,type2 ,type3
ac
 none ,manual ,electronic
 strcond
 highway ,city,country
dm
 leisure ,race
 stop
 stop1 ,stop2 ,stop3
22 Testing Autonomous and Highly Conﬁgurable Systems: Challenges ... 527
When using ACTS for computing a combinatorial test suite of strength 2, we
obtain the following table:
emot
 ac
 dm
 bat
 strcond
 stop
powerful
 none
 race
 type1
 city
 stop2
standard
 none
 leisure
 type2
 country
 stop3
powerful
 none
 leisure
 type3
 highway
 stop1
standard
 manual
 race
 type1
 country
 stop1
powerful
 manual
 leisure
 type2
 highway
 stop2
standard
 manual
 race
 type3
 city
 stop3
powerful
 electronic
 leisure
 type1
 highway
 stop3
standard
 electronic
 race
 type2
 city
 stop1
powerful
 electronic
 race
 type3
 country
 stop2
standard
 manual
 race
 type2
 highway
 stop2
powerful
 electronic
 leisure
 type3
 city
 stop3
Instead of 324 test cases, which are all different possible combinations, the 2-
way combinatorial test suite for the small example only comprises 11 test cases.
A 3-way combinatorial test suite compri ses 33 test cases and a 4-way one 83. The
latter is still only one fourth of the total number of combinations, which saves a lot
of testing effort while still being able to reveal potential faults.
For smaller input models used for obtaining a t-way test suite and a smaller
number of t, the whole test suite generation time using available tools can be
neglected. In Yu Lei et al. [ 16], the authors introduce algorithms that allow for
computing 5-way tests for 20 parameters each having 4 values in less than a minute
with their fastest algorithm leading to a test suite comprising 8606 elements. Note
that the number of all possible combinations in this case is 420D1.09951 /STX1012and
thus we obtain a much smaller test suite. However, depending on the test execution
time, the number of test cases might be to o high to meet given deadlines. In addition,
for large values of tand a large domain of parameters, test case generation most
probably takes too long when using current combinatorial testing algorithms. In
such cases the combinatorial testing pr oblem has to be partitioned into subproblems,
to be handled independently. In each subproblem we take certain parameters and set
them to a ﬁxed value. The remaining parameters form the subproblem for which we
are able to generate a combinatorial test s uite. The selection of parameters can be
done considering their likelihood for revealing an interaction fault. If two parameters
are likely to not interact in an unwanted manner, their values can be ﬁxed. Such
information has to be obtained from domain experts.
When starting a test using the tuples specifying combinations of parameters, we
are able to carry out speciﬁc parameterized tests. However, what is still missing is
the question whether such test execution fails or passes. We discuss this issue in the
following section.528 F. Wotawa
22.4.2 Test Oracles
Carrying out a particular test case requires the execution of the SUT using the
speciﬁed parameter values. The SUT execu tion in our context may require carrying
out a simulation environment taking care o f the speciﬁed parameters. The question
now is how to distinguish a faulty behavior from a correct one in the simulation?
One answer would be to have a user observing the simulation results and classifying
a particular simulation run as passing or failing. However, this is not a practical
approach because of the larger number o f tests to be carried out. Hence, we need to
automatize the test oracle.
One way of automatizing the test or acle is metamorphic testing (see [ 18]a n d
[19]). The idea behind metamorphic testing is to utilize symmetries in functions
or systems to be tested. For example, it is well known that sin( x) is equivalent
to sin( xC2/EM). Hence, we use the constraint sin( x)Dsin(xC2/EM) as an oracle.
Whenever this constraint is not fulﬁlled, we know that the test is a failing test. In
general, we use all constraints that represent symmetries to form the test oracle. In
the context of ADVs, we also might be able to deﬁne such symmetries and to use
them as test oracles. However, metamor phic testing may require carrying out the
test twice. For example, when checking whether sin( x) is equivalent to sin( xC2/EM),
we have to call the sinfunction twice. This would increase testing effort.
Another possibility, which is more appropriate in the context of ADVs, originates
from the basic ideas behind runtime veriﬁcation [ 11] where formal properties are
checked when executing the SU T. This idea can be easily translated into our domain
when formalizing safety properties and other requirements. For example, in none
of the cases, we want an ADV crashing into an obstacle. Such a requirement can
be represented formalized and also later on represented programmatically in the
simulation environment. There the functionality of the simulation environment can
be used, for example, to detect overlap s between the ADV and an obstacle and to
determine that the crashing property is violated.
Hence, we assume that we are able to imp lement an oracle function that checks
for safety property and requirement violations. Such an oracle function has to
be closely integrated into the simulation environment carrying out the generated
combinatorial test suite. It is worth noting that such an oracle is not always
able to classify a test as passing or failing. In some cases the outcome might
be inconclusive. For example, stating that a property must always hold cannot
be proven within a limited simulation time. Only in cases where the property is
violated we exactly know that the test is a failing test. Otherwise, there might be an
interaction between the ADV and its envi ronment not experienced so far that would
be able to violate the property.22 Testing Autonomous and Highly Conﬁgurable Systems: Challenges ... 529
22.4.3 The Automated Testing Methodology
When combining the combinatorial testing approach with the automated testing
oracle comprising information about properties, requirements, and metamorphic
relations, we are able to come up with testing methodology for ADVs that can
be fully automated. For this purpose we have to have an execution environment,
e.g., a simulator, where each test can be carried out and where the testing oracle
can be integrated. In the following we describe the proposed automated testing
methodology in more detail. In Fig. 22.4, we give an overview of the testing
methodology comprising the following three parts:
1.Test case generation : For the purpose of generating test cases, we assume that
we know all parameters and their domains for the ADV conﬁguration, e.g., the
kind of battery or engine, the environmental conditions, as well as faults that
might occur during operation. In addition we might also know some constraints
between parameters that might limit poten tial combinations of parameter values.
From the parameters, their domains, and the optional constraints, we use a tool
(e.g., ACTS [ 15]) to generate a t-way combinatoria l test suite where t/NAK2. The
resulting test suite comprises tuples of values for each parameter that work as
input for the test execution.
Fig. 22.4 Overview of the automated testing methodology for ADVs530 F. Wotawa
2.Testing oracle : For generating the testing oracle, it is essential to have knowledge
about safety property and other functi onal and nonfunctional requirements of
ADVs. This knowledge has to be formalized. The formalized knowledge is used
similar to runtime veriﬁcation [ 11] to check the current state of the ADV during
test execution. Here the idea is to implement a function check (.) that takes
the values observed from execution and checks whether a failure occurs. For
implementing check (.), we rely on previous work that has already been done
in the context of runtime veriﬁcation. After implementing check (.), we obtain a
testing oracle that automates the task of judging the outcome of a test applied to
t h eS U T .N o t et h a t check (.) returns not only pass orfailbut also inconclusive in
cases where properties cannot be ﬁnally veriﬁed because of restrictions due to
the ﬁnite execution time.
3.Test execution framework : The third part of the framework for automating the
system test for ADVs is the execution framework. Here we assume that the
input from the test case generation component, i.e., a tuple of parameter values,
conﬁgures a simulation run of the SUT, which might be itself represented as a
model, software, or hardware. Note th at there is a difference between a model
representing the SUT and the input model used to generate the combinatorial
test suite. A model representing the SUT has to capture the system’s behavior,
whereas the input model used for generating the test suite only comprises
parameters, their domains, and an optional set of constraints. The execution
framework executes this test and calls the oracle function check (.) each time new
observations from the SUT are available. In case check (.) returns fail, the test is
terminated and classiﬁed as failing test. In cases where the test is terminated due
to given limitations on execution time, the check (.) function is called for ﬁnally
classifying the test as passing orinconclusive .
The advantage of the proposed testing methodology is that the test generation
and execution part can be comp letely automated. Moreover, combinatorial testing
guarantees that important combinations of parameters with respect to their potential
of detecting failures are considered during testing. This limits the number of
combinations of test parameters substantially and makes the overall approach
feasible even for a larger set of parameters and their corresponding domains. The
disadvantage is that the input parameter space as well as the safety properties
and other requirements has to be identiﬁed and formalized, which require effort.
However, within the development processes usually used, the identiﬁcation of such
requirements is mandatory. Hence, the onl y additional effort is to formalize these
requirements in order to allow utilizing runtime veriﬁcation techniques directly. It
is worth noting that the test execution environment has also to be extended in order
to be able to cope with the testing oracle function. The required additional effort,
however, should be insigniﬁcant.22 Testing Autonomous and Highly Conﬁgurable Systems: Challenges ... 531
22.5 Conclusion
In this chapter, we discussed the challenge of testing ADVs and adaptive ADVs.
We identiﬁed the huge parameter space to be considered as one of the main reasonsbehind the complexity of testing ADVs. We also argued that ordinary vehicles evenwith attached assistive technology could be more easily tested due to the fact that weare able to deﬁne the scope of subsystems to be tested separately. Moreover, becauseof humans in the loop during execution, we have behavioral supervision availablethat further helps to restrict testing in this case. For testing ADVs we have to identifya method that (1) allows for reducing the te sting parameter sp ace while (2) keeping
the potential failure detection rate high. In this chapter, we argue that combinatorialtesting fulﬁlls both criteria and make appropriate citations that support the usedargumentation chain.
In addition to the generation of test cases, which are in our context the parameter
values used as input to a simulation environment where tests can be carried out, wediscussed the automation of the test oracle. A test oracle allows classifying tests as
passing, failing, or inconclusive based on the given observations of variable valuesduring test execution. In order to automate the test oracle, we suggested to useruntime veriﬁcation that is based on safety properties and other requirements anADV has to fulﬁll. Such information is always available in the context of vehicledevelopment within the automotive industry. The properties and requirements haveto be formalized in order to automate the test oracle.
The proposed testing methodology for ADVs combines the test case generation
approach based on combinatorial testing with the automated test oracle based onruntime veriﬁcation. For this purpose, we assume the availability of a test executionframework, i.e., a kind of simulation environment, which takes the tests as input andallows for integrating the test oracle. The proposed testing methodology is feasiblebecause it requires only important combin ation of parameter values that capture
faults that can only be revealed in cases of interactions between a ﬁxed number ofinput parameter values occurring at the same time.
Considering only one testing methodologi es for quality assurance is in general
not a good idea, mainly due to differences in the objectives of the methodologies.Model-based testing aims at generating test suites in a rigorous and completemanner based on a model of the SUT. Combinatorial testing focuses on interactionfaults that can only be revealed using the ri ght combination of parameter values.
Random testing tries to ﬁnd interactions with the SUT that have not been foreseenand also interactions that are outside of the speciﬁcations. The purpose of manualtesting is mainly on capturing possible interactions of humans with the SUT. Thecombined used of testing methodologies during development as well as othermeasures like coding guidelines is essential for quality assurance. An early use ofthe proposed testing approach within the ADV development cycles using modelsand software in simulation does not provide any guarantee to detect all faults.However, it would allow for detecting interaction faults earlier during development.532 F. Wotawa
Acknowledgment The research work has been carried out as part of the 3CCar project co-funded
by the Electronic Component Systems for European Leadership Joint Undertaking (ECSEL JU)
grant agreement number 662192-3Ccar-ECSEL-2014-1 and the FFG grant agreement number
848715.
References
1.ISO 26262:2011: Road vehicles functional safety (International Organization for Standardiza-
tion, Geneva, 2011)
2. N.G. Leveson, Engineering a Safer World (MIT Press, Cambridge, MA, 2011)
3. H. Altinger, F. Wotawa, M. Schurius, Testing Methods Used in the Automotive Industry: Results
from a Survey . Proceedings JAMAICA’14, San Jose, CA, 21 July 2014
4. P. Ammann, J. Offutt, Introduction to Software Testing (Cambridge University Press, Cam-
bridge, MA, 2008)
5. J. Glenford, Myers, The Art of Software Testing (Wiley, New York, 1979)
6. I. Schieferdecker, Model-based testing. IEEE Software 29(1), 14–18 (2012)
7. M. Utting, B. Legeard, Practical Model-Based Testing – A Tools Approach (Morgan Kaufmann,
Burlington, MA, 2007)
8. J. Cámara, R. de Lemos, C. Ghezzi, A. Lopes (eds.), Assurances for Self-Adaptive Systems –
Principles, Models, and Techniques . LNCS 7740 (Springer, Berlin, 2013)
9. F. Nafz, J. Steghöfer, H. Seebach, W. Reif, Formal Modeling and Veriﬁcation of Self-Systems
Based on Observer/Controller-Architectures, in LNCS 7740 [8] (Springer, Berlin, 2013), pp.
80–111.
10. G. Steinbauer, F. Wotawa, Model-Based Reasoning for Self-Adaptive Systems – Theory and
Practice, in LNCS 7740 [8] (Springer, Berlin, 2013), pp. 187–213
11. M. Leucker, C. Schallhart, A brief account of runtime veriﬁcation. J. Logic Algebr. Program.
78(5), 293–303 (2009)
12. C. Artho, H. Barringer, A. Goldberg, K. Havelund, S. Khurshid, M. Lowry, C. Pasareanu,
G. Rosu, K. Sen, W. Visser, R. Washington, Combining test case generation and runtime
veriﬁcation. Theor. Comput. Sci. 336(2–3), 209–234 (2005)
13. D. Kuhn, R. Kacker, Y. Lei, Introduction to Combinatorial Testing . Chapman & Hall/CRC
Innovations in Software Engineering and Software Development Series (Taylor & Francis,
London, 2013)
14. D.R. Kuhn, R.N. Kacker, Y. Lei, J. Hunter, Combinatorial software testing. Computer August ,
94–96 (2009)
15. L. Yu, Y. Lei, R. Kacker, D. Kuhn, Acts: A combinatorial test generation tool, in IEEE Sixth
International Conference on Software Testing, Veriﬁcation and Validation (ICST) , 2013, pp.
370–375
16. L. Yu, K. Raghu, D. Richard Kuhn, V. Okun, J. Lawrence, IPOG/IPOG-D: Efﬁcient test
generation for multi-way combinatorial testing. Software Test. Verif. Reliab. 18, 125–148
(2008)
17. F. Wotawa, I. Pill, Testing Conﬁguration Knowledge-Bases, in 16th International Conﬁgu-
ration Workshop , 2014. http://ceur-ws.org/Vol-1220/06_confws2014_submission_13.pdf , pp.
39–46
18. T.Y. Chen, S.C. Cheung, S.M. Yiu, Metamorphic Testing: A New Approach for Generating
Next Test Cases , Technical Report HKUST-CS98-01 (Dep artment of Computer Science, Hong
Kong University of Science and Technology, Hong Kong, 1998)
19. T.Y. Chen, J. Feng, T.H. Tse, Metamorphic Testing of Programs on Partial Differential
Equations: A Case Study, in Proceedings of the 26th Annual International Computer Software
and Applications Conference (COMPSAC ’02) , Los Alamitos, CA (IEEE Computer Society,
2002), pp. 327–333Part VII
A Sampling of Automated Driving
Research Projects and InitiativesChapter 23
AdaptIVe: Automated Driving Applications
and Technologies for Intelligent Vehicles
Aria Etemad
23.1 Project Overview
With 28 partners from across Europe an d a budget of 25 million e uros, AdaptIVe
advances the technical performance of automated systems by developing and
demonstrating new integrated applications for cars and trucks. AdaptIVe’s results
take automation to higher levels and support the goals of making driving safer and
more comfortable and of reducing congestion and fuel consumption.
The project runs from January 2014 to June 2017 and is co-funded by the Euro-
pean Union with 14.3 million euros unde r Grant Agreement #610428. AdaptIVe
tests and develops applications for typical trafﬁc scenarios on motorways, in the
urban environment and for close-distance manoeuvres, covering all levels of trafﬁc
complexity and speeds up to 130 km/h.
The functions will offer assistance and partially, conditionally and highly auto-
mated driving. A minimum risk manoeuvre will be implemented for all scenarios
whereby the vehicle stops automatically in case of an emergency or if a malfunction
occurs.
A. Etemad (/envelopeback)
Volkswagen AG, Wolfsburg, Germany
e-mail: aria.etemad@volkswagen.de ;http://www.AdaptIVe-ip.eu
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_23535536 A. Etemad
AdaptIVe will combine s ensor data, maps and communication to improve
the perception of the trafﬁc environmen t. It will integrate cooperative mobility
technologies based on ITS G5. Automated systems will interact with other vehicles
to anticipate their plans and avoid conﬂicts.
Accordingly, AdaptIVe will improve interactions between the driver and vehicle,
thereby increasing user acceptance of a utomated systems. Guidelines for how
to design and implement the driver–vehicle interaction are provided to achieve
collaborative automation.
The project also focuses on the legal conditions for automated driving and in
particular on product liability, road trafﬁ c and regulatory law, data privacy and
security.
In addition, the project deﬁnes and validates speciﬁc evaluation methodologies,
addressing both the technical functionalities and the impacts of automated driving
applications. Insight will be provided into the safety and environmental beneﬁts on
European road transport as regards different levels of automation.
23.2 Technical Areas of AdaptIVe
The project covers six technical ﬁelds:
 Legal aspects
 Human–vehicle integration
 Applications for close-distance manoeuvring
 Applications for urban scenarios
 Applications for highway scenarios
 Evaluation
The main concepts and goals for each ﬁe ld of activity are described in the
following paragraphs.
23.2.1 Legal Aspects
23 AdaptIVe: Automated Driving Applications and Technologies for ... 537
Today’s legal framework for automated driving is based on the prerequisite that
safe driving is the driver’s sole responsibility. With a move towards automation in
driving, controllability by the driver at all times may no longer be a basic design
criterion. The requirement set-up by the legal framework must provide answers for
the ramiﬁcations of this fundamental change.
To allow consistent terminology, the project deﬁnes a classiﬁcation scheme for
automated systems and typical scenarios t hat can occur when using an automated
driving system. Legal questions are raised based on this naming scheme.
AdaptIVe comprehensively reviews the current legal frameworks in various EU
member states and assesses their applicability to automated systems. The review
also covers current activities in the USA. The examination of the legal framework
will detail the relevant aspects found during the review.
23.2.2 Human–Vehicle Integration
As long as there are no fully automated systems, systems must always interact
with humans at different times and to different degrees. AdaptIVe investigates the
best modes of cooperation between the driver and automated systems in different
scenarios. Drivers’ intentions and actions need to be taken into account in the design
of automated systems.
AdaptIVe provides guidelines that speci fy how, when and where information,
warnings and interventions should be implemented. Guidelines for the interface and
signals, regardless of product type, will be provided for the development of the
various functions.538 A. Etemad
23.2.3 Close-Distance Scenarios
Improving the everyday driving experience starts within the lowest speed and
distance range. A particular challenge is that close-distance manoeuvring requires
sensors and algorithms that haven’t been fully developed yet. Sensor sensitivity will
be based on the trafﬁc situation, allowing the vehicle to reliably detect other objects
and free space over close distances and to nav igate in this area by selectively giving
priority to one direction over the other.
A robust perception platform is envisaged, taking into account the latest advances
in embedded systems and communication and information technologies. This
platform will support decision-making processes in complex situations. AdaptIVe
also advances applications for automated parking at private homes and in outdoor
environments, as well as in multilevel parking garages where a driver is always
present. The Stop & Go function supports driving in close-distance scenarios.
Moving towards fully automated parking requires a learning car, whereby the car
can train itself by becoming familiar with typical environments. The car shall then
be able to drive and to manoeuvre within similar environments with a learned or
provided map.
23.2.4 Urban Scenarios
23 AdaptIVe: Automated Driving Applications and Technologies for ... 539
Urban scenarios present special challenges due to the environment’s complexity
and dynamic behaviour. Trafﬁc is dense, several types of road users or static obsta-
cles are present, and the driving task includes negotiating trafﬁc at roundabouts,
intersections and merging manoeuvres.
AdaptIVe is developing embedded solutions to address the most demanding
driving scenarios in a city: the supervised city control and city chauffeur functions.
A key point for this development is the integration of existing and new functions
into one system. Examples include automated braking, feedback on the gas pedal
and steering wheel, automat ed cruise control and full supervised automated control.
The level of support given to the driver ra nges from correction and stabilisation
of driver manoeuvres (in assisted mode) to automatic guidance (in automated
mode). Communication with the infrastructure and other vehicles is being realised
to anticipate the intentions of other road users and reduce the potential for conﬂicts.
23.2.5 Highway Scenarios
Highway scenarios demand a careful consid eration of the different automation
levels and the added value provided by cooperative approaches. Using the most
up-to-date research, the project is pushing the limits of automated driving towards
higher degrees of automation and incorpor ating cooperative driving functionalities.
The automated AdaptIVe vehicle will enter and exit highways, perform lane
changes or ﬁlter-in manoeuvres and provide support in dangerous areas such as the
end of a trafﬁc jam. Other functions include the cooperative response to emergency
vehicles on duty, also based on vehicle-to-vehicle (V2V) communication, and
a speed and time-gap adaptation at motorway entrance ramps based on vehicle
sensors. Additionally, predictive automated driving to reduce fuel consumption and
CO 2emissions will be implemented as well as basic driving functions such as
following lane and vehicle, performing overtaking manoeuvres and handling stop-
and-go trafﬁc.
New cooperative technologies must be developed to enable a variety of auto-
mated cooperative driving functionalities. Drafts for a new radio transmission
protocol for bidirectional V2V communication are being speciﬁed, implemented
and tested, procedures that will en able negotiations between vehicles.540 A. Etemad
23.2.6 Evaluation
Existing evaluation methods for advanced driver assistance systems (ADAS)
do not cover the requirements for the evaluation of automated driving functions.
Therefore, new comprehensive approaches and test methods are required. AdaptIVe
deﬁnes speciﬁc evaluation methodologies for automated driving functions in a com-
prehensive framework. The test and evalua tion framework considers the technical,
user-related and in-trafﬁc behaviour eval uation as well as an impact analysis focused
on safety and trafﬁc efﬁciency. The frame work thereby includes a speciﬁcation
of methodologies, test procedures, key indicators and experimental design with
the applicable testing tools. The impact analysis is being conceived with a pan-
European perspective. Ultimately, th e framework and new methodologies will be
applied to a set of selected representative functions in order to verify and validate
the developed evaluation approaches.
23.3 Looking Ahead
AdaptIVe builds up eight demonstrator vehicles—seven passenger cars and one
truck—to test and evaluate the AdaptIVe applications and functions. The project will
showcase these systems during a ﬁnal demonstration in 2017. At this point of time,
automated driving will be far from being comprehensively researched. AdaptIVe
will have laid the foundation for further research of the topic of automated driving.Chapter 24
When Autonomous Vehicles Are Introduced
on a Larger Scale in the Road Transport
System: The Drive Me Project
Trent Victor, Marcus Rothoff, Erik Coelingh,
Anders Ödblom, and Klaas Burgdorf
24.1 Introduction
During the past decades, road transport in urban areas has been dominated by cars,
and this has resulted in increasing levels of trafﬁc congestion and loss of time. As
we approach 2020, there is substantial renewed interest in revitalizing urban road
transport as one way of combating the challenges in metropolitan areas.
Autonomous driving opens up for possi bilities for improved safety, improved
fuel economy, reduced problems with congestions in urban areas, more efﬁcient
use of land for city planning, reduced emissions, and driving possibilities for
the physically impaired. This new tec hnology also opens up ne w possibilities to
optimize the infrastructure in coopera tion with the vehicle ’s ability to be more
accurate controlled. It is generally accepted that, in about 90–99 % of all incidents
and crashes, human behavior is partially or fully responsible [ 1,2]. In the push
toward reaching the goal of zero serious injuries and fatalities, there is a clear
potential in automating the driving task, as it could take away the root cause of
almost all accidents.
The debate is currently running high on th e legality and desirability of having the
car fully or partially assuming the control or if the driver should always be in control.
For many of the involved parties, howeve r, in assessing what is needed for reaching
very low numbers of casualties, there is a shared view that more advanced assistance
systems leading toward autonomous drivin g are desired or needed in reaching this
goal. Analysis of a larger-scale deployment of autonomous vehicles is needed.
T. Victor (/envelopeback)  M. Rothoff  E. Coelingh  A. Ödblom  K. Burgdorf
Volvo Car Group, Gothenburg, Sweden
e-mail: trent.victor@volvocars.com
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_24541542 T. Victor et al.
24.2 Problem Deﬁnition
The Drive Me project has a high-proﬁle ambition to deﬁne and evaluate how
autonomous vehicles will have a major im portance for quality of life and achieve-
ment of a sustainable urban environment. To handle future challenges, society hasto continue its positive development, and transport solutions have to be safe andenvironmentally sustainable as well as meet mobility requirements for citizens.Drive Me takes important steps toward vis ion zero in trafﬁc safety (the vision
that any loss of life is unacceptable) an d the more ambitious future crash-free
road transport system. In addition, a more efﬁcient use of infrastructure andthe space required for trafﬁc are core ar eas in the project. A more sustainable
mobility solution, based on increased automation of vehicles and optimization in theinfrastructure, is measured on six main qualities: punctuality, capacity, robustness,
usability, and trafﬁc safety.
The Drive Me project is a research platform comprised of a number of con-
tributing research projects and partner organizations. V olvo Car Group along withSwedish Transport Administration, Swedish Transportation Agency, the City ofGothenburg, Lindholmen Science Park, Chalmers University, and Autoliv are partof the Drive Me research platform. In addition, numerous additional projects andcollaborating organizations will contribute to Drive Me.
Drive Me focuses on studying potential beneﬁts when autonomous vehicles are
introduced on larger scale in the road transportation system. The Drive Me platformis unique in international terms by focusing on the integration of autonomousvehicles with the infrastructure as wel l as the citizen. A holistic system approach
is thereby possible, enabling optimization of transport at a whole new level. This isa possible paradigm shift within mobility and for creation of livable urban areas.This research initiative aims to combine knowledge from society, academy, andindustry to create the sustainable mob ility system of tomorrow. It aims to answer
the following research questions:
1. How can trafﬁc safety be improved?
2. How can trafﬁc ﬂow be improved? What is the impact on punctuality, capacity,
robustness, and usability in the road transportation system?
3. How can energy efﬁciency be improved?
The ambition to put a ﬂeet of 100 autonomously driving cars in the hands of real
customers as advanced measuring probes o n real road infrastructure is the largest
project deﬁned in the world today. These probes will be used to study the effect onsafety, trafﬁc ﬂow, and energy efﬁciency. It is expected that rebuilt vehicles workingas test probes with measuring equipment and test functionality for automated drivingwill provide sufﬁcient information/data to evaluate the possible beneﬁts and effectson the above research questions.24 When Autonomous Vehicles Are Introduced on a Larger Scale in the Road ... 543
During the ﬁrst stages of the project, estimated beneﬁt potentials will be deﬁned
through computer simulations, desktop studies, and test-track studies. Later, test
probes will be put into a real trafﬁc environment (a section of about 55 km of
motorway in Gothenburg, Sweden) to collect data for analyses, modeling, and
quantiﬁcation.
24.3 Measuring Probes: The Autonomous Vehicles
The objective with the autonomous vehicles, or test probes, is to allow ordinary
V olvo customers to operate an autonomous vehicle on public roads such that
the overall effects of these vehicles on the road transportation system can be
studied. As opposed to modern production vehicles, these customers do not need to
continuously supervise the vehicle operation during certain driving situations, and
therefore they will be allowed to spend time on other activities. This of course puts
strict requirements on the probe design, fa r beyond the requirements on ordinary
production vehicles. All engineering details will have to be addressed in order to
allow customers to use these probes in a safe way.
All test probes will be equipped with data logging tools such that the vehicle and
driver behavior can be monitored continuously and its impact on the overall trafﬁc
can be analyzed.
24.4 Safety
The research on safety addresses the general question of how can trafﬁc safety be
improved? It focuses on (a) how the test probes will manage safety conﬂicts and pre-
crash scenarios and (b) quantiﬁcation of the impact of the implemented solutions on
trafﬁc safety. The safety-related functionality of the test probes will be developed
in close interaction with an iterative evaluation of the functionality in virtual, test-
track, and on-road environments. Safety -related impacts will not only result from
the real-time avoidance behavior of the test probes in response to trafﬁc conﬂicts
(e.g., steering/braking to avoid a parked vehicle) but also result from compliance
with rules and regulations (e.g., speed reduction in trafﬁc ﬂow), from functional
safety (e.g., dependability and malfunction handling), and handling unforeseen
consequences. A safety impact methodology will be used whereby safety beneﬁts
are expressed in terms of degree of crash avoidance and reduction of injury (e.g.,
[3]).
The following research questions will be addressed:
 How should the safety impact of the Drive Me test probes be quantiﬁed?
 Which safety conﬂict situations (load cases) should the test probes be tested on?
 How do the self-driving vehicle and the d river react in safety conﬂict situations?544 T. Victor et al.
 To what proportion and degree are crash types avoided or mitigated? If possible
to determine, the main causes for the crash reduction and mitigation will bedetermined (e.g., rule compliance, types of human behavior).
 How can automation contribute to a crash-free road transport system? What are the main safety challenges with self-driving cars?
24.5 Trafﬁc Flow
The trafﬁc ﬂow research will study how autonomous vehicles can contribute to amore efﬁcient road transportation system, analyzing how autonomous vehicles can:
 Increase the capacity of the trafﬁc system, i.e., allow more vehicles to pass
through a given section of road infrastructure.
 Increase the robustness of trafﬁc system, e.g., by minimizing incidents such from
low-speed collisions or critical lane changes.
 Minimize travel time, e.g., by creating a smoother ﬂow. Accurately predict time of arrival, thereby allowing travelers to optimize their
trip.
This research will be conducted by taking two different perspectives. The ﬁrst
perspective is to analyze and modify the b ehavior of self-driving vehicles such
that trafﬁc efﬁciency is optimized. It is known that the behavior of the vehicle interms of, e.g., acceleration proﬁles, dis tance keeping, and lane changing, affects
the overall trafﬁc ﬂow. Vehicles driven by humans vary signiﬁcantly such that the
overall trafﬁc system is never operated in an optimal way. When a signiﬁcantly largeset of vehicles is behaving in an optimal way, it will in the end affect the overalltrafﬁc system. The research questions are:
 How should the optimal behavior for an autonomous vehicle be deﬁned?
 How does the amount of autonomous vehicles affect the overall trafﬁc system?
The second research perspective is to modify the road infrastructure such that
trafﬁc efﬁciency is optimized. When a futu re road trafﬁc system knows a signiﬁcant
amount of autonomous vehicles, one does not necessarily have to design the road
infrastructure in the same way as today. We assume that, e.g., lanes can be madesmaller as the road does not have to cater for all lateral oscillations that result fromdifferent behavior in the human driver population. This may mean that more lanescan be constructed or the remaining space can be used for nonmotorized trafﬁcsuch as bicycle, hereby increasing efﬁciency. In a similar way, efﬁciencies may beobtained in the design of lightweight and low-cost overpasses and underpasses. Thebasic research question is:
 How should an efﬁcient road infrastructure be designed, given a large amount of
autonomous vehicles with optimal behavior for trafﬁc efﬁciency?24 When Autonomous Vehicles Are Introduced on a Larger Scale in the Road ... 545
24.6 Energy Efﬁciency
Sound data on the realistically achievable effect of autonomous vehicles on energy
consumption and other environmental aspects is lacking [ 4]. While single potentials
within autonomous vehicles are widely known and may give improvements up to
30 % in energy efﬁciency [ 5], there are currently no established methods to estimate
the expected impact in real trafﬁc situations. Aspects adding to the complexity of
the subject are expected dependencies on surrounding trafﬁc (density and patterns)
as well as the necessity that the driver accepts changes in the vehicle behavior.
The main research question “How can energy efﬁciency be improved by
autonomous vehicles?” has been detailed into the following research questions:
 Which energy efﬁciency potential can be realized with autonomous vehicles for
individual mobility?
 Which functionality is required in the tr afﬁc control system to support efﬁcient
trafﬁc control, and how can this ef fect be quantiﬁed by measurement?
 How large is the potential beneﬁt for differ ent degrees of automation and different
shares of such vehicles in real trafﬁc environment?
 How are environmental aspects as trafﬁc noise and emissions affected by the
introduction of autonomous vehicles?
A scientiﬁc method for the assessment o f environmental aspects of automated
driving will be developed and applied. This method is intended to help provide
accurate, robust, cost-efﬁcient, and practical information available to authorities,
consumer organizations, and the automotive industry.
24.7 Conclusion
The Drive Me project has a high-proﬁle ambition to deﬁne and evaluate how
autonomous vehicles will have a major im portance for quality of life and achieve-
ment of a sustainable urban environment. It focuses on studying potential beneﬁts
for safety, trafﬁc ﬂow, and energy efﬁciency when autonomous vehicles are
introduced on larger scale in the road transportation system.
References
1. D.L. Hendricks, J.C. Fell, M. Freedman, The Relative Frequency of Unsafe Driving Acts
in Serious Trafﬁc Crashes: Summary Technical Report (National Highway Trafﬁc Safety
Administration, Washington, DC, 2001)
2. NHTSA, National Motor Vehicle Crash Causation Survey. Report to Congress. DOT HS 811
059 (2008)546 T. Victor et al.
3. M. Lindman et al., Beneﬁt Estimation Model for Pedestrian Auto Brake Functionality, ESAR
2010 (2010)
4. International Energy Agency, CO 2Emissions from Fuel Combustion 2010 (OECD/IEA, Paris,
2010)
5. F. Faber, E. Jonkers, M. van Noort, M. Benmimoun, A. Pütz, B. Metz, G. Saint Pierre, D.
Gustafson, L. Malta, Final Results: Impacts on Trafﬁc Efﬁciency and Environment, EuroFOT2012 (2012)Chapter 25
Functional Safety and Evolvable Architectures
for Autonomy
Rolf Johansson, Jonas Nilsson, Carl Bergenhem, Sagar Behere,
Jörgen Tryggvesson, Stig Ursing, Andreas Söderberg, Martin Törngren, and
Fredrik Warg
25.1 Introduction
Since October 2013, there is a national-funded research project running in Sweden
called FUSE (FUnctional Safety and Evolvable architectures for autonomy). The
motivating reason for the project is that tomorrow’s vehicles should be capable to
drive autonomously and that there is a number of questions to solve before this can
happen in a safe and efﬁcient manner. To a certain extent, this project contributes
to the Drive Me project described separately in this book. However, FUSE has a
longer time horizon and aims also to ﬁnd solutions to vehicles with higher degrees
of automation than Drive Me.
The FUSE project in particular focuses on system architectures and functional
safety for autonomy. Current automotive systems and functional safety standards are
evolving but have so far not considered autonomy. This implies that the limitations
of current systems and the ISO 26262 standard [ 1] are currently unknown and
R. Johansson (/envelopeback)  A. Söderberg  F. Warg
SP Technical Research Institute of Sweden, Borås, Sweden
e-mail: rolf.johansson@sp.se
J. Nilsson
Volvo Car Corporation, Gothenburg, Sweden
C. Bergenhem
Qamcom Research and Technology, Gothenburg, Sweden
S. Behere  M. Törngren
KTH Royal Institute of Tec hnology, Stockholm, Germany
J. Tryggvesson
Comentor, Gothenburg, Sweden
S. Ursing
Semcon, Gothenburg, Sweden
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_25547548 R. Johansson et al.
that investigations are needed regardin g functional safety considerations and the
scalability and cost-efﬁciency of architectures.
Functional safety refers to the ability to deliver services that can justiﬁably
be trusted. In other words, failures tha t are more frequent and more severe than
acceptable have to be avoided. While aut onomy if realized correctly will improve
safety, it also introduces autonomous control of the vehicle motion and thus new
failure modes. The increasing complexity of the underlying embedded control
systems requires new methods and architectures to be able to achieve cost-efﬁcient
and functionally safe autonomy.
Current technologies such as adaptive cruise control (ACC) always require the
driver to supervise its operation. So in case something unexpected occurs, e.g., radar
blockage or an animal crossing the road, then the driver has to take over control.
Also in case an unlikely technical fault such as loss of braking pressure or steering
assistance occurs, the driver is expected to take control. When a vehicle is driven
autonomously, the driver cannot be expected to do this anymore, so alternative
solutions have to be implemented and veriﬁed.
Figure 25.1 depicts three dimensi ons of autonomy and illustrates a challenge that
is investigated in the FUSE project. The dotted line in the ﬁgure separates the left
side, where there is a common understanding about functional safety, from the right
side, where this understanding does not exist. In particular, there are three aspects
needed to be addressed:
Fig. 25.1 Autonomy dimensions25 Functional Safety and Evolvable Architectures for Autonomy 549
 How to deﬁne functional safety for autonomy: Not addressed by ISO 26262.
 How to achieve functional safety: There is a demand for architectural patterns
and division of responsibility among parties.
 How to prove functional safety: There is a demand for new compositional safety
arguing.
This project is conﬁned to autonomy within one vehicle and the environment in
which it is operated. Cooperative driving functions such as platooning are outside
scope. Still the three aspects are all relevant and need to be addressed in the project.
The development of dependable, safe, and autonomous vehicles requires the
integration of research results from multiple domains, including embedded systems
design, component- and model-based systems engineering, robotics, and artiﬁcial
intelligence (AI). Many technologies that ex ist in advanced modern vehicles today
borrow their concepts from the robotics and AI domains. However, a similar
migration in systems architecture has not happened, despite the development of
a wide variety of architectures within both the robotics and AI domains. There
is a need to extract relevant principles from these domains and apply them to the
automotive domain, keeping in mind the speciﬁc constraints arising from standards,
regulations, and legislative mechanisms. The patterns and principles for autonomous
automotive architectures can be consolid ated in the form of function speciﬁc as well
as overall vehicle reference architectures . Such reference architectures are missing
in current states of the art.
In the following sections, some of the challenges addressed until mid 2015 in the
FUSE project are summarized.
25.2 Why It Is Harder to Show Functional Safety
for Autonomous Vehicles
Generally speaking, there are two kinds of consequences when changing from a
vehicle where the driver is responsible to where the vehicle is supposed to take
all necessary actions autonomously. Firstly, some things may become much more
difﬁcult and complex, and, secondly, they may become signiﬁcantly different. When
it comes to functional safety and road vehicles, we have identiﬁed both kinds of
problems. The below problems have b een presented and elaborated in [ 2–5].
25.2.1 Item Deﬁnition
The starting point of the ISO 26262 refere nce life cycle is the item deﬁnition,
i.e., the conﬁnement of the functional s cope on which to apply functional safety.
Traditionally, it is enough to consider one item at the time, and it is of no interest
to look at the entire vehicle in an aggregated way. The underlying assumption is550 R. Johansson et al.
that whatever functionality is needed for the entire vehicle to behave safely is either
performed by one of the items or by the dri ver. An implicit responsibility of the
driver then becomes to complement the functionality of all items. As long as theitems one by one are deﬁned and assessed as safe, it is reasonable to leave tothe driver to use a strategy for the driving where all unforeseen situations can behandled in a sufﬁciently safe way. The role for the ISO 26262 is then conﬁned tothe assessment of each individual item.
When reaching so high in the degree of automation that we no longer require
the driver to be (quickly) responsive to the situations, this will imply that theresponsibility to cover everything fallin g between the explicit items needs to be
transferred from the manual driver to an autopilot. This means that all of a sudden,it has become an issue to make sure that the set of items is complete. This is becausethe autopilot also has to be covered by the set of items.
The item deﬁnition has both become much more complex and completely
different in nature. The complexity increase is due to the much more complex taskto solve. What makes the item deﬁnition completely different is the partly implicitdeﬁnition. By implicit we mean that regardless of how we state the explicit itemdeﬁnition, it has to take care of a number of rare situations. We can no longer takethe item deﬁnition as given but need to assure whether there is a need for morefunctionality in its scope, in order to make the behavior of the vehicle safe.
In the following section, we address the problem how to perform hazard analysis
and risk assessment given that we cannot assume a complete and explicit itemdeﬁnition.
25.2.2 The Role of the Driver
When determining the ASIL attribute of a safety goal, we use as an input theattributes of the covered hazardous events (HEs): severity, exposure, and control-lability. It is more or less obvious that we will see a change of the controllabilityfactor when we change the role of the driver dramatically. The basic question iswho is in control of the vehicle? If we only consider fully autonomous vehicleswhen there is no room for any person to interfere with the driving, we can simplyconclude that all controllability factors s hould be C3, i.e., no possibility for a driver
to compensate for failures. The problem is how to look at the situations when we onone hand are so high in automation that the driver is not requested to be (quickly)responsive and on the other hand we allow the driver to compensate for errors in theautomation.
In traditional evaluation of the C-factor, the underlying assumption is that
the activity of the driver can (more or l ess) compensate for problems caused
by the electronic/electrical (E/E) implemented functionality. In higher degrees ofautomation, it might be hard for the driver to understand what a safe an efﬁcientway to control the vehicle is. Even if the vehicle itself is doing perfectly well, thedriver may think it is faulty and needs a compensating action. The consequence of25 Functional Safety and Evolvable Architectures for Autonomy 551
the intervention of the manual driver mi ght be that an accident is caused instead of
avoided. Our conclusion is that once we introduce higher degrees of automation, it
will no longer be valid to use anything but C3 and we should consequently not allow
the driver to “compensate” for the automatic vehicle actions, unless judged as safe
by the autopilot.
Another issue with the role of the driver is to always ensure a consistent view
between the manual driver and the vehicle, regarding who is currently responsible to
react (on unforeseen events). This problem is also known as mode confusion. There
are two main possible categories of confusions: either both of them think they are
responsible or none. If both the manual driver and the vehicle autopilot think they
are the one responsible for taking full res ponsibility of the d riving incl uding handle
unforeseen situations, we just have to select whom to give the last word. As we argue
above, it is reasonable for lower degrees of automation to give the manual driver the
possibility to override the vehicle-induced ac tions. Then the C-factor analysis is still
relevant. For the higher levels of automation, we let the vehicle get the full control
regardless what the driver tries to do.
The other case is trickier; when neither the manual driver nor the vehicle regards
themselves as the ﬁnally responsible part. This kind of “underride” is foreseen
to have a similar solution. The HMI should be designed in such a way that the
manual driver stays responsible for the vehicle until there is a very explicit handover
to the automatic system. Then the vehicle stays responsible until again there is
a very explicit acknowledgment from the driver that she has accepted to get the
responsibility back. The implication of thi s becomes that once a vehicle has got the
responsibility for t he driving, it needs to be capable to safely handle any situation
without assistance of the driver for any decision or maneuver.
25.3 How to Perform Hazard Analysis and Risk Assessment
As concluded in the previous section, it will become more or less impossible to
use a set of well-deﬁned explicit items as the starting point for the ISO26262
activities when it comes to highly automated vehicles. From the FUSE project, we
are proposing a slight modiﬁcation of the early stages of the ISO 26262 reference
life cycle. Instead of a ﬁrm item deﬁnition, we introduce a more loosely deﬁned
preliminary feature description (PFD) to act as input to the ﬁrst step in an iterative
process. This is the starting point of an iterative process as depicted in Fig. 25.2
below. In the following, we brieﬂy introduce the steps.
25.3.1 Preliminary Feature Description
The difference between the preliminar y feature description, PFD, and an item
deﬁnition is that it does not need to contain the details required by an item deﬁnition552 R. Johansson et al.
Fig. 25.2 Iterative process to conclude concept phase
according to ISO 26262. Rather, the aim is to describe the expected (customer)
beneﬁt of the proposed feature. From this starting point, the feature is iteratively
reﬁned until a point where it is possible to enunciate an item deﬁnition.
The key point of the PFD is to give a ﬁrst workable description of what the
proposed feature is supposed to do. The material could, for instance, be based on
input from market research, previous projects, or whatever else might be available
and deemed relevant to deﬁne the nominal function. It is an open question to which
extent the quality and size of this material will affect the remaining steps in the
process. On the one hand, the scope of the feature must become clearly deﬁned
during the iterative reﬁnement process regardless of the initial input. On the other
hand, it seems reasonable that more relevant input will make the rest of the process
easier. A few possibilities for information in a PFD could be:
 A collection of a few use cases (high detail)
 A collection of a larger number of user stories (low detail)
 Very simple feature description
A use case describes a product use scenario with relatively high detail. It is
described as a main scenario, possibly branching out in a number of alternate
scenarios (variants of the main scenar io). This content makes a use case, or a25 Functional Safety and Evolvable Architectures for Autonomy 553
collection of use cases (depending on the complexity of the proposed feature), a
promising candidate for information in a PFD. Since use cases have long been a
popular tool, it might have the a dditional advantage of already being used in existing
product research and development processes, which would make adoption of this
format straightforward.
User stories are typically favored in agile development processes. The distin-
guishing features compared to a use case is t hat stories are much more lightweight
and therefore quicker to develop. Inst ead, they need to be elaborated by the
developers at some later development stage in order to become implementable.
We hypothesize that these features make user stories even better material for a
PFD than the use case. The lightweight fo rmat makes it feasible to spend effort
on creating a larger number of stories compared to use cases. In the context of
autonomous vehicles, where the exact scope of a feature is not known at this point
in development, this larger number of stories can aid in covering a larger part of
the problem space compared to the use cases. This is illustrated in Fig. 25.3 where
the user stories are smaller (i.e., less detailed) but has a better coverage of the space
containing hazards releva nt for autonomous driving.
Note that neither user stories nor use cases in any way guarantee coverage of
the relevant hazards or provide any tools for this. Therefore, describing the function
with user stories has the potential of providing a better starting point for hazard
analysis that will help in the subsequent steps. But it will not in itself provide any
proof of coverage.
Fig. 25.3 Comparison of use case and user story format to describe a function554 R. Johansson et al.
25.3.2 Situation Analysis and Hazard Identiﬁcation
Situation analysis and hazar d identiﬁcation has a slightly different purpose when
starting with a preliminary feature description compared with the traditional processwhere an item is already deﬁned. It become s part of an iterative process (steps
2–4) where the intended functionality and h azardous events are jointly elicited by
stepwise reﬁnement.
Compared to conventional analysis, there are two additional challenges: the
function is not yet clearly deﬁned, and fo r autonomous vehicles, the hazard analysis
must assume the function is self-sufﬁcient, i.e., does not rely on a driver as backup.
In order to start mapping the problem sp ace, the idea is to use trees of generic
operational situations and hazards as a startin g point. For the ﬁrst iteration, select a
subset of situations from the table of generic operational situations and a subset ofhazards from the table of generic hazards. T he trees are organized after classes of
factors, and in several levels where each s ublevel has more detai l than the previous
one, making it possible to select the level of detail deemed necessary for each factor.
This initial selection is based on what is reasonable to believe will affect the functionbased on the PFD. The operational situati ons and hazards are then combined to make
up an initial set of hazardous events before moving on to step 3.
For each iteration, the situations and hazards can be made more detailed, where
this is useful. That is, as the function becomes more clearly deﬁned, it should alsobecome more clear which situations need to be investigated in more detail.
Guiding factors for ﬁnding new or more d etailed situations and hazards in order
to advance the reﬁnement process:
1. If it is hard to determine whether a previously deﬁned HE falls within the scope
of the function or not (see step 4), it needs elaboration to remove the uncertainty.
2. If the aspects of the function are not yet deﬁned clearly enough to be able to write
an item deﬁnition, these aspects need more analysis (see step 4).
3. Situations or hazards identiﬁed as poten tially relevant in the previous iteration
but left unused (i.e., did not become part of a HE) might indicate an omission.Otherwise, there should be a rationale why it was discarded.
4. Parts of the generic trees that have not yet been used should be revisited to see if
there are any new situations or hazards that have become relevant.
5. Use rules for dominance and non-dominance of HEs (see step 3) to ﬁnd potential
new HE candidates.
For each iteration, new situations, hazards, and hazardous events are created in
this manner. It should be stressed that the generic situation and hazard lists area starting point but not an exhaustive list for all items and all contexts. As thefunction description matures and more known details about the context (vehicle)are taken into account, the generic lists have to be supplemented with context-awarespecializations and additions, for instance, impact of performance characteristics of
the target vehicle.25 Functional Safety and Evolvable Architectures for Autonomy 555
25.3.3 Find Dimensioning Hazardous Events
In order to keep the number of hazardous events manageable, HEs that will not
contribute to the list of unique safety goals can be culled from the list. First,
classiﬁcation of hazardous events is performed according to ISO 26262, 3–7. During
classiﬁcation, each HE is assigned value s for the exposure (E) , controllability (C),
and severity (S) factors, as well as a resulting integrity level (ASIL). Then, the list is
processed using the rules for identiﬁcation of dominance and non-dominance. The
method is fully described in [ 5].
25.3.4 Function Reﬁnement
The list of hazardous events becomes s upporting material when trying to ﬁnd
requirements describing the nominal functionality. Normal requirements engineer-
ing is used to deﬁne the nominal functionality. The HEs from the previous step are
considered. Any HE that may fall outside the scope of the function (perhaps because
it is already handled by an existing item) is removed from the list of dimensioning
HEs but kept as an aid to help deﬁne the boundaries of the function. A rationale for
why the HE is outside the scope is noted.
After the ﬁrst iteration, there should be a rough idea of what has to be included,
and this can be assembled as a ﬁrst step toward an item deﬁnition. Even if there are
still many unknowns, this description can be used as input to the next iteration.
The process is illustrated in Fig. 25.4. After the ﬁrst iteration, the function
is delimited by a number of HEs, but the exact capabilities are still uncertain
(illustrated by the fuzzy border separating the HEs within the function and those
outside). For each successive iteration, it becomes more and more clear what the
capabilities of the function must be.
When no more dimensioning HEs can be found using the guiding principles for
ﬁnding HEs described in step 2, exit the iteration and continue to step 5. At this
point, the function description should also have become detailed enough to write an
item deﬁnition, and the assembled list of h azardous events will be transformed into
safety goals.
25.3.5 Item Deﬁnition
The item deﬁnition is wr itten according to ISO 26262. If this step uncovers new
missing hazards, they shall be added to the hazard analysis and steps 2–4 repeated
to include the new hazard.556 R. Johansson et al.
Fig. 25.4 Function reﬁnement—view of hazardous events
25.3.6 Safety Goals, FSC, and TSC
From here on, the traditional V-model is fo llowed. Safety goal, functional safety
concept, and technical safety concept a re constructed according to ISO 26262. In
every step, if the reﬁned design reveals any new hazards, the process is repeated
from step 2 in order to see if any modiﬁcations are needed.
To further strengthen the conﬁdence in coverage of the relevant hazardous events,
the completeness can be challe nged according to the idea in [ 4]. That is, to let a
review team challenge the list of HEs looking for a candidate that is not covered in
the list of safety goals, i.e., to ﬁnd a new dimensioning HE.
25.3.7 Consequences for Safety Case and Assessment
The record and results of this iterative process can be used to strengthen the
completeness argument for the HARA phase and should be especially useful in
the context of autonomous functions. While not a formal proof of completeness, it
is a systematic approach where it can be shown what issues have been taken into25 Functional Safety and Evolvable Architectures for Autonomy 557
account in the analysis. The strength of the argument can be further improved by
documenting a rationale for key decisions during the process, such as:
 The selection of operational situations and hazards and the level of detail used.
 Which classes of generic situations an d hazards are determined not applicable
for the function and why?
 If seemingly relevant (i.e., initially singled out), situations or hazards end up not
being included in any HE.
 If it is decided that an initially selected hazardous event fall outside the scope of
the ﬁnal item.
The records and rationales from the iterative process, together with the results
from the review team, should provide a solid base for a safety case.
25.4 How to Reﬁne Safety Requirements
As mentioned in a previous section, there are things that become much more
complicated when going up in degree of automation. In the previous section, we
addressed the problem of identifying explicit item deﬁnitions and a complete and
efﬁcient set of safety goals. Even if these phases are mastered, we still have the
problem of reﬁning the safety requirements and allocate them onto the elements of
the decided architectures. This problem is closely connected to the one of ﬁnding
architectures on the different levels of ab straction, which is further addressed in a
later section. The FUSE project proposes means for mastering the general problem
of verifying that all steps of the safety requirement reﬁnement are complete and
correct.
In ISO 26262, there are general requirement s that any lower level safety concept
(safety requirements allocat ed onto elements of an architecture) needs to be veriﬁed
and shown to be complete w.r.t. the higher level safety concept. Having a number
of “partial” safety concepts spread among a number of companies, this veriﬁcation
task is certainly challenging. This is especially true for autonomous vehicles where
the complexity of the functionalities is signiﬁcantly higher than for manually driven
vehicles. On the lower level, the safety requirements are assumed to be formulated
similar to case when having manually driven vehicles. This means that there is a
larger span of complexity to handle when the top-level complexity is higher, as for
autonomous vehicles. Each step to be handled in the safety requirement breakdown
chain is denoted the semantic gap. In Fig. 25.5 below, we depict the semantic gap
between a safety goal and the underlying functional safety concept. Furthermore, the
backward arrow that denotes reﬁnement ver iﬁcation is depicted. This gap is present
and calls for a reﬁnement veriﬁcation in phases of ISO 26262 reﬁnement of safety
requirements. During reﬁnement, rationale, known as satisfaction arguments, shall
be collected for the resulting composition, e.g., why is the reﬁnement valid. The
argument can contain, e.g., domain knowle dge and design patterns. This is essential558 R. Johansson et al.
SG
FSRSemantic
GAPVerificationItem 
definition
Implementation
VerificationImplementation VerificationValidation
Ref
inement
 VerificationRefinement
satisfaction 
argumentRefinement 
Verification 
Report
FSRSG
Fig. 25.5 The semantic gap
in almost every nontrivial reﬁnement. The rationale justiﬁes the “reﬁnement path
taken” through the semantic ga p and improves to traceability.
In the FUSE project, we propose two main means for handling the complexity of
the semantic gaps.
Firstly, we propose the possibility to intr oduce more steps in the safety require-
ment reﬁnement chain. This is of course not forbidden today, but what we say is
that ISO 26262 should explicitly introduce subphases for which the activities start
and end on the same level of abstraction. This means that we can directly refer to
work products that present the reﬁnement (or the reﬁnement veriﬁcation) between
a functional safety concept (FSC) and another FSC or between a TSC and another
TSC. Introducing the formal ability of more steps would enable the lowering of the
size of each semantic gap to overcome. In addition to this, we know that already
today, for lower degrees of automation, a typical use case for a tier 1 supplier is to
receive a TSC from the OEM customer and th en break this down to an internal TSC.
For both reasons, we need to complement the reference life cycle of ISO 26262 with
subphases starting and ending on the same level of abstraction.
The second conclusion for how to safely master the reﬁnement of safety
requirements is that we need to be formal in the reﬁnement veriﬁcation. We argue
the importance of having strong evidence, e.g., proof in a formal syntax for the
correctness and completeness of every re ﬁnement veriﬁcation. Furthermore, the
assumptions and the domain knowledge acting as satisfaction arguments need to
be explicit enough to serve as a part of this formalism. Large semantic gaps imply
complex satisfaction arguments, which are hard to use in a convincing proof. These
questions are further elaborated in [ 6].
25.5 What Functional Architect ures Fit Autonomous Driving
When going up in degree of automation, we can regard this as the manual driver
becoming more and more replaced by an au topilot. In the previous section, we
addressed some of the res ponsibilities in t erms of functional safety, which are25 Functional Safety and Evolvable Architectures for Autonomy 559
transferred from the manual driver to the autopilot. If this was the question “what
does the autopilot do?,” in this section we address the question: “where does the
autopilot hide?” As observed before, th e functional safety issues are very much
connected to the architectural ones, as the semantic of each safety requirement is
partly dependent on the allocation on an architectural element. Beside this problem
of enabling functional safety, there are a number of additional issues to cover when
identifying what E/E architectures are efﬁcient for autonomous vehicles.
Evaluation and reﬁnement of a functional architecture for autonomous driving
has occurred under the aegis of the FUSE project. The reference architecture
includes (1) a categorization and description of the key functional components
needed for autonomous driving, (2) rationale for the distribution of these functional
components across the architecture, and (3) a three-layer architecture incorporating
the described components. A comparison of the reference architecture with three
representative architectures for autonomous driving has also been made, with a view
of highlighting the similarities and differences.
The key functional components of the architecture are divided into three
categories, (1) perception, (2) decision and c ontrol, and (3) vehicle platform manip-
ulation. It is proposed that the perception and decision and control categories should
be grouped into a “cognitive driving intelligen ce” layer of the reference architecture,
whereas the vehicle platform manipulation category components should be included
in a distinct “vehicle platform” layer . Such a split acknowledges the need for
reusability of the architecture across differe nt vehicle platforms (product portfolios),
as well as the characteristics and devel opment practices of the various research
domains involved. The architecture also i ncorporates a layer for tele-operation
or remote monitoring and management of autonomous vehicles. The identiﬁed
functional architectural components have a substantial overlap with those found in
other successful autonomous driving architectures. However, components for world
modeling and semantic understanding are unique to the proposed architecture. The
same holds true for an explicit component for abstracting the vehicle platform. The
reference architecture has been applied to different vehicle categories and provides
freedom to the component developers to test and deploy new algorithms while
localizing the effect of any needed changes.
Details of the architecture are provided in chapter “Systems Engineering and
Architecting for Intelligent Autonomous Sy stems.” These questions are further
elaborated in [ 7].
25.6 Conclusion
This paper presents the ongoing activities i n the Swedish national-funded project
FUSE. This project address a few of the questions needed to be addressed in the area
of functional safety and E/E architectures, in order to enable autonomous vehicles.
We conclude that the international standard for functional safety for road vehicles
ISO 26262 needs to be updated in order to cover autonomous vehicles, and we give560 R. Johansson et al.
some suggestions to improvement. We also conclude that the issues of functional
safety and E/E architectures are highly inter connected especially on the higher levels
of abstraction, and we give recommendations for a functional architecture pattern
suitable for highly automated vehicles. The project is ongoing, but some of the
results discussed here have already been published. More details of the proposed
solutions have been presented at a number of conferences as listed in the section of
references [ 2–8]b e l o w .
Acknowledgment This work has been ﬁnanced by the Swedish government agency for innovation
systems VINNOV A in the FUSE project (ref 2013-02650). The participating companies in the
project are V olvo Car Corporation, SP Technical Research Institute of Sweden, Semcon, Qamcom
Research and Technology, KTH Royal Ins titute of Tec hnology, and Comentor.
References
1. ISO, International Standard 26262 Road Vehicles—Functional Safety, ed, 2011
2. C. Bergenhem, R. Johansson, H. Sivencrona, Challenges in Applying Functional Safety for
ADAS. Presented at SAE International Congress, 2014
3. R. Johansson, Automated Functions and Autonomous Vehicles. Presented at IQPC 5th Interna-
tional Conference ISO26262, 2015
4. R. Johansson, The Importance of Active Choices in Hazard Analysis and Risk Assessment.
Presented at Third Workshop on Critical Automotive applications Robustness & Safety (CARS),
2015
5. R. Johansson, Efﬁcient Identiﬁcation of Safety Goals in the Automotive E/E Domain, Presented
at ERTS2, 2016
6. C. Bergenhem, R. Johansson, A. Söderberg, J. Nilsson, J. Tryggvesson, M. Törngren, S. Ursing,
How to Reach Complete Safety Requirement Reﬁnement for Autonomous Vehicles. Presented
at Third Workshop on Critical Automotive applications Robustness & Safety (CARS), 2015
7. S. Behere, M. Törngren, A Functional Architecture for Autonomous Driving. Presented at the
First International Workshop on Automotive Software Architecture (WASA ’15), 2015
8. S. Behere, F. Asplund, A. Söderberg, M. Tör ngren, Architecture Cha llenges for Intelligent
Autonomous Machines: An Industrial Perspective. Presented at The 13th International Con-
ference on Intellig ent Autonomous Systems (IAS-13), 2014Chapter 26
Challenges for Automated Cooperative Driving:
The AutoNet2030 Approach
Marcus Obst, Ali Marjovi, Milos Vasic, Iñaki Navarro, Alcherio Martinoli,
Angelos Amditis, Panagiotis Pantazopoulos, Ignacio Llatser,
Arnaud de La Fortelle, and Xiangjun Qian
26.1 Introduction
Automated maneuvering capability is expected to hold a key role in future mobility
as it can probably provide safer driving conditions, improved comfort, and more
efﬁcient trafﬁc management. The so-far relevant research undertaken by both
industry and academic institutions mainly amounts to tackling different aspects of
pure sensor-based automated driving such as sensing capabilities and V2X com-
munications or vehicle control algorithms. Individual progress made along these
threads has contributed to the deployment of integrated ADAS (advanced driver
assistance systems) with increased levels of automated functionalities. However,
highly automated vehicles are yet to come in mass-market deployment; the latter
M. Obst (/envelopeback)
Baselabs, Chemnitz, Germany
e-mail: marcus.obst@baselabs.de
A. Marjovi  M. Vasic  I. Navarro  A. Martinoli
École Polytechnique Fédérale de Lausanne, Lausanne, Switzerland
e-mail: ali.marjovi@epﬂ.ch ;milos.vasic@epﬂ.ch ;inaki.navarro@epﬂ.ch ;
alcherio.martinoli@epﬂ.ch
A. Amditis  P. P antazopoulos
Institute of Communications and Computer Systems, Athens, Gr eece
e-mail: a.amditis@iccs.gr ;ppantaz@iccs.gr
I. Llatser
Technische Universität Dresden, Dresden, Germany
e-mail: ignacio.llatser@tu-dresden.de
A. de La Fortelle  X. Qian
Centre for Robotics, MINES ParisTech—PSL Research University, Paris, France
e-mail: arnaud.de_la_fortelle@mines-paristech.fr ;xiangjun.qian@mines-paristech.fr
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_26561562 M. Obst et al.
calls for comprehensive investigation of the complementarity between onboard
sensors, 5.9 GHz wireless communications, and distributed control algorithms.
Triggered by the so-far limited convergence between sensor-based automation
and cooperative V2X communications, the AutoNet2030 project seeks to research
and validate procedures and algorithms for 802.11p-based interaction control among
cooperative (automated and manually driven) vehicles focusing on:
 Cooperative decentralized control syste m to realize fully automated vehicles and
drive the advised maneuvering of manually driven vehicles
 V2X-message-based communications to (feed ETSI ITS standardization and)
enable automated maneuver planning and trafﬁc ﬂow optimization
 Onboard sensor-based architecture to e nable reliable positioning and lane-
keeping automation
AutoNet2030 [ 1] intends to demonstrate how the combination of those three
major automotive research threads will make lane-keeping/changing, maneuvering
negotiations, and interaction between automated and manually driven vehicles more
efﬁcient and reliable. The prototyped cooperative automated driving system will be
fully integrated into test vehicles and realistically demonstrated on a test track.
To realize those goals, AutoNet2030 has carefully selected and put together
a cross-European consortium of high complementarity and distinct roles. The
involved smaller partners such as SMEs (BASELABS, BroadBit Energy), research
institutes (ARMINES, ICCS), and universities (EPFL, TUD) bring into the project
their specialized high-tech competence in prototyping of automated driving tech-
nology, maneuvering control, and sensor data processing. On the other hand, large
industrial partners (CRF, Scania, Hitachi Europe) will provide vehicle platforms and
largely contribute to the AutoNet2030 system and vehicle integration.
26.2 Use Cases
In order to showcase scenarios with associated customer and societal value, the
AutoNet2030 ﬁnal demo presentations are designed to cover two diverse yet typical
driving settings. One demonstration will be performed in highway-like conditions
with two heavy-duty trucks and (at least) one manually driven passenger car
focusing on (enhanced) variants of the convoy motion; the latter is one of the most
promising methods for the introduction of automated driving on highways. The
other demonstration is set in a more inner-city-like scenario where fully automated
electric prototype vehicles will be used to (mainly) showcase automated functions
for safe-fail distributed decision making and intersection coordination.
The set of the high-speed scenarios has been deliberately selected to demonstrate
the efﬁciency of cooperative communica tions and perception capabilities as well as
the realization of cooperative maneuv ering in an inherently safe manner.26 Challenges for Automated Cooperative Driving: The AutoNet2030 Approach 563
Scenario
 Description
1. Joining
 One truck moves in high speed and a second one catches up
in the same lane. When the second one approaches the ﬁrst,
they join the same convoy-like motion. After the convoy
creation, automated driving functions assist in keeping
speed/distance and lane position
2. Merging
 The two cooperative trucks of scenario 1 are approached by a
manually driven car which seeks to merge into the same lane
with the trucks. Automated driving functions recognize the
merging and increase the distance between the trucks.
Moreover, HMI in the car advices the driver to adjust speed
and steering so that safe merging is possible
3. Leaving
 The three vehicles from scenario 2 are driving in cooperative
mode in the same lane. The driver of the manually driven
vehicle decides to leave by changing lane and pulling away
from the trucks that remain under convoy motion
4. Lane changing
 The two trucks drive in cooperative mode and a manually
driven car approaches from behind in the left lane. HMI
elements advice the car driver to maintain speed and position.
Radar sensors on the trucks and a laser sensor on the car
acknowledge that the left lane is free of conﬂicting objects
and thus the trucks safely perform a lane change
The set of the low-speed scenarios has b een deliberately selected to demonstrate
the efﬁciency of cooperative communica tions, perception cap abilities, and most
notably the realization of cooperative decision making.
Scenario
 Description
1. Car following
 Two vehicles drive on the same lane, maintaining a constant
distance. First, the speed of the leading vehicle slightly varies,
it performs an emergency brake, and then restarts. In both
cases, we show how vehicles keep a perpetually safe relation
2. Merging
 Two vehicles that move in cooperative automated mode
approach a merging point and are coordinated to merge into
the main road. The vehicle having no priority decelerates to
provide sufﬁcient space. Using cooperative maneuvering, the
merging can be performed in a safe and efﬁcient way
3. Lane changing
 Two vehicles drive in different lanes at the same speed and
one decides to change its lane. The vehicle on the targeted
lane should decelerate to fac ilitate a smooth lane change of
the other one. Using cooperative maneuvering, the lane
change operation can be performed safely and efﬁciently
4. Intersection
 Two vehicles approach an intersection point with the same
speed. A crossing order is decided through V2V messaging
and cooperative decision making. Accordingly, the vehicles
cross the intersection without co llision. Inform ation e xchange
and cooperative decision making are demonstrated
564 M. Obst et al.
26.3 Human Machine Interface
Interacting with the vehicle driver is a challenge of major importance when
implementing automated driving functions. The AutoNet2030 project has set its
focus on the HMI design and development for partially automated vehicles, while
it can occasionally (i.e., high-speed use cases) adopt its functionality to inform the
users of automated vehicles. The project has relied on the multidisciplinary work of
both engineers and cognitive HMI experts aiming to design a user-friendly interface
that will facilitate advised maneuvering.
After having analyzed the considered AutoNet2030 use cases, a ﬂow of road/ve-
hicle events and actions (required by the user) has been identiﬁed. To cope with the
speciﬁed requirements (of each use case), an innovative dual-display HMI system
has been designed. It consists of a head-up display and a secondary display (i.e.,
Android device) as illustrated in Fig. 26.1. With this setup, the driver receives
the most signiﬁcant information and related maneuver advices over the HUD; the
secondary display projects only informative messages (e.g., the reason why a certain
advice is projected) and also provides th e interactive capability (i.e., inputs by the
driver) when safety conditions allow (e.g., a button to switch between manual and
automated mode). In each case, a layout has been deﬁned to cope with the different
visual elements, the associated urgenc y level, and the way information is best
presented to the driver. The displayed messages have been determined according to
a predeﬁned syntax structure and have been prioritized (for projection) with respect
to a designed HMI logic that accounts for their signiﬁcance.
Fig. 26.1 Indicative screenshots of the dual-screen AutoNet2030 HMI system: HUD ( left)a n d
Android ( right )26 Challenges for Automated Cooperative Driving: The AutoNet2030 Approach 565
26.4 Cooperative Control
26.4.1 Distributed Graph-Based Convoy Control
In terms of the distributed convoy case, the problem that we mainly seek to tackle
amounts to following instance: We cons ider an unknown number of intelligent
vehicles in a road which are able to co mmunicate with each other locally and can
localize themselves. The problem is how these vehicles can establish a dynamic
multilane convoy which remains stable while allowing new cars to join and the
current cars to leave.
Most of the works in group control of vehicles have been focused on single-lane
convoy problems using reactive spacing c ontrol methods for consecutive vehicles.
Point-follower and vehicle-follower, adaptive cruise control (ACC) [ 2], cooperative
ACC (C-ACC) [ 3], and local controllers [ 4] are the main approaches for single-lane
convoy control. In these strategies, the desired inter-vehicular spacing is maintained
through basic control laws such that every controlled vehicle matches its distance
and speed with th e vehicle ahead.
AutoNet2030 approach for convoy control is based on the work by Gowal
et al. [ 5], which proposed leaderless graph- based control for multilane convoy.
An undirected graph GD(V,E) is deﬁned in which vertexes Vcorrespond to
controlled agents (vehicles in this case) and edges Ecorrespond to inter-vehicle
communication and relative positioning links. Built upon basic linear algebra, a
stable solution to the formation control problem in two dimensions is given by
xD.L˝I2/.x/NULb/CvG (26.1)
with LDI/SOHW/SOHIT,w h e r e L(called Laplacian matrix) is obtained from the incidence
matrix Ithat deﬁnes the edges of Gand the weight matrix Wwhich is a diagonal
matrix used to tune the weights assigned to the edges. I2is simply a 2 /STX2 identity
matrix. The ( x,y) absolute position vector for all vehicles is given by x,a n dt h e
desired offsets of the vehicles to the formation centroid are given by the bias matrix
b. The parameter vGrepresents the desired velocity of the vehicles.
To make the graph-based formation control scalable and dynamic, we propose an
approach in which graphs containing connections between vehicles are dynamically
created, locally maintained , and automatically modiﬁed. The main ingredients of
the dynamic graphs in our system are local neighborhood andlocal identiﬁers .W e
deﬁne a local neighborhood of a vehicle using topological distance, that is, distance
measured in number of vehicles. Local identiﬁers allow each vehicle to enumerate
the other vehicles in its vicinity using its local coordinate frame, by assigning
ordered pairs (2 tuples) containing topological distances in x-a n d y-axes (in its
local right-handed coordinate system). Finally, the Laplacian control (Eq. 26.1)i s
upgraded to a decentralized approach, a ssuming a connected (but not necessarily
complete) graph, using only relative positioning information. Details are provided
in [6].566 M. Obst et al.
26.4.2 Cooperative Inte rsection Management
Currently, trafﬁc lights are equipped in trafﬁ c intersections to coordinate conﬂicting
ﬂows and ensure the road safety. However, the efﬁciency and safety of such system
is doubted: 44 % of collisions in the USA are with in the intersectio n area, and delays
induced by trafﬁc lights can be high. First proposed in [ 7], cooperative intersection
management (CIM) allows autonomous vehicles to cooperatively cross the intersec-
tion without trafﬁc light, fully utilizing the advanced sensing, communication, and
maneuver capacities of vehicles. It is shown that CIM brings signiﬁcant efﬁciency
improvement (in terms of throughput, average delay, etc.) compared with trafﬁc
lights.
In AutoNET2030, CIM is one of the major research topics. We adopt a safety-
oriented approach to tackle this topi c. The goal is to design a mechanism for
CIM that is not only efﬁcient but also probably safe. We adopt the priority-based
approach to separate the coordination problem into two subproblems: planning
of vehicle priorities and brake-safe reactive control of vehicles. Vehicle priorities
decide the relative orders of vehicles to cro ss the intersection. Brake-safe control
of vehicles allows a vehicle to avoid collision with other vehicles having higher
priorities (prior vehicles) even prior vehicles perform emergency brakes. Under mild
assumptions, the overall safety and deadlock-free property of the proposed system
can be mathematically proven. More details can be found in [ 8–10].
26.5 Cooperative Sensing and Perception Layer
26.5.1 Conﬁgurable Perception Layer
Building up reliable and accurate knowle dge of the environment—often called
an environmental model or perception layer—of autonomous vehicles is a crucial
requirement in order to perform automated maneuvers in a safe and efﬁcient manner.
In general, the environmental model com prises static and dynamic entities which
need to be observed and tracked over time. As both stages, decision making and
control algorithms, directly depend on the robustness and the accuracy of the
environmental model, this is considered a core part in automated driving.
Typically, several perception sensors such as radar, lidar, and camera are used
in order to perceive the surrounding of the host vehicle. These asynchronous sensor
information are continuously combined with data fusion algorithms in order to build
a uniﬁed environmental model. The intuition behind this multisensor data fusion
approach is usually twofold: First of all, as the ﬁeld of view of a single sensor system
is often limited due to physical constraint s, combining multiple sensors that are
mounted at different locations increases th e surveillance area. Secondly, and this is
usually more important, by using heterogene ous sensors, the overall robustness and
performance can be increased as the combina tion of the particular sensor features26 Challenges for Automated Cooperative Driving: The AutoNet2030 Approach 567
(e.g., radar sensors can directly observe a radial velocity component, while camera
systems usually give a proper estimate of the object’s width) yields an improved
environmental model.
Within the AutoNet2030 project, a full-scale 360ıenvironmental model that
integrates onboard perception sensors as well as communication information is
required in order to safely perform and dem onstrate the anticipated use cases for
high- and low-speed scenarios as elaborated in Sect. 26.2. The perception layer
has to be efﬁciently implemented to meet the real-time conditions and optimally
exploit the computational resources of the embedded computers used inside of the
test vehicles. Moreover, as AutoNe2030 deliberately uses several heterogeneous
vehicle platforms, the 360ıperception layer has to be easily adoptable to different
vehicle conﬁgurations. For example, this includes the capability of easily replacing
a radar sensor from one particular manufacture to another as well as the ad
hoc conﬁguration of sensor properties such as mounting position or sensor noise
characteristics. In order to cope with the challenge of having a conﬁgurable 360ı
environmental model, a novel tool-based development approach [ 11]i su s e di n s i d e
of AutoNet2030:
Prototyping : In this stage, the environmental model is developed by performing
a probabilistic data fusion among several sensors in the high-level programming
languages C# and C CC with rich debugging capabilities. The data fusion is
realized by using the probabilistic sensor data fusion framework BASELABS
Create. This SDK leverages an increm ental development process where each
sensor can be added one by one until the ﬁnal 360ıconﬁguration is reached.
The resulting environmental model is tested and validated, both with recorded
and online measurement data for each vehicle platform.
Vehicle integration : In this stage, the already valid ated and tested environmental
model is automatically transformed from high-level C# code to static embedded
C-code that is appropriate for pre-series integration at ECU level. The automatic
code transformation ensures that the C-code is functionally fully equivalent to
the already tested C# version from the prototyping step.
26.5.2 V2X Communications for Automated Driving
Recent research activities [ 12] and successful ﬁeld trials of V2X communication
[13] are bringing the application of V2X communications to autonomous driving
closer to reality. Cooperative autonomous driving is also the object of the European
R&D projects i-GAME,1AdaptIVe,2and COMPANION.3
1http://www.gcdc.net/i-game
2http://www.adaptive-ip.eu
3http://www.companion-project.eu568 M. Obst et al.
V2X communications for autonomous driving represent a natural evolution of
the communication system for cooperati ve vehicles. Initial V2X communication
systems have been designed to provide driver assistance, which corresponds to level
1 in the deﬁnition of automation levels in SAE J 3016.4Higher levels of automation
introduce new requirements that need the d eﬁnition of new or enhanced messages,
communication protocols, and their standardization for cooperative autonomous
driving [ 14].
In order to practically implement V2X communications among heterogeneous
vehicles, standardization is needed to guarantee their interoperability. For this rea-
son, the ETSI Technical Committee in Intelligent Transport Systems (ITS) recently
published the GeoNetworking standard, which deﬁnes forwarding algorithms for
packet transport in V ANETs. Furthermore, periodical Cooperative Awareness Mes-
sages (CAM) and Decentralized Environm ental Notiﬁcation Messages (DENM)
allow vehicles to exchange information using a common language.
CAMs allow each road user participatin g in a V2X network to transmit peri-
odically their station type, time, position, velocity, and many other parameters.
This rather comprehensive description of an object state in combination with a
communication range of up to 1000 m in perfect conditions makes CAM data
appealing candidates for improved multisensor data fusion.
However, V2X communication in general and CAM transmissions in particular
have some distinctive characteristics compared to classical onboard perception
sensors. For example, this includes a global coordinate system, dynamic update
rates according to the CAM trigger rules , as well as high latencies due to the
communication channel. In AutoNet2030, the potential of V2X to complement the
environmental model is investigated.
Furthermore, the AutoNet2030 project is researching new communication proto-
cols and message types speciﬁcally desi gned to support the cooperative sensing and
maneuvering among autonomous vehicles. In particular, new cooperative sensing
messages, broadcast by every vehicle at a rate of 1 Hz to all its neighbors, are
required to share the detected objects (such as vehicles, pedestrians, cyclists, etc.)
among the cooperative vehicles. For the c ooperative maneuvering functionality,
several new types of messages are needed. For instance, the transmission of convoy
messages coordinates the maneuvering of a multilane formation of vehicles, and the
cooperative lane change service supports maneuver negotiations among vehicles
aiming to perform a lane change, as well as relative space reservation. More details
about these dedicated messages for cooperative autonomous driving are found in a
recent paper [ 14].
4http://www.sae.org/misc/pdfs/automated_driving.pdf26 Challenges for Automated Cooperative Driving: The AutoNet2030 Approach 569
26.5.3 Road Data Fusion Module
The road data fusion module aims at increasing the accuracy of the observations
and detections of the road geometry as provided by individual vehicle perception
components as well as the V2X sensor information. Road attributes as captured
by lane markings, road boundaries, and map matched/reﬁned GPS position are
extracted from the available object tracking/image processing and positioning units
and are fused using the map road geometry. The output of the module essentially
increases the information availability and robustness of the system (e.g., lane
information may be artiﬁcially reconstructed in absence of visible lane markings
using only map data). It constitutes an accurate representation of the road geometry
in the form of a road-segments list, each of one is described by clothoid model
equations [ 15].
26.6 Conclusion and Outlook
We have presented the main parts of the AutoNet2030 body of work and notably
the way the consortium has addressed the related automated driving challenges
along the threads of the system architecture, the distributed control algorithms, and
the cooperative perceptio n capabilities. What is yet to be accomplished amounts
to the standardized use of 5.9 GHz V2X communications for automated driving,
the ﬁnalization of the AutoNet2030 software modules, and their integration in the
available vehicle platforms. Test-track validation of the cooperative maneuvering
control algorithms and overall system functionality will follow. With the successful
completion of the above AutoNet2030 objectives, the project envisages to shape the
path for cost-optimized and widely deployable automated driving technology.
Acknowledgement The research work has been funded by the European FP7 project
AutoNet2030 (Grant Agreement NO. 610542).
References
1. A. de La Fortelle, X. Qian, S. Diemer, J. Grégoire, F. Moutarde, S. Bonnabel. A. Marjovi, A.
Martinoli, I. Llatser, A. Festag, K. Sjöberg, Network of Automated Vehicles: The AutoNet2030
Vision, in Proceedings of 21st World Congress on Inte lligent Transport Systems , 2014
2. L. Xiao, F. Gao, Practical string stability of platoon of adaptive cruise control vehicles. IEEE
Trans. Intell. Transp. Syst. 12(4), 1184–1194 (2011)
3. S.Y. Han, Y.H. Chen, L. Wang, A. Abraham, Decentralized Longitudinal Tracking Control for
Cooperative Adaptive Cruise Control Systems in a Platoon, in IEEE International Conference
on Systems, Man, and Cybernetics , pp. 2013–2018, 2013
4. K.Y. Liang, Coordination and Routing for Fuel-Efﬁcient Heavy-Duty Vehicle Platoon Forma-
tion, Licentiate Thesis, 2014570 M. Obst et al.
5. S. Gowal, R. Falconi, A. Martinoli, Local Graph-Based Distributed Control for Safe Highway
Platooning, in IEEE/RSJ International Conference on Intellig ent Robots and Systems , pp.
6070–6076, 2010
6. A. Marjovi, M. Vasic, J. Lemaitre, A. Martinoli, Distributed Graph-Based Convoy Control for
Networked Intelligent Vehicles, in Proceedings of IEEE Inte lligent Vehicles Symposium , pp.
138–143, 2015
7. K.M. Dresner, P. Stone, A mu ltiagent approach to autonomous intersection management. J.
Artif. Intell. Res. (JAIR) 31, 591–656 (2008)
8. J. Gregoire, S. Bonnabel, A. de La Fortelle, Priority-Based Coordination of Robots, CoRR,
vol. abs/1306.0, 2013
9. X. Qian, J. Gregoire, F. Moutarde, A. de La Fortelle, Priority-Based Coordination of
Autonomous and Legacy Vehicles at Intersection, in Proceedings of the IEEE International.
Conference on Intelligent Transportation Systems (ITSC) , pp. 1166–1171, 2014
10. X. Qian, J. Gregoire, A. de La Fortelle, F. Moutarde, Decentralized Model Predictive
Control for Smooth Coordination of Automated Vehicles at Intersection, in European Control
Conference (ECC2015), 2015
11. N. Mattern, R. Schubert, A Hybrid Approach for ADAS Algorithm Development—From High-
Level Prototypes to ECUs, in Proceedings of the 10th ITS European Congress , Helsinki,
Finland
12. S. Kato, S. Tsugawa, K. Tokuda, T. Matsui, H. Fu jii, Vehicle control algorithms for cooperative
driving with automated vehicles and intervehicle communications. IEEE Trans. Intell. Transp.Syst. 3(3), 155–161 (2002)
13. H. Stubing, M. Bechler, D. Heussner, T. May, I. Radusch, H. Rechner, P. Vogel, simTD: A
car-to-X system architecture for ﬁeld operational tests. IEEE Commun. Mag. 48(5), 148–154
(2010)
14. L. Hobert, A. Festag, I. Llatser, L. Altomare, F. Visintainer, A. Kovacs, Enhancements of
V2X Communication in Support of Cooperative Autonomous Driving, to appear in IEEE
Communications Magazine , 2015
15. M. Tsogas, N. Floudas, P. Lytr ivis, A. Amditis, A. P olychronopoulos , Combined lane and road
attributes extraction by fusing data from digital map, laser scanner and camera. Inf. Fusion12(1), 28–36 (2011)Chapter 27
Architecture and Safety for Autonomous Heavy
Vehicles: ARCHER
Viktor Kaznov, Johan Svahn, Per Roos, Fredrik Asplund,
Sagar Behere, and Martin Törngren
27.1 Summary of the Project
Machines are converging towards aut onomy. The transition is driven by safety,
efﬁciency, environmental and traditional ‘robotics automation concerns’ (dirty,
dull and dangerous applications). Similar trends are seen in several domains
including heavy vehicles, cars and aircraft. This transition is, however, facing
multiple challenges including how to gradually evolve from current architectures
to autonomous systems, limitations in legislation and safety standards, test and
veriﬁcation methodology and human–machine interaction.
One of the major challenges for developing a fully automated heavy vehicle
is to design and develop a system with an acceptable level of system safety.
New principles and methods for system architecture, safety analysis and system
veriﬁcation must be developed to reach the necessary safety level.
These challenges are particularly important in case of fully automated heavy
vehicles, i.e. no human driver available in the vehicle, considering vehicle weight,
size, life span, operational scenarios and the number of produced variants. The
business case for commercial vehicles is also very different from passenger cars,
whose prime purpose mostly is to transport the driver. Commercial vehicles are a
transport tool, where the driver is not part of the cargo, and constitute roughly one-
third of the transport cost.
The purpose of the project ‘Architecture and Safety for Autonomous Heavy
Vehicles— ARCHER ’ is to develop methods and principles for safety analysis of
a fully automated commercial heavy vehicl e, to create a reference architecture and
V. Kaznov (/envelopeback)  J. Svahn  P. Roos
Scania CV AB, Södertälje, Sweden
e-mail: viktor.kaznov@scania.com
F. Asplund  S. Behere  M. Törngren
KTH Royal Institute of Tec hnology, Stockholm, Sweden
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_27571572 V. Kaznov et al.
to develop methods and principles for test and veriﬁcation of fully automated heavy
vehicles. Also a proof-of-concept realization for overall veriﬁcation and validation
of the reference architecture and developed methods is included.
The project is building upon experiences and knowledge from ﬁnished and
ongoing research projects partially funded by Swedish government, such as iQDrive
(investigates semi-autonomous heavy vehicles where drivers are still in the loop),
iQMatic (prototype autonomous transport system consisting of a fully equipped
control room and at least one load carrying unit), FUSE (investigates self-driving
cars and functional safety aspects) and ESPRESSO (develops and adapts model-
based techniques that improve the quality and reduce the cost for development of
embedded systems in trucks and especially safety critical systems) [ 34].
27.2 Background
The Swedish automotive industry makes up a large and signiﬁcant part of Swedish
exports. For Swedish vehicle manufacturers, the domestic market only represents
a small proportion of global sales, whereas the majority of research and technical
development work take place in Sweden.
A generational shift is now predicted, with vehicles moving from driver control
to fully automated control. This shift has already begun—there are already active
systems that intervene in extremely critical situations to avoid accidents and increase
safety. Semi-automated functions such as ‘Adaptive cruise control’ are also already
in place; the adaptive cruise control is a n automated system whereby the driver
hands over longitudinal control of the vehicle to the vehicle’s autonomous systems.
The adaptive cruise control offers considerable potential for development in terms
of achieving improved energy and trafﬁc efﬁciency. It is also well known that the
underlying cause of many singl e-vehicle and workplace acci dents involving vehicles
is due to tiredness or distraction, in turn often arising from monotonous driving
situations. By automating monotonous task s, accidents of this type can be prevented,
thus improving trafﬁc safety .
The current emphasis and shift towards autonomy is enabled by cost-
performance and maturity improvements in sensor, actuator, and semiconductor
technology. As a result, the Swedish automotive industry has to adapt and change
from a mechatronics engineering industry to becoming a full-blown Cyber-
Physicals Systems engineering industry with a large and growing element of vehicle
automation software operations as well as vehicle communication; see [ 1].
With regard to skills development in the ﬁeld of automation, it is extremely
important to launch Swedish projects where automated vehicle concepts are devel-
oped and tested in their natural environment. With the aid of tangible research
projects applied to robust, autonomous research platforms, Sweden ought to be able
to retain its position within vehicle automation at the same time as developing the
skills required to cope with the generational shift initially facing work vehicles and
subsequently commercial and private vehicles.27 Architecture and Safety for Autonomous Heavy Vehicles: ARCHER 573
It is now clear that a number of activities need to be initiated in order to achieve
greater breadth and depth regarding the autonomous vehicles skills area. This is
partly a reaction to the ongoing development of society and transport systems and
partly due to a clear desire on the part of visionary customers.
Areas such as ‘sensor fusion’, ‘functiona l safety’ and ‘perception’ are receiving
strong attention by the automotive indus try and in academic research, but there are
limitations in efforts that explicitly address electrical system architecture, safety
and veriﬁcation—especially in the context of fully automated commercial heavy
vehicles. The absence of a human driver creates speciﬁc challenges in case of heavy
commercial vehicles considering vehicles weight, size, lifespan and complexity
of managing a large number of variants. Furthermore, the development of fully
automated heavy vehicles is strongly driven by a clear market demand, since, in
most applications, there is no need of the human presence in a heavy vehicle,
besides the safety aspects. The proposed project, ‘Architecture and Safety for
Autonomous Heavy Vehicles— ARCHER ’, complements existing Swedish and
international projects on automation with its speciﬁc focus on (1) architectures
forheavy vehicles ;( 2 ) fullautomation, where a human is not available and (3)
veriﬁcation and validation of E/E systems with focus on safety .
27.3 State of the Art
A brief account of state of the art (SOTA) is here given for safety, architecture and
veriﬁcation.
Safety The standard ISO 26262:2011 Road vehicles—Functional Safety [ 2]
describes the prevailing best practices for achieving functional safety of road
vehicles. Currently, it is only adopted for passenger cars, but it will likely be
applicable for heavy vehicles within the time frame of the project. Adherence with
the safety standard is important not only for the comprehensive coverage it provides
throughout the product safety lifecycle (from concept to decommissioning) but also
because demonstrating compliance with th e prevailing best practices is an important
factor for exclusion of liability in case of a system malfunction.
The ISO26262 process requires an early hazard analysis of the system, with
the subsequent formulation of safety goals and the determination of Automotive
Safety and Reliability Levels (ASILs) for each safety goal. However, it is debated
whether the standard is immediately applicable to the development of intelligent,
autonomous vehicle functions. One reason for this is that it relies on techniques
for hazard and risk analysis in which hum an involvement, usually in the form of
the vehicle’s driver, is an important factor in the estimation of risk reduction levels
and the subsequent calculation of ASILs for safety requirements [ 3]. For a truly
autonomous vehicle, the involvement of a human being cannot be counted upon, as
a mitigating factor in safety-critical operational situations. Thus, either high ASIL
levels will have to be accounted for (assu ming no human cont rollability) or the574 V. Kaznov et al.
existing standard needs to be upgraded to inc lude new concepts of controllability,
where machine intelligence replaces the human being .
Functional safety considerations within ISO26262 begin with the analysis of
risks and identiﬁcation of hazards for relevan t safety-related systems at the vehicle
level (items). There exist a number of tools for low-level risk analysis, like
Fault Tree Analysis (FTA) [ 4], Event Tree Analysis (ETA) [ 5], Failure Mode and
Effect Analysis (FMEA) [ 6], probabilistic FMEA [ 7], Hazard and operability study
(HAZOP) [ 8] etc. These tools and methods often provide sufﬁcient support for
low-level risk or hazard analysis. However, they typically require detailed design
speciﬁcations and do not take the dynamic behaviour of systems into consideration.
Known challenges for autonomous system design include the shifting of more
workload to critical or work intensive time periods [ 9], tighter coupling making
autonomous systems react faster [ 9], insufﬁcient or inappropriate feedback on
system modes [ 10], too much or too little feedback with regard to the speciﬁc user
[11,12], reduction of situation awareness [ 13], reinforcing of decision bias [ 13],
enforcing limitations that are only appropriate in nominal situations also during
extreme situations [ 12] and encouraging of reliance on automation to a degree at
which manual skill decreases [ 13].
Several approaches have been suggested in the literature to address the lack
of detailed design speciﬁcations at the early design phase. Of these, the Systems
Theoretic Process Analysis (STPA) technique [ 14] has been shown to be promising
for recognizing safety requirements and c onstraints of the system before detailed
design [ 15,16]. STPA also addresses the dynamic behaviour of a system, and several
authors have reported positive outcomes from applying STPA on various systems
[14,17,18], including automotive functions like forward collision avoidance
[19]. This leads us to believe that STPA might be useful for safety analysis of
autonomous systems. The application of h azard analysis techniques in the absence
of human involvement remains an area that requires further exploration in the ﬁeld
of autonomous heavy vehicles.
On completion of a hazard analysis, th e ISO26262 process continues with the
generation of safety goals, ASIL classiﬁca tions inherited from the identiﬁed hazards
and the formulation of a Functional Saf ety Concept (FSC). Th e FSC is then reﬁned
into a Technical Safety Concept (TSC) which provides a basis for subsequent
formulation of hardware and software safety requirements. At the various Safety
Concept levels, aspects like fail-operational characteristics, redundancy, system
monitoring and supervisory control enter the picture. A good overview of sys-
tem monitoring and supervision concepts, especially for autonomous systems, is
provided in [ 20]. The concepts of supervisory control and fail-operational modes
are especially relevant for autonomous vehicles, since no generally safe states
exist for an operational autonomous road vehicle. Therefore, it is necessary to
investigate methods for supervisory control, the distribution of supervisors in the
system architecture and their overall eff ect on safety argumentation for the system.
This is where architecting and architecture comes into the picture as an important
aspect of design for safety.27 Architecture and Safety for Autonomous Heavy Vehicles: ARCHER 575
Architecture The traditional approach for elect rical system architectures has been
the usage of self-contained hardware platforms, referred to as Electronic Control
Units (ECUs), connected in a communica tion network. These ECUs exchange
information via coordinated signals, and this scheme, denoted ‘Federated Archi-
tecture’, allows for good separation of concerns and simpliﬁed veriﬁcation of
the integration. However, Federated Architectures face challenges of increasing
functional complexity, non-optimal resource consumption, emergent behaviour and
cost. To address these, both the avionics [ 21] and recently the automotive domains
are transitioning towards the so-called ‘Integrated Architectures’ where multiple
functions can be supported by one ECU, and one function can be distributed over
multiple ECUs. Functions, subsystems or ev en library components can be developed
by different organizations or vendors and may use different platform services while
residing in a single ECU and sharing a limited set of communication channels [ 22].
This direction, however, will not eliminate the distributed nature of vehicle control,
but may imply a new approach for stronger coordination of high-level control.
The transition to integrated architectures necessitates development of new
methods, tools and techniques for the design and analysis of the architectures. This
includes topics related to mixed criticality systems, multi-core and Network-on-
Chip technologies, optimal mapping an d allocation of system functionality among
ECUs, assurance of overall system level technical properties like end-to-end timing
and latency as well as extra-functional properties like system safety, reliability etc.
This, in turn, necessitates development of architecture exploration techniques to
evaluate and determine optimum architect ures from the excessively large design
space. Techniques like platform based design [ 23–25] provide early methodologies
for systematic design of functions, architecture, their mapping, and implementation
of the mapped architecture.
The introduction of autonomous functi onality necessitates a critical look at
system architectures and the architec ting process. This is because autonomy as
a system level property goes well beyond be ing ‘just another requirement’. The
robotics and artiﬁcial intelligence domains have traditionally led the development of
autonomous system architectures. However, t ransitioning these architectures to the
automotive domain is not a straightforward process, especially due to the automotive
domain’s requirements with respect to being safety-critical, incorporating legacy
designs, differing development process and business cases and the sheer number of
product variants involved. A thorough analysis of system architectures for autonomy
in various domains is presented in [ 26], which includes a comparison of domain
characteristics, commonalities and differences.
A promising way forward is the developm ent of reference architectures for
autonomous vehicle systems with the use of existing and new design patterns
and principles that facilitate system integration (academically referred to, e.g.
as composability and correctness by construction). The reference architecture
approach has already been successful for individual autonomous functions like
cooperative driving [ 27], and it should be possible to generalize it to the vehicle
level, especially when the entire vehicle E/E architecture is controlled by a single
organization. It is of particular interest to develop common ref erence architectures576 V. Kaznov et al.
for both autonomous and non-autonomous variants of the same vehicle model. The
use of novel autonomy patterns and principles are instrumental for reducing the
complexity, thus reducing the difﬁcult task of veriﬁcation.
Veriﬁcation Including Testing Trafﬁc statistics from the United States of America
show that the mean time between fatal c rashes is about 2 million vehicle hours
and the mean time between injury crashes is over 50,000 vehicle hours [ 28].
For an autonomous vehicle to be acceptable in society, it will need to be proven
substantially safer than this baseline. This is a tough challenge when we consider
that a fully automated commercial heavy vehicle would be a product that needs
to be affordable to current customers, th at needs to operate for the life of a heavy
vehicle, which by far exceeds the life span of a passenger car, with a minimum of
maintenance, and that is confronted with a highly stochastic operating environment,
with hazards that need to be identiﬁed and mitigated in a fraction of a second.
The extensive design redundancy and intensive preventive maintenance regimes
that have made commercial aviation safe are not directly economically viable in
the automotive sector. Furthermore, h azardous situations on public streets need to
be dealt with more quickly than in the air , because of close proximity among other
vehicles and pedestrians.
All these factors increase the testing and veriﬁcation requirements on
autonomous road vehicles. Simultaneously, the increasing complexity and
exploding state space in autonomous vehicle architectures make it practically
impossible to achieve total test coverage of both the vehicle architecture and its
behaviour in all possible scenarios. Achieving sufﬁcient test coverage is simply
not possible within realistic product developm ent timeframes, using the traditional
approach of constructing a system or co mponent prototype and running a sequence
of tests on it. ISO26262 essentially says that the higher the risk, the more efforts and
rigour should be spent for design and veriﬁcation, with hints provided to all kinds of
techniques, but without guidelines on how d ifferent techniques can be beneﬁcially
used and combined. There is thus an imperative need to develop a new veriﬁcation
methodology .
There exist a multitude of approaches to veriﬁcation and testing, from manual
reviews to automated testing. We focus here on model-based approaches which
show great promise in dealing with veriﬁcation and which complement the dom-
inating industrial testing practices [ 29,30]. We identify three main approaches
for veriﬁcation of complex systems: (1) simulation, (2)formal veriﬁcation and (3)
veriﬁcation problem formulation and formalization .
The ﬁrst two approaches involve the creation of models, i.e. formal representa-
tions of the system. In the simulation approach, the models are typically constructive
whereas in the second case, the models are typically analytic; see, e.g. [ 29]. The
strengths of simulation-based approaches include their use as constructive design
models (where parts can be reused, e.g. for code generation and HIL testing),
whereas the drawbacks relate to the impossibility to cover the large state space.
Corresponding challenges thus include that of ﬁnding relevant test cases and
understanding what constitutes relevant cove rage. In the second approach, a formal27 Architecture and Safety for Autonomous Heavy Vehicles: ARCHER 577
representation is ﬁrst created (or possi bly generated from a constructive model)
and is then analysed for the assurance of speciﬁc system properties or absence of
undesirable properties. Analysis methods include model checking, theorem provers
and other formal methods based on discrete mathematics, formal logic or hybrid
formalisms. Strengths of formal veriﬁcation are the possibility to cover complete
parts of the state space and that the requirements and constraints are explicitly
captured.
Challenges of formal veriﬁcation include scalability to realistic size problems
and their dependence on the formalized m odels and the tools required to process
them. The approach requires specially trained users, even though there nowadays
exists tools to facilitate model creation. The sheer effort in constructing models for
a complex system has meant that this approach is not very common outside the
development of safety-critical systems (practical usage in the automotive industry is
so far limited). A hot research topic is to combine simulation and formal veriﬁcation
approaches; see, e.g. MBAT [ 31].
The third approach refers to how veriﬁ cation problems are formulated and
formalized, involving issues such as the c hoice of the level and type of formalization
of requirements capture, and how constraints and assumptions are captured. Safety
incidents are known to frequently stem from incomplete understanding of assump-
tions and mismatches between models [ 14]. The formulation of requirements,
constraints and assumptions is closely connected to veriﬁcation by simulation,
formal analysis and testing, since it will dr ive the overall approach to veriﬁcation
and validation, and be closely related to test cases. The use of contracts has emerged
as a promising approach for the speciﬁcation of the system and its components in
such a way that the incremental assembly of the system is guaranteed to have the
desired properties [ 32,33]. Contracts enable explicit descriptions of the context in
which components can be used and how they can be combined.
A common challenge for the three approaches is that of dealing with model man-
agement and integration, a separate res earch ﬁeld in its own right, where ARCHER
can draw upon results from the FFI ESPRESSO project and the iFEST ARTEMIS
project, including dealing with challenges such as consistency management across
multiple models [ 34,35].
There is no silver bullet for veriﬁcation of autonomous systems. The ARCHER
hypothesis is that a combination of architec ting (reducing complexity), combination
of veriﬁcation techniques (automating what is feasible and putting efforts on the
critical and hard to formalize aspects), is the right way forward towards cost-
effective veriﬁcation.
27.4 Project Content
ARCHER is considered to be a ﬁrst step as part of a longer term initiative.
A continuation of the proposed project is planned to focus on veriﬁcation and
validation of results from ARCHER in demonstrational trucks and to progress578 V. Kaznov et al.
towards higher TRL’s and to work towards establishing an autonomy competence
centre in close collaboration with the KTH ITRL lab.1
ARCHER contains three main focus areas in the context of fully automated
heavy commercial vehicles: (1) methods and principles for safety analysis, (2)
methods and principles for system architecture and (3) methods and principles for
veriﬁcation.
The ﬁrst area is focusing on the safety perspective. As stated in the SOTA
part of this chapter, the current safety analysis methods are largely based on a
physically present human driver who can act as a last resort in the functionality
degradation chain. For the automation levels without an operator, new degradation
principles as well as new safety analysis methods and principles must be developed.
To exemplify, a few relevant questions in this area are presented below.
 Where do available standards and methods for the safety analysis fall short when
applied to fully automated heavy vehicles?
 How should available standards and methods for the safety analysis be improved
to provide a reliable and effective methodology for development of fully
automated heavy vehicles?
 How should the safety requirements be formulated to handle the trade-off
between safety and availability?
 How will safety requirements change depending on the planned operational
environment of a vehicle?
 How will principles for human independent diagnosis and diagnostic procedures
be deﬁned?
The second area is focusing on the system a rchitecture perspective. A reference
architecture (or a set of architectures that cover fundamentally different application
scenarios and/or subsystems) will be developed, that fulﬁls the identiﬁed safety,
test and operational requirements and addresses architectural bottlenecks, while
considering realistic constraints on, e.g. infrastructure availability, legacy system
integration and cost efﬁciency. To exemplify, a few relevant questions in this area
are presented below.
 Which architectural principles and patterns should be used to provide an
acceptable system safety and cost assuming no human driver presence at all?
 Which architectural principles and patterns should be used to be feasible for
actual production of commercial vehicles?
 Which architectural principles and patterns should be used to make system
feasible for testing and veriﬁcation considering level of automation?
The third area is focusing on testing a nd veriﬁcation. The veriﬁcation aspect
needs to be included already at design time or even at architectural design as
a fully automated heavy vehicle cannot be veriﬁed by the current test methods.
Principles for efﬁcient testing to reach accep table safety levels will be developed.
1The KTH and industry Integrated Transport Research Lab :https://www.itrl.kth.se/27 Architecture and Safety for Autonomous Heavy Vehicles: ARCHER 579
A methodology which combines state of the art testing, simulation and formal
veriﬁcation methods will be developed. The methodology will consider and exploit
characteristics in terms of faults/failure modes, behavioural and structure aspects
(including architectural patterns), types of veriﬁcation techniques and formalization
including abilities for veriﬁcation automation, as well as the criticality of fault-
s/risks.
27.5 Project Targets
The main expected results from the ARCHER project are:
 methods and principles for safety analysis of fully automated heavy vehicles
 methods and principles and a reference system architecture enabling safe, secure
and cost-efﬁcient fully automated heavy vehicles
 methods and principles for test and veriﬁcation and validation of fully automated
heavy vehicles
 Three licentiate theses (half-way PhD the sis in the Swedish doctoral education,
to be completed as PhDs in the follow-up project)
 Nine master theses
 increased collaboration between industry and academia
The target of the project is to develop a set of requirements, design principles,
methodologies and a reference architecture for development of fully automated
heavy vehicles. Given that the majority of industrial projects are at relatively low
TRL levels, there is a need to consider arch itecture in order to deal with complexity,
safety, availability and business considerations. Architecture, validation, veriﬁcation
and safety are strongly related, and there is thus a beneﬁt in pursuing them
simultaneously. With the proposed focus, ARCHER thereby paves the way for
progressing towards higher TRLs.
References
1. CyPhERS deliverable D3.2. Market and Innovation Potential of CPS. Technical Report by the
CyPhERS FP7 project, Aug 2014, http://www.cyphe rs.eu/sites/defa ult/ﬁles/D3.2.pdf
2. ISO 26262:2011 Road vehicles—Functional safety (2011)
3. S. Behere et al., Architecture Challenges for Intelligent Autonomous Machines: An Industrial
Perspective, in Proceedings of the 13th International Conference on Inte lligent A utonomous
Systems (IAS-13) , Padova, Italy, 2014
4. C.A. Ericson, Fault Tree Analysis–A History, in Proceedings of 17th International System
Safety Conference , 1999
5. T. Tobioka, R.C. Bertucio, Use of event tree analysis in development of a LOCA test program.
Trans. Am. Nucl. Soc. 39, 590–591 (1981)
6. R. McDermott et al., The Basics of FMEA , 2nd edn. (Taylor & Francis, Boca Raton, FL, 1996)580 V. Kaznov et al.
7. H. Aljazzar et al., Safety Analysis of an Airbag System Using Probab ilistic FMEA and
Probabilistic Counterexamples, in 6th International C onference on the Quan titative Evaluation
of Systems , Hungary, 2009
8. J. McDermid et al., Experience with the Application of HAZOP to Computer-Based Systems,
inProceedings of 10th Annual Conference on System Integrity, Software Safety and Process
Security , COMPASS, 1995
9. D.D. Woods, Decomposing automation: Apparent simplicity, real complexity, in Automation
and Human Performance: Theory and Applications , ed. by R. Parasuraman, M. Mouloua
(Erlbaum, Mahwah, NJ, 1996), pp. 3–17
10. B.N. Sarter, D.D. Woods, Pilot interaction with cockpit automation: Operational experiences
with the ﬂight management system. Int. J. Aviat. Psychol. 2(4), 303–321 (1992)
11. R.D. Sorkin, Why are people turning off our alarms? J. Acoust. Soc. Am. 84(3), 1107–1108
(1988). doi: 10.1121/1.397232
12. R. Parasuraman, V. Riley, Humans and automation: Use, misuse, disuse, abuse. Hum. Factors:
J. Hum. Factors Ergon. Soc. 39(2), 230–253 (1997). doi: 10.1518/001872097778543886 .http://
hfs.sagepub.com/content/39/2/230.abstract
13. D.A. Norman, The problem of automation: Inappropriate feedback and interaction, not over-
automation, in Human Factors in Hazardous Situations , ed. by D.E. Broadbent, J. Reason, A.
Baddeley (New York, Oxford University Press, 1990), pp. 585–593
14. N.G. Leveson, Engineering a Safer World: Systems Thinking Applied to Safety (MIT Press,
Cambridge, MA, 2012)
15. T. Ishimatsu et al., Modeling and Hazard Analysis Using STPA, in Proceedings of the 4th
IAASS Conference Making Safety Matter , p. 10, 2010
16. H. Nakao, M. Katahira, Y. Miyamoto, N. Leveson, Safety Guided Design of Crew Return
Vehicle in Concept Design Phase Using STAMP/STPA, in Proceedings of the 5th IAASS
Conference, pp. 497–501, 2011
17. S.J. Pereira, G. Lee, J. Howard, A System-Theoretic Hazard Analysis Methodology for a Non-
advocate Safety Assessment of the Ballistic Missile Defense System, in Proceedings of the
AIAA Missile Sciences Conference , Monterey, California, 2006
18. J. Thomas, N.G. Leveson, Performing Hazard Analysis on Complex, Software- and Human-
Intensive Systems, in Proceedings of the 29th ISSC Conference About System Safety , 2011
19. S. Sulman et al., Hazard Analysis of Co llision Avoidance System Using STPA, in Proceedings
of the 11th International ISCRAM Conference, University Park, Pennsylvania, USA, May 2014
20. E. Baudin, J. Blanquart, J. Guiochet, D. Powell, Independent Safety Systems for Autonomy:
State of the Art and Future Directions, Technical Report LAAS-CNRS No. 07710
21. C.B. Watkins, R. Walter, Transitioning from Federated Avionics Architectures to Integrated
Modular Avionics, in 2007 IEEE/AIAA 26th Digital Avionics Systems Conference, IEEE ,O c t
2007
22. M. Di Natale, A. Sangiovanni-Vincentelli, Moving from federated to integrated architectures
in automotive: The role of standards, methods and tools. IEEE Proc. 98(4), 603–620 (2010)
23. A. Sangiovanni-Vincentelli, G. Martin, Platfor m-based design and software design methodol-
ogy for embedded systems. IEEE Des. Test Comput. 18(6), 23–33 (2001)
24. A. Sangiovanni-Vincentelli, A. Ferrari, System Design—Traditional Concepts and New
Paradigms, in Proceedings of ICCD , 1999
25. A. Sangiovanni-Vincentelli et al., Alberto Beneﬁts and Challenges for Platform-Based Design,
inProceedings of the 41st Annual Conference on Design Automation—DAC ’04, pp. 409–414,
2004
26. S. Behere, Architecting Autonomous Automotive Systems: With an Emphasis on Cooperative
Driving, Licentiate Thesis, KTH, Stockholm, 2005
27. S. Behere, M. Törngren, D. Chen, A reference architecture for cooperative driving. J. Syst.
Archit. 59(10), 1095–1112 (2013). doi: 10.1016/j.sysarc.2013.05.014 .P a r tC
28. S. Shladover, An Automated Highway System as the Platform for Deﬁning Fault-Tolerant
Automotive Architectures and Design Met hods. NSF CPS Workshop Position P aper, 201127 Architecture and Safety for Autonomous Heavy Vehicles: ARCHER 581
29. M. Törngren et al., Model based development of automotive embedded systems, in Automotive
Embedded Systems Handbook , ed. by N. Navet, F. Simonot-Lion. Industrial Information Tech-
nology Series (Taylor and Francis CRC Press, Boca Raton, FL, 2008). ISBN 9780849380266
30. A. Benveniste et al., Embedded Systems Design, The ARTIST Roadmap for Research and
Development . Lecture Notes in Computer Science, vol. 3436 (Springer, Berlin, 2005).
doi:10.1007/b106761 . ISBN 978-3-540-31973-3
31. MBAT ARTEMIS project, http://www.mbat-artemis.eu/home/
32. P. Derler, E.A. Lee, M. Torngren, S. Tripakis, Cyber-Physical System Design Contracts, in
ICCPS ’13: ACM/IEEE 4th International Conference on Cyber-Physical Systems , 10 Apr 2013
33. J. Westman et al., Structuring Safety Requirements Using Contract Theory, in SAFECOMP—
32nd International Conference on Com puter Safety, Reli ability and Security , France, 2013
34. ESPRESSO FFI project, http://www.vinnova.se/sv/Resultat/Projekt/Effekta/ESPRESSO/
35. iFEST ARTEMIS project, www.artemis-ifest.eu/Chapter 28
Affordable Safe and Secure Mobility Evolution
Alexander Viehl, Udo Gleich, and Hendrik Post
28.1 Mobility Systems Evolution
Many of today’s societal challenges suc h as global warming, tightening energy
supplies, aging society, or security have an impact on transportation, be it automo-
tive, rail, or aviation. ERTRAC, the European Road Transport Research Advisory
Council, aims at a 50 % more efﬁcient transport system by 2030 [ 1]. In terms of
fatalities and severe injuries, the automo tive industry targets a 60 % reduction until
2030.
In the premium market’s segments, innovative functions are the most important
factor to inﬂuence buying decisions. Future mobility solutions will increasingly rely
on smart components that continuously monitor the environment and assume more
and more responsibility for a convenient, saf e, and reliable operation in parallel
to an additional facilitation of energy consumption optimization and emission
reduction. A major step for the evolutio n of autonomous systems is the transition
ASSUME Partners: For a full list, see https://itea3.org/project/assume.html
A. Viehl (/envelopeback)
FZI Forschungszentrum Informatik, 76131 Karlsruhe, Germany
e-mail: viehl@fzi.de
U. Gleich
Daimler AG, 89081 Ulm, Germany
e-mail: udo.gleich@daimler.com
H. Post
Robert Bosch GmbH, 70839 Gerli ngen-Sch illerhöhe, Germany
e-mail: hendrik.post@de.bosch.com
ASSUME Partners
http://www.assume-project.eu/
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_28583584 A. Viehl et al.
from assistance systems to automated hands -off systems. Public perception moves
toward higher expectations with regard to the safety of highly autonomous systems.With hands-off systems, a failure rate clearly below the one of a human actor isexpected. For automotive, the self-driving car is the next big revolution, and it isstill unclear how functional and nonfuncti onal guarantees can be given probably
zero defect for those new class complex-automated functions. Consequently, noveldesign and veriﬁcation methods for such highly automated systems are needed tosatisfy future safety-relevant systems requirements.
During the design process of a complex distributed system, system level require-
ments are broken down into more ﬁne-grained technical hardware and softwarerequirements and mapped to subsystem parts . During this requirement break down,
various models are created to represent distinct aspects of the developed system.Hence, traceability between different abstraction levels of requirements and systemparts must be established. The designs models and hence design decisions have tobe veriﬁed with respect to their associated functional and safety requirements, andit has to be ensured that the implementation does not violate requirements.
One major limitation today is the unavailability of synthesis and veriﬁcation tools
for these speciﬁc models. While research prototypes show the general feasibilityof formally proving the correctness of models or code with respect to givenrequirements, these tools have not been adopted by the industry widely.
Tools working on source code or implementation level that check for speciﬁc
errors or design ﬂaws are available and well applied today. However, higher-levelrequirements and the correctness of design decisions cannot be checked effortlesslyand completely with high conﬁdence.
In addition to that, further challenges arising with the shift to more auton-
omy are the increasing complexity and performance requirements of autonomoussystems. On the way to realize this vision, the need for computing power willdrastically increase far beyond what can be provided by conventional sequentialsingle-core hardware. While the required efﬁciency and scalability compel futureembedded microcontrollers ( /c157C) to rely on multi- and many-core architectures, the
change in hardware architecture also necessitates fundamental advances to softwaredevelopment methodology. Replacing today’s essentially sequential technology byinterconnected cores and omnipresent communication poses the colossal challengein software development to identify and exploit means for concurrency stillguaranteeing reliable and predictable behavior. One problem here is that analysistechniques and ﬂows have to be extended to support parallelism and systemcomplexity on several design and implementation levels.
Current analysis techniques are severely limited by the size and complexity of
the embedded systems to be analyzed. Tools using abstract interpretation to provethe absence of runtime defects usually b ecome difﬁcult to use for code sizes above
200,000–300,000 lines of code depending on the used programming features andthe code complexity. Model checking techniques are currently limited to muchsmaller sizes of the program state space since they enumerate overall possibleprogram states without abstraction. Moreover, tools for the analysis of concurrentand multi-core software currently present a large number of false positives to28 Affordable Safe and Secure Mobility Evolution 585
the user. Consequently, an efﬁcient assessment of analysis results for concurrent
systems in an industrial environment is currently not feasible.
Combinations of different analysis methods and tools for concurrent systems are
mostly in a premature state of research and not viable for industrial applicationyet. One reason for this situation is the ab sence of standardized interfaces between
veriﬁcation and modeling tools that support veriﬁcation tasks. Formal veriﬁcationtools typically only apply one technology and support one implementation language.A close collaboration of these tools is needed, allowing the exchange of analysisﬁndings and given assumptions across modeling languages and tooling borders.
28.2 Objectives
The main goal of the ASSUME project is the affordable, standard-compliant devel-opment and veriﬁcation of highly automated, safety-relevant, and performance-critical mobility systems. A strong focus i s on development methods for concurrent
systems and static veriﬁcation techniques. The ASSUME algorithm portfoliowill be the key technology to bring innovative solutions from sandboxes intoconsumers’ daily lives. ASSUME provides a seamless engineering methodologyto overcome this roadblock. The problem is addressed on the constructive and on
the analytic side. For efﬁcient construc tion and synthesis of embedded systems,
the project provides new tools, standards, and methodologies to cover most of thechallenges by design. In addition, ASSUME provides a well-integrated sound staticanalysis solution that allows proving the absence of problems even in a multi-core environment. New algorithms will be integrated in exploitable tools. Newinteroperability standards and requirement formalization standards will facilitatecooperation between different market players.
The major ﬁeld of innovation for ASSUME’s industrial partners (end users)
resides in the model-based parallel software engineering for multi- and many-coreprocessors. The project enables the effective use of formal veriﬁcation and synthesistechnology along the design ﬂow. Methods and tools are developed that support thesafe migration of sequential programs int o parallel paradigms. Safety in parallel
execution environments will further be ensured by the extension of formal methodsto support concurrency for multi- and many-core CPUs.
This engineering methodology, which will be supported by code generators
and static analyzers, enables system/software developers to move from the current
engineering for sequential functions to a conc urrent realization, in order to beneﬁt
from the increased performance and hardware integration that result from the use ofmodern parallel processors.
Sound static analysis holds the promise to perform fully automated and exhaus-
tive detection of important classes of errors (such as runtime errors) with full controland data coverage. Despite important past progress, related tools still suffer in manycontexts from limitations in precision and in domain of application. ASSUMEdelivers analysis methods and tools with improved precision and efﬁciency. The586 A. Viehl et al.
currently available technologies for the veriﬁcation of nonfunctional properties
(absence of runtime errors) are extended to larger and more complex systems.Moreover, through improvement and combination of analysis techniques, theveriﬁcation of functional properties (such as requirements) through static analysiswill be implemented. This is possible t hrough a complete traceability of formalized
requirements to their implementation. It is made possible to ﬁnd example scenariosthat might violate a requirement. These examples are very valuable information toidentify the cause of defects and errors in the models and implementation. Staticanalysis techniques are extended and improved for the industrial use of concurrentsoftware on multi- and many-core plat forms. The ASSUME project proposes to
extend existing static analyzer tools and prototypes for concurrent software alongseveral lines:
 The sound support for true concurrenc y offered by scheduling on multi-core
hardware
 The precise handling of the associated models of memory consistency The efﬁcient migration of sequential software to parallel applications The support for modern embedded operating system
Technological innovations are driven by the industrial use cases provided by
industrial partners to achieve high precision through specialization.
28.3 Expected Outcomes
The expected outcome of ASSUME is the desig n of a static analysis platform (SAP),
the ﬁrst of its kind, able to check for both classic and concurrency-related runtimeerrors on large embedded industrial multi- core software, with a high efﬁciency and
low rate of false alarms.
ASSUME advocates the idea that static analysis of software can be extended to
provide affordable means to prove the absence of defects. The newly developedstatic analysis platform (SAP) will extend the state of the art in the followingaspects:
 SAP scalability is improved to obtain a hi gh enough precision-runtime tradeoff
for future software complexity.
 SAP supports fully parallel software running on multi- and many-core /c157C.
 SAP integrates a new framework for the formalization of safety and security
requirements.
 SAP allows for seamless traceability and impact analysis of functional and extra-
functional properties in model-driven and conventional development.
The key advancement of the ASSUMEs analysis platform is the improved
integration of veriﬁcation tools across language and tool boundaries. The ASSUMEplatform will facilitate various available models along the embedded develop-ment chain to improve traceability and associate requirements at different levels,28 Affordable Safe and Secure Mobility Evolution 587
solutions, and validation and veriﬁcation activities. The main beneﬁts of this
integration are higher analysis precision and the ability to verify larger and
concurrent systems, to check functional properties, and at the same time decrease
the veriﬁcation effort. The versatility of the platform will be achieved by the
provisions of exchange formats but is not limited to this. The SAP will allow
the implementation of meta-algorithms for an intelligent (re-) combination of
algorithms to get overall improved analysis results. Another valuable feature is
the improved exploitation of available hardware resources by the development of
methods and tools that enable efﬁcient parallelization due to the more precise
estimation of the worst-case execution time (WCET) and other properties in parallel
systems.
Last but not least, the widespread use of multiprocessor systems-on-chip archi-
tectures (including multi-/many-cores) imposes signiﬁcant changes to the models
and methods used to perform schedulin g and code generation for embedded
platforms. The adoption of multi-/many-core architectures is driven by scalable
performance arguments (concerning speed, power, etc.), but this scalability comes
at the price of increased complexity of both the software and the software mapping
process (including scheduling and code generation). Part of this complexity can be
attributed to the steady increase in the size of software that is run by a single system.
But there are also signiﬁcant qualitative changes concerning both the software and
the hardware. In software, more and more applications include parallel versions
of signal processing, simulation, and control algorithms, which are best modeled
using dataﬂow models (as opposed to indepe ndent tasks). Providing functional and
real-time correctness guarantees for par allel code requires an accurate control of
the interferences due to concurrent use o f communication resources. Depending on
the hardware and software architecture, this can be very difﬁcult. There are two
main reasons to this. The ﬁrst one concerns communications: as the tasks are more
tightly coupled and the number of resources in the system increases, the on-chip
networks and shared memory banks become critical resources, which need to be
explicitly considered and managed during scheduling. The second reason concerns
automation: the complexity of large many-cores and of the (parallel) applications
mapped on them is such that code generati on, allocation, and scheduling must be
largely automated. Formal veriﬁcation techniques for these automated tools are in
great need.
ASSUME proposes a set of methods and tools that enable the efﬁcient use of
synthesis techniques in the design ﬂow of parallel software. The common denomi-
nator of these techniques is formalization and full automation. The technical focus
is placed on formal compiler veriﬁcation and on correct real-time implementation
for parallel applications. In both cases, hardware modeling is recognized as a major
issue and dedicated speciﬁc attention.
Figure 28.1 shows the proposed ﬁelds for technology innovations of the
ASSUME project along the development chain of embedded systems.
The circular arrow represents the system development or more precisely the
design ﬂow. The proposed technological contributions of ASSUME are arranged
around and in the center of this circle. The development chain differs from classical588 A. Viehl et al.
Fig. 28.1 ASSUME ﬁelds of technology innovations
software development in terms of distribution of development roles as contained
in the market value chain but also technically due to the close integration into
physical processes. Because of the severe consequences of failures in these systems,
development processes are strictly regulat ed in the speciﬁc standards for the several
mobility domains.
Acknowledgments This work was partially supported by BMBF under grant number 01IS15031.
Reference
1. ERTRAC Strategic Research Agenda 2010, Towards a 50% More Efﬁcient Road Transport
System by 2030, May 2010, www.ertrac.orgChapter 29
UFO: Ultraﬂat Overrunable Robot
for Experimental ADAS Testing
Hermann Steffan, Christian Ellersdorf er, Andreas Moser, and Julian Simader
29.1 Introduction
Our method, which was developed over the last years with increasing importance, is
the application of autonomously driving platforms, called “UFOs” (cp. Fig. 29.1)
[1], which are GPS controlled. They form the high-end motion platforms for
different targets, as they allow full 2D motion, independent of the infrastructure.
No adaptation of the infrastructure is necessary. The top speed is currently limited
to 80 km/h.
These UFOs are designed in a way that the height of the platform is lower than
the height of the ground plate of the vehicle under test (VUT). Even in case of a
collision, no damage is caused to the VUT or the platform itself. In addition they
are surrounded by ramps, which allow a smooth overrun of the platform by the VUT,
even at high speeds.
29.2 Structure of the UFO Platform
The internal structure of an UFO is depicted in Fig. 29.2. It consists of several
subsystems which are described in the upcoming section.
The propulsion system of the platform typically consists out of one or two
electric motors. Their power depends on the required performance of the platform.
Typical power of the whole drivetrain is 5–15 kW. Mostly the electric motor is used
H. Steffan (/envelopeback)  C. Ellersdorfer
Institute of Vehicle Safety, Graz University of Technology, Inffeldgasse 23/1, 8010 Graz, Austria
e-mail: h.steffan@tugraz.at
A. Moser  J. Simader
Dr. Steffan Datentechnik, Salzburgerstrasse 34, 4020 Linz, Austria
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_29589590 H. Steffan et al.
Fig. 29.1 The UFO platform (without dummy)
Fig. 29.2 Interior of an UFO platform
for braking. Nevertheless, as decelerati ons up to 0.7 g are requested, the platform
also includes a hydraulic braking system.
The energy supply is provided by Li-ion batteries, which are provided as
exchangeable packs.
Asnavigation system , high-performance differen tial GPS (DGPS) is used. It
combines DGPS-corrected satellite signals with inertia systems, using a Kalman
ﬁlter. To control the platform, only systems providing this real-time synchronization
of inertia system and DGPS can be used to archive the precision necessary for
complex test scenarios. Position and heading, the two main controlling parameters,
can be derived with a typical accuracy of ˙5c m .29 UFO: Ultraﬂat Overrunable Robot for Experimental ADAS Testing 591
AsDGPS systems cannot be used indoor, it currently limits the system to
outdoor use. At the moment, there are alternative navigation systems in evaluation,
which can also be used indoor.
Using WLAN communication between car, platform, and base station, the
timing and the target information is transmitted to the platform. In this way, the
platform can also be attached to the VUT usin g a master-slave relation. The steering
algorithm of the control system will calculate the necessary parameters to follow
the target path.
Based on these systems, the control system inside the platform derives the
signals for steering and engine control/brake by comparing target and real position.
When the navigation signal is temporarily missing, the inertia platform can extrap-
olate the missing positions. The inertial system also reduces the noise of the DGPS
signal with respect to the heading information.
There are two ways to steer the platform: either there are one or two wheels
which are rotated by a steering servo to dr ive the platform along the target path.
To simulate, e.g., pedestrian movement, allowing also on spot rotation, steering
control can also be performed by prescribing different velocities to the left and right
wheels/chains. In this way, the pl atform can also rotate on the spot.
29.3 Communication Infrastructure
Figure 29.3 shows a typical communication setup to allow all kinds of necessary
information transfer:
As basis for the communication, wireless modules (Wi-Fi) are used, running on
2.4 and 5 GHz. For the DGPS correction signal, 434/868 MHz frequencies are used.
As Wi-Fi is not intended to run real-time applications, every message must imply
universal time codes, generated by time synchronous clocks included in every unit.
The synchronization is guaranteed by using GPS time in every unit.
The Central Control Unit (CCU) is dedi cated to control all devices, involved
in the test setup. As also multiple vehicles or platforms may be involved in one
scenario, this CCU has to provide this functionality. Within this CCU, the individual
paths of the controlled vehicles and platfo rms are generated. The may be generated
either within GPS coordinates or also relative to the VUT. In this way, the VUT
can also act as a master controlling the platforms as his slaves. As an alternative, all
involved partners can also run according to ﬁxed paths with a ﬁxed timing.
When the VUT acts as master, there are different methods to control the
platforms:
The simple method is using a light gate triggering the start of the platforms. In
this way, the platforms are following predeﬁned paths, but their start is triggered
by the light gate. Typically timing and velocity of the VUT are measured
simultaneously for an optimum perform ance to allow more accurate testing,
when the VUT is driven manually.592 H. Steffan et al.
Fig. 29.3 Communication backbone of the UFO test equipment
As an alternative, the VUT can also be equipped by a DGPS, which reports the
position, velocity, and direction of the VUT to the base station. Based on this
information, the velocity and path o f the platforms may be adapted in real
time. The advantage of this method is a very high degree of accuracy and
ﬂexibility. The disadvantage is that the VUT must be equipped with a DGPS and
communication module. The integration of this equipment into the VUT requires
typically 20 min setup time.
29.4 Deﬁnition of Test Scenarios
Typically these platforms can be used in inﬁnite number of scenarios. These
situations are either driving scenarios like priority violation, turning left, overtaking,
or lane changes or parking scenarios. Many additional scenarios are derived from the
evaluation of accident databases, where s cenarios with repeated accident potentials
and accident occurrence are mainly used for evaluation. In addition, critical driving
scenarios from normal driving are repeated [ 3].
Out of these accidents, speciﬁc scenario s are derived and typically varied to
ensure the functionality of the system not only in one exact scenario but in a set29 UFO: Ultraﬂat Overrunable Robot for Experimental ADAS Testing 593
Fig. 29.4 Reconstruction of a pedestrian accident scenario
of scenarios with similar characteristics. Va rious different databases are currently in
use to develop these scenarios. One of the most commonly used accident databases
is the GIDAS [ 2] database which is handled by the Medical University of Hannover
and the Technical University of Dresden. They collect more than 2000 accident
cases per year, where a special accident evaluation team goes onside the accident
scene in selected areas. The selection c riterion for the accidents, added to the
database, is the occurrence of at least one injured person.
Based on the evaluation of this data bases , critical scenarios and there possible
evaluations are derived. These scenarios are also used to deﬁne the boundary
conditions and criteria for the sensor systems and algorithms.
After reconstruction of the accident, a set o f reference scenarios is derived and
can be exported to the platforms and steering robots. It can be rerun on a selected test
area. The environment can either be neglect ed or represented by selected stationary
obstacles (Fig. 29.4).
29.5 Summary
This paper presents an overview of the UFO test platform. Currently it is primarily
used to reconstruct accidents. Additionally it can be utilized to evaluate ADAS
functions. In the future, it could also be used for testing autonomous driving
functions.594 H. Steffan et al.
References
1. German accident database, www.vufo.de/forschung-und-entwicklung/gidas/ . Accessed 14 Jan
2016
2. J.M. Wille, M. Zatloukal, V olkswagen Group Res earch rateEFFECT—Effectiveness Evaluation
of Active Safety Systems
3. Schmidl, ADAS Testing with the UFO Testing System, in Autonomous Vehicle Test &
Development Symposium , Stuttgart, 2015Chapter 30
Intelligent Transport Systems: The Trials
Making Smart Mobility a Reality
Patrick Pype, Gerardo Daalderop, Eva Schulz-Kamm, Eckhard Walters,
Gert Blom, and Sasha Westermann
As urban populations increase, issues such as trafﬁc jams, pollution and road
fatalities will grow in tandem. More than ha lf of the world’s population now lives in
urban areas (54 %), and growth is expected to accelerate in years to come.1The cost
of congestion to the global economy is also growing and is expected to cost Europe
and the USA $4.4 trillio n between 2013 and 2030.2Better connected vehicles and
infrastructure (Intelligent Trafﬁc Systems—ITS) presents a viable solution to these
issues, creating an intelligent road network that is safer, greener and more efﬁcient.
V2X —vehicle-to-vehicle (V2V) and vehicle-to-infrastructure (V2I)—is one of
the key technologies that will underpin ITS. V2X works by enabling ad hoc data
exchange between the vehicle and environment via wireless Internet networks—
in other words, allowing vehicles to in teract with each other and the surrounding
infrastructure like trafﬁc lights and road signs within a 2000-m range. Vehicles can
then alert drivers to potential trafﬁc issues, even beyond the line of sight, so they can
adjust their driving accordingly to avoid accidents or congested areas. Alerts could
include blind-intersection collision, ro ad condition hazards, road works, presence
1According to the World Health Organization http://www.who.int/gho/urban_health/
situation_trends/urban_population_growth_text/en/
2According to the Centre for Economics and Business Research http://www.cebr.com/reports/the-
future-economic-and-environmental-costs-of-gridlock/
P. Pype (/envelopeback)  G. Daalderop  E. Schulz-Kamm  E. Walters
NXP Semiconductors, Leuven, Germany
e-mail: patrick.pype@nxp.com
G. Blom
City of Helmond, Helmond, Netherlands
S. Westermann
Hamburg Port Authorities, Hamburg, Germany
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_30595596 P. Pype et al.
of emergency vehicles, stationary or sl ow moving vehicles, trafﬁc jam, accident
warnings, as well as trafﬁc signals or signage indicators.
This might sound like a highly futuristic scenario, but V2X chipsets became
available for mass production last year (from NXP Semiconductors) and are already
being deployed by automakers, usually alongside complimentary technology such
as advanced driver assistance systems (AD AS), i.e. radar. V2X-equipped vehicles
could therefore be commercially available as soon as 2016. The potential of this
technology is already being taken seriously by governments across the world, with
numerous high proﬁle V2X trials being implemented.
30.1 ITS Corridor: Austria, G ermany and The Netherlands
In 2013, governments in Austria, Germany and the Netherlands signed a memoran-
dum of understanding to create Europe’s ﬁrst ITS Corridor. The project, which is
due to be delivered in 2016, will see 1300 km of motorways between Rotterdam,
Frankfurt and Vienna ﬁtted with intelligent transport systems.
The cross-border project is focused on the use of technologies that warn drivers,
via onboard units, that they are approaching road works. Drivers can then take an
alternative route or reduce speed, improving both road safety and trafﬁc ﬂow. Cars30 Intelligent Transport Systems: The Trials Making Smart Mobility a Reality 597
in the corridor that are ﬁtted with new, in- car equipment can also pass on real-time
road trafﬁc information to trafﬁc contro l centres. With an exact location from GPS
systems, centres will have an accurate and up- to-date picture of th e trafﬁc situation
in speciﬁc areas and can manage processes more effectively.
In 2014, technology partners in the project—including Siemens, NXP Semicon-
ductors, Cohda Wireless and Honda—joine d forces with politicians and highways
agencies across the three countries to run a ‘Communicating Cars’ trial along thecorridor, showcasing the beneﬁts of the project. Demonstrations in test ﬁelds atMunich, Vienna and Helmond showed how the new technology could alert drivers towarnings such as a slippery road surface, pede strian crossings, slow vehicles, etc., as
well as upcoming road works, oncoming emergency vehicles, pending speed limitsand braking of vehicles ahead, all allowi ng drivers to take the necessary precautions
and avoid unnecessary accidents.
On the Dutch part of the ITS-corridor, the Dutch government is working with
various partners such as NXP Semiconductors to prove the value of ITS technologyin alleviating a core problem experienced on many highways with dense trafﬁc:‘phantom’ trafﬁc jams caused by driver beh aviour and braking rather than accidents
or incidents.
‘Spookﬁles’, as they are called in Dutch, account for 20 % of all of trafﬁc jams
in the Netherlands. Prevention or at l east mitigation of this kind of congestion
could very much support Dut ch mobility policy goals to better use the existing
infrastructure instead of building new roads.
30.2 Helmond
Also in urban areas, optimising the use of existing infrastructure is one of the maingoals for using ITS. The city of Helmond is involved in Compass4D, a 3-yearEuropean project designed to show concrete beneﬁts of Intelligent Trafﬁc Systemsfor citizens, city administrations and companies. The trial involves a pilot ﬂeet ofmore than 600 vehicles—including buses, taxis, emergency services vehicles andprivate cars—across Helmond and six other European cities, all equipped withinteroperable onboard units that can ‘communicate’ in real time to road side units.Drivers of these vehicles receive alerts from the units to improve energy efﬁciency
and increase road safety. The servi ces fall into three main categories:
Red light violation —if another vehicle has or is about to violate a red light
(including emergency services vehicles) or if they are at risk of violating a redlight. Drivers are also warned about other nearby vehicles and vulnerable roadusers (pedestrians and bicycles) that are also acting on a green light.
Road hazard warning —either static hazards such as road works or ‘dynamic’
which could include a car suddenly braking up ahead.
Energy-efﬁcient intersection —provides information on trafﬁc light sequences
such as ‘time to green’ or ‘time to red’.598 P. Pype et al.
Armed with this information, drivers can be much more aware of their surround-
ing environment and have more time to r eact to potentially hazardous situations to
avoid collisions. Improving reaction times at trafﬁc lights and knowing to cut the
engine in a case of a long wait can also reduce congestion and pollution. The pilot
will end in December 2015, but Helmond as well as most of the other Compass4D-
project partners already decided to continue the services after the project phase.
Helmond also has been involved in a European trial to improve fuel efﬁciency
and reduce CO 2emissions of trucks by 25 %. Freilot uses V2X to allow 14
trafﬁc lights along Helmond’s major through road (Europaweg Kasteel-Traverse
and Deurneseweg) to communicate with onboard devices in trucks and ﬁre brigade
vehicles. The vehicles are given prior ity passing at trafﬁc lights and issued with
speed advice based on surrounding trafﬁc to ensure optimum efﬁciency. The system
also allows truck drivers to book loading spaces in cities with heavy trafﬁc to save
valuable time. Pilots began in 2010 and hav e been so successful that the city decided
to keep it going. Lyon, Bilbao and Krakow are also involved in the project.
30.3 Hamburg
V2X systems are a core enabler of safe and efﬁcient platooning, where freight
trucks travel very close together, optimising airﬂow and creating a slipstream for the
vehicles to move in, saving energy and fuel consumption. The technology enables
vehicles to communicate with each other, so if the ﬁrst vehicle brakes, the others30 Intelligent Transport Systems: The Trials Making Smart Mobility a Reality 599
automatically do the same, without driver intervention. The vehicles can then travel
at optimum distance to drive efﬁciency (40–50 ft), even at high speeds on highways,without sacriﬁcing safety.
Of course, vehicles need to stay together for the entire journey, which can be
particularly difﬁcult through trafﬁc lights. Also, for platooning, one vehicle needsto take a lead. A lot of trafﬁc ﬂow enhan cements can already be performed with
convoys. A trial at Hamburg Port demonstrated how this could be achieved. Aconvoy of ﬁve freight trucks was ﬁtted with onboard V2X units from NXP that couldcommunicate with trafﬁc lights around the H amburg Port, as well as each other. This
meant that trafﬁc lights ‘knew’ when a group of vehicles were together and couldensure the entire group passed before the lights turned back to red. Truck driverswere permanently informed about the presence of other trucks in their vicinity bymeans of a small display.
The trial also demonstrates how intelligent transport system could protect
vulnerable road users like school children. By integrating RFID tags into the schooluniforms, the road side units were able to detect when school children were crossingthe road, change lights acco rdingly and send alerts to the vehicles with onboard
units.
While this trial only took place over the course of 1 day, Hamburg Port is
planning to implement permanent systems in the near future. This will start withroadside units at one crossing and 30 trucks with onboard devices, extending to morethan 10 crossings and up to 200 trucks in the coming years. Furthermore, NXP is intalks with a school uniform manufacturer in Hamburg to integrate RFID tags intothe uniforms. This would be a citywide project which could signiﬁcantly improveroad safety for school children. The authors would like to thank the Hamburg PortAuthority (HPA) and the Hamburg Ministry for Economy Transport and Innovationfor their continuous support in these trials.
Internet convergence and the birth of intelligent trafﬁc systems is a pivotal
moment for the automotive industry and society. Smart mobility will, without a
doubt, improve road safety by reducing human error (which causes 90 % of trafﬁcaccidents today), reduce congestion and im prove energy efﬁciency which costs the
global economy billions every year.
Integrating automotive systems with the Internet does of course have its risks.
If systems are hacked and fed the wrong information, or manipulated to perform
certain tasks, there are potentially fatal consequences. The industry therefore needsto work together to ensure the quality and integrity of data. Privacy also needs tobe protected so individual driver behaviour cannot be tracked. These are key issuesthat will determine the trust of consumers and wide-scale adoption of connected,self-driving cars needed for safer, green er and more efﬁcient road networks. With
its security and identiﬁcation technology, NXP is perfectly suited to circumventattacks and to make the trafﬁc safer while protecting users.600 P. Pype et al.
As the trials already underway prove, ITS presents too many beneﬁts to ignore.
The industry now needs to work towards standardisation and securing trust ofmanufacturers and consumers so that full beneﬁts can be realised. Groups like theCar2Car consortium, ETSI and the High-level ITS Advisory Group to the EuropeanCommission will play a driving role in this process, as well as the successesexperienced from ITS trials around the world.Chapter 31
A Sampling of Automated Driving Research
Projects and Initiatives (EC Funded, National)
ARTEMIS Industry Association
31.1 Introduction
ARTEMIS Industry Association is THE association for actors in Embedded Intelli-
gence within Europe. As private partner, the association represents its members—
industry, SMEs, universities, and resear ch institutes—in the ECSEL Joint Under-
taking and continuously promotes the R&I interests of its members to the European
Commission and the Public Authorities of the participating states.
The main tasks of ARTEMIS-IA are to:
1. Create cooperative research and innovation projects throughout Europe for the
beneﬁt of its members and the European economy.
2. Represent industry in the best way possible and explain to policymakers the need
of research and funding in Embedded Intelligence.
3. Contribute to improving coordination between the European, national, regional
public, and private R&D activities in Embedded Intelligence and thus pave the
way to greater “Europeanization” of the R&D scene in key areas.
4. Implement the ambitious European Industrial Strategy created by the ARTEMIS-
IA/ETP working group SRA (ARTEMIS SRA 2016 [ 3]).
5. Build a self-sustaining Innovation Environment for European leadership in
Embedded Intelligence.
6. Full development of the innovation potential of SMEs in Embedded Intelligence.
ARTEMIS Industry Association—The associatio n for actors in “Embedde d Intelligence” within
Europe
ARTEMIS Industry Association ( /envelopeback)
Eindhoven, the Netherlands
e-mail: info@artemis-ia.eu
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_31601602 ARTEMIS Industry Association
7. Address European strategic priorities in addition to the individual interests of
companies and countries, upstream and downstream.
8. Strengthen European industry and address societal challenges, as, for example,
by issuing the “High-Level Vision 2030 [ 4]” authored by ARTEMIS-IA & ITEA.
9. Aligning research agendas for Embedded Intelligence.
31.2 Mission of ARTEMIS-IA
ARTEMIS-IA believes that targeted investment in innovation in Embedded Intel-
ligence is crucial to support Europe’s ambitions and ensure our #1 position in
producing advanced complex and safety relevant products.
ARTEMIS Industry Association nurtures the ambition to strengthen Europe’s
position in Embedded Intelligence and to attain world-class leadership in this
domain to support the European Industry. ARTEMIS innovation strategy is to
challenge the application contexts, based upon exploitation of European strengths
and opportunities by:
1.Building on the leading positions where Europe is strong , in speciﬁc technolo-
gies and in various application domains , particularly for the safety critical high
reliability real-time applications in th e ﬁeld of automotive, aeronautics, space,
and health sectors.
2.Innovate to create new opportunities for Europe to be positioned at the
forefront of new or emerging markets with high potential growth rates to
become among the world leaders in these dom ains and particularly target process
industries, smart cities and energy efﬁcient buildings, environment, food, and
agriculture.
31.3 Structure of ARTEMIS-IA
ARTEMIS Industry Association is a membership organization with 180 members
and associates from all over Europe. The multidisciplinary nature of the membership
provides an excellent network for the exchange of technology ideas, cross-domain
fertilization, as well as for large innovation initiatives. Members can vote in the gen-
eral Assembly and elect representative s to join the Steering Board. ARTEMIS-IA is
one of the three private members inside the ECSEL Joint Undertaking (Electronic
Components and Systems for European Leadership), which is implementing the
common strategy via regular call for R&I project proposals (Fig. 31.1).31 A Sampling of Automated Driving Research Projects and Initiatives (EC ... 603
Fig. 31.1 ARTEMIS-IA as private member in the ECSEL Joint Undertaking
31.4 Automated Driving and ARTEMIS-IA
Automated Driving has quickly invaded many research agendas. The contribution
of ARTEMIS-IA to the MASRIA2016 dedicates a separate section to this topic.
Signiﬁcant breakthroughs have recently b een made in advanced driver assistance
systems by European vehicle manufacturers and suppliers. In order to swiftly
proceed towards highly automated drivin g and ﬂying, where the system relieves
the driver from steering, accelerating, an d monitoring of the vehicle environment,
three steps can be foreseen in the autom otive domain. Firs t, by 2020, conditional
automated driving (SAE Level 3) is expected to be available in low speed and less
complex driving environments, e.g., in parking lots and in trafﬁc jam situations on
one-way motorways. Second, by 2025, cond itional automated driving is expected
to be available at higher speeds in environments with limited complexity, e.g., on
highways. And third, by 2030, (conditional) automated driving is expected to be
available in most complex trafﬁc situations, i.e., in cities.
In closed and secured environments (e.g ., factory ﬂoor, precision farming,
business and leisure parks, etc.), it is likely to be proposed ﬁrst. While the embedded
systems therein will probably also be closed and carefully tailored, support for
open environments will follow and impose much more critical demands: embedded
hardware and software will have to be updated on a regular base to follow, e.g., legal
requirements, respect the latest standards, introduce new security aspects, services,
and features, and to ﬁnally stay compatible with the latest vehicle technology.
Eventually, vehicles with different levels of automation will be built on advanced
driver assistance systems and cooperating components as well as on detailed
driver status monitoring and environmen tal perception. Such systems will have to
be validated under virtual, semi-virtual, and real world conditions. This requires
dependable solutions for advanced sensors and actuators, data and ontology fusion,
efﬁcient computation and connectivity, security, precise location, time and velocity
detection, detailed scalable low cost and dynamically updated maps, precise lateral
vehicle control, novel man–machine inter faces and human interaction technologies,604 ARTEMIS Industry Association
cyber physical systems integration, black box recorder for near incident data, and
(real-time) simulation concepts.
To separate the development of sensors an d actuators from control strategies and
trajectory planning, a (de-facto) standardization of object handling, object descrip-
tions, scene interpretation, situation classiﬁcation and management is essential.
Therefore, the creation of industrial frameworks is recommended, and an exchange
of test procedures between OEMs and suppliers is encouraged.
As it seems impossible to deﬁne all the safety relevant scenarios upfront, new
“learning” concepts and adaptive lifecycle models are required, which continuously
analyze real-world data for near incident s cenarios, evaluate th e potential impact,
modify the control software or strategies, validate the improved systems, and
update all related vehicle components (maps, control software, information on road
conditions, etc.) in a highly dependable way, i.e., safe, secure, and in real-time.
Trafﬁc and ﬂeet management systems are crucial for highly and fully automated
systems. Dependable communication networks with a wide coverage and high
availability and data links among vehicles as well as between humans, vehicles,
and the infrastructure will be fundamental for trafﬁc management systems. This
will allow cooperative decision making in vehicle guidance and beneﬁt from high
performance computing systems.
In-vehicle and inter-vehicle standardization has to go hand in hand with tech-
nology development. Similarly, development of advanced trafﬁc infrastructure is
mandatory to provide a frameset for automated transportation systems.
Automated driving is enabled by innovations in embedded systems, as 70–
90 % of all innovations in vehicle development currently are based on embedded
systems. More and more societal economic, ecologic, and individual added value
will be based on embedded systems in cars and trucks that are interfacing with data,
software, and embedded systems in their local and global environment.
Automation, reliability, security, and affordability of such enhanced driving
services depend upon highly innovative hardware and software solutions, their rapid
market volume penetration and future-prone modularity, open architectures, and
standard interfaces.
To achieve the targets in the automotive industry, nearly all new concepts and
functions rely on superior functionality implemented in embedded systems and
applied in nearly all major components of future vehicles (Fig 31.2).
ARTEMIS members participate already in European projects that focus on
creating Embedded Intelligence in automotive applications, as depicted in the
ARTEMIS SRA Matrix (Fig. 31.3). Partners in industry closely work together and
realize state-of-the-art intelligent solu tions supporting (future) market demand. Two
core contributing projects in the Automated Driving Roadmap are DESERVE and
CRYSTAL.
With the market of Advanced Driving A ssistance Systems expected to grow
rapidly over the next decade, project DESERVE aims to build an innovation
ecosystem in embedded systems for assisted and automated driving with partnering
automotive R&D actors and possible applications in other industrial domains.31 A Sampling of Automated Driving Research Projects and Initiatives (EC ... 605
Fig. 31.2 Research topics in Automated Driving [ 1]606 ARTEMIS Industry Association
Fig. 31.3 ARTEMIS SRA Matrix [ 2]
Project CRYSTAL establishes workﬂows based on current and emerging tech-
nologies and enable their use in the engineering environment of, among others,
the automotive industrial domains to reduce system design costs through the
improvement and smart integration of system analysis, safety analysis, and system
exploration tools as well as a reduction of design cycles by developing reusable
technological bricks.
References
1. ESCEL-JU MASRIA2016-ch apter-smart-mobility
2. Embedded/Cyber-Physical Systems ARTEMIS Major Challenges: 2014-2020. 2013 DRAFT
addendum to the ARTEMIS SRA 2011
3. ARTEMIS SRA 2016
4. High Level Vision 2030Chapter 32
ERTRAC: The European Road Transport
Research Advisory Council
Josef Affenzeller
32.1 Introduction
ERTRAC1acts as European technology platform for road transport. The members of
ERTRAC are representatives from all the stakeholders of the road transport sector,
including private and public organizations involved in research, and gathering also
administrations from both European and national levels. The main tasks of ERTRAC
are to:
 Provide a strategic vision for road transport research and innovation in Europe.
 Deﬁne strategies and roadmaps to achie ve this vision through the deﬁnition and
update of a strategic research agenda (SRA) and implementation of research
roadmaps.
 Stimulate effective public and private in vestment in road transport research and
innovation.
 Contribute to improving coordination between the European, national, regional,
public, and private R&D activities on road transport.
 Enhance the networking and clustering of Europe’s research and innovation
capacities.
 Promote European commitment to research and technological development,
ensuring that Europe remains an attractiv e region for researchers and enhancing
the global competitiveness of the transport industries.
1ERTRAC, 66 Avenue de Cortenbergh, 1000 Brussels, Belgium, www.ertrac.org
J. Affenzeller (/envelopeback)
A VL List GmbH, Graz, Austria
e-mail: josef.affenzeller@avl.com
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_32607608 J. Affenzeller
 Support the implementation of Horizon 2020, the European framework program
for research and innovation
ERTRAC has established several working groups which consist of recognized
experts coming from the ERTRAC members. The ERTRAC documents preparedwithin these working groups include scenarios, the SRA, and the research roadmaps.The working groups organize workshops on a regular basis, with the possibility to
invite external experts. Currently, there are ﬁve working groups:
 Urban mobility
 Long distance freight transport Energy and environment Road transport safety and security Global competitiveness Connectivity and Automated Driving
The Working group on Connectivity and Automated Driving was established
2016 based on the importance of this topic for the automotive industry.
ERTRAC is supported by FOSTER-Road, a coordinated support action (CSA)
ﬁnanced by the European Commission as well as by an industry-led association(supporting institutions group) called ERTRA C SIG. By bringing together relevant
stakeholders, ERTRAC supports the establishment of consensus-based plans androadmaps addressing the key societal, environmental, economic, and technologicalchallenges in the areas covered by the ERTRAC working groups. CSA activitiesalso include project monitoring, strategic research agendas, business case models,innovation plans, and coordination of research on European and national levels.They include multimodal issues as well as comprehensive dissemination activities.ERTRAC SIG ﬁnances the ofﬁce, dissemination activities, events, as well aspublication of promotional materials.
32.2 Mission of ERTRAC
Road transport plays a vital role in the European economy and society. The roadtransport sector involves a wide range of industries and services from vehiclemanufacturers and suppliers to infrastructure providers, mobility management,communication technologies, energy compa nies, and many others. Road transport,
integrated with the other modes of tra nsport, enables mob ility for pe ople and goods
across Europe.
 Overall, road transport related industries provide employment to more than 14
million people in Europe and directly contribute 11 % to the European grossnational product.
 Road transport has a major impact on our daily lives, as it is one of the primary
means of access to employment, services, and social activities.32 ERTRAC: The European Road Transport Research Advisory Council 609
Fig. 32.1 ERTRAC members represent all the actors of the road transport system
 Road transport creates links, and these links are a key factor in developing social,
regional, and economic cohesion within the European Union.
 Road transport contributes to the quality of life of every European citizen.
Because of the importance of the role of road transport in Europe, an accelerated
development of sustainable, integrated transport solutions is necessary. The mission
of ERTRAC is to provide a framework to focus the coordinated efforts of public and
private resources on the necessary research activities.
32.3 Structure of ERTRAC
ERTRAC members represent all the actors of the road transport system as illustrated
in Fig. 32.1. ERTRAC consists of ﬁve bodies: the ERTRAC plenary, the executive
group, the working groups, the ERTRAC ofﬁce, and supporting institutions group
(SIG). ERTRAC SIG is a nonproﬁt association, legally established in Belgium.610 J. Affenzeller
32.4 Automated Driving Roadmap of ERTRAC
Automated driving is seen as one of the key technologies and major technological
advancements inﬂuencing and shaping our future mobility and quality of life.
ERTRAC is fully aware of this emerging technology, and its task force “connectivity
and automated driving” has recently rel eased a technology roadmap providing the
current status of automated driving with regard to the implementation in Europe
[1]. The ERTRAC roadmap is based on available documents for automated driving.
The overall objective is to identify challenges for implementation of higher levels of
automated driving functions. A lot of work has been done on this topic by various
stakeholders and multi-stakeholder platforms (e.g., iMobility Forum,2EUCAR,3
CLEPA,4ERTICO,5EPoSS6) and in European research projects. Therefore, it is
essential to avoid any duplication of activities and concentrate on the missing items,
concerns, and topics for future implementation.
Reference
1. Automated Driving Roadmap, European Road Transport Research Advisory Council
(ERTRAC) (2015)
2iMobility Forum, http://www.im obilitys upport.eu , accessed: August 31, 2015.
3European council for automotive R&D (EUCAR), http://www.eucar.be , accessed: August 31,
2015.
4The European association of automotive suppliers, http://www.clepa.eu , accessed: August 31,
2015.
5Europe’s intelligent transportation system organization, http://ertico.com , accessed: August 31,
2015.
6European technology platform on smart systems integration (EPoSS), http://www.smart-systems-
integration.org , accessed: August 31, 2015.Chapter 33
SafeTRANS: Safety in Transportation Systems
Jürgen Niehaus
33.1 Introduction
SafeTRANS1is a German not-for-proﬁt association,2comprising stakeholders from
various sectors of the transportation domain: Avionics, Automotive, Rail, and
Maritime. SafeTRANS’ members are OEMs, suppliers, and system operators in the
transportation domain—such as Daimler, Airbus, Deutsche Bahn Netz, Siemens,
A VL, Bosch, Hella, and Safran Engineering—, tool vendors and software houses,
which support the development process for electronic components and systems
in the transportation domain—such as AbsInt, BTC Embedded Systems, Esterel,
Symtavision, and TTTech—, and research organizations and universities with a
track record of technology transfer in this area—such as DLR, Fraunhofer Institutes,
and OFFIS Institute for Compute Science.
SafeTRANS provides a communication and knowledge exchange platform for
pre-competitive research and development activities of its members. Main activities
initiated and conducted by SafeTRANS are:
 Initiation of theme-oriented round tables and working groups, identifying cross
domain needs and objectives in pre-competitive R&D areas, leading to common
R&D strategies and roadmaps harmonized between organizations and across
domains.
1SafeTRANS e.V., Escherweg 2, 26121 Oldenburg, Germany, www.safetrans-de.org
2Organized as a “gemeinnütziger eingetragener Verein” under German law.
J. Niehaus (/envelopeback)
SafeTRANS, Oldenburg, Germany
e-mail: juergen.niehaus@safetrans-de.org
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_33611612 J. Niehaus
 Dissemination of harmonized R&D strategies and roadmaps, thus providing a
harmonized view of R&D priorities to pub lic authorities, national and European
funding programs, and the community.
 Project incubation: Support the implementation of harmonized R&D strategies
by initiating suites of R&D projects conducted by member organizations.
 Support sustainability of project results by paving the way for follow-up projects
and by pushing standardization activities.
 Leverage these activities to a European level, harmonizing roadmaps with Euro-
pean partner cluster organizations, disseminating R&D strategies on European
level, and initiating large-scale European R&D projects.
 Provide knowledge sharing facilities lik e workshops and conferences, newslet-
ters, etc., allowing members from each transportation domain to learn from each
other.
SafeTRANS is funded to a major part by its members. In addition, SafeTRANS
participates in public funded projects, mostly on the level of Support Actions, e.g.,
on roadmap development and similar.
33.2 R&D Strategies and Roadmaps
In 2009, SafeTRANS coordinated the creatio n of the “National Roadmap Embedded
Systems” [ 1], a strategy document detailing o n how Embedded Systems technology
can and will contribute to solving the big societal challenges Europe faces.
This document was, and still is, one of the major reference documents of the
funding program Embedded and Cyber-Physical Systems of the Federal Ministry
of Education and Research BMBF [ 2]. The roadmap conceived in there has found
its way into European Funding Programs like the Joint Undertakings ARTEMIS [ 3]
and ECSEL.
Based on this roadmap, SafeTRANS signiﬁcantly contributed to the Integrated
Research Agenda Cyber-Physical Systems [ 4], a strategy document by acatech, the
German National Academy of Science and E ngineering, which in turn has been one
major input to the “Industrie 4.0” Initiative of the BMBF [ 5].
In 2015, SafeTRANS, together with the Gesellschaft für Informatik GI and the
Verband der Automobilindustrie VDA, published the Automotive Roadmap Embed-
ded Systems [ 6]. In a scenario driven approach, where the scenarios are derived
from analyzing future challenges and oppor tunities in the automotive industry as
well as market trends and societal changes, gaps between the current capabilities
of Embedded Systems technology and t he capabilities needed to overcome these
challenges are identiﬁed and the corresponding R&D needs characterized. This
analysis is complemented by a corresponding survey focusing on the design process
of Embedded Systems in automotive applications.
Roadmapping and the corresponding project incubation also are a major part of
SafeTRANS’ European activities. As a founding member of EICOSE, the European33 SafeTRANS: Safety in Transportation Systems 613
Institute for Complex Safety Critical Syst ems Engineering, SafeTRANS cooperates
with major clusters all over Europe, especially the French Pôle de CompétitivitésSystematic-Paris-Region and Aerospace Valley and the Austrian ARTEMIS AustriaEmbedded Cluster. Together, these clusters have provided major input to theStrategic Research Agenda of the Joint Undertakings ARTEMIS and ECSEL aswell as to the Horizon 2020 ICT programme and the Eureka programme ITEA3.
33.3 Working Group on Highly Autonomous Systems:
Safety, Testing, and Development Process
SafeTRANS has installed a Working Group on Highly Autonomous Systems: Safety,
Testing, and Development Processes (AK HAS) at the beginning of this year. In
this working group, experts from member and nonmember organizations—airplane,car and maritime OEMs, System Integrator s, Suppliers, research organizations—
exchange knowledge and best practices on how to develop, analyze, test, and certify
highly automated systems, with a special focus on safety aspects, testing activities,and development processes and its tool support. For selected aspects, the workinggroup will develop concepts for generic solutions and initiate appropriate R&Dprojects. These aspects include situation a wareness and situation interpretation
by automated systems; user/operator modeling for highly automated systems;(generic) system architectures and execution platforms/middleware; and methods,processes, and tools for designing such systems, spanning the whole range from therequirement phase to testing and deployment. Special consideration is given to thefollowing challenges
 Which artifacts of the environment have to be detected with which level of
conﬁdentiality? How can systems project the future evolution of a trafﬁc situationwith a high enough level of conﬁdentiality? How can we ensure the integrity ofsuch “internal world models” and which modeling techniques are appropriate?
 How can we cope with uncertainty caused by sensor limitations and different
trust levels assigned to information stemming from other trafﬁc participants orfrom the cloud? How can we ensure safety even though internal world modelscontain uncertainties?
 Which veriﬁcation, validation and test methods can be used to cope with
the enormous complexity and evolution of the system’s context/environment,ensuring functional safety of highly automated systems?
As a cross-cutting challenge common for all domains and applications, modelling
of the system environment has been identiﬁed as a high pri ority research need. Such
models have to cope with four types of cooperations and interactions, namely (a)system to environment, (b) system to system, (c) system to human, and (d) systemto information networks (cloud), and consider evolutions of the environment overtime as well as uncertain knowledge.614 J. Niehaus
As any SafeTRANS Working Group, AK HAS is open to members and non-
member organizations.
33.4 Sustainability and Standardization
SafeTRANS is dedicated to ensuring sustainability for results of R&D projects that
have been identiﬁed as having a key impact on safety critical systems engineering.
One such result is the establishment of a so-called Interoperability Speciﬁcation
(IOS), which is a standard for ensuring interoperability of tools used in the
development process.
A Reference Technology Platform (RTP), as it is understood here, is a “tool-box”
for the development, analysis, and test of embedded and cyber-physical systems
in various application domains. It contains processes, methods, meta-models,
and interoperable (IOS-based) software tools, which describe and support the
complete development process for critical embedded systems. These components
can be combined to form domain- and appli cation-speciﬁc development processes
supported by software tools according to s peciﬁc methods and adhering to speciﬁc
standards, as needed for the particular domain and the particular application. The
RTP for Critical Systems Engineering has been created in a long standing strategic
public–private partnership on a national and European level, combining more than
25 global companies in the domains Aero space, Automotive an d Railway Systems,
as well as various Tool Venders and Research Organizations, with an effort of more
than 100 Mio Euro.3
To further drive the formal standardization of the IOS, SafeTRANS together with
major IOS stakeholders has initiated and coordinates a project called CP-SETIS
(towards Cyber-Physical-Systems Engineering Tool Interoperability Standardiza-
tion) under Horizon 2020, which will support the existing and future IOS/RTP-
projects in establishing the IOS as a formal standard. The main objectives of
CP-SETIS are
 The alignment of all IOS-related forces within Europe to support a common IOS
Standardization Strategy, aiming at a f ormal standardization process of the IOS.
 The deﬁnition and implementation of sustainable IOS Standardization Activities
supporting both, formal standardization of “stable” IOS versions as well as
extensions of IOS, if possible within existing structures that survive the lifespan
of single projects.
Thus, CP-SETIS will drive the formal standardization of the IOS, and—even
more important—align all IOS stakeholders, derive processes for handling IOS
3Amongst others in Projects CESAR (JU ARTEMIS, 60 Mio Euro Effort), IPs SPEEDS (FP 6),
Sprint, DANSE (FP 7), MBAT (Artemis), SPES-XT (BMBF), CRYSTAL (ARTEMIS), most of
which have been incubated by SafeTRANS members.33 SafeTRANS: Safety in Transportation Systems 615
standardization and extensions in a project-independent way, and implementing
these processes within existing structures (i.e., nonproﬁt organizations, like the
ARTEMIS Working Groups, EICOSE, or SafeTRANS).
33.5 Conclusion
SafeTRANS is the major information and knowledge exchange platform for Safety
Critical Systems Engineering in Transportation in Germany. Its main activities
are the initiation of round tables and the me-oriented working groups, roadmap
development, and project incubation, as well as supporting sustainability measures
for project results and providing the link to similar clusters in Europe, to European
funding programs and to national public authorities.
References
1. W. Damm, R. Achatz, K. Beetz, M. Broy, H. Daembkes, K. Grimm, P. Liggesmeyer, Nationale
roadmap embedded systems, in Cyber-Physical Systems , ed. by M. Broy (Springer, Berlin,
2010), pp. 67–136
2.http://www.softwaresysteme.pt-dlr.de/de/embedded-cyberphysical-systems.php . Accessed 28
Sept 2015
3. ARTEMIS-IA (eds.), Embedded/Cyber-Physical Systems ARTEMIS Major Challenges: 2014-
2020. 2013 Draft Addendum to the ARTEMIS-SRA 2011, ARTEMIS-IA, 2013
4. Eva Geisberger and Manfred Broy (Hrsg.), agendaCPS: Integrierte Forschungsagenda Cyber-
Physical Systems (Springer, Berlin, 2012)
5.https://www.bmbf.de/de/zukunftsprojekt-industrie-4-0-848.html . Accessed 28 Sept 2015
6. Gesellschaft für Informatik, SafeTRANS, Verband der Automobilindustrie (Hrsg.), Eingebettete
Systeme in der Automobilindustrie: Roadmap 2015-2030, 2015Chapter 34
A3PS: Austrian Association for Advanced
Propulsion Systems
Wolfgang Kriegler and Stefan Winter
34.1 Objectives and Tasks of A3PS
The Austrian automotive industry—or more precisely—automotive supply industry rep-
resents a signiﬁcant value for Austria. Austria exports higher values in automotive parts
and components than imports new, complete vehicles. Furthermore, the automotive sector
has the highest share of researchers—about 14 %. Austria’s unive rsities and research
institutions in this ﬁeld enjoy high international reputation.
In order to maintain this favorable position and to secure Austria’s competitive-
ness in this ﬁeld, the industry, research institutions, and the responsible Austrian
authorities need to collaborate very closely. The common goal is to support the
successful market launch of innovative, advanced vehicle technologies including
new energy carriers. Therefore, the bmvit founded the A3PS in 2006 to support an
active technology policy of the ministry and to strengthen Austria’s research and
development activities.
Since its foundation, A3PS has developed into a well-established strategic
public–private partnership (PPP), serving as a reliable partner for the ministry as
well as for the partner companies and scientiﬁc institutions.
The key priorities in the area of road tran sport are to support clean, sustainable,
affordable, and safe mobility. A3PS hel ps the ofﬁcials understand the current
technology trends and the R&D requirements of the Austrian stakeholders in this
ﬁeld of expertise. This ﬂow of information provides valuable input for the Austrian
technology and funding policy. On the other hand, for the A3PS community, the
understanding of Austrian policies are an essential basis for their long-term research
planning which provides them with planning security even in technologically risky
areas.
W. Kriegler  S. Winter ( /envelopeback)
Austrian Association for Advanced Propulsion Systems, Donau-City-Straße 1, 1220 Vienna,
Austria
e-mail: stefan.winter@a3ps.at
© Springer International Publishing Switzerland 2017
D. Watzenig, M. Horn (eds.), Automated Driving ,
DOI 10.1007/978-3-319-31895-0_34617618 W. Kriegler and S. Winter
A3PS addresses all advanced drive train and vehicle technologies (e.g., advanced
ICE technologies; hybrid-, battery electric-, and fuel cell vehicles; as well asadvanced fuel technologies including bio fuels, active safety measures like ADAS)and supports the whole innovation cycle (research, development, deployment).
Objectives and Tasks
Cooperation: Regular joint activities to enable cooperation and common
projects for member institutions.
Networking: Stimulating R&D cooperations embedding the Austrian industry
and research institutions into new national and international value chains inleading positions.
Information: Strengthening the competence of Austrian enterprises and research
institutions by collecting, compiling, and disseminating information on advancedpropulsion systems and new energy carriers. Information for the public on thepotentials and the state development of advanced propulsion systems.
Competence Presentation: Presenting the Austrian technology competence to
national and international conferences and initiatives.
Representation of Interests: Supporting the representation of Austrian interests
in international committees and initiatives of the EU and the IEA.
Orientation: Establishing a common view betw een industry, research institu-
tions, and technology policy by developing a common strategy, roadmaps, andposition papers for reinforcing technology development.
Advisory function: Providing fact-based consultancy and recommendations for
policy makers to support the optimization of their policy instruments (fundingprograms, regulations, standards, public procurement, etc.) and to inform thepublic of the opportunities and persp ectives of these new technologies.
34.2 ADAS in the Technology Roadmap of A3PS
Requirements on future vehicles will become more demanding than ever before.
On one hand, they will need to comply with stringent future emission regulations(e.g., EU6c) under more challenging cond itions (WLTP, RDE). On the other hand, it
seems to be certain that the Europ ean legislature will head for CO
2emission targets
between 68 and 75 g/km in 2025. Additionally, social aspects that are difﬁcult topredict such as changing consumer behavior or new mobility concepts must be takeninto account. From the present A3PS members’ point of view, the development andproduction of future vehicles will be driven by aspects as summarized below:
– Environmental impact
– Efﬁciency– Safety (zero fatality)– Demographic change– Limited fossil fuels and raw material shortage34 A3PS: Austrian Association for Advanced Propulsion Systems 619
Fig. 34.1 Potential effectiveness of combined systems
Those drivers, in the short and medium term, will cause the development of a
variety of alternative vehicle technologies and fuels, which ultimately correspond to
the respective application purpose and vehicle class.
Besides energy efﬁciency and emissions, zero fatality must be a goal of good
governance. From today’s perspective, onl y a combination of passive safety mea-
sures and advanced vehicle control s ystems can achieve this scenario.
Advanced vehicle control systems main ly aim to increase energy efﬁciency
and safety as well as to improve comfor t and enable the communication between
vehicle and infrastructure. Since human f actors causes the majority of all accidents,
advanced vehicle control systems have th e potential to avoid those accidents and,
therefore, save human life. The chart below shows that an accident avoidance
of over 50 % is possible for a combination of ABS, ESC, lane keeping assist
(LKA), predictive brake assist (PBA), automated emergency braking (AEB), driver
vigilance monitoring (DVM), speed limitin g systems (SLS) and alcohol interlock
(AI) (Fig. 34.1).
Experts in automated driving around the globe expect a dramatic reduction of
vehicle collisions, accidents, and fatalities in the range of minus 90 % once these
functionalities are deployed into, e.g., 90 % of the vehicles on the road. Assuming
that a worst case crash happens at a maximum speed of 10 km/h (around 3 m/s)
compared to today’s regulation of Euro NCAP5 [equal to 50 km/h (15 m/s)], the
safety concept of all vehicles will have to be redrafted, enabling the application of
lightweight structures, reducing the crash buffer, and ﬁnally resulting in less energy
consumption and better propulsion performance (Fig. 34.2).620 W. Kriegler and S. Winter
Fig. 34.2 Less weight and improvement of safety through advanced vehicle control systems
Still, the demand for individual road vehicles is growing on a global scale,
whereas road infrastructur e capacity can neither balance this demand today nor can
it be extended in line with the number of vehicles. Therefore, automated vehicles
are a key element for an efﬁcient future road transport system.
The A3PS roadmap drafts the path for the radical change from conventional
vehicle concepts (SAE automation level 0) to fully automated driving vehicles (SAE
automation level 5) in the long term. Actually, huge effort is being expended in
academic and industrial R&D, launching num erous research proj ects and prototype
developments. A key issue will be system reliability. When system reliability is
granted, these technologies can lead to an “electronic revolution” inside the vehicle.
The A3PS members keep track by monitoring the development in the ﬁeld of
advanced vehicle control systems. Not only because of its relevance to energy
efﬁciency and emission behavior but to push innovation in overall vehicle tech-
nologies and to increase the chances for the Austrian industry. This also applies
to many companies and institutions in the area of vehicle electronics and software
development.1
1A3PS Technology Roadmap “ Eco-M obility 2025 plus”.